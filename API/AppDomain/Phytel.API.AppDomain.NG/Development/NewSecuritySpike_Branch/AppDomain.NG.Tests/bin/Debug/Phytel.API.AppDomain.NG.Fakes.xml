<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Phytel.API.AppDomain.NG.Fakes</name>
    </assembly>
    <members>
        <member name="T:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode">
            <summary>Shim type of Phytel.API.AppDomain.NG.ElementActivation.RegisterSpawnProblemCode</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.#ctor(Phytel.API.AppDomain.NG.ElementActivation.RegisterSpawnProblemCode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.Bind(Phytel.API.AppDomain.NG.ElementActivation.ISpawn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.ConstructorPlanElementEventArgSpawnElementPatientObservation">
            <summary>Sets the shim of RegisterSpawnProblemCode.RegisterSpawnProblemCode(PlanElementEventArg e, SpawnElement rse, PatientObservation ppd)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.EndPointUtilGet">
            <summary>Sets the shim of RegisterSpawnProblemCode.get_EndPointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.EndPointUtilSetIEndpointUtils">
            <summary>Sets the shim of RegisterSpawnProblemCode.set_EndPointUtil(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.Execute">
            <summary>Sets the shim of RegisterSpawnProblemCode.Execute()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.AllInstances.EndPointUtilGet">
            <summary>Sets the shim of RegisterSpawnProblemCode.get_EndPointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.AllInstances.EndPointUtilSetIEndpointUtils">
            <summary>Sets the shim of RegisterSpawnProblemCode.set_EndPointUtil(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimRegisterSpawnProblemCode.AllInstances.Execute">
            <summary>Sets the shim of RegisterSpawnProblemCode.Execute()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode">
            <summary>Shim type of Phytel.API.AppDomain.NG.ElementActivation.UpdateSpawnProblemCode</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.#ctor(Phytel.API.AppDomain.NG.ElementActivation.UpdateSpawnProblemCode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.Bind(Phytel.API.AppDomain.NG.ElementActivation.ISpawn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.ConstructorPlanElementEventArgSpawnElementPatientObservationBoolean">
            <summary>Sets the shim of UpdateSpawnProblemCode.UpdateSpawnProblemCode(PlanElementEventArg e, SpawnElement rse, PatientObservation ppd, Boolean active)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.EndPointUtilGet">
            <summary>Sets the shim of UpdateSpawnProblemCode.get_EndPointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.EndPointUtilSetIEndpointUtils">
            <summary>Sets the shim of UpdateSpawnProblemCode.set_EndPointUtil(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.Execute">
            <summary>Sets the shim of UpdateSpawnProblemCode.Execute()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.AllInstances.EndPointUtilGet">
            <summary>Sets the shim of UpdateSpawnProblemCode.get_EndPointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.AllInstances.EndPointUtilSetIEndpointUtils">
            <summary>Sets the shim of UpdateSpawnProblemCode.set_EndPointUtil(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.ShimUpdateSpawnProblemCode.AllInstances.Execute">
            <summary>Sets the shim of UpdateSpawnProblemCode.Execute()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubISpawn">
            <summary>Stub type of Phytel.API.AppDomain.NG.ElementActivation.ISpawn</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubISpawn.#ctor">
            <summary>Initializes a new instance of type StubISpawn</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubISpawn.Execute">
            <summary>Sets the stub of ISpawn.Execute()</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubISpawn.papiadng::Phytel#API#AppDomain#NG#ElementActivation#ISpawn#Execute">
            <summary>Sets the stub of ISpawn.Execute()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubRegisterSpawnProblemCode">
            <summary>Stub type of Phytel.API.AppDomain.NG.ElementActivation.RegisterSpawnProblemCode</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubRegisterSpawnProblemCode.#ctor(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.AppDomain.NG.DTO.PatientObservation)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubRegisterSpawnProblemCode.InitializeStub">
            <summary>Initializes a new instance of type StubRegisterSpawnProblemCode</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubRegisterSpawnProblemCode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubRegisterSpawnProblemCode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubRegisterSpawnProblemCode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubUpdateSpawnProblemCode">
            <summary>Stub type of Phytel.API.AppDomain.NG.ElementActivation.UpdateSpawnProblemCode</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubUpdateSpawnProblemCode.#ctor(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.AppDomain.NG.DTO.PatientObservation,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubUpdateSpawnProblemCode.InitializeStub">
            <summary>Initializes a new instance of type StubUpdateSpawnProblemCode</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubUpdateSpawnProblemCode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubUpdateSpawnProblemCode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.ElementActivation.Fakes.StubUpdateSpawnProblemCode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.CareMembersCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.#ctor(Phytel.API.AppDomain.NG.CareMembersCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of CareMembersCommand.CareMembersCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.Execute">
            <summary>Sets the shim of CareMembersCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.StaticConstructor">
            <summary>Sets the shim of CareMembersCommand.CareMembersCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.Undo">
            <summary>Sets the shim of CareMembersCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.AllInstances.Execute">
            <summary>Sets the shim of CareMembersCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersCommand.AllInstances.Undo">
            <summary>Sets the shim of CareMembersCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager">
            <summary>Shim type of Phytel.API.AppDomain.NG.CareMembersManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.#ctor(Phytel.API.AppDomain.NG.CareMembersManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.Constructor">
            <summary>Sets the shim of CareMembersManager.CareMembersManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.GetAllCareMembersGetAllCareMembersRequest">
            <summary>Sets the shim of CareMembersManager.GetAllCareMembers(GetAllCareMembersRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.GetCareMemberGetCareMemberRequest">
            <summary>Sets the shim of CareMembersManager.GetCareMember(GetCareMemberRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.InsertCareMemberPostCareMemberRequest">
            <summary>Sets the shim of CareMembersManager.InsertCareMember(PostCareMemberRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.StaticConstructor">
            <summary>Sets the shim of CareMembersManager.CareMembersManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.UpdateCareMemberPostUpdateCareMemberRequest">
            <summary>Sets the shim of CareMembersManager.UpdateCareMember(PostUpdateCareMemberRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager._upsertCohortPatientViewb__10SearchFieldData">
            <summary>Sets the shim of CareMembersManager.&lt;upsertCohortPatientView&gt;b__10(SearchFieldData sf)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.getContactDetailsListOfStringDoubleStringString">
            <summary>Sets the shim of CareMembersManager.getContactDetails(List`1&lt;String&gt; contactIds, Double version, String contractNumber, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.upsertCohortPatientViewStringStringDoubleStringString">
            <summary>Sets the shim of CareMembersManager.upsertCohortPatientView(String patientId, String contactId, Double version, String contractNumber, String userId)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.AllInstances.GetAllCareMembersGetAllCareMembersRequest">
            <summary>Sets the shim of CareMembersManager.GetAllCareMembers(GetAllCareMembersRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.AllInstances.GetCareMemberGetCareMemberRequest">
            <summary>Sets the shim of CareMembersManager.GetCareMember(GetCareMemberRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.AllInstances.InsertCareMemberPostCareMemberRequest">
            <summary>Sets the shim of CareMembersManager.InsertCareMember(PostCareMemberRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.AllInstances.UpdateCareMemberPostUpdateCareMemberRequest">
            <summary>Sets the shim of CareMembersManager.UpdateCareMember(PostUpdateCareMemberRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.AllInstances.getContactDetailsListOfStringDoubleStringString">
            <summary>Sets the shim of CareMembersManager.getContactDetails(List`1&lt;String&gt; contactIds, Double version, String contractNumber, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCareMembersManager.AllInstances.upsertCohortPatientViewStringStringDoubleStringString">
            <summary>Sets the shim of CareMembersManager.upsertCohortPatientView(String patientId, String contactId, Double version, String contractNumber, String userId)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.CohortPatientViewCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.#ctor(Phytel.API.AppDomain.NG.CohortPatientViewCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of CohortPatientViewCommand.CohortPatientViewCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.Execute">
            <summary>Sets the shim of CohortPatientViewCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.StaticConstructor">
            <summary>Sets the shim of CohortPatientViewCommand.CohortPatientViewCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.Undo">
            <summary>Sets the shim of CohortPatientViewCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.AllInstances.Execute">
            <summary>Sets the shim of CohortPatientViewCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimCohortPatientViewCommand.AllInstances.Undo">
            <summary>Sets the shim of CohortPatientViewCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimConstants">
            <summary>Shim type of Phytel.API.AppDomain.NG.Constants</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimConstants.#ctor(Phytel.API.AppDomain.NG.Constants)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimConstants.Constructor">
            <summary>Sets the shim of Constants.Constants()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimConstants.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.ContactCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.#ctor(Phytel.API.AppDomain.NG.ContactCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of ContactCommand.ContactCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.Execute">
            <summary>Sets the shim of ContactCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.StaticConstructor">
            <summary>Sets the shim of ContactCommand.ContactCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.Undo">
            <summary>Sets the shim of ContactCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.AllInstances.Execute">
            <summary>Sets the shim of ContactCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimContactCommand.AllInstances.Undo">
            <summary>Sets the shim of ContactCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils">
            <summary>Shim type of Phytel.API.AppDomain.NG.EndpointUtils</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.#ctor(Phytel.API.AppDomain.NG.EndpointUtils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.Bind(Phytel.API.AppDomain.NG.Programs.IEndpointUtils)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AssignPatientToProgramPostPatientToProgramsRequestString">
            <summary>Sets the shim of EndpointUtils.AssignPatientToProgram(PostPatientToProgramsRequest request, String primaryCM)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.Constructor">
            <summary>Sets the shim of EndpointUtils.EndpointUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.FormatResponseDetailsListOfResponse">
            <summary>Sets the shim of EndpointUtils.FormatResponseDetails(List`1&lt;Response&gt; rsps)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.GetActionByIdProgramString">
            <summary>Sets the shim of EndpointUtils.GetActionById(Program p, String actionId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.GetPatientProblemStringPlanElementEventArgString">
            <summary>Sets the shim of EndpointUtils.GetPatientProblem(String probId, PlanElementEventArg e, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.GetPrimaryCareManagerForPatientPostPatientToProgramsRequest">
            <summary>Sets the shim of EndpointUtils.GetPrimaryCareManagerForPatient(PostPatientToProgramsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.GetProgramAttributesStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.GetProgramAttributes(String planElemId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.GetResponsesForStepStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.GetResponsesForStep(String stepId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.GetScheduleToDoByIdStringStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.GetScheduleToDoById(String sid, String userId, IAppDomainRequest req)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.InsertNewProgramAttributeProgramAttributeDataIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.InsertNewProgramAttribute(ProgramAttributeData pa, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.InsertResponseRequestIProcessActionRequestListOfResponse">
            <summary>Sets the shim of EndpointUtils.InsertResponseRequest(IProcessActionRequest request, List`1&lt;Response&gt; r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.PutInsertToDoToDoDataStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.PutInsertToDo(ToDoData todo, String userId, IAppDomainRequest req)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.PutNewPatientProblemStringStringStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.PutNewPatientProblem(String patientId, String userId, String elementId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.RequestCohortPatientViewDataStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.RequestCohortPatientViewData(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.RequestPatientProgramDetailIProcessActionRequest">
            <summary>Sets the shim of EndpointUtils.RequestPatientProgramDetail(IProcessActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.RequestPatientProgramDetailsSummaryGetPatientProgramDetailsSummaryRequest">
            <summary>Sets the shim of EndpointUtils.RequestPatientProgramDetailsSummary(GetPatientProgramDetailsSummaryRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.SaveActionIProcessActionRequestStringProgramBoolean">
            <summary>Sets the shim of EndpointUtils.SaveAction(IProcessActionRequest request, String actionId, Program p, Boolean repeat)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.SaveProgramAttributeChangesPostProgramAttributesChangeRequestProgramDetail">
            <summary>Sets the shim of EndpointUtils.SaveProgramAttributeChanges(PostProgramAttributesChangeRequest request, ProgramDetail pD)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.SaveResponsesActionsIProcessActionRequestBoolean">
            <summary>Sets the shim of EndpointUtils.SaveResponses(Actions action, IProcessActionRequest request, Boolean repeat)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.SaveResponsesFromProgramActionProgramStringIProcessActionRequestBoolean">
            <summary>Sets the shim of EndpointUtils.SaveResponsesFromProgramAction(Program p, String actionId, IProcessActionRequest request, Boolean repeat)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.SetDeleteFlagByStepCompletionStepResponse">
            <summary>Sets the shim of EndpointUtils.SetDeleteFlagByStepCompletion(Step step, Response r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.SetSelectedResponsePropertyStepResponse">
            <summary>Sets the shim of EndpointUtils.SetSelectedResponseProperty(Step step, Response r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.StaticConstructor">
            <summary>Sets the shim of EndpointUtils.EndpointUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.UpdateCohortPatientViewProblemCohortPatientViewDataStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.UpdateCohortPatientViewProblem(CohortPatientViewData cpvd, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.UpdatePatientProblemStringStringStringPatientObservationBooleanIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.UpdatePatientProblem(String patientId, String userId, String elementId, PatientObservation pod, Boolean _active, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.UpdateProgramAttributesProgramAttributeDataIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.UpdateProgramAttributes(ProgramAttributeData pAtt, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.UpdateResponseRequestIProcessActionRequestListOfResponse">
            <summary>Sets the shim of EndpointUtils.UpdateResponseRequest(IProcessActionRequest request, List`1&lt;Response&gt; r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils._GetActionByIdb__eModule">
            <summary>Sets the shim of EndpointUtils.&lt;GetActionById&gt;b__e(Module module)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.AssignPatientToProgramPostPatientToProgramsRequestString">
            <summary>Sets the shim of EndpointUtils.AssignPatientToProgram(PostPatientToProgramsRequest request, String primaryCM)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.FormatResponseDetailsListOfResponse">
            <summary>Sets the shim of EndpointUtils.FormatResponseDetails(List`1&lt;Response&gt; rsps)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.GetActionByIdProgramString">
            <summary>Sets the shim of EndpointUtils.GetActionById(Program p, String actionId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.GetPatientProblemStringPlanElementEventArgString">
            <summary>Sets the shim of EndpointUtils.GetPatientProblem(String probId, PlanElementEventArg e, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.GetPrimaryCareManagerForPatientPostPatientToProgramsRequest">
            <summary>Sets the shim of EndpointUtils.GetPrimaryCareManagerForPatient(PostPatientToProgramsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.GetProgramAttributesStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.GetProgramAttributes(String planElemId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.GetResponsesForStepStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.GetResponsesForStep(String stepId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.GetScheduleToDoByIdStringStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.GetScheduleToDoById(String sid, String userId, IAppDomainRequest req)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.InsertNewProgramAttributeProgramAttributeDataIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.InsertNewProgramAttribute(ProgramAttributeData pa, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.InsertResponseRequestIProcessActionRequestListOfResponse">
            <summary>Sets the shim of EndpointUtils.InsertResponseRequest(IProcessActionRequest request, List`1&lt;Response&gt; r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.PutInsertToDoToDoDataStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.PutInsertToDo(ToDoData todo, String userId, IAppDomainRequest req)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.PutNewPatientProblemStringStringStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.PutNewPatientProblem(String patientId, String userId, String elementId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.RequestCohortPatientViewDataStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.RequestCohortPatientViewData(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.RequestPatientProgramDetailIProcessActionRequest">
            <summary>Sets the shim of EndpointUtils.RequestPatientProgramDetail(IProcessActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.RequestPatientProgramDetailsSummaryGetPatientProgramDetailsSummaryRequest">
            <summary>Sets the shim of EndpointUtils.RequestPatientProgramDetailsSummary(GetPatientProgramDetailsSummaryRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.SaveActionIProcessActionRequestStringProgramBoolean">
            <summary>Sets the shim of EndpointUtils.SaveAction(IProcessActionRequest request, String actionId, Program p, Boolean repeat)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.SaveProgramAttributeChangesPostProgramAttributesChangeRequestProgramDetail">
            <summary>Sets the shim of EndpointUtils.SaveProgramAttributeChanges(PostProgramAttributesChangeRequest request, ProgramDetail pD)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.SaveResponsesActionsIProcessActionRequestBoolean">
            <summary>Sets the shim of EndpointUtils.SaveResponses(Actions action, IProcessActionRequest request, Boolean repeat)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.SaveResponsesFromProgramActionProgramStringIProcessActionRequestBoolean">
            <summary>Sets the shim of EndpointUtils.SaveResponsesFromProgramAction(Program p, String actionId, IProcessActionRequest request, Boolean repeat)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.SetDeleteFlagByStepCompletionStepResponse">
            <summary>Sets the shim of EndpointUtils.SetDeleteFlagByStepCompletion(Step step, Response r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.SetSelectedResponsePropertyStepResponse">
            <summary>Sets the shim of EndpointUtils.SetSelectedResponseProperty(Step step, Response r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.UpdateCohortPatientViewProblemCohortPatientViewDataStringIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.UpdateCohortPatientViewProblem(CohortPatientViewData cpvd, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.UpdatePatientProblemStringStringStringPatientObservationBooleanIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.UpdatePatientProblem(String patientId, String userId, String elementId, PatientObservation pod, Boolean _active, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.UpdateProgramAttributesProgramAttributeDataIAppDomainRequest">
            <summary>Sets the shim of EndpointUtils.UpdateProgramAttributes(ProgramAttributeData pAtt, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimEndpointUtils.AllInstances.UpdateResponseRequestIProcessActionRequestListOfResponse">
            <summary>Sets the shim of EndpointUtils.UpdateResponseRequest(IProcessActionRequest request, List`1&lt;Response&gt; r)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil">
            <summary>Shim type of Phytel.API.AppDomain.NG.GoalsEndpointUtil</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.DeleteBarrierRequestPostDeletePatientGoalRequestString">
            <summary>Sets the shim of GoalsEndpointUtil.DeleteBarrierRequest(PostDeletePatientGoalRequest request, String id)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.DeleteGoalRequestPostDeletePatientGoalRequest">
            <summary>Sets the shim of GoalsEndpointUtil.DeleteGoalRequest(PostDeletePatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.DeleteInterventionRequestPostDeletePatientGoalRequestString">
            <summary>Sets the shim of GoalsEndpointUtil.DeleteInterventionRequest(PostDeletePatientGoalRequest request, String id)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.DeleteTaskRequestPostDeletePatientGoalRequestString">
            <summary>Sets the shim of GoalsEndpointUtil.DeleteTaskRequest(PostDeletePatientGoalRequest request, String id)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetAllPatientGoalsGetAllPatientGoalsRequest">
            <summary>Sets the shim of GoalsEndpointUtil.GetAllPatientGoals(GetAllPatientGoalsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetAttributesLibraryByTypeIAppDomainRequestInt32">
            <summary>Sets the shim of GoalsEndpointUtil.GetAttributesLibraryByType(IAppDomainRequest request, Int32 typeId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetBarrierIdsForRequestListOfPatientBarrier">
            <summary>Sets the shim of GoalsEndpointUtil.GetBarrierIdsForRequest(List`1&lt;PatientBarrier&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetGoalDataPatientGoal">
            <summary>Sets the shim of GoalsEndpointUtil.GetGoalData(PatientGoal pg)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetInitialBarrierRequestGetInitializeBarrierRequest">
            <summary>Sets the shim of GoalsEndpointUtil.GetInitialBarrierRequest(GetInitializeBarrierRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetInitialGoalRequestGetInitializeGoalRequest">
            <summary>Sets the shim of GoalsEndpointUtil.GetInitialGoalRequest(GetInitializeGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetInitialInterventionRequestGetInitializeInterventionRequest">
            <summary>Sets the shim of GoalsEndpointUtil.GetInitialInterventionRequest(GetInitializeInterventionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetInitialTaskRequestGetInitializeTaskRequest">
            <summary>Sets the shim of GoalsEndpointUtil.GetInitialTaskRequest(GetInitializeTaskRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetInterventionIdsForRequestListOfPatientIntervention">
            <summary>Sets the shim of GoalsEndpointUtil.GetInterventionIdsForRequest(List`1&lt;PatientIntervention&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetPatientGoalAttributesListOfCustomAttribute">
            <summary>Sets the shim of GoalsEndpointUtil.GetPatientGoalAttributes(List`1&lt;CustomAttribute&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetPatientGoalGetPatientGoalRequest">
            <summary>Sets the shim of GoalsEndpointUtil.GetPatientGoal(GetPatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.GetTaskIdsForRequestListOfPatientTask">
            <summary>Sets the shim of GoalsEndpointUtil.GetTaskIdsForRequest(List`1&lt;PatientTask&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.PostUpdateBarrierRequestPostPatientGoalRequestPatientBarrierData">
            <summary>Sets the shim of GoalsEndpointUtil.PostUpdateBarrierRequest(PostPatientGoalRequest request, PatientBarrierData bd)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.PostUpdateGoalRequestPostPatientGoalRequest">
            <summary>Sets the shim of GoalsEndpointUtil.PostUpdateGoalRequest(PostPatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.PostUpdateInterventionRequestPostPatientGoalRequestPatientInterventionData">
            <summary>Sets the shim of GoalsEndpointUtil.PostUpdateInterventionRequest(PostPatientGoalRequest request, PatientInterventionData pi)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.PostUpdateTaskRequestPostPatientGoalRequestPatientTaskData">
            <summary>Sets the shim of GoalsEndpointUtil.PostUpdateTaskRequest(PostPatientGoalRequest request, PatientTaskData td)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsEndpointUtil.StaticConstructor">
            <summary>Sets the shim of GoalsEndpointUtil.GoalsEndpointUtil()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager">
            <summary>Shim type of Phytel.API.AppDomain.NG.GoalsManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.#ctor(Phytel.API.AppDomain.NG.GoalsManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.Constructor">
            <summary>Sets the shim of GoalsManager.GoalsManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.DeletePatientGoalPostDeletePatientGoalRequest">
            <summary>Sets the shim of GoalsManager.DeletePatientGoal(PostDeletePatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.GetAllPatientGoalsGetAllPatientGoalsRequest">
            <summary>Sets the shim of GoalsManager.GetAllPatientGoals(GetAllPatientGoalsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.GetInitialBarrierRequestGetInitializeBarrierRequest">
            <summary>Sets the shim of GoalsManager.GetInitialBarrierRequest(GetInitializeBarrierRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.GetInitialGoalRequestGetInitializeGoalRequest">
            <summary>Sets the shim of GoalsManager.GetInitialGoalRequest(GetInitializeGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.GetInitialInterventionGetInitializeInterventionRequest">
            <summary>Sets the shim of GoalsManager.GetInitialIntervention(GetInitializeInterventionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.GetInitialTaskGetInitializeTaskRequest">
            <summary>Sets the shim of GoalsManager.GetInitialTask(GetInitializeTaskRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.GetPatientGoalGetPatientGoalRequest">
            <summary>Sets the shim of GoalsManager.GetPatientGoal(GetPatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.SavePatientGoalPostPatientGoalRequest">
            <summary>Sets the shim of GoalsManager.SavePatientGoal(PostPatientGoalRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances.DeletePatientGoalPostDeletePatientGoalRequest">
            <summary>Sets the shim of GoalsManager.DeletePatientGoal(PostDeletePatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances.GetAllPatientGoalsGetAllPatientGoalsRequest">
            <summary>Sets the shim of GoalsManager.GetAllPatientGoals(GetAllPatientGoalsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances.GetInitialBarrierRequestGetInitializeBarrierRequest">
            <summary>Sets the shim of GoalsManager.GetInitialBarrierRequest(GetInitializeBarrierRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances.GetInitialGoalRequestGetInitializeGoalRequest">
            <summary>Sets the shim of GoalsManager.GetInitialGoalRequest(GetInitializeGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances.GetInitialInterventionGetInitializeInterventionRequest">
            <summary>Sets the shim of GoalsManager.GetInitialIntervention(GetInitializeInterventionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances.GetInitialTaskGetInitializeTaskRequest">
            <summary>Sets the shim of GoalsManager.GetInitialTask(GetInitializeTaskRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances.GetPatientGoalGetPatientGoalRequest">
            <summary>Sets the shim of GoalsManager.GetPatientGoal(GetPatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsManager.AllInstances.SavePatientGoalPostPatientGoalRequest">
            <summary>Sets the shim of GoalsManager.SavePatientGoal(PostPatientGoalRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil">
            <summary>Shim type of Phytel.API.AppDomain.NG.GoalsUtil</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.ConvertToOptionListDictionaryOfInt32String">
            <summary>Sets the shim of GoalsUtil.ConvertToOptionList(Dictionary`2&lt;Int32,String&gt; dictionary)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.DeletePatientGoalBarriersPostDeletePatientGoalRequest">
            <summary>Sets the shim of GoalsUtil.DeletePatientGoalBarriers(PostDeletePatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.DeletePatientGoalInterventionsPostDeletePatientGoalRequest">
            <summary>Sets the shim of GoalsUtil.DeletePatientGoalInterventions(PostDeletePatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.DeletePatientGoalTasksPostDeletePatientGoalRequest">
            <summary>Sets the shim of GoalsUtil.DeletePatientGoalTasks(PostDeletePatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.GetAttributeDataListOfCustomAttribute">
            <summary>Sets the shim of GoalsUtil.GetAttributeData(List`1&lt;CustomAttribute&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.GetBarriersListOfPatientBarrierData">
            <summary>Sets the shim of GoalsUtil.GetBarriers(List`1&lt;PatientBarrierData&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.GetChildViewListOfChildViewData">
            <summary>Sets the shim of GoalsUtil.GetChildView(List`1&lt;ChildViewData&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.GetCustomAttributeDetailsListOfCustomAttributeDataListOfCustomAttribute">
            <summary>Sets the shim of GoalsUtil.GetCustomAttributeDetails(List`1&lt;CustomAttributeData&gt; list, List`1&lt;CustomAttribute&gt; attributesLibrary)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.GetInterventionsListOfPatientInterventionData">
            <summary>Sets the shim of GoalsUtil.GetInterventions(List`1&lt;PatientInterventionData&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.GetPatientGoalForInitializeGetInitializeGoalRequestPatientGoalData">
            <summary>Sets the shim of GoalsUtil.GetPatientGoalForInitialize(GetInitializeGoalRequest request, PatientGoalData pgd)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.GetPatientTaskForInitializeGetInitializeTaskRequestPatientTaskData">
            <summary>Sets the shim of GoalsUtil.GetPatientTaskForInitialize(GetInitializeTaskRequest request, PatientTaskData ptd)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.GetTasksListOfPatientTaskDataListOfCustomAttribute">
            <summary>Sets the shim of GoalsUtil.GetTasks(List`1&lt;PatientTaskData&gt; list, List`1&lt;CustomAttribute&gt; taskAttributesLibrary)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.SavePatientGoalBarriersPostPatientGoalRequest">
            <summary>Sets the shim of GoalsUtil.SavePatientGoalBarriers(PostPatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.SavePatientGoalInterventionsPostPatientGoalRequest">
            <summary>Sets the shim of GoalsUtil.SavePatientGoalInterventions(PostPatientGoalRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimGoalsUtil.SavePatientGoalTasksPostPatientGoalRequest">
            <summary>Sets the shim of GoalsUtil.SavePatientGoalTasks(PostPatientGoalRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase">
            <summary>Shim type of Phytel.API.AppDomain.NG.ManagerBase</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase.#ctor(Phytel.API.AppDomain.NG.ManagerBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase.Constructor">
            <summary>Sets the shim of ManagerBase.ManagerBase()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase.LogExceptionException">
            <summary>Sets the shim of ManagerBase.LogException(Exception ex)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimManagerBase.AllInstances.LogExceptionException">
            <summary>Sets the shim of ManagerBase.LogException(Exception ex)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimNGExtensions">
            <summary>Shim type of Phytel.API.AppDomain.NG.NGExtensions</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGExtensions.CloneOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of NGExtensions.Clone(!!0 source)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimNGManager">
            <summary>Shim type of Phytel.API.AppDomain.NG.NGManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.#ctor(Phytel.API.AppDomain.NG.NGManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.Bind(Phytel.API.AppDomain.NG.INGManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.Constructor">
            <summary>Sets the shim of NGManager.NGManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.DeletePatientPostDeletePatientRequest">
            <summary>Sets the shim of NGManager.DeletePatient(PostDeletePatientRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.EndpointUtilsGet">
            <summary>Sets the shim of NGManager.get_EndpointUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.EndpointUtilsSetIEndpointUtils">
            <summary>Sets the shim of NGManager.set_EndpointUtils(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetActiveProgramsGetActiveProgramsRequest">
            <summary>Sets the shim of NGManager.GetActivePrograms(GetActiveProgramsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetAllCommModesGetAllCommModesRequest">
            <summary>Sets the shim of NGManager.GetAllCommModes(GetAllCommModesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetAllCommTypesGetAllCommTypesRequest">
            <summary>Sets the shim of NGManager.GetAllCommTypes(GetAllCommTypesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetAllLanguagesGetAllLanguagesRequest">
            <summary>Sets the shim of NGManager.GetAllLanguages(GetAllLanguagesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetAllObjectivesGetAllObjectivesRequest">
            <summary>Sets the shim of NGManager.GetAllObjectives(GetAllObjectivesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetAllSettingsGetAllSettingsRequest">
            <summary>Sets the shim of NGManager.GetAllSettings(GetAllSettingsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetAllStatesGetAllStatesRequest">
            <summary>Sets the shim of NGManager.GetAllStates(GetAllStatesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetAllTimeZonesGetAllTimeZonesRequest">
            <summary>Sets the shim of NGManager.GetAllTimeZones(GetAllTimeZonesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetAllTimesOfDaysGetAllTimesOfDaysRequest">
            <summary>Sets the shim of NGManager.GetAllTimesOfDays(GetAllTimesOfDaysRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetCareManagersGetAllCareManagersRequest">
            <summary>Sets the shim of NGManager.GetCareManagers(GetAllCareManagersRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetCohortPatientsGetCohortPatientsRequest">
            <summary>Sets the shim of NGManager.GetCohortPatients(GetCohortPatientsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetCohortsGetAllCohortsRequest">
            <summary>Sets the shim of NGManager.GetCohorts(GetAllCohortsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetContactByPatientIdGetContactRequest">
            <summary>Sets the shim of NGManager.GetContactByPatientId(GetContactRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetInitializePatientGetInitializePatientRequest">
            <summary>Sets the shim of NGManager.GetInitializePatient(GetInitializePatientRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetLookUpDetailsGetLookUpDetailsRequest">
            <summary>Sets the shim of NGManager.GetLookUpDetails(GetLookUpDetailsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetLookUpsGetLookUpsRequest">
            <summary>Sets the shim of NGManager.GetLookUps(GetLookUpsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetObjectivesInfoListOfObjectiveInfoData">
            <summary>Sets the shim of NGManager.GetObjectivesInfo(List`1&lt;ObjectiveInfoData&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetPatientActionDetailsGetPatientActionDetailsRequest">
            <summary>Sets the shim of NGManager.GetPatientActionDetails(GetPatientActionDetailsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetPatientGetPatientRequest">
            <summary>Sets the shim of NGManager.GetPatient(GetPatientRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetPatientProgramDetailsSummaryGetPatientProgramDetailsSummaryRequest">
            <summary>Sets the shim of NGManager.GetPatientProgramDetailsSummary(GetPatientProgramDetailsSummaryRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetPatientProgramsGetPatientProgramsRequest">
            <summary>Sets the shim of NGManager.GetPatientPrograms(GetPatientProgramsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetPatientSSNGetPatientSSNRequest">
            <summary>Sets the shim of NGManager.GetPatientSSN(GetPatientSSNRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetProblemsGetAllProblemsRequest">
            <summary>Sets the shim of NGManager.GetProblems(GetAllProblemsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.GetRecentPatientsGetRecentPatientsRequest">
            <summary>Sets the shim of NGManager.GetRecentPatients(GetRecentPatientsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.LogExceptionException">
            <summary>Sets the shim of NGManager.LogException(Exception ex)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.PlanElementUtilsGet">
            <summary>Sets the shim of NGManager.get_PlanElementUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.PlanElementUtilsSetIPlanElementUtils">
            <summary>Sets the shim of NGManager.set_PlanElementUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.PostPatientToProgramPostPatientToProgramsRequest">
            <summary>Sets the shim of NGManager.PostPatientToProgram(PostPatientToProgramsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.PostProgramAttributeChangesPostProgramAttributesChangeRequest">
            <summary>Sets the shim of NGManager.PostProgramAttributeChanges(PostProgramAttributesChangeRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.PutPatientDetailsUpdatePutPatientDetailsUpdateRequest">
            <summary>Sets the shim of NGManager.PutPatientDetailsUpdate(PutPatientDetailsUpdateRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.PutPatientFlaggedUpdatePutPatientFlaggedUpdateRequest">
            <summary>Sets the shim of NGManager.PutPatientFlaggedUpdate(PutPatientFlaggedUpdateRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.PutUpdateContactPutUpdateContactRequest">
            <summary>Sets the shim of NGManager.PutUpdateContact(PutUpdateContactRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.RemovePatientProgramPostRemovePatientProgramRequest">
            <summary>Sets the shim of NGManager.RemovePatientProgram(PostRemovePatientProgramRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.StaticConstructor">
            <summary>Sets the shim of NGManager.NGManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.UpdateBackgroundPutPatientBackgroundRequest">
            <summary>Sets the shim of NGManager.UpdateBackground(PutPatientBackgroundRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager._GetAllLanguagesb__23LanguageData">
            <summary>Sets the shim of NGManager.&lt;GetAllLanguages&gt;b__23(LanguageData d)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager._getResponsesb__51ResponseDetail">
            <summary>Sets the shim of NGManager.&lt;getResponses&gt;b__51(ResponseDetail z)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager._getSpawnElementb__5dSpawnElementDetail">
            <summary>Sets the shim of NGManager.&lt;getSpawnElement&gt;b__5d(SpawnElementDetail s)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getADSpawnElementListOfSpawnElementDetail">
            <summary>Sets the shim of NGManager.getADSpawnElement(List`1&lt;SpawnElementDetail&gt; sed)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getActionInfoActionsDetailIAppDomainRequestBoolean">
            <summary>Sets the shim of NGManager.getActionInfo(ActionsDetail a, IAppDomainRequest request, Boolean includeSteps)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getActionsInfoModuleDetailIAppDomainRequestBoolean">
            <summary>Sets the shim of NGManager.getActionsInfo(ModuleDetail r, IAppDomainRequest request, Boolean includeSteps)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getAttributesProgramAttributeData">
            <summary>Sets the shim of NGManager.getAttributes(ProgramAttributeData programAttributeData)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getDefaultTimeZoneGetTimeZoneDataRequest">
            <summary>Sets the shim of NGManager.getDefaultTimeZone(GetTimeZoneDataRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getModuleInfoGetProgramDetailsSummaryResponseIAppDomainRequest">
            <summary>Sets the shim of NGManager.getModuleInfo(GetProgramDetailsSummaryResponse resp, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getResponsesStepsDetailIAppDomainRequest">
            <summary>Sets the shim of NGManager.getResponses(StepsDetail s, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getSpawnElementPlanElementDetail">
            <summary>Sets the shim of NGManager.getSpawnElement(PlanElementDetail planElement)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.getStepsInfoActionsDetailIAppDomainRequest">
            <summary>Sets the shim of NGManager.getStepsInfo(ActionsDetail a, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.insertContactForPatientStringDoubleStringStringString">
            <summary>Sets the shim of NGManager.insertContactForPatient(String context, Double version, String contractNumber, String patientId, String userId)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.DeletePatientPostDeletePatientRequest">
            <summary>Sets the shim of NGManager.DeletePatient(PostDeletePatientRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.EndpointUtilsGet">
            <summary>Sets the shim of NGManager.get_EndpointUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.EndpointUtilsSetIEndpointUtils">
            <summary>Sets the shim of NGManager.set_EndpointUtils(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetActiveProgramsGetActiveProgramsRequest">
            <summary>Sets the shim of NGManager.GetActivePrograms(GetActiveProgramsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetAllCommModesGetAllCommModesRequest">
            <summary>Sets the shim of NGManager.GetAllCommModes(GetAllCommModesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetAllCommTypesGetAllCommTypesRequest">
            <summary>Sets the shim of NGManager.GetAllCommTypes(GetAllCommTypesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetAllLanguagesGetAllLanguagesRequest">
            <summary>Sets the shim of NGManager.GetAllLanguages(GetAllLanguagesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetAllObjectivesGetAllObjectivesRequest">
            <summary>Sets the shim of NGManager.GetAllObjectives(GetAllObjectivesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetAllSettingsGetAllSettingsRequest">
            <summary>Sets the shim of NGManager.GetAllSettings(GetAllSettingsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetAllStatesGetAllStatesRequest">
            <summary>Sets the shim of NGManager.GetAllStates(GetAllStatesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetAllTimeZonesGetAllTimeZonesRequest">
            <summary>Sets the shim of NGManager.GetAllTimeZones(GetAllTimeZonesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetAllTimesOfDaysGetAllTimesOfDaysRequest">
            <summary>Sets the shim of NGManager.GetAllTimesOfDays(GetAllTimesOfDaysRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetCareManagersGetAllCareManagersRequest">
            <summary>Sets the shim of NGManager.GetCareManagers(GetAllCareManagersRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetCohortPatientsGetCohortPatientsRequest">
            <summary>Sets the shim of NGManager.GetCohortPatients(GetCohortPatientsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetCohortsGetAllCohortsRequest">
            <summary>Sets the shim of NGManager.GetCohorts(GetAllCohortsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetContactByPatientIdGetContactRequest">
            <summary>Sets the shim of NGManager.GetContactByPatientId(GetContactRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetInitializePatientGetInitializePatientRequest">
            <summary>Sets the shim of NGManager.GetInitializePatient(GetInitializePatientRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetLookUpDetailsGetLookUpDetailsRequest">
            <summary>Sets the shim of NGManager.GetLookUpDetails(GetLookUpDetailsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetLookUpsGetLookUpsRequest">
            <summary>Sets the shim of NGManager.GetLookUps(GetLookUpsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetObjectivesInfoListOfObjectiveInfoData">
            <summary>Sets the shim of NGManager.GetObjectivesInfo(List`1&lt;ObjectiveInfoData&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetPatientActionDetailsGetPatientActionDetailsRequest">
            <summary>Sets the shim of NGManager.GetPatientActionDetails(GetPatientActionDetailsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetPatientGetPatientRequest">
            <summary>Sets the shim of NGManager.GetPatient(GetPatientRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetPatientProgramDetailsSummaryGetPatientProgramDetailsSummaryRequest">
            <summary>Sets the shim of NGManager.GetPatientProgramDetailsSummary(GetPatientProgramDetailsSummaryRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetPatientProgramsGetPatientProgramsRequest">
            <summary>Sets the shim of NGManager.GetPatientPrograms(GetPatientProgramsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetPatientSSNGetPatientSSNRequest">
            <summary>Sets the shim of NGManager.GetPatientSSN(GetPatientSSNRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetProblemsGetAllProblemsRequest">
            <summary>Sets the shim of NGManager.GetProblems(GetAllProblemsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.GetRecentPatientsGetRecentPatientsRequest">
            <summary>Sets the shim of NGManager.GetRecentPatients(GetRecentPatientsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.LogExceptionException">
            <summary>Sets the shim of NGManager.LogException(Exception ex)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.PlanElementUtilsGet">
            <summary>Sets the shim of NGManager.get_PlanElementUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.PlanElementUtilsSetIPlanElementUtils">
            <summary>Sets the shim of NGManager.set_PlanElementUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.PostPatientToProgramPostPatientToProgramsRequest">
            <summary>Sets the shim of NGManager.PostPatientToProgram(PostPatientToProgramsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.PostProgramAttributeChangesPostProgramAttributesChangeRequest">
            <summary>Sets the shim of NGManager.PostProgramAttributeChanges(PostProgramAttributesChangeRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.PutPatientDetailsUpdatePutPatientDetailsUpdateRequest">
            <summary>Sets the shim of NGManager.PutPatientDetailsUpdate(PutPatientDetailsUpdateRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.PutPatientFlaggedUpdatePutPatientFlaggedUpdateRequest">
            <summary>Sets the shim of NGManager.PutPatientFlaggedUpdate(PutPatientFlaggedUpdateRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.PutUpdateContactPutUpdateContactRequest">
            <summary>Sets the shim of NGManager.PutUpdateContact(PutUpdateContactRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.RemovePatientProgramPostRemovePatientProgramRequest">
            <summary>Sets the shim of NGManager.RemovePatientProgram(PostRemovePatientProgramRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.UpdateBackgroundPutPatientBackgroundRequest">
            <summary>Sets the shim of NGManager.UpdateBackground(PutPatientBackgroundRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances._getResponsesb__51ResponseDetail">
            <summary>Sets the shim of NGManager.&lt;getResponses&gt;b__51(ResponseDetail z)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getADSpawnElementListOfSpawnElementDetail">
            <summary>Sets the shim of NGManager.getADSpawnElement(List`1&lt;SpawnElementDetail&gt; sed)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getActionInfoActionsDetailIAppDomainRequestBoolean">
            <summary>Sets the shim of NGManager.getActionInfo(ActionsDetail a, IAppDomainRequest request, Boolean includeSteps)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getActionsInfoModuleDetailIAppDomainRequestBoolean">
            <summary>Sets the shim of NGManager.getActionsInfo(ModuleDetail r, IAppDomainRequest request, Boolean includeSteps)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getAttributesProgramAttributeData">
            <summary>Sets the shim of NGManager.getAttributes(ProgramAttributeData programAttributeData)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getDefaultTimeZoneGetTimeZoneDataRequest">
            <summary>Sets the shim of NGManager.getDefaultTimeZone(GetTimeZoneDataRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getModuleInfoGetProgramDetailsSummaryResponseIAppDomainRequest">
            <summary>Sets the shim of NGManager.getModuleInfo(GetProgramDetailsSummaryResponse resp, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getResponsesStepsDetailIAppDomainRequest">
            <summary>Sets the shim of NGManager.getResponses(StepsDetail s, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getSpawnElementPlanElementDetail">
            <summary>Sets the shim of NGManager.getSpawnElement(PlanElementDetail planElement)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.getStepsInfoActionsDetailIAppDomainRequest">
            <summary>Sets the shim of NGManager.getStepsInfo(ActionsDetail a, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGManager.AllInstances.insertContactForPatientStringDoubleStringStringString">
            <summary>Sets the shim of NGManager.insertContactForPatient(String context, Double version, String contractNumber, String patientId, String userId)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork">
            <summary>Shim type of Phytel.API.AppDomain.NG.NGUnitOfWork</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.#ctor(Phytel.API.AppDomain.NG.NGUnitOfWork)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.Bind(Phytel.API.AppDomain.NG.INGUnitOfWork)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.Constructor">
            <summary>Sets the shim of NGUnitOfWork.NGUnitOfWork()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.ExecuteINGCommand">
            <summary>Sets the shim of NGUnitOfWork.Execute(INGCommand command)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.Undo">
            <summary>Sets the shim of NGUnitOfWork.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.AllInstances.ExecuteINGCommand">
            <summary>Sets the shim of NGUnitOfWork.Execute(INGCommand command)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUnitOfWork.AllInstances.Undo">
            <summary>Sets the shim of NGUnitOfWork.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils">
            <summary>Shim type of Phytel.API.AppDomain.NG.NGUtils</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.FormatProgramDetailProgram">
            <summary>Sets the shim of NGUtils.FormatProgramDetail(Program program)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.FormatProgramDetailProgramDetail">
            <summary>Sets the shim of NGUtils.FormatProgramDetail(ProgramDetail program)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADActionsListOfActions">
            <summary>Sets the shim of NGUtils.GetADActions(List`1&lt;Actions&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADActionsListOfActionsDetail">
            <summary>Sets the shim of NGUtils.GetADActions(List`1&lt;ActionsDetail&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADModulesListOfModule">
            <summary>Sets the shim of NGUtils.GetADModules(List`1&lt;Module&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADModulesListOfModuleDetail">
            <summary>Sets the shim of NGUtils.GetADModules(List`1&lt;ModuleDetail&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADObjectivesListOfObjectiveInfo">
            <summary>Sets the shim of NGUtils.GetADObjectives(List`1&lt;ObjectiveInfo&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADObjectivesListOfObjectiveInfoData">
            <summary>Sets the shim of NGUtils.GetADObjectives(List`1&lt;ObjectiveInfoData&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADResponsesListOfResponse">
            <summary>Sets the shim of NGUtils.GetADResponses(List`1&lt;Response&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADResponsesListOfResponseDetail">
            <summary>Sets the shim of NGUtils.GetADResponses(List`1&lt;ResponseDetail&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADSpawnElementListOfSpawnElementDetail">
            <summary>Sets the shim of NGUtils.GetADSpawnElement(List`1&lt;SpawnElementDetail&gt; s)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADSpawnElementsListOfSpawnElement">
            <summary>Sets the shim of NGUtils.GetADSpawnElements(List`1&lt;SpawnElement&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADSpawnElementsListOfSpawnElementDetail">
            <summary>Sets the shim of NGUtils.GetADSpawnElements(List`1&lt;SpawnElementDetail&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADStepsListOfStep">
            <summary>Sets the shim of NGUtils.GetADSteps(List`1&lt;Step&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetADStepsListOfStepsDetail">
            <summary>Sets the shim of NGUtils.GetADSteps(List`1&lt;StepsDetail&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.GetDDSpawnElementListOfSpawnElement">
            <summary>Sets the shim of NGUtils.GetDDSpawnElement(List`1&lt;SpawnElement&gt; s)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.IsDateValidString">
            <summary>Sets the shim of NGUtils.IsDateValid(String p)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.PopulateCohortPatientStubData">
            <summary>Sets the shim of NGUtils.PopulateCohortPatientStubData()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.ReplaceActionActionsModuleActions">
            <summary>Sets the shim of NGUtils.ReplaceAction(Actions ac, Module m, Actions a)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNGUtils.UpdateProgramActionActionsProgram">
            <summary>Sets the shim of NGUtils.UpdateProgramAction(Actions ac, Program p)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager">
            <summary>Shim type of Phytel.API.AppDomain.NG.NotesManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.#ctor(Phytel.API.AppDomain.NG.NotesManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.Constructor">
            <summary>Sets the shim of NotesManager.NotesManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.DeletePatientNotePostDeletePatientNoteRequest">
            <summary>Sets the shim of NotesManager.DeletePatientNote(PostDeletePatientNoteRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.GetAllPatientNotesGetAllPatientNotesRequest">
            <summary>Sets the shim of NotesManager.GetAllPatientNotes(GetAllPatientNotesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.GetPatientNoteGetPatientNoteRequest">
            <summary>Sets the shim of NotesManager.GetPatientNote(GetPatientNoteRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.InsertPatientNotePostPatientNoteRequest">
            <summary>Sets the shim of NotesManager.InsertPatientNote(PostPatientNoteRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.StaticConstructor">
            <summary>Sets the shim of NotesManager.NotesManager()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.AllInstances.DeletePatientNotePostDeletePatientNoteRequest">
            <summary>Sets the shim of NotesManager.DeletePatientNote(PostDeletePatientNoteRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.AllInstances.GetAllPatientNotesGetAllPatientNotesRequest">
            <summary>Sets the shim of NotesManager.GetAllPatientNotes(GetAllPatientNotesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.AllInstances.GetPatientNoteGetPatientNoteRequest">
            <summary>Sets the shim of NotesManager.GetPatientNote(GetPatientNoteRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimNotesManager.AllInstances.InsertPatientNotePostPatientNoteRequest">
            <summary>Sets the shim of NotesManager.InsertPatientNote(PostPatientNoteRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil">
            <summary>Shim type of Phytel.API.AppDomain.NG.ObservationsUtil</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.ConvertPreviousValuePreviousValueData">
            <summary>Sets the shim of ObservationsUtil.ConvertPreviousValue(PreviousValueData pv)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.CreatePatientObservationRecordPatientObservationObservationValue">
            <summary>Sets the shim of ObservationsUtil.CreatePatientObservationRecord(PatientObservation po, ObservationValue ov)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.GetAdditionalObservationItemForPatientGetAdditionalObservationItemRequestPatientObservationData">
            <summary>Sets the shim of ObservationsUtil.GetAdditionalObservationItemForPatient(GetAdditionalObservationItemRequest request, PatientObservationData o)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.GetInitializeProblemGetInitializeProblemRequestPatientObservationData">
            <summary>Sets the shim of ObservationsUtil.GetInitializeProblem(GetInitializeProblemRequest request, PatientObservationData o)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.GetObservationsGetObservationsRequestListOfObservationData">
            <summary>Sets the shim of ObservationsUtil.GetObservations(GetObservationsRequest request, List`1&lt;ObservationData&gt; po)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.GetPatientObservationIdsListOfPatientObservation">
            <summary>Sets the shim of ObservationsUtil.GetPatientObservationIds(List`1&lt;PatientObservation&gt; obsl)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.GetPatientObservationPatientObservationData">
            <summary>Sets the shim of ObservationsUtil.GetPatientObservation(PatientObservationData po)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.GetPatientObservationsListOfPatientObservationData">
            <summary>Sets the shim of ObservationsUtil.GetPatientObservations(List`1&lt;PatientObservationData&gt; po)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.GetStandardObservationsForPatientGetStandardObservationItemsRequestListOfPatientObservationData">
            <summary>Sets the shim of ObservationsUtil.GetStandardObservationsForPatient(GetStandardObservationItemsRequest request, List`1&lt;PatientObservationData&gt; po)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.GetValuesListOfObservationValueData">
            <summary>Sets the shim of ObservationsUtil.GetValues(List`1&lt;ObservationValueData&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.IsResolvedOrInactivatedInt32">
            <summary>Sets the shim of ObservationsUtil.IsResolvedOrInactivated(Int32 p)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimObservationsUtil.StaticConstructor">
            <summary>Sets the shim of ObservationsUtil.ObservationsUtil()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.#ctor(Phytel.API.AppDomain.NG.PatientCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of PatientCommand.PatientCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.Execute">
            <summary>Sets the shim of PatientCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.StaticConstructor">
            <summary>Sets the shim of PatientCommand.PatientCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.Undo">
            <summary>Sets the shim of PatientCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientGoalsCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.#ctor(Phytel.API.AppDomain.NG.PatientGoalsCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of PatientGoalsCommand.PatientGoalsCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.Execute">
            <summary>Sets the shim of PatientGoalsCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.StaticConstructor">
            <summary>Sets the shim of PatientGoalsCommand.PatientGoalsCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.Undo">
            <summary>Sets the shim of PatientGoalsCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientGoalsCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientGoalsCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientGoalsCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientNotesCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.#ctor(Phytel.API.AppDomain.NG.PatientNotesCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of PatientNotesCommand.PatientNotesCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.Execute">
            <summary>Sets the shim of PatientNotesCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.StaticConstructor">
            <summary>Sets the shim of PatientNotesCommand.PatientNotesCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.Undo">
            <summary>Sets the shim of PatientNotesCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientNotesCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientNotesCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientNotesCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientObservationsCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.#ctor(Phytel.API.AppDomain.NG.PatientObservationsCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of PatientObservationsCommand.PatientObservationsCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.Execute">
            <summary>Sets the shim of PatientObservationsCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.StaticConstructor">
            <summary>Sets the shim of PatientObservationsCommand.PatientObservationsCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.Undo">
            <summary>Sets the shim of PatientObservationsCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientObservationsCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientObservationsCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientObservationsCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientProgramCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.#ctor(Phytel.API.AppDomain.NG.PatientProgramCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.ConstructorPostRemovePatientProgramRequestIRestClient">
            <summary>Sets the shim of PatientProgramCommand.PatientProgramCommand(PostRemovePatientProgramRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.Execute">
            <summary>Sets the shim of PatientProgramCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.StaticConstructor">
            <summary>Sets the shim of PatientProgramCommand.PatientProgramCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.Undo">
            <summary>Sets the shim of PatientProgramCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientProgramCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientProgramCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientProgramsCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.#ctor(Phytel.API.AppDomain.NG.PatientProgramsCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of PatientProgramsCommand.PatientProgramsCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.Execute">
            <summary>Sets the shim of PatientProgramsCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.StaticConstructor">
            <summary>Sets the shim of PatientProgramsCommand.PatientProgramsCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.Undo">
            <summary>Sets the shim of PatientProgramsCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientProgramsCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientProgramsCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientProgramsCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientSystemsCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.#ctor(Phytel.API.AppDomain.NG.PatientSystemsCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of PatientSystemsCommand.PatientSystemsCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.Execute">
            <summary>Sets the shim of PatientSystemsCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.StaticConstructor">
            <summary>Sets the shim of PatientSystemsCommand.PatientSystemsCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.Undo">
            <summary>Sets the shim of PatientSystemsCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientSystemsCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientSystemsCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientSystemsCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientToDosCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.#ctor(Phytel.API.AppDomain.NG.PatientToDosCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of PatientToDosCommand.PatientToDosCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.Execute">
            <summary>Sets the shim of PatientToDosCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.StaticConstructor">
            <summary>Sets the shim of PatientToDosCommand.PatientToDosCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.Undo">
            <summary>Sets the shim of PatientToDosCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientToDosCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientToDosCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientToDosCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand">
            <summary>Shim type of Phytel.API.AppDomain.NG.PatientUsersCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.#ctor(Phytel.API.AppDomain.NG.PatientUsersCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.Bind(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.ConstructorPostDeletePatientRequestIRestClient">
            <summary>Sets the shim of PatientUsersCommand.PatientUsersCommand(PostDeletePatientRequest req, IRestClient restClient)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.Execute">
            <summary>Sets the shim of PatientUsersCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.StaticConstructor">
            <summary>Sets the shim of PatientUsersCommand.PatientUsersCommand()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.Undo">
            <summary>Sets the shim of PatientUsersCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.AllInstances.Execute">
            <summary>Sets the shim of PatientUsersCommand.Execute()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPatientUsersCommand.AllInstances.Undo">
            <summary>Sets the shim of PatientUsersCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanElementEndpointUtil</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.GetActionByIdProgramString">
            <summary>Sets the shim of PlanElementEndpointUtil.GetActionById(Program p, String actionId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.GetProgramAttributesStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementEndpointUtil.GetProgramAttributes(String planElemId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.GetResponsesForStepStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementEndpointUtil.GetResponsesForStep(String stepId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.InsertNewProgramAttributeProgramAttributeDataIAppDomainRequest">
            <summary>Sets the shim of PlanElementEndpointUtil.InsertNewProgramAttribute(ProgramAttributeData pa, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.RequestCohortPatientViewDataStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementEndpointUtil.RequestCohortPatientViewData(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.StaticConstructor">
            <summary>Sets the shim of PlanElementEndpointUtil.PlanElementEndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.UpdateCohortPatientViewProblemCohortPatientViewDataStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementEndpointUtil.UpdateCohortPatientViewProblem(CohortPatientViewData cpvd, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil.UpdateProgramAttributesProgramAttributeDataIAppDomainRequest">
            <summary>Sets the shim of PlanElementEndpointUtil.UpdateProgramAttributes(ProgramAttributeData pAtt, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementEndpointUtil._GetActionByIdb__0Module">
            <summary>Sets the shim of PlanElementEndpointUtil.&lt;GetActionById&gt;b__0(Module module)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanElementUtils</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.#ctor(Phytel.API.AppDomain.NG.PlanElementUtils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.Bind(Phytel.API.AppDomain.NG.IPlanElementUtils)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.FindElementByIdOf1ListOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.String,``0})">
            <summary>Sets the shim of PlanElementUtils.FindElementById(List`1&lt;!!0&gt; list, String id)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetCompletionStatusOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Boolean})">
            <summary>Sets the shim of PlanElementUtils.SetCompletionStatus(List`1&lt;!!0&gt; list)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetEnabledStateOf1ListOfM0M0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.List{``0},``0,System.String,System.Boolean})">
            <summary>Sets the shim of PlanElementUtils.SetEnabledState(List`1&lt;!!0&gt; list, !!0 x, String assignToId, Boolean pEnabled)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetEnabledStatusByPreviousOf1ListOfM0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.List{``0},System.String,System.Boolean})">
            <summary>Sets the shim of PlanElementUtils.SetEnabledStatusByPrevious(List`1&lt;!!0&gt; planElements, String assignToId, Boolean pEnabled)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.ActivatePlanElementStringProgram">
            <summary>Sets the shim of PlanElementUtils.ActivatePlanElement(String p, Program program)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.CloneActionActions">
            <summary>Sets the shim of PlanElementUtils.CloneAction(Actions ac)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.CloneModuleModule">
            <summary>Sets the shim of PlanElementUtils.CloneModule(Module md)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.CloneProgramProgram">
            <summary>Sets the shim of PlanElementUtils.CloneProgram(Program pr)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.CloneRepeatActionActionsString">
            <summary>Sets the shim of PlanElementUtils.CloneRepeatAction(Actions action, String assignedTo)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.CloneStepStep">
            <summary>Sets the shim of PlanElementUtils.CloneStep(Step st)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.Constructor">
            <summary>Sets the shim of PlanElementUtils.PlanElementUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.DisableCompleteButtonForActionListOfStep">
            <summary>Sets the shim of PlanElementUtils.DisableCompleteButtonForAction(List`1&lt;Step&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.FindSpawnIdInActionsProgramStringModule">
            <summary>Sets the shim of PlanElementUtils.FindSpawnIdInActions(Program program, String p, Module m)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.FindSpawnIdInStepsProgramStringActions">
            <summary>Sets the shim of PlanElementUtils.FindSpawnIdInSteps(Program program, String p, Actions a)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.GetAttributesProgramAttributeData">
            <summary>Sets the shim of PlanElementUtils.GetAttributes(ProgramAttributeData programAttributeData)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.GetCohortPatientViewRecordStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementUtils.GetCohortPatientViewRecord(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.GetProcessingActionListOfModuleString">
            <summary>Sets the shim of PlanElementUtils.GetProcessingAction(List`1&lt;Module&gt; list, String actionId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.GetUpdatedIdDictionaryOfStringStringString">
            <summary>Sets the shim of PlanElementUtils.GetUpdatedId(Dictionary`2&lt;String,String&gt; bag, String id)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.HydratePlanElementListsListOfObjectPlanElements">
            <summary>Sets the shim of PlanElementUtils.HydratePlanElementLists(List`1&lt;Object&gt; processedElements, PlanElements planElems)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.InitializePlanElementSettingsPlanElementPlanElementProgram">
            <summary>Sets the shim of PlanElementUtils.InitializePlanElementSettings(PlanElement pe, PlanElement p, Program program)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.IsActionInitialProgram">
            <summary>Sets the shim of PlanElementUtils.IsActionInitial(Program p)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.IsProgramCompletedProgramString">
            <summary>Sets the shim of PlanElementUtils.IsProgramCompleted(Program p, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.ModifyProgramAttributePropertiesForUpdateProgramAttributeDataProgramAttributeData">
            <summary>Sets the shim of PlanElementUtils.ModifyProgramAttributePropertiesForUpdate(ProgramAttributeData pAtt, ProgramAttributeData _pAtt)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.OnProcessIdEventObject">
            <summary>Sets the shim of PlanElementUtils.OnProcessIdEvent(Object pe)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.ProcessPlanElementChangesPlanElementsPlanElementPlanElementString">
            <summary>Sets the shim of PlanElementUtils.ProcessPlanElementChanges(PlanElements planElems, PlanElement samplePe, PlanElement fPe, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.RegisterCohortPatientViewProblemToPatientStringStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementUtils.RegisterCohortPatientViewProblemToPatient(String problemId, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.ResponseSpawnAllowedStepResponse">
            <summary>Sets the shim of PlanElementUtils.ResponseSpawnAllowed(Step s, Response r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SaveReportingAttributesProgramAttributeDataIAppDomainRequest">
            <summary>Sets the shim of PlanElementUtils.SaveReportingAttributes(ProgramAttributeData _programAttributes, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetElementEnabledStateStringProgram">
            <summary>Sets the shim of PlanElementUtils.SetElementEnabledState(String p, Program program)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetInitialActionsObjectString">
            <summary>Sets the shim of PlanElementUtils.SetInitialActions(Object x, String assignToId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetInitialPropertiesStringIPlanElementBoolean">
            <summary>Sets the shim of PlanElementUtils.SetInitialProperties(String assignToId, IPlanElement m, Boolean dependent)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetInitialValuesStringIPlanElement">
            <summary>Sets the shim of PlanElementUtils.SetInitialValues(String assignToId, IPlanElement pe)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetPlanElementAttributesPlanElementsPlanElementPlanElementString">
            <summary>Sets the shim of PlanElementUtils.SetPlanElementAttributes(PlanElements planElems, PlanElement pe, PlanElement samplePe, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetProgramAttributesSpawnElementProgramStringProgramAttributeData">
            <summary>Sets the shim of PlanElementUtils.SetProgramAttributes(SpawnElement r, Program program, String userId, ProgramAttributeData progAttr)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetProgramInformationProgramAttributeDataProgram">
            <summary>Sets the shim of PlanElementUtils.SetProgramInformation(ProgramAttributeData _programAttributes, Program p)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SetStartDateForProgramAttributesStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementUtils.SetStartDateForProgramAttributes(String programId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.SpawnElementsInListListOfSpawnElementProgramStringProgramAttributeData">
            <summary>Sets the shim of PlanElementUtils.SpawnElementsInList(List`1&lt;SpawnElement&gt; list, Program program, String userId, ProgramAttributeData progAttr)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.UpdatePlanElementAttributesProgramPlanElementStringPlanElements">
            <summary>Sets the shim of PlanElementUtils.UpdatePlanElementAttributes(Program pg, PlanElement planElement, String userId, PlanElements planElems)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._DisableCompleteButtonForActionb__11Step">
            <summary>Sets the shim of PlanElementUtils.&lt;DisableCompleteButtonForAction&gt;b__11(Step s)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._GetProcessingActionb__21Module">
            <summary>Sets the shim of PlanElementUtils.&lt;GetProcessingAction&gt;b__21(Module module)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._ProcessPlanElementChangesb__3dActions">
            <summary>Sets the shim of PlanElementUtils.&lt;ProcessPlanElementChanges&gt;b__3d(Actions a)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._ProcessPlanElementChangesb__3fModule">
            <summary>Sets the shim of PlanElementUtils.&lt;ProcessPlanElementChanges&gt;b__3f(Module a)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._ProcessPlanElementChangesb__40Module">
            <summary>Sets the shim of PlanElementUtils.&lt;ProcessPlanElementChanges&gt;b__40(Module m)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._ProcessPlanElementChangesb__41Module">
            <summary>Sets the shim of PlanElementUtils.&lt;ProcessPlanElementChanges&gt;b__41(Module m)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._ProcessPlanElementChangesb__42Actions">
            <summary>Sets the shim of PlanElementUtils.&lt;ProcessPlanElementChanges&gt;b__42(Actions a)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._SetElementEnabledStateb__17Actions">
            <summary>Sets the shim of PlanElementUtils.&lt;SetElementEnabledState&gt;b__17(Actions a)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._SetInitialActionsb__9Actions">
            <summary>Sets the shim of PlanElementUtils.&lt;SetInitialActions&gt;b__9(Actions a)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._UpdatePlanElementAttributesb__37Module">
            <summary>Sets the shim of PlanElementUtils.&lt;UpdatePlanElementAttributes&gt;b__37(Module m)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._processedElementEventAddProcessedElementInUtilEventHandlers">
            <summary>Sets the shim of PlanElementUtils.add__processedElementEvent(ProcessedElementInUtilEventHandlers value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils._processedElementEventRemoveProcessedElementInUtilEventHandlers">
            <summary>Sets the shim of PlanElementUtils.remove__processedElementEvent(ProcessedElementInUtilEventHandlers value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.FindElementByIdOf1ListOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Phytel.API.AppDomain.NG.PlanElementUtils,System.Collections.Generic.List{``0},System.String,``0})">
            <summary>Sets the shim of PlanElementUtils.FindElementById(List`1&lt;!!0&gt; list, String id)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetCompletionStatusOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Phytel.API.AppDomain.NG.PlanElementUtils,System.Collections.Generic.List{``0},System.Boolean})">
            <summary>Sets the shim of PlanElementUtils.SetCompletionStatus(List`1&lt;!!0&gt; list)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetEnabledStateOf1ListOfM0M0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Phytel.API.AppDomain.NG.PlanElementUtils,System.Collections.Generic.List{``0},``0,System.String,System.Boolean})">
            <summary>Sets the shim of PlanElementUtils.SetEnabledState(List`1&lt;!!0&gt; list, !!0 x, String assignToId, Boolean pEnabled)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetEnabledStatusByPreviousOf1ListOfM0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Phytel.API.AppDomain.NG.PlanElementUtils,System.Collections.Generic.List{``0},System.String,System.Boolean})">
            <summary>Sets the shim of PlanElementUtils.SetEnabledStatusByPrevious(List`1&lt;!!0&gt; planElements, String assignToId, Boolean pEnabled)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.ActivatePlanElementStringProgram">
            <summary>Sets the shim of PlanElementUtils.ActivatePlanElement(String p, Program program)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.CloneActionActions">
            <summary>Sets the shim of PlanElementUtils.CloneAction(Actions ac)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.CloneModuleModule">
            <summary>Sets the shim of PlanElementUtils.CloneModule(Module md)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.CloneProgramProgram">
            <summary>Sets the shim of PlanElementUtils.CloneProgram(Program pr)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.CloneRepeatActionActionsString">
            <summary>Sets the shim of PlanElementUtils.CloneRepeatAction(Actions action, String assignedTo)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.CloneStepStep">
            <summary>Sets the shim of PlanElementUtils.CloneStep(Step st)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.DisableCompleteButtonForActionListOfStep">
            <summary>Sets the shim of PlanElementUtils.DisableCompleteButtonForAction(List`1&lt;Step&gt; list)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.FindSpawnIdInActionsProgramStringModule">
            <summary>Sets the shim of PlanElementUtils.FindSpawnIdInActions(Program program, String p, Module m)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.FindSpawnIdInStepsProgramStringActions">
            <summary>Sets the shim of PlanElementUtils.FindSpawnIdInSteps(Program program, String p, Actions a)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.GetAttributesProgramAttributeData">
            <summary>Sets the shim of PlanElementUtils.GetAttributes(ProgramAttributeData programAttributeData)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.GetCohortPatientViewRecordStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementUtils.GetCohortPatientViewRecord(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.GetProcessingActionListOfModuleString">
            <summary>Sets the shim of PlanElementUtils.GetProcessingAction(List`1&lt;Module&gt; list, String actionId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.GetUpdatedIdDictionaryOfStringStringString">
            <summary>Sets the shim of PlanElementUtils.GetUpdatedId(Dictionary`2&lt;String,String&gt; bag, String id)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.HydratePlanElementListsListOfObjectPlanElements">
            <summary>Sets the shim of PlanElementUtils.HydratePlanElementLists(List`1&lt;Object&gt; processedElements, PlanElements planElems)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.InitializePlanElementSettingsPlanElementPlanElementProgram">
            <summary>Sets the shim of PlanElementUtils.InitializePlanElementSettings(PlanElement pe, PlanElement p, Program program)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.IsActionInitialProgram">
            <summary>Sets the shim of PlanElementUtils.IsActionInitial(Program p)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.IsProgramCompletedProgramString">
            <summary>Sets the shim of PlanElementUtils.IsProgramCompleted(Program p, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.ModifyProgramAttributePropertiesForUpdateProgramAttributeDataProgramAttributeData">
            <summary>Sets the shim of PlanElementUtils.ModifyProgramAttributePropertiesForUpdate(ProgramAttributeData pAtt, ProgramAttributeData _pAtt)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.OnProcessIdEventObject">
            <summary>Sets the shim of PlanElementUtils.OnProcessIdEvent(Object pe)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.ProcessPlanElementChangesPlanElementsPlanElementPlanElementString">
            <summary>Sets the shim of PlanElementUtils.ProcessPlanElementChanges(PlanElements planElems, PlanElement samplePe, PlanElement fPe, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.RegisterCohortPatientViewProblemToPatientStringStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementUtils.RegisterCohortPatientViewProblemToPatient(String problemId, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.ResponseSpawnAllowedStepResponse">
            <summary>Sets the shim of PlanElementUtils.ResponseSpawnAllowed(Step s, Response r)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SaveReportingAttributesProgramAttributeDataIAppDomainRequest">
            <summary>Sets the shim of PlanElementUtils.SaveReportingAttributes(ProgramAttributeData _programAttributes, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetElementEnabledStateStringProgram">
            <summary>Sets the shim of PlanElementUtils.SetElementEnabledState(String p, Program program)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetInitialActionsObjectString">
            <summary>Sets the shim of PlanElementUtils.SetInitialActions(Object x, String assignToId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetInitialPropertiesStringIPlanElementBoolean">
            <summary>Sets the shim of PlanElementUtils.SetInitialProperties(String assignToId, IPlanElement m, Boolean dependent)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetInitialValuesStringIPlanElement">
            <summary>Sets the shim of PlanElementUtils.SetInitialValues(String assignToId, IPlanElement pe)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetPlanElementAttributesPlanElementsPlanElementPlanElementString">
            <summary>Sets the shim of PlanElementUtils.SetPlanElementAttributes(PlanElements planElems, PlanElement pe, PlanElement samplePe, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetProgramAttributesSpawnElementProgramStringProgramAttributeData">
            <summary>Sets the shim of PlanElementUtils.SetProgramAttributes(SpawnElement r, Program program, String userId, ProgramAttributeData progAttr)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetProgramInformationProgramAttributeDataProgram">
            <summary>Sets the shim of PlanElementUtils.SetProgramInformation(ProgramAttributeData _programAttributes, Program p)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SetStartDateForProgramAttributesStringIAppDomainRequest">
            <summary>Sets the shim of PlanElementUtils.SetStartDateForProgramAttributes(String programId, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.SpawnElementsInListListOfSpawnElementProgramStringProgramAttributeData">
            <summary>Sets the shim of PlanElementUtils.SpawnElementsInList(List`1&lt;SpawnElement&gt; list, Program program, String userId, ProgramAttributeData progAttr)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances.UpdatePlanElementAttributesProgramPlanElementStringPlanElements">
            <summary>Sets the shim of PlanElementUtils.UpdatePlanElementAttributes(Program pg, PlanElement planElement, String userId, PlanElements planElems)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances._DisableCompleteButtonForActionb__11Step">
            <summary>Sets the shim of PlanElementUtils.&lt;DisableCompleteButtonForAction&gt;b__11(Step s)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances._processedElementEventAddProcessedElementInUtilEventHandlers">
            <summary>Sets the shim of PlanElementUtils.add__processedElementEvent(ProcessedElementInUtilEventHandlers value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanElementUtils.AllInstances._processedElementEventRemoveProcessedElementInUtilEventHandlers">
            <summary>Sets the shim of PlanElementUtils.remove__processedElementEvent(ProcessedElementInUtilEventHandlers value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.#ctor(Phytel.API.AppDomain.NG.PlanManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.Bind(Phytel.API.AppDomain.NG.Programs.IPlanManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AddUniquePlanElementToProcessedListObject">
            <summary>Sets the shim of PlanManager.AddUniquePlanElementToProcessedList(Object e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.Constructor">
            <summary>Sets the shim of PlanManager.PlanManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.EndPointUtilsGet">
            <summary>Sets the shim of PlanManager.get_EndPointUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.EndPointUtilsSetIEndpointUtils">
            <summary>Sets the shim of PlanManager.set_EndPointUtils(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.InitializeProgramChain">
            <summary>Sets the shim of PlanManager.InitializeProgramChain()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.IsInitialActionGet">
            <summary>Sets the shim of PlanManager.get_IsInitialAction()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.IsInitialActionSetIsInitialActionSpecificationOfProgram">
            <summary>Sets the shim of PlanManager.set_IsInitialAction(IsInitialActionSpecification`1&lt;Program&gt; value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.PEUtilsGet">
            <summary>Sets the shim of PlanManager.get_PEUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.PEUtilsSetIPlanElementUtils">
            <summary>Sets the shim of PlanManager.set_PEUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.PlanElementUtil__processedElementEventProcessElementEventArgs">
            <summary>Sets the shim of PlanManager.PlanElementUtil__processedElementEvent(ProcessElementEventArgs e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.Proc__processedIdEventObjectProcessElementEventArgs">
            <summary>Sets the shim of PlanManager.Proc__processedIdEvent(Object s, ProcessElementEventArgs e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.ProcessActionResultsPostProcessActionRequest">
            <summary>Sets the shim of PlanManager.ProcessActionResults(PostProcessActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.ProcessedElementsGet">
            <summary>Sets the shim of PlanManager.get_ProcessedElements()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.ProcessedElementsSetListOfObject">
            <summary>Sets the shim of PlanManager.set_ProcessedElements(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.RelatedChangesGet">
            <summary>Sets the shim of PlanManager.get_RelatedChanges()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.RelatedChangesSetListOfString">
            <summary>Sets the shim of PlanManager.set_RelatedChanges(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.RepeatActionPostRepeatActionRequest">
            <summary>Sets the shim of PlanManager.RepeatAction(PostRepeatActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.ReplaceActionReferenceInModuleStringActionsModule">
            <summary>Sets the shim of PlanManager.ReplaceActionReferenceInModule(String oActionId, Actions newAction, Module mod)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.ReplaceSpawnElementReferencesListOfSpawnElementStringString">
            <summary>Sets the shim of PlanManager.ReplaceSpawnElementReferences(List`1&lt;SpawnElement&gt; list, String oActionId, String cActionId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.SaveActionResultsPostSaveActionRequest">
            <summary>Sets the shim of PlanManager.SaveActionResults(PostSaveActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.stepProc__spawnEventObjectSpawnEventArgs">
            <summary>Sets the shim of PlanManager.stepProc__spawnEvent(Object s, SpawnEventArgs e)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.AddUniquePlanElementToProcessedListObject">
            <summary>Sets the shim of PlanManager.AddUniquePlanElementToProcessedList(Object e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.EndPointUtilsGet">
            <summary>Sets the shim of PlanManager.get_EndPointUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.EndPointUtilsSetIEndpointUtils">
            <summary>Sets the shim of PlanManager.set_EndPointUtils(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.InitializeProgramChain">
            <summary>Sets the shim of PlanManager.InitializeProgramChain()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.IsInitialActionGet">
            <summary>Sets the shim of PlanManager.get_IsInitialAction()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.IsInitialActionSetIsInitialActionSpecificationOfProgram">
            <summary>Sets the shim of PlanManager.set_IsInitialAction(IsInitialActionSpecification`1&lt;Program&gt; value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.PEUtilsGet">
            <summary>Sets the shim of PlanManager.get_PEUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.PEUtilsSetIPlanElementUtils">
            <summary>Sets the shim of PlanManager.set_PEUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.PlanElementUtil__processedElementEventProcessElementEventArgs">
            <summary>Sets the shim of PlanManager.PlanElementUtil__processedElementEvent(ProcessElementEventArgs e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.Proc__processedIdEventObjectProcessElementEventArgs">
            <summary>Sets the shim of PlanManager.Proc__processedIdEvent(Object s, ProcessElementEventArgs e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.ProcessActionResultsPostProcessActionRequest">
            <summary>Sets the shim of PlanManager.ProcessActionResults(PostProcessActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.ProcessedElementsGet">
            <summary>Sets the shim of PlanManager.get_ProcessedElements()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.ProcessedElementsSetListOfObject">
            <summary>Sets the shim of PlanManager.set_ProcessedElements(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.RelatedChangesGet">
            <summary>Sets the shim of PlanManager.get_RelatedChanges()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.RelatedChangesSetListOfString">
            <summary>Sets the shim of PlanManager.set_RelatedChanges(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.RepeatActionPostRepeatActionRequest">
            <summary>Sets the shim of PlanManager.RepeatAction(PostRepeatActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.ReplaceActionReferenceInModuleStringActionsModule">
            <summary>Sets the shim of PlanManager.ReplaceActionReferenceInModule(String oActionId, Actions newAction, Module mod)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.ReplaceSpawnElementReferencesListOfSpawnElementStringString">
            <summary>Sets the shim of PlanManager.ReplaceSpawnElementReferences(List`1&lt;SpawnElement&gt; list, String oActionId, String cActionId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.SaveActionResultsPostSaveActionRequest">
            <summary>Sets the shim of PlanManager.SaveActionResults(PostSaveActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimPlanManager.AllInstances.stepProc__spawnEventObjectSpawnEventArgs">
            <summary>Sets the shim of PlanManager.stepProc__spawnEvent(Object s, SpawnEventArgs e)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager">
            <summary>Shim type of Phytel.API.AppDomain.NG.SchedulingManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.#ctor(Phytel.API.AppDomain.NG.SchedulingManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.Constructor">
            <summary>Sets the shim of SchedulingManager.SchedulingManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.GetToDosGetToDosRequest">
            <summary>Sets the shim of SchedulingManager.GetToDos(GetToDosRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.InsertToDoPostInsertToDoRequest">
            <summary>Sets the shim of SchedulingManager.InsertToDo(PostInsertToDoRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.StaticConstructor">
            <summary>Sets the shim of SchedulingManager.SchedulingManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.UpdateToDoPostUpdateToDoRequest">
            <summary>Sets the shim of SchedulingManager.UpdateToDo(PostUpdateToDoRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.convertToToDoToDoData">
            <summary>Sets the shim of SchedulingManager.convertToToDo(ToDoData toDoData)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.getPatientDetailsDoubleStringStringIRestClientToDo">
            <summary>Sets the shim of SchedulingManager.getPatientDetails(Double version, String contractNumber, String userId, IRestClient client, ToDo toDo)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.AllInstances.GetToDosGetToDosRequest">
            <summary>Sets the shim of SchedulingManager.GetToDos(GetToDosRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.AllInstances.InsertToDoPostInsertToDoRequest">
            <summary>Sets the shim of SchedulingManager.InsertToDo(PostInsertToDoRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.AllInstances.UpdateToDoPostUpdateToDoRequest">
            <summary>Sets the shim of SchedulingManager.UpdateToDo(PostUpdateToDoRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSchedulingManager.AllInstances.convertToToDoToDoData">
            <summary>Sets the shim of SchedulingManager.convertToToDo(ToDoData toDoData)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager">
            <summary>Shim type of Phytel.API.AppDomain.NG.SecurityManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.#ctor(Phytel.API.AppDomain.NG.SecurityManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.Bind(Phytel.API.AppDomain.NG.ISecurityManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.BuildSecurityToken">
            <summary>Sets the shim of SecurityManager.BuildSecurityToken()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.Constructor">
            <summary>Sets the shim of SecurityManager.SecurityManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.IsUserValidatedDoubleStringString">
            <summary>Sets the shim of SecurityManager.IsUserValidated(Double version, String token, String contractNumber)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.StaticConstructor">
            <summary>Sets the shim of SecurityManager.SecurityManager()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.AllInstances.BuildSecurityToken">
            <summary>Sets the shim of SecurityManager.BuildSecurityToken()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.ShimSecurityManager.AllInstances.IsUserValidatedDoubleStringString">
            <summary>Sets the shim of SecurityManager.IsUserValidated(Double version, String token, String contractNumber)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubCareMembersCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.CareMembersCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubCareMembersCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubCareMembersCommand.InitializeStub">
            <summary>Initializes a new instance of type StubCareMembersCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCareMembersCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCareMembersCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCareMembersCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubCareMembersManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.CareMembersManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubCareMembersManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubCareMembersManager.InitializeStub">
            <summary>Initializes a new instance of type StubCareMembersManager</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCareMembersManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCareMembersManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCareMembersManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubCohortPatientViewCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.CohortPatientViewCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubCohortPatientViewCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubCohortPatientViewCommand.InitializeStub">
            <summary>Initializes a new instance of type StubCohortPatientViewCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCohortPatientViewCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCohortPatientViewCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubCohortPatientViewCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubConstants">
            <summary>Stub type of Phytel.API.AppDomain.NG.Constants</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubConstants.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubConstants.InitializeStub">
            <summary>Initializes a new instance of type StubConstants</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubConstants.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubConstants.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubConstants.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubContactCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.ContactCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubContactCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubContactCommand.InitializeStub">
            <summary>Initializes a new instance of type StubContactCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubContactCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubContactCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubContactCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubEndpointUtils">
            <summary>Stub type of Phytel.API.AppDomain.NG.EndpointUtils</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubEndpointUtils.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubEndpointUtils.InitializeStub">
            <summary>Initializes a new instance of type StubEndpointUtils</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubEndpointUtils.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubEndpointUtils.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubEndpointUtils.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubGoalsManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.GoalsManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubGoalsManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubGoalsManager.InitializeStub">
            <summary>Initializes a new instance of type StubGoalsManager</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubGoalsManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubGoalsManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubGoalsManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubINGCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.INGCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGCommand.#ctor">
            <summary>Initializes a new instance of type StubINGCommand</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGCommand.Execute">
            <summary>Sets the stub of INGCommand.Execute()</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGCommand.papiadng::Phytel#API#AppDomain#NG#INGCommand#Execute">
            <summary>Sets the stub of INGCommand.Execute()</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGCommand.papiadng::Phytel#API#AppDomain#NG#INGCommand#Undo">
            <summary>Sets the stub of INGCommand.Undo()</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGCommand.Undo">
            <summary>Sets the stub of INGCommand.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubINGManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.INGManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.#ctor">
            <summary>Initializes a new instance of type StubINGManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.AttachBackingFieldToEndpointUtils">
            <summary>Attaches delegates to emulate StubINGManager.EndpointUtils as a property with a backing field.</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.AttachBackingFieldToPlanElementUtils">
            <summary>Attaches delegates to emulate StubINGManager.PlanElementUtils as a property with a backing field.</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.DeletePatientPostDeletePatientRequest">
            <summary>Sets the stub of INGManager.DeletePatient(PostDeletePatientRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.EndpointUtilsGet">
            <summary>Sets the stub of INGManager.get_EndpointUtils()</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.EndpointUtilsSetIEndpointUtils">
            <summary>Sets the stub of INGManager.set_EndpointUtils(IEndpointUtils value)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetActiveProgramsGetActiveProgramsRequest">
            <summary>Sets the stub of INGManager.GetActivePrograms(GetActiveProgramsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetAllCommModesGetAllCommModesRequest">
            <summary>Sets the stub of INGManager.GetAllCommModes(GetAllCommModesRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetAllCommTypesGetAllCommTypesRequest">
            <summary>Sets the stub of INGManager.GetAllCommTypes(GetAllCommTypesRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetAllLanguagesGetAllLanguagesRequest">
            <summary>Sets the stub of INGManager.GetAllLanguages(GetAllLanguagesRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetAllObjectivesGetAllObjectivesRequest">
            <summary>Sets the stub of INGManager.GetAllObjectives(GetAllObjectivesRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetAllSettingsGetAllSettingsRequest">
            <summary>Sets the stub of INGManager.GetAllSettings(GetAllSettingsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetAllStatesGetAllStatesRequest">
            <summary>Sets the stub of INGManager.GetAllStates(GetAllStatesRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetAllTimeZonesGetAllTimeZonesRequest">
            <summary>Sets the stub of INGManager.GetAllTimeZones(GetAllTimeZonesRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetAllTimesOfDaysGetAllTimesOfDaysRequest">
            <summary>Sets the stub of INGManager.GetAllTimesOfDays(GetAllTimesOfDaysRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetCareManagersGetAllCareManagersRequest">
            <summary>Sets the stub of INGManager.GetCareManagers(GetAllCareManagersRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetCohortPatientsGetCohortPatientsRequest">
            <summary>Sets the stub of INGManager.GetCohortPatients(GetCohortPatientsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetCohortsGetAllCohortsRequest">
            <summary>Sets the stub of INGManager.GetCohorts(GetAllCohortsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetContactByPatientIdGetContactRequest">
            <summary>Sets the stub of INGManager.GetContactByPatientId(GetContactRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetInitializePatientGetInitializePatientRequest">
            <summary>Sets the stub of INGManager.GetInitializePatient(GetInitializePatientRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetLookUpDetailsGetLookUpDetailsRequest">
            <summary>Sets the stub of INGManager.GetLookUpDetails(GetLookUpDetailsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetLookUpsGetLookUpsRequest">
            <summary>Sets the stub of INGManager.GetLookUps(GetLookUpsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetPatientActionDetailsGetPatientActionDetailsRequest">
            <summary>Sets the stub of INGManager.GetPatientActionDetails(GetPatientActionDetailsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetPatientGetPatientRequest">
            <summary>Sets the stub of INGManager.GetPatient(GetPatientRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetPatientProgramDetailsSummaryGetPatientProgramDetailsSummaryRequest">
            <summary>Sets the stub of INGManager.GetPatientProgramDetailsSummary(GetPatientProgramDetailsSummaryRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetPatientProgramsGetPatientProgramsRequest">
            <summary>Sets the stub of INGManager.GetPatientPrograms(GetPatientProgramsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetPatientSSNGetPatientSSNRequest">
            <summary>Sets the stub of INGManager.GetPatientSSN(GetPatientSSNRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetProblemsGetAllProblemsRequest">
            <summary>Sets the stub of INGManager.GetProblems(GetAllProblemsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.GetRecentPatientsGetRecentPatientsRequest">
            <summary>Sets the stub of INGManager.GetRecentPatients(GetRecentPatientsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.LogExceptionException">
            <summary>Sets the stub of INGManager.LogException(Exception ex)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#DeletePatient(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest)">
            <summary>Sets the stub of INGManager.DeletePatient(PostDeletePatientRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetActivePrograms(Phytel.API.AppDomain.NG.DTO.GetActiveProgramsRequest)">
            <summary>Sets the stub of INGManager.GetActivePrograms(GetActiveProgramsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetAllCommModes(Phytel.API.AppDomain.NG.DTO.GetAllCommModesRequest)">
            <summary>Sets the stub of INGManager.GetAllCommModes(GetAllCommModesRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetAllCommTypes(Phytel.API.AppDomain.NG.DTO.GetAllCommTypesRequest)">
            <summary>Sets the stub of INGManager.GetAllCommTypes(GetAllCommTypesRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetAllLanguages(Phytel.API.AppDomain.NG.DTO.GetAllLanguagesRequest)">
            <summary>Sets the stub of INGManager.GetAllLanguages(GetAllLanguagesRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetAllObjectives(Phytel.API.AppDomain.NG.DTO.GetAllObjectivesRequest)">
            <summary>Sets the stub of INGManager.GetAllObjectives(GetAllObjectivesRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetAllSettings(Phytel.API.AppDomain.NG.DTO.GetAllSettingsRequest)">
            <summary>Sets the stub of INGManager.GetAllSettings(GetAllSettingsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetAllStates(Phytel.API.AppDomain.NG.DTO.GetAllStatesRequest)">
            <summary>Sets the stub of INGManager.GetAllStates(GetAllStatesRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetAllTimeZones(Phytel.API.AppDomain.NG.DTO.GetAllTimeZonesRequest)">
            <summary>Sets the stub of INGManager.GetAllTimeZones(GetAllTimeZonesRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetAllTimesOfDays(Phytel.API.AppDomain.NG.DTO.GetAllTimesOfDaysRequest)">
            <summary>Sets the stub of INGManager.GetAllTimesOfDays(GetAllTimesOfDaysRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetCareManagers(Phytel.API.AppDomain.NG.DTO.GetAllCareManagersRequest)">
            <summary>Sets the stub of INGManager.GetCareManagers(GetAllCareManagersRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetCohortPatients(Phytel.API.AppDomain.NG.DTO.GetCohortPatientsRequest)">
            <summary>Sets the stub of INGManager.GetCohortPatients(GetCohortPatientsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetCohorts(Phytel.API.AppDomain.NG.DTO.GetAllCohortsRequest)">
            <summary>Sets the stub of INGManager.GetCohorts(GetAllCohortsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetContactByPatientId(Phytel.API.AppDomain.NG.DTO.GetContactRequest)">
            <summary>Sets the stub of INGManager.GetContactByPatientId(GetContactRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetInitializePatient(Phytel.API.AppDomain.NG.DTO.GetInitializePatientRequest)">
            <summary>Sets the stub of INGManager.GetInitializePatient(GetInitializePatientRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetLookUpDetails(Phytel.API.AppDomain.NG.DTO.GetLookUpDetailsRequest)">
            <summary>Sets the stub of INGManager.GetLookUpDetails(GetLookUpDetailsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetLookUps(Phytel.API.AppDomain.NG.DTO.GetLookUpsRequest)">
            <summary>Sets the stub of INGManager.GetLookUps(GetLookUpsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetPatient(Phytel.API.AppDomain.NG.DTO.GetPatientRequest)">
            <summary>Sets the stub of INGManager.GetPatient(GetPatientRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetPatientActionDetails(Phytel.API.AppDomain.NG.DTO.GetPatientActionDetailsRequest)">
            <summary>Sets the stub of INGManager.GetPatientActionDetails(GetPatientActionDetailsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetPatientProgramDetailsSummary(Phytel.API.AppDomain.NG.DTO.GetPatientProgramDetailsSummaryRequest)">
            <summary>Sets the stub of INGManager.GetPatientProgramDetailsSummary(GetPatientProgramDetailsSummaryRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetPatientPrograms(Phytel.API.AppDomain.NG.DTO.GetPatientProgramsRequest)">
            <summary>Sets the stub of INGManager.GetPatientPrograms(GetPatientProgramsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetPatientSSN(Phytel.API.AppDomain.NG.DTO.GetPatientSSNRequest)">
            <summary>Sets the stub of INGManager.GetPatientSSN(GetPatientSSNRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetProblems(Phytel.API.AppDomain.NG.DTO.GetAllProblemsRequest)">
            <summary>Sets the stub of INGManager.GetProblems(GetAllProblemsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#GetRecentPatients(Phytel.API.AppDomain.NG.DTO.GetRecentPatientsRequest)">
            <summary>Sets the stub of INGManager.GetRecentPatients(GetRecentPatientsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#LogException(System.Exception)">
            <summary>Sets the stub of INGManager.LogException(Exception ex)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#PostPatientToProgram(Phytel.API.AppDomain.NG.DTO.PostPatientToProgramsRequest)">
            <summary>Sets the stub of INGManager.PostPatientToProgram(PostPatientToProgramsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#PostProgramAttributeChanges(Phytel.API.AppDomain.NG.DTO.PostProgramAttributesChangeRequest)">
            <summary>Sets the stub of INGManager.PostProgramAttributeChanges(PostProgramAttributesChangeRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#PutPatientDetailsUpdate(Phytel.API.AppDomain.NG.DTO.PutPatientDetailsUpdateRequest)">
            <summary>Sets the stub of INGManager.PutPatientDetailsUpdate(PutPatientDetailsUpdateRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#PutPatientFlaggedUpdate(Phytel.API.AppDomain.NG.DTO.PutPatientFlaggedUpdateRequest)">
            <summary>Sets the stub of INGManager.PutPatientFlaggedUpdate(PutPatientFlaggedUpdateRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#PutUpdateContact(Phytel.API.AppDomain.NG.DTO.PutUpdateContactRequest)">
            <summary>Sets the stub of INGManager.PutUpdateContact(PutUpdateContactRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#RemovePatientProgram(Phytel.API.AppDomain.NG.DTO.PostRemovePatientProgramRequest)">
            <summary>Sets the stub of INGManager.RemovePatientProgram(PostRemovePatientProgramRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#UpdateBackground(Phytel.API.AppDomain.NG.DTO.PutPatientBackgroundRequest)">
            <summary>Sets the stub of INGManager.UpdateBackground(PutPatientBackgroundRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.PlanElementUtilsGet">
            <summary>Sets the stub of INGManager.get_PlanElementUtils()</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.PlanElementUtilsSetIPlanElementUtils">
            <summary>Sets the stub of INGManager.set_PlanElementUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.PostPatientToProgramPostPatientToProgramsRequest">
            <summary>Sets the stub of INGManager.PostPatientToProgram(PostPatientToProgramsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.PostProgramAttributeChangesPostProgramAttributesChangeRequest">
            <summary>Sets the stub of INGManager.PostProgramAttributeChanges(PostProgramAttributesChangeRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.PutPatientDetailsUpdatePutPatientDetailsUpdateRequest">
            <summary>Sets the stub of INGManager.PutPatientDetailsUpdate(PutPatientDetailsUpdateRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.PutPatientFlaggedUpdatePutPatientFlaggedUpdateRequest">
            <summary>Sets the stub of INGManager.PutPatientFlaggedUpdate(PutPatientFlaggedUpdateRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.PutUpdateContactPutUpdateContactRequest">
            <summary>Sets the stub of INGManager.PutUpdateContact(PutUpdateContactRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.RemovePatientProgramPostRemovePatientProgramRequest">
            <summary>Sets the stub of INGManager.RemovePatientProgram(PostRemovePatientProgramRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGManager.UpdateBackgroundPutPatientBackgroundRequest">
            <summary>Sets the stub of INGManager.UpdateBackground(PutPatientBackgroundRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#EndpointUtils">
            <summary>Sets the stub of INGManager.get_EndpointUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubINGManager.papiadng::Phytel#API#AppDomain#NG#INGManager#PlanElementUtils">
            <summary>Sets the stub of INGManager.get_PlanElementUtils()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubINGUnitOfWork">
            <summary>Stub type of Phytel.API.AppDomain.NG.INGUnitOfWork</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGUnitOfWork.#ctor">
            <summary>Initializes a new instance of type StubINGUnitOfWork</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGUnitOfWork.ExecuteINGCommand">
            <summary>Sets the stub of INGUnitOfWork.Execute(INGCommand command)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGUnitOfWork.papiadng::Phytel#API#AppDomain#NG#INGUnitOfWork#Execute(Phytel.API.AppDomain.NG.INGCommand)">
            <summary>Sets the stub of INGUnitOfWork.Execute(INGCommand command)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubINGUnitOfWork.papiadng::Phytel#API#AppDomain#NG#INGUnitOfWork#Undo">
            <summary>Sets the stub of INGUnitOfWork.Undo()</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubINGUnitOfWork.Undo">
            <summary>Sets the stub of INGUnitOfWork.Undo()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils">
            <summary>Stub type of Phytel.API.AppDomain.NG.IPlanElementUtils</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.#ctor">
            <summary>Initializes a new instance of type StubIPlanElementUtils</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.ActivatePlanElementStringProgram">
            <summary>Sets the stub of IPlanElementUtils.ActivatePlanElement(String p, Program program)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.CloneActionActions">
            <summary>Sets the stub of IPlanElementUtils.CloneAction(Actions act)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.CloneModuleModule">
            <summary>Sets the stub of IPlanElementUtils.CloneModule(Module md)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.CloneProgramProgram">
            <summary>Sets the stub of IPlanElementUtils.CloneProgram(Program pr)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.CloneRepeatActionActionsString">
            <summary>Sets the stub of IPlanElementUtils.CloneRepeatAction(Actions action, String assignedById)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.DisableCompleteButtonForActionListOfStep">
            <summary>Sets the stub of IPlanElementUtils.DisableCompleteButtonForAction(List`1&lt;Step&gt; list)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.FindElementByIdOf1ListOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.String,``0})">
            <summary>Sets stubs of FindElementById(List`1&lt;!!0&gt; list, String id)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.FindSpawnIdInActionsProgramStringModule">
            <summary>Sets the stub of IPlanElementUtils.FindSpawnIdInActions(Program program, String p, Module m)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.FindSpawnIdInStepsProgramStringActions">
            <summary>Sets the stub of IPlanElementUtils.FindSpawnIdInSteps(Program program, String p, Actions a)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.GetAttributesProgramAttributeData">
            <summary>Sets the stub of IPlanElementUtils.GetAttributes(ProgramAttributeData programAttributeData)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.GetCohortPatientViewRecordStringIAppDomainRequest">
            <summary>Sets the stub of IPlanElementUtils.GetCohortPatientViewRecord(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.GetProcessingActionListOfModuleString">
            <summary>Sets the stub of IPlanElementUtils.GetProcessingAction(List`1&lt;Module&gt; list, String actionId)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.HydratePlanElementListsListOfObjectPlanElements">
            <summary>Sets the stub of IPlanElementUtils.HydratePlanElementLists(List`1&lt;Object&gt; processedElements, PlanElements planElems)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.InitializePlanElementSettingsPlanElementPlanElementProgram">
            <summary>Sets the stub of IPlanElementUtils.InitializePlanElementSettings(PlanElement pe, PlanElement p, Program program)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.IsActionInitialProgram">
            <summary>Sets the stub of IPlanElementUtils.IsActionInitial(Program p)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.IsProgramCompletedProgramString">
            <summary>Sets the stub of IPlanElementUtils.IsProgramCompleted(Program p, String userId)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.ModifyProgramAttributePropertiesForUpdateProgramAttributeDataProgramAttributeData">
            <summary>Sets the stub of IPlanElementUtils.ModifyProgramAttributePropertiesForUpdate(ProgramAttributeData pAtt, ProgramAttributeData _pAtt)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.OnProcessIdEventObject">
            <summary>Sets the stub of IPlanElementUtils.OnProcessIdEvent(Object pe)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#ActivatePlanElement(System.String,Phytel.API.AppDomain.NG.DTO.Program)">
            <summary>Sets the stub of IPlanElementUtils.ActivatePlanElement(String p, Program program)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#CloneAction(Phytel.API.AppDomain.NG.DTO.Actions)">
            <summary>Sets the stub of IPlanElementUtils.CloneAction(Actions act)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#CloneModule(Phytel.API.AppDomain.NG.DTO.Module)">
            <summary>Sets the stub of IPlanElementUtils.CloneModule(Module md)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#CloneProgram(Phytel.API.AppDomain.NG.DTO.Program)">
            <summary>Sets the stub of IPlanElementUtils.CloneProgram(Program pr)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#CloneRepeatAction(Phytel.API.AppDomain.NG.DTO.Actions,System.String)">
            <summary>Sets the stub of IPlanElementUtils.CloneRepeatAction(Actions action, String assignedById)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#DisableCompleteButtonForAction(System.Collections.Generic.List{Phytel.API.AppDomain.NG.DTO.Step})">
            <summary>Sets the stub of IPlanElementUtils.DisableCompleteButtonForAction(List`1&lt;Step&gt; list)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#FindElementById``1(System.Collections.Generic.List{``0},System.String)">
            <summary>Sets the stub of IPlanElementUtils.FindElementById(List`1&lt;!!0&gt; list, String id)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#FindSpawnIdInActions(Phytel.API.AppDomain.NG.DTO.Program,System.String,Phytel.API.AppDomain.NG.DTO.Module)">
            <summary>Sets the stub of IPlanElementUtils.FindSpawnIdInActions(Program program, String p, Module m)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#FindSpawnIdInSteps(Phytel.API.AppDomain.NG.DTO.Program,System.String,Phytel.API.AppDomain.NG.DTO.Actions)">
            <summary>Sets the stub of IPlanElementUtils.FindSpawnIdInSteps(Program program, String p, Actions a)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#GetAttributes(Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of IPlanElementUtils.GetAttributes(ProgramAttributeData programAttributeData)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#GetCohortPatientViewRecord(System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IPlanElementUtils.GetCohortPatientViewRecord(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#GetProcessingAction(System.Collections.Generic.List{Phytel.API.AppDomain.NG.DTO.Module},System.String)">
            <summary>Sets the stub of IPlanElementUtils.GetProcessingAction(List`1&lt;Module&gt; list, String actionId)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#HydratePlanElementLists(System.Collections.Generic.List{System.Object},Phytel.API.AppDomain.NG.DTO.PlanElements)">
            <summary>Sets the stub of IPlanElementUtils.HydratePlanElementLists(List`1&lt;Object&gt; processedElements, PlanElements planElems)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#InitializePlanElementSettings(Phytel.API.AppDomain.NG.DTO.PlanElement,Phytel.API.AppDomain.NG.DTO.PlanElement,Phytel.API.AppDomain.NG.DTO.Program)">
            <summary>Sets the stub of IPlanElementUtils.InitializePlanElementSettings(PlanElement pe, PlanElement p, Program program)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#IsActionInitial(Phytel.API.AppDomain.NG.DTO.Program)">
            <summary>Sets the stub of IPlanElementUtils.IsActionInitial(Program p)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#IsProgramCompleted(Phytel.API.AppDomain.NG.DTO.Program,System.String)">
            <summary>Sets the stub of IPlanElementUtils.IsProgramCompleted(Program p, String userId)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#ModifyProgramAttributePropertiesForUpdate(Phytel.API.DataDomain.Program.DTO.ProgramAttributeData,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of IPlanElementUtils.ModifyProgramAttributePropertiesForUpdate(ProgramAttributeData pAtt, ProgramAttributeData _pAtt)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#OnProcessIdEvent(System.Object)">
            <summary>Sets the stub of IPlanElementUtils.OnProcessIdEvent(Object pe)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#ProcessPlanElementChanges(Phytel.API.AppDomain.NG.DTO.PlanElements,Phytel.API.AppDomain.NG.DTO.PlanElement,Phytel.API.AppDomain.NG.DTO.PlanElement,System.String)">
            <summary>Sets the stub of IPlanElementUtils.ProcessPlanElementChanges(PlanElements planElems, PlanElement samplePe, PlanElement fPe, String userId)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#RegisterCohortPatientViewProblemToPatient(System.String,System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IPlanElementUtils.RegisterCohortPatientViewProblemToPatient(String problemId, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#ResponseSpawnAllowed(Phytel.API.AppDomain.NG.DTO.Step,Phytel.API.AppDomain.NG.DTO.Response)">
            <summary>Sets the stub of IPlanElementUtils.ResponseSpawnAllowed(Step s, Response r)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SaveReportingAttributes(Phytel.API.DataDomain.Program.DTO.ProgramAttributeData,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IPlanElementUtils.SaveReportingAttributes(ProgramAttributeData _programAttributes, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetCompletionStatus``1(System.Collections.Generic.List{``0})">
            <summary>Sets the stub of IPlanElementUtils.SetCompletionStatus(List`1&lt;!!0&gt; list)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetElementEnabledState(System.String,Phytel.API.AppDomain.NG.DTO.Program)">
            <summary>Sets the stub of IPlanElementUtils.SetElementEnabledState(String p, Program program)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetEnabledState``1(System.Collections.Generic.List{``0},``0,System.String,System.Boolean)">
            <summary>Sets the stub of IPlanElementUtils.SetEnabledState(List`1&lt;!!0&gt; list, !!0 x, String assignToId, Boolean pEnabled)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetEnabledStatusByPrevious``1(System.Collections.Generic.List{``0},System.String,System.Boolean)">
            <summary>Sets the stub of IPlanElementUtils.SetEnabledStatusByPrevious(List`1&lt;!!0&gt; planElements, String assignToId, Boolean pEnabled)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetInitialActions(System.Object,System.String)">
            <summary>Sets the stub of IPlanElementUtils.SetInitialActions(Object x, String assignToId)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetInitialProperties(System.String,Phytel.API.AppDomain.NG.DTO.IPlanElement,System.Boolean)">
            <summary>Sets the stub of IPlanElementUtils.SetInitialProperties(String assignToId, IPlanElement m, Boolean dependent)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetInitialValues(System.String,Phytel.API.AppDomain.NG.DTO.IPlanElement)">
            <summary>Sets the stub of IPlanElementUtils.SetInitialValues(String assignToId, IPlanElement pe)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetProgramAttributes(Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.AppDomain.NG.DTO.Program,System.String,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of IPlanElementUtils.SetProgramAttributes(SpawnElement r, Program program, String userId, ProgramAttributeData progAttr)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetProgramInformation(Phytel.API.DataDomain.Program.DTO.ProgramAttributeData,Phytel.API.AppDomain.NG.DTO.Program)">
            <summary>Sets the stub of IPlanElementUtils.SetProgramInformation(ProgramAttributeData _programAttributes, Program p)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SetStartDateForProgramAttributes(System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IPlanElementUtils.SetStartDateForProgramAttributes(String programId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#SpawnElementsInList(System.Collections.Generic.List{Phytel.API.AppDomain.NG.DTO.SpawnElement},Phytel.API.AppDomain.NG.DTO.Program,System.String,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of IPlanElementUtils.SpawnElementsInList(List`1&lt;SpawnElement&gt; list, Program program, String userId, ProgramAttributeData progAttr)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.papiadng::Phytel#API#AppDomain#NG#IPlanElementUtils#UpdatePlanElementAttributes(Phytel.API.AppDomain.NG.DTO.Program,Phytel.API.AppDomain.NG.DTO.PlanElement,System.String,Phytel.API.AppDomain.NG.DTO.PlanElements)">
            <summary>Sets the stub of IPlanElementUtils.UpdatePlanElementAttributes(Program pg, PlanElement planElement, String userId, PlanElements planElems)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.ProcessPlanElementChangesPlanElementsPlanElementPlanElementString">
            <summary>Sets the stub of IPlanElementUtils.ProcessPlanElementChanges(PlanElements planElems, PlanElement samplePe, PlanElement fPe, String userId)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.RegisterCohortPatientViewProblemToPatientStringStringIAppDomainRequest">
            <summary>Sets the stub of IPlanElementUtils.RegisterCohortPatientViewProblemToPatient(String problemId, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.ResponseSpawnAllowedStepResponse">
            <summary>Sets the stub of IPlanElementUtils.ResponseSpawnAllowed(Step s, Response r)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SaveReportingAttributesProgramAttributeDataIAppDomainRequest">
            <summary>Sets the stub of IPlanElementUtils.SaveReportingAttributes(ProgramAttributeData _programAttributes, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetCompletionStatusOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Boolean})">
            <summary>Sets stubs of SetCompletionStatus(List`1&lt;!!0&gt; list)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetElementEnabledStateStringProgram">
            <summary>Sets the stub of IPlanElementUtils.SetElementEnabledState(String p, Program program)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetEnabledStateOf1ListOfM0M0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.List{``0},``0,System.String,System.Boolean})">
            <summary>Sets stubs of SetEnabledState(List`1&lt;!!0&gt; list, !!0 x, String assignToId, Boolean pEnabled)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetEnabledStatusByPreviousOf1ListOfM0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.List{``0},System.String,System.Boolean})">
            <summary>Sets stubs of SetEnabledStatusByPrevious(List`1&lt;!!0&gt; planElements, String assignToId, Boolean pEnabled)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetInitialActionsObjectString">
            <summary>Sets the stub of IPlanElementUtils.SetInitialActions(Object x, String assignToId)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetInitialPropertiesStringIPlanElementBoolean">
            <summary>Sets the stub of IPlanElementUtils.SetInitialProperties(String assignToId, IPlanElement m, Boolean dependent)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetInitialValuesStringIPlanElement">
            <summary>Sets the stub of IPlanElementUtils.SetInitialValues(String assignToId, IPlanElement pe)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetProgramAttributesSpawnElementProgramStringProgramAttributeData">
            <summary>Sets the stub of IPlanElementUtils.SetProgramAttributes(SpawnElement r, Program program, String userId, ProgramAttributeData progAttr)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetProgramInformationProgramAttributeDataProgram">
            <summary>Sets the stub of IPlanElementUtils.SetProgramInformation(ProgramAttributeData _programAttributes, Program p)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SetStartDateForProgramAttributesStringIAppDomainRequest">
            <summary>Sets the stub of IPlanElementUtils.SetStartDateForProgramAttributes(String programId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.SpawnElementsInListListOfSpawnElementProgramStringProgramAttributeData">
            <summary>Sets the stub of IPlanElementUtils.SpawnElementsInList(List`1&lt;SpawnElement&gt; list, Program program, String userId, ProgramAttributeData progAttr)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubIPlanElementUtils.UpdatePlanElementAttributesProgramPlanElementStringPlanElements">
            <summary>Sets the stub of IPlanElementUtils.UpdatePlanElementAttributes(Program pg, PlanElement planElement, String userId, PlanElements planElems)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubISecurityManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.ISecurityManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubISecurityManager.#ctor">
            <summary>Initializes a new instance of type StubISecurityManager</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Fakes.StubISecurityManager.IsUserValidatedDoubleStringString">
            <summary>Sets the stub of ISecurityManager.IsUserValidated(Double version, String token, String contractNumber)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubISecurityManager.papiadng::Phytel#API#AppDomain#NG#ISecurityManager#IsUserValidated(System.Double,System.String,System.String)">
            <summary>Sets the stub of ISecurityManager.IsUserValidated(Double version, String token, String contractNumber)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubIUnitOfWork">
            <summary>Stub type of Phytel.API.AppDomain.NG.IUnitOfWork</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubIUnitOfWork.#ctor">
            <summary>Initializes a new instance of type StubIUnitOfWork</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubManagerBase">
            <summary>Stub type of Phytel.API.AppDomain.NG.ManagerBase</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubManagerBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubManagerBase.InitializeStub">
            <summary>Initializes a new instance of type StubManagerBase</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubManagerBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubManagerBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubManagerBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubNGManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.NGManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubNGManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubNGManager.InitializeStub">
            <summary>Initializes a new instance of type StubNGManager</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNGManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNGManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNGManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubNGUnitOfWork">
            <summary>Stub type of Phytel.API.AppDomain.NG.NGUnitOfWork</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubNGUnitOfWork.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubNGUnitOfWork.InitializeStub">
            <summary>Initializes a new instance of type StubNGUnitOfWork</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNGUnitOfWork.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNGUnitOfWork.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNGUnitOfWork.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubNotesManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.NotesManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubNotesManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubNotesManager.InitializeStub">
            <summary>Initializes a new instance of type StubNotesManager</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNotesManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNotesManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubNotesManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientGoalsCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientGoalsCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientGoalsCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientGoalsCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientGoalsCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientGoalsCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientGoalsCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientGoalsCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientNotesCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientNotesCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientNotesCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientNotesCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientNotesCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientNotesCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientNotesCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientNotesCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientObservationsCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientObservationsCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientObservationsCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientObservationsCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientObservationsCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientObservationsCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientObservationsCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientObservationsCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientProgramCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostRemovePatientProgramRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientProgramCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramsCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientProgramsCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramsCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramsCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientProgramsCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramsCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramsCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientProgramsCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientSystemsCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientSystemsCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientSystemsCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientSystemsCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientSystemsCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientSystemsCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientSystemsCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientSystemsCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientToDosCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientToDosCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientToDosCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientToDosCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientToDosCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientToDosCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientToDosCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientToDosCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPatientUsersCommand">
            <summary>Stub type of Phytel.API.AppDomain.NG.PatientUsersCommand</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientUsersCommand.#ctor(Phytel.API.AppDomain.NG.DTO.PostDeletePatientRequest,ServiceStack.Service.IRestClient)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPatientUsersCommand.InitializeStub">
            <summary>Initializes a new instance of type StubPatientUsersCommand</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientUsersCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientUsersCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPatientUsersCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPlanElementUtils">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanElementUtils</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPlanElementUtils.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPlanElementUtils.InitializeStub">
            <summary>Initializes a new instance of type StubPlanElementUtils</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPlanElementUtils.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPlanElementUtils.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPlanElementUtils.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubPlanManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPlanManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubPlanManager.InitializeStub">
            <summary>Initializes a new instance of type StubPlanManager</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPlanManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPlanManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubPlanManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubSchedulingManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.SchedulingManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubSchedulingManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubSchedulingManager.InitializeStub">
            <summary>Initializes a new instance of type StubSchedulingManager</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubSchedulingManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubSchedulingManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubSchedulingManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Fakes.StubSecurityManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.SecurityManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubSecurityManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Fakes.StubSecurityManager.InitializeStub">
            <summary>Initializes a new instance of type StubSecurityManager</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubSecurityManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubSecurityManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Fakes.StubSecurityManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil">
            <summary>Shim type of Phytel.API.AppDomain.NG.Observation.ObservationEndpointUtil</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.#ctor(Phytel.API.AppDomain.NG.Observation.ObservationEndpointUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.Bind(Phytel.API.AppDomain.NG.Observation.IObservationEndpointUtil)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.Constructor">
            <summary>Sets the shim of ObservationEndpointUtil.ObservationEndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.GetAdditionalObservationItemRequestGetAdditionalObservationItemRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetAdditionalObservationItemRequest(GetAdditionalObservationItemRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.GetAllowedObservationStatesGetAllowedStatesRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetAllowedObservationStates(GetAllowedStatesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.GetCurrentPatientObservationsGetCurrentPatientObservationsRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetCurrentPatientObservations(GetCurrentPatientObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.GetHistoricalPatientObservationsIPatientObservationsRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetHistoricalPatientObservations(IPatientObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.GetInitializeProblemGetInitializeProblemRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetInitializeProblem(GetInitializeProblemRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.GetObservationsGetObservationsRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetObservations(GetObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.GetPatientProblemSummaryGetPatientProblemsRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetPatientProblemSummary(GetPatientProblemsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.GetStandardObservationsRequestGetStandardObservationItemsRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetStandardObservationsRequest(GetStandardObservationItemsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.StaticConstructor">
            <summary>Sets the shim of ObservationEndpointUtil.ObservationEndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.UpdatePatientObservationPostUpdateObservationItemsRequestListOfPatientObservationRecordData">
            <summary>Sets the shim of ObservationEndpointUtil.UpdatePatientObservation(PostUpdateObservationItemsRequest request, List`1&lt;PatientObservationRecordData&gt; pord)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationEndpointUtil.AllInstances.GetHistoricalPatientObservationsIPatientObservationsRequest">
            <summary>Sets the shim of ObservationEndpointUtil.GetHistoricalPatientObservations(IPatientObservationsRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager">
            <summary>Shim type of Phytel.API.AppDomain.NG.Observation.ObservationsManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.#ctor(Phytel.API.AppDomain.NG.Observation.ObservationsManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.Bind(Phytel.API.AppDomain.NG.Observation.IObservationsManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.Constructor">
            <summary>Sets the shim of ObservationsManager.ObservationsManager()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.EndpointUtilGet">
            <summary>Sets the shim of ObservationsManager.get_EndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.EndpointUtilSetIObservationEndpointUtil">
            <summary>Sets the shim of ObservationsManager.set_EndpointUtil(IObservationEndpointUtil value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.GetAdditionalObservationsRequestGetAdditionalObservationItemRequest">
            <summary>Sets the shim of ObservationsManager.GetAdditionalObservationsRequest(GetAdditionalObservationItemRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.GetAllowedObservationStatesGetAllowedStatesRequest">
            <summary>Sets the shim of ObservationsManager.GetAllowedObservationStates(GetAllowedStatesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.GetCurrentPatientObservationsGetCurrentPatientObservationsRequest">
            <summary>Sets the shim of ObservationsManager.GetCurrentPatientObservations(GetCurrentPatientObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.GetHistoricalPatientObservationsIPatientObservationsRequest">
            <summary>Sets the shim of ObservationsManager.GetHistoricalPatientObservations(IPatientObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.GetInitializeProblemGetInitializeProblemRequest">
            <summary>Sets the shim of ObservationsManager.GetInitializeProblem(GetInitializeProblemRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.GetObservationsGetObservationsRequest">
            <summary>Sets the shim of ObservationsManager.GetObservations(GetObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.GetPatientProblemsSummaryGetPatientProblemsRequest">
            <summary>Sets the shim of ObservationsManager.GetPatientProblemsSummary(GetPatientProblemsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.GetStandardObservationsRequestGetStandardObservationItemsRequest">
            <summary>Sets the shim of ObservationsManager.GetStandardObservationsRequest(GetStandardObservationItemsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.SavePatientObservationsPostUpdateObservationItemsRequest">
            <summary>Sets the shim of ObservationsManager.SavePatientObservations(PostUpdateObservationItemsRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.EndpointUtilGet">
            <summary>Sets the shim of ObservationsManager.get_EndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.EndpointUtilSetIObservationEndpointUtil">
            <summary>Sets the shim of ObservationsManager.set_EndpointUtil(IObservationEndpointUtil value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.GetAdditionalObservationsRequestGetAdditionalObservationItemRequest">
            <summary>Sets the shim of ObservationsManager.GetAdditionalObservationsRequest(GetAdditionalObservationItemRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.GetAllowedObservationStatesGetAllowedStatesRequest">
            <summary>Sets the shim of ObservationsManager.GetAllowedObservationStates(GetAllowedStatesRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.GetCurrentPatientObservationsGetCurrentPatientObservationsRequest">
            <summary>Sets the shim of ObservationsManager.GetCurrentPatientObservations(GetCurrentPatientObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.GetHistoricalPatientObservationsIPatientObservationsRequest">
            <summary>Sets the shim of ObservationsManager.GetHistoricalPatientObservations(IPatientObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.GetInitializeProblemGetInitializeProblemRequest">
            <summary>Sets the shim of ObservationsManager.GetInitializeProblem(GetInitializeProblemRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.GetObservationsGetObservationsRequest">
            <summary>Sets the shim of ObservationsManager.GetObservations(GetObservationsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.GetPatientProblemsSummaryGetPatientProblemsRequest">
            <summary>Sets the shim of ObservationsManager.GetPatientProblemsSummary(GetPatientProblemsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.GetStandardObservationsRequestGetStandardObservationItemsRequest">
            <summary>Sets the shim of ObservationsManager.GetStandardObservationsRequest(GetStandardObservationItemsRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.ShimObservationsManager.AllInstances.SavePatientObservationsPostUpdateObservationItemsRequest">
            <summary>Sets the shim of ObservationsManager.SavePatientObservations(PostUpdateObservationItemsRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationEndpointUtil">
            <summary>Stub type of Phytel.API.AppDomain.NG.Observation.IObservationEndpointUtil</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationEndpointUtil.#ctor">
            <summary>Initializes a new instance of type StubIObservationEndpointUtil</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationEndpointUtil.GetHistoricalPatientObservationsIPatientObservationsRequest">
            <summary>Sets the stub of IObservationEndpointUtil.GetHistoricalPatientObservations(IPatientObservationsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationEndpointUtil.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationEndpointUtil#GetHistoricalPatientObservations(Phytel.API.AppDomain.NG.DTO.IPatientObservationsRequest)">
            <summary>Sets the stub of IObservationEndpointUtil.GetHistoricalPatientObservations(IPatientObservationsRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.Observation.IObservationsManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.#ctor">
            <summary>Initializes a new instance of type StubIObservationsManager</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.GetAdditionalObservationsRequestGetAdditionalObservationItemRequest">
            <summary>Sets the stub of IObservationsManager.GetAdditionalObservationsRequest(GetAdditionalObservationItemRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.GetAllowedObservationStatesGetAllowedStatesRequest">
            <summary>Sets the stub of IObservationsManager.GetAllowedObservationStates(GetAllowedStatesRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.GetCurrentPatientObservationsGetCurrentPatientObservationsRequest">
            <summary>Sets the stub of IObservationsManager.GetCurrentPatientObservations(GetCurrentPatientObservationsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.GetHistoricalPatientObservationsIPatientObservationsRequest">
            <summary>Sets the stub of IObservationsManager.GetHistoricalPatientObservations(IPatientObservationsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.GetInitializeProblemGetInitializeProblemRequest">
            <summary>Sets the stub of IObservationsManager.GetInitializeProblem(GetInitializeProblemRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.GetObservationsGetObservationsRequest">
            <summary>Sets the stub of IObservationsManager.GetObservations(GetObservationsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.GetPatientProblemsSummaryGetPatientProblemsRequest">
            <summary>Sets the stub of IObservationsManager.GetPatientProblemsSummary(GetPatientProblemsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.GetStandardObservationsRequestGetStandardObservationItemsRequest">
            <summary>Sets the stub of IObservationsManager.GetStandardObservationsRequest(GetStandardObservationItemsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.LogExceptionException">
            <summary>Sets the stub of IObservationsManager.LogException(Exception ex)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#GetAdditionalObservationsRequest(Phytel.API.AppDomain.NG.DTO.GetAdditionalObservationItemRequest)">
            <summary>Sets the stub of IObservationsManager.GetAdditionalObservationsRequest(GetAdditionalObservationItemRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#GetAllowedObservationStates(Phytel.API.AppDomain.NG.DTO.GetAllowedStatesRequest)">
            <summary>Sets the stub of IObservationsManager.GetAllowedObservationStates(GetAllowedStatesRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#GetCurrentPatientObservations(Phytel.API.AppDomain.NG.DTO.GetCurrentPatientObservationsRequest)">
            <summary>Sets the stub of IObservationsManager.GetCurrentPatientObservations(GetCurrentPatientObservationsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#GetHistoricalPatientObservations(Phytel.API.AppDomain.NG.DTO.IPatientObservationsRequest)">
            <summary>Sets the stub of IObservationsManager.GetHistoricalPatientObservations(IPatientObservationsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#GetInitializeProblem(Phytel.API.AppDomain.NG.DTO.GetInitializeProblemRequest)">
            <summary>Sets the stub of IObservationsManager.GetInitializeProblem(GetInitializeProblemRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#GetObservations(Phytel.API.AppDomain.NG.DTO.GetObservationsRequest)">
            <summary>Sets the stub of IObservationsManager.GetObservations(GetObservationsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#GetPatientProblemsSummary(Phytel.API.AppDomain.NG.DTO.GetPatientProblemsRequest)">
            <summary>Sets the stub of IObservationsManager.GetPatientProblemsSummary(GetPatientProblemsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#GetStandardObservationsRequest(Phytel.API.AppDomain.NG.DTO.GetStandardObservationItemsRequest)">
            <summary>Sets the stub of IObservationsManager.GetStandardObservationsRequest(GetStandardObservationItemsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#LogException(System.Exception)">
            <summary>Sets the stub of IObservationsManager.LogException(Exception ex)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.papiadng::Phytel#API#AppDomain#NG#Observation#IObservationsManager#SavePatientObservations(Phytel.API.AppDomain.NG.DTO.PostUpdateObservationItemsRequest)">
            <summary>Sets the stub of IObservationsManager.SavePatientObservations(PostUpdateObservationItemsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Observation.Fakes.StubIObservationsManager.SavePatientObservationsPostUpdateObservationItemsRequest">
            <summary>Sets the stub of IObservationsManager.SavePatientObservations(PostUpdateObservationItemsRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationEndpointUtil">
            <summary>Stub type of Phytel.API.AppDomain.NG.Observation.ObservationEndpointUtil</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationEndpointUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationEndpointUtil.InitializeStub">
            <summary>Initializes a new instance of type StubObservationEndpointUtil</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationEndpointUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationEndpointUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationEndpointUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationsManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.Observation.ObservationsManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationsManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationsManager.InitializeStub">
            <summary>Initializes a new instance of type StubObservationsManager</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationsManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationsManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Observation.Fakes.StubObservationsManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanCOR.ActionPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.#ctor(Phytel.API.AppDomain.NG.PlanCOR.ActionPlanProcessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.Constructor">
            <summary>Sets the shim of ActionPlanProcessor.ActionPlanProcessor()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.PeUtilsGet">
            <summary>Sets the shim of ActionPlanProcessor.get_PeUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.PeUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ActionPlanProcessor.set_PeUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the shim of ActionPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.AllInstances.PeUtilsGet">
            <summary>Sets the shim of ActionPlanProcessor.get_PeUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.AllInstances.PeUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ActionPlanProcessor.set_PeUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimActionPlanProcessor.AllInstances.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the shim of ActionPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanCOR.ModulePlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.#ctor(Phytel.API.AppDomain.NG.PlanCOR.ModulePlanProcessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.Constructor">
            <summary>Sets the shim of ModulePlanProcessor.ModulePlanProcessor()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the shim of ModulePlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimModulePlanProcessor.AllInstances.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the shim of ModulePlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.#ctor(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.ActionGet">
            <summary>Sets the shim of PlanElementEventArg.get_Action()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.ActionSetActions">
            <summary>Sets the shim of PlanElementEventArg.set_Action(Actions value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.Constructor">
            <summary>Sets the shim of PlanElementEventArg.PlanElementEventArg()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.DomainRequestGet">
            <summary>Sets the shim of PlanElementEventArg.get_DomainRequest()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.DomainRequestSetIAppDomainRequest">
            <summary>Sets the shim of PlanElementEventArg.set_DomainRequest(IAppDomainRequest value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.PatientIdGet">
            <summary>Sets the shim of PlanElementEventArg.get_PatientId()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.PatientIdSetString">
            <summary>Sets the shim of PlanElementEventArg.set_PatientId(String value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.PlanElementGet">
            <summary>Sets the shim of PlanElementEventArg.get_PlanElement()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.PlanElementSetIPlanElement">
            <summary>Sets the shim of PlanElementEventArg.set_PlanElement(IPlanElement value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.ProgramGet">
            <summary>Sets the shim of PlanElementEventArg.get_Program()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.ProgramSetProgram">
            <summary>Sets the shim of PlanElementEventArg.set_Program(Program value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.UserIdGet">
            <summary>Sets the shim of PlanElementEventArg.get_UserId()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.UserIdSetString">
            <summary>Sets the shim of PlanElementEventArg.set_UserId(String value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.ActionGet">
            <summary>Sets the shim of PlanElementEventArg.get_Action()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.ActionSetActions">
            <summary>Sets the shim of PlanElementEventArg.set_Action(Actions value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.DomainRequestGet">
            <summary>Sets the shim of PlanElementEventArg.get_DomainRequest()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.DomainRequestSetIAppDomainRequest">
            <summary>Sets the shim of PlanElementEventArg.set_DomainRequest(IAppDomainRequest value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.PatientIdGet">
            <summary>Sets the shim of PlanElementEventArg.get_PatientId()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.PatientIdSetString">
            <summary>Sets the shim of PlanElementEventArg.set_PatientId(String value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.PlanElementGet">
            <summary>Sets the shim of PlanElementEventArg.get_PlanElement()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.PlanElementSetIPlanElement">
            <summary>Sets the shim of PlanElementEventArg.set_PlanElement(IPlanElement value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.ProgramGet">
            <summary>Sets the shim of PlanElementEventArg.get_Program()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.ProgramSetProgram">
            <summary>Sets the shim of PlanElementEventArg.set_Program(Program value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.UserIdGet">
            <summary>Sets the shim of PlanElementEventArg.get_UserId()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanElementEventArg.AllInstances.UserIdSetString">
            <summary>Sets the shim of PlanElementEventArg.set_UserId(String value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanCOR.PlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.#ctor(Phytel.API.AppDomain.NG.PlanCOR.PlanProcessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.Constructor">
            <summary>Sets the shim of PlanProcessor.PlanProcessor()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.HandlePlanElementActionsPlanElementEventArgStringSpawnElement">
            <summary>Sets the shim of PlanProcessor.HandlePlanElementActions(PlanElementEventArg e, String userId, SpawnElement rse)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.HandlePlanElementActivationPlanElementEventArgSpawnElement">
            <summary>Sets the shim of PlanProcessor.HandlePlanElementActivation(PlanElementEventArg e, SpawnElement rse)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.OnPlanElementPlanElementEventArg">
            <summary>Sets the shim of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.OnProcessIdEventObject">
            <summary>Sets the shim of PlanProcessor.OnProcessIdEvent(Object pe)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.OnSpawnElementEventString">
            <summary>Sets the shim of PlanProcessor.OnSpawnElementEvent(String type)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.PEUtilsGet">
            <summary>Sets the shim of PlanProcessor.get_PEUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.PEUtilsSetIPlanElementUtils">
            <summary>Sets the shim of PlanProcessor.set_PEUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.ProcessWorkflowIPlanElementProgramStringStringActionsIAppDomainRequest">
            <summary>Sets the shim of PlanProcessor.ProcessWorkflow(IPlanElement planElem, Program program, String userId, String patientId, Actions action, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.ProcessedElementEventAddProcessedElementEventHandler">
            <summary>Sets the shim of PlanProcessor.add_ProcessedElementEvent(ProcessedElementEventHandler value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.ProcessedElementEventRemoveProcessedElementEventHandler">
            <summary>Sets the shim of PlanProcessor.remove_ProcessedElementEvent(ProcessedElementEventHandler value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.SpawnEventAddSpawnEventHandler">
            <summary>Sets the shim of PlanProcessor.add_SpawnEvent(SpawnEventHandler value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.SpawnEventRemoveSpawnEventHandler">
            <summary>Sets the shim of PlanProcessor.remove_SpawnEvent(SpawnEventHandler value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.SpawnStrategyGet">
            <summary>Sets the shim of PlanProcessor.get_SpawnStrategy()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.SpawnStrategySetSpawnElementStrategy">
            <summary>Sets the shim of PlanProcessor.set_SpawnStrategy(SpawnElementStrategy value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.SuccessorGet">
            <summary>Sets the shim of PlanProcessor.get_Successor()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.SuccessorSetPlanProcessor">
            <summary>Sets the shim of PlanProcessor.set_Successor(PlanProcessor value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.HandlePlanElementActionsPlanElementEventArgStringSpawnElement">
            <summary>Sets the shim of PlanProcessor.HandlePlanElementActions(PlanElementEventArg e, String userId, SpawnElement rse)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.HandlePlanElementActivationPlanElementEventArgSpawnElement">
            <summary>Sets the shim of PlanProcessor.HandlePlanElementActivation(PlanElementEventArg e, SpawnElement rse)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.OnPlanElementPlanElementEventArg">
            <summary>Sets the shim of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.OnProcessIdEventObject">
            <summary>Sets the shim of PlanProcessor.OnProcessIdEvent(Object pe)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.OnSpawnElementEventString">
            <summary>Sets the shim of PlanProcessor.OnSpawnElementEvent(String type)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.PEUtilsGet">
            <summary>Sets the shim of PlanProcessor.get_PEUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.PEUtilsSetIPlanElementUtils">
            <summary>Sets the shim of PlanProcessor.set_PEUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.ProcessWorkflowIPlanElementProgramStringStringActionsIAppDomainRequest">
            <summary>Sets the shim of PlanProcessor.ProcessWorkflow(IPlanElement planElem, Program program, String userId, String patientId, Actions action, IAppDomainRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.ProcessedElementEventAddProcessedElementEventHandler">
            <summary>Sets the shim of PlanProcessor.add_ProcessedElementEvent(ProcessedElementEventHandler value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.ProcessedElementEventRemoveProcessedElementEventHandler">
            <summary>Sets the shim of PlanProcessor.remove_ProcessedElementEvent(ProcessedElementEventHandler value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.SpawnEventAddSpawnEventHandler">
            <summary>Sets the shim of PlanProcessor.add_SpawnEvent(SpawnEventHandler value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.SpawnEventRemoveSpawnEventHandler">
            <summary>Sets the shim of PlanProcessor.remove_SpawnEvent(SpawnEventHandler value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.SuccessorGet">
            <summary>Sets the shim of PlanProcessor.get_Successor()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimPlanProcessor.AllInstances.SuccessorSetPlanProcessor">
            <summary>Sets the shim of PlanProcessor.set_Successor(PlanProcessor value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanCOR.ProcessElementEventArgs</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.#ctor(Phytel.API.AppDomain.NG.PlanCOR.ProcessElementEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.Constructor">
            <summary>Sets the shim of ProcessElementEventArgs.ProcessElementEventArgs()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.PlanElementGet">
            <summary>Sets the shim of ProcessElementEventArgs.get_PlanElement()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.PlanElementSetObject">
            <summary>Sets the shim of ProcessElementEventArgs.set_PlanElement(Object value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.AllInstances.PlanElementGet">
            <summary>Sets the shim of ProcessElementEventArgs.get_PlanElement()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProcessElementEventArgs.AllInstances.PlanElementSetObject">
            <summary>Sets the shim of ProcessElementEventArgs.set_PlanElement(Object value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanCOR.ProgramPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.#ctor(Phytel.API.AppDomain.NG.PlanCOR.ProgramPlanProcessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.Constructor">
            <summary>Sets the shim of ProgramPlanProcessor.ProgramPlanProcessor()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the shim of ProgramPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimProgramPlanProcessor.AllInstances.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the shim of ProgramPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanCOR.SpawnEventArgs</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.#ctor(Phytel.API.AppDomain.NG.PlanCOR.SpawnEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.Constructor">
            <summary>Sets the shim of SpawnEventArgs.SpawnEventArgs()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.NameGet">
            <summary>Sets the shim of SpawnEventArgs.get_Name()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.NameSetString">
            <summary>Sets the shim of SpawnEventArgs.set_Name(String value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.AllInstances.NameGet">
            <summary>Sets the shim of SpawnEventArgs.get_Name()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimSpawnEventArgs.AllInstances.NameSetString">
            <summary>Sets the shim of SpawnEventArgs.set_Name(String value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanCOR.StepPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.#ctor(Phytel.API.AppDomain.NG.PlanCOR.StepPlanProcessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.Constructor">
            <summary>Sets the shim of StepPlanProcessor.StepPlanProcessor()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.HandleResponseSpawnElementsStepResponsePlanElementEventArgString">
            <summary>Sets the shim of StepPlanProcessor.HandleResponseSpawnElements(Step s, Response r, PlanElementEventArg e, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the shim of StepPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.SetCompletedStepResponsesPlanElementEventArgStep">
            <summary>Sets the shim of StepPlanProcessor.SetCompletedStepResponses(PlanElementEventArg e, Step s)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor._PlanElementHandlerb__1Response">
            <summary>Sets the shim of StepPlanProcessor.&lt;PlanElementHandler&gt;b__1(Response r)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.AllInstances.HandleResponseSpawnElementsStepResponsePlanElementEventArgString">
            <summary>Sets the shim of StepPlanProcessor.HandleResponseSpawnElements(Step s, Response r, PlanElementEventArg e, String userId)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.AllInstances.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the shim of StepPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.ShimStepPlanProcessor.AllInstances.SetCompletedStepResponsesPlanElementEventArgStep">
            <summary>Sets the shim of StepPlanProcessor.SetCompletedStepResponses(PlanElementEventArg e, Step s)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanCOR.ActionPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.InitializeStub">
            <summary>Initializes a new instance of type StubActionPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.OnPlanElement(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.OnPlanElementPlanElementEventArg">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.PlanElementHandler(System.Object,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of ActionPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the stub of ActionPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubActionPlanProcessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanCOR.ModulePlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.InitializeStub">
            <summary>Initializes a new instance of type StubModulePlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.OnPlanElement(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.OnPlanElementPlanElementEventArg">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.PlanElementHandler(System.Object,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of ModulePlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the stub of ModulePlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubModulePlanProcessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanElementEventArg">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanElementEventArg.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanElementEventArg.InitializeStub">
            <summary>Initializes a new instance of type StubPlanElementEventArg</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanElementEventArg.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanElementEventArg.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanElementEventArg.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanCOR.PlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.InitializeStub">
            <summary>Initializes a new instance of type StubPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.OnPlanElement(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.OnPlanElementPlanElementEventArg">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.PlanElementHandler(System.Object,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of PlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the stub of PlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubPlanProcessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProcessElementEventArgs">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanCOR.ProcessElementEventArgs</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProcessElementEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProcessElementEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubProcessElementEventArgs</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProcessElementEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProcessElementEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProcessElementEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanCOR.ProgramPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.InitializeStub">
            <summary>Initializes a new instance of type StubProgramPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.OnPlanElement(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.OnPlanElementPlanElementEventArg">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.PlanElementHandler(System.Object,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of ProgramPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the stub of ProgramPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubProgramPlanProcessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubSpawnEventArgs">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanCOR.SpawnEventArgs</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubSpawnEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubSpawnEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubSpawnEventArgs</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubSpawnEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubSpawnEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubSpawnEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanCOR.StepPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.InitializeStub">
            <summary>Initializes a new instance of type StubStepPlanProcessor</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.OnPlanElement(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.OnPlanElementPlanElementEventArg">
            <summary>Sets the stub of PlanProcessor.OnPlanElement(PlanElementEventArg e)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.PlanElementHandler(System.Object,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg)">
            <summary>Sets the stub of StepPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.PlanElementHandlerObjectPlanElementEventArg">
            <summary>Sets the stub of StepPlanProcessor.PlanElementHandler(Object sender, PlanElementEventArg e)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanCOR.Fakes.StubStepPlanProcessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanElementStrategy.SetModulePropertiesForRepeat</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.#ctor(Phytel.API.AppDomain.NG.PlanElementStrategy.SetModulePropertiesForRepeat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.Bind(Phytel.API.AppDomain.NG.PlanElementStrategy.IElementAction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.ConstructorModule">
            <summary>Sets the shim of SetModulePropertiesForRepeat.SetModulePropertiesForRepeat(Module module)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.Execute">
            <summary>Sets the shim of SetModulePropertiesForRepeat.Execute()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSetModulePropertiesForRepeat.AllInstances.Execute">
            <summary>Sets the shim of SetModulePropertiesForRepeat.Execute()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanElementStrategy.SpawnElementStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.#ctor(Phytel.API.AppDomain.NG.PlanElementStrategy.SpawnElementStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.Bind(Phytel.API.AppDomain.NG.PlanElementStrategy.IPlanElementStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.ConstructorISpawn">
            <summary>Sets the shim of SpawnElementStrategy.SpawnElementStrategy(ISpawn spawn)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.Evoke">
            <summary>Sets the shim of SpawnElementStrategy.Evoke()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimSpawnElementStrategy.AllInstances.Evoke">
            <summary>Sets the shim of SpawnElementStrategy.Evoke()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy">
            <summary>Shim type of Phytel.API.AppDomain.NG.PlanElementStrategy.StatePlanElementStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.#ctor(Phytel.API.AppDomain.NG.PlanElementStrategy.StatePlanElementStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.Bind(Phytel.API.AppDomain.NG.PlanElementStrategy.IPlanElementStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.ConstructorIElementAction">
            <summary>Sets the shim of StatePlanElementStrategy.StatePlanElementStrategy(IElementAction action)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.Evoke">
            <summary>Sets the shim of StatePlanElementStrategy.Evoke()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.ShimStatePlanElementStrategy.AllInstances.Evoke">
            <summary>Sets the shim of StatePlanElementStrategy.Evoke()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubIElementAction">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanElementStrategy.IElementAction</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubIElementAction.#ctor">
            <summary>Initializes a new instance of type StubIElementAction</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubIElementAction.Execute">
            <summary>Sets the stub of IElementAction.Execute()</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubIElementAction.papiadng::Phytel#API#AppDomain#NG#PlanElementStrategy#IElementAction#Execute">
            <summary>Sets the stub of IElementAction.Execute()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubIPlanElementStrategy">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanElementStrategy.IPlanElementStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubIPlanElementStrategy.#ctor">
            <summary>Initializes a new instance of type StubIPlanElementStrategy</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubIPlanElementStrategy.Evoke">
            <summary>Sets the stub of IPlanElementStrategy.Evoke()</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubIPlanElementStrategy.papiadng::Phytel#API#AppDomain#NG#PlanElementStrategy#IPlanElementStrategy#Evoke">
            <summary>Sets the stub of IPlanElementStrategy.Evoke()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSetModulePropertiesForRepeat">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanElementStrategy.SetModulePropertiesForRepeat</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSetModulePropertiesForRepeat.#ctor(Phytel.API.AppDomain.NG.DTO.Module)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSetModulePropertiesForRepeat.InitializeStub">
            <summary>Initializes a new instance of type StubSetModulePropertiesForRepeat</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSetModulePropertiesForRepeat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSetModulePropertiesForRepeat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSetModulePropertiesForRepeat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSpawnElementStrategy">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanElementStrategy.SpawnElementStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSpawnElementStrategy.#ctor(Phytel.API.AppDomain.NG.ElementActivation.ISpawn)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSpawnElementStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubSpawnElementStrategy</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSpawnElementStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSpawnElementStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubSpawnElementStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubStatePlanElementStrategy">
            <summary>Stub type of Phytel.API.AppDomain.NG.PlanElementStrategy.StatePlanElementStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubStatePlanElementStrategy.#ctor(Phytel.API.AppDomain.NG.PlanElementStrategy.IElementAction)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubStatePlanElementStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubStatePlanElementStrategy</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubStatePlanElementStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubStatePlanElementStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.PlanElementStrategy.Fakes.StubStatePlanElementStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ActionActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.ActionActivationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.Bind(Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationRule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.Constructor">
            <summary>Sets the shim of ActionActivationRule.ActionActivationRule()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.ElementTypeGet">
            <summary>Sets the shim of ActionActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ActionActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.PlanUtilsGet">
            <summary>Sets the shim of ActionActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ActionActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ActionActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.AllInstances.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ActionActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.AllInstances.PlanUtilsGet">
            <summary>Sets the shim of ActionActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimActionActivationRule.AllInstances.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ActionActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ElementActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.ElementActivationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule.Constructor">
            <summary>Sets the shim of ElementActivationRule.ElementActivationRule()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule.HandlePlanElementActivationIPlanElementUtilsPlanElementEventArgSpawnElement">
            <summary>Sets the shim of ElementActivationRule.HandlePlanElementActivation(IPlanElementUtils planUtils, PlanElementEventArg e, SpawnElement rse)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationRule.AllInstances.HandlePlanElementActivationIPlanElementUtilsPlanElementEventArgSpawnElement">
            <summary>Sets the shim of ElementActivationRule.HandlePlanElementActivation(IPlanElementUtils planUtils, PlanElementEventArg e, SpawnElement rse)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ElementActivationStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.ElementActivationStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.Bind(Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.Constructor">
            <summary>Sets the shim of ElementActivationStrategy.ElementActivationStrategy()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.RunPlanElementEventArgSpawnElementStringProgramAttributeData">
            <summary>Sets the shim of ElementActivationStrategy.Run(PlanElementEventArg e, SpawnElement rse, String userId, ProgramAttributeData pad)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimElementActivationStrategy.AllInstances.RunPlanElementEventArgSpawnElementStringProgramAttributeData">
            <summary>Sets the shim of ElementActivationStrategy.Run(PlanElementEventArg e, SpawnElement rse, String userId, ProgramAttributeData pad)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ModuleActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.ModuleActivationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.Bind(Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationRule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.Constructor">
            <summary>Sets the shim of ModuleActivationRule.ModuleActivationRule()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.ElementTypeGet">
            <summary>Sets the shim of ModuleActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ModuleActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.PlanUtilsGet">
            <summary>Sets the shim of ModuleActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ModuleActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ModuleActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.AllInstances.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ModuleActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.AllInstances.PlanUtilsGet">
            <summary>Sets the shim of ModuleActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimModuleActivationRule.AllInstances.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ModuleActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ProblemActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.ProblemActivationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.Bind(Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationRule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.Constructor">
            <summary>Sets the shim of ProblemActivationRule.ProblemActivationRule()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.ElementTypeGet">
            <summary>Sets the shim of ProblemActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.EndpointUtilGet">
            <summary>Sets the shim of ProblemActivationRule.get_EndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.EndpointUtilSetIEndpointUtils">
            <summary>Sets the shim of ProblemActivationRule.set_EndpointUtil(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ProblemActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.HandlePatientProblemRegistrationPlanElementEventArgStringSpawnElement">
            <summary>Sets the shim of ProblemActivationRule.HandlePatientProblemRegistration(PlanElementEventArg e, String userId, SpawnElement rse)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.PlanUtilsGet">
            <summary>Sets the shim of ProblemActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ProblemActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ProblemActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.AllInstances.EndpointUtilGet">
            <summary>Sets the shim of ProblemActivationRule.get_EndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.AllInstances.EndpointUtilSetIEndpointUtils">
            <summary>Sets the shim of ProblemActivationRule.set_EndpointUtil(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.AllInstances.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ProblemActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.AllInstances.HandlePatientProblemRegistrationPlanElementEventArgStringSpawnElement">
            <summary>Sets the shim of ProblemActivationRule.HandlePatientProblemRegistration(PlanElementEventArg e, String userId, SpawnElement rse)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.AllInstances.PlanUtilsGet">
            <summary>Sets the shim of ProblemActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProblemActivationRule.AllInstances.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ProblemActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ProgramActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.ProgramActivationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.Bind(Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationRule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.Constructor">
            <summary>Sets the shim of ProgramActivationRule.ProgramActivationRule()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.ElementTypeGet">
            <summary>Sets the shim of ProgramActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ProgramActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.PlanUtilsGet">
            <summary>Sets the shim of ProgramActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ProgramActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ProgramActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.AllInstances.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ProgramActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.AllInstances.PlanUtilsGet">
            <summary>Sets the shim of ProgramActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramActivationRule.AllInstances.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ProgramActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ProgramAttributeActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.ProgramAttributeActivationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.Bind(Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationRule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.Constructor">
            <summary>Sets the shim of ProgramAttributeActivationRule.ProgramAttributeActivationRule()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.ElementTypeGet">
            <summary>Sets the shim of ProgramAttributeActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ProgramAttributeActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.PlanUtilsGet">
            <summary>Sets the shim of ProgramAttributeActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ProgramAttributeActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ProgramAttributeActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.AllInstances.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ProgramAttributeActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.AllInstances.PlanUtilsGet">
            <summary>Sets the shim of ProgramAttributeActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimProgramAttributeActivationRule.AllInstances.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ProgramAttributeActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.StepActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.StepActivationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.Bind(Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationRule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.Constructor">
            <summary>Sets the shim of StepActivationRule.StepActivationRule()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.ElementTypeGet">
            <summary>Sets the shim of StepActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of StepActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.PlanUtilsGet">
            <summary>Sets the shim of StepActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of StepActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.AllInstances.ElementTypeGet">
            <summary>Sets the shim of StepActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.AllInstances.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of StepActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.AllInstances.PlanUtilsGet">
            <summary>Sets the shim of StepActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimStepActivationRule.AllInstances.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of StepActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule">
            <summary>Shim type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ToDoActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.#ctor(Phytel.API.AppDomain.NG.Programs.ElementActivation.ToDoActivationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.Bind(Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationRule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.Constructor">
            <summary>Sets the shim of ToDoActivationRule.ToDoActivationRule()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.ElementTypeGet">
            <summary>Sets the shim of ToDoActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.EndpointUtilGet">
            <summary>Sets the shim of ToDoActivationRule.get_EndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.EndpointUtilSetIEndpointUtils">
            <summary>Sets the shim of ToDoActivationRule.set_EndpointUtil(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ToDoActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.HandleDueDateNullableOfInt32">
            <summary>Sets the shim of ToDoActivationRule.HandleDueDate(Nullable`1&lt;Int32&gt; days)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.PlanUtilsGet">
            <summary>Sets the shim of ToDoActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ToDoActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ToDoActivationRule.get_ElementType()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.AllInstances.EndpointUtilGet">
            <summary>Sets the shim of ToDoActivationRule.get_EndpointUtil()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.AllInstances.EndpointUtilSetIEndpointUtils">
            <summary>Sets the shim of ToDoActivationRule.set_EndpointUtil(IEndpointUtils value)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.AllInstances.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the shim of ToDoActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.AllInstances.HandleDueDateNullableOfInt32">
            <summary>Sets the shim of ToDoActivationRule.HandleDueDate(Nullable`1&lt;Int32&gt; days)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.AllInstances.PlanUtilsGet">
            <summary>Sets the shim of ToDoActivationRule.get_PlanUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.ShimToDoActivationRule.AllInstances.PlanUtilsSetIPlanElementUtils">
            <summary>Sets the shim of ToDoActivationRule.set_PlanUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubActionActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ActionActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubActionActivationRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubActionActivationRule.Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of ActionActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubActionActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of ActionActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubActionActivationRule.InitializeStub">
            <summary>Initializes a new instance of type StubActionActivationRule</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubActionActivationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubActionActivationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubActionActivationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ElementActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationRule.Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of ElementActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of ElementActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationRule.InitializeStub">
            <summary>Initializes a new instance of type StubElementActivationRule</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationStrategy">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ElementActivationStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubElementActivationStrategy</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubElementActivationStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationRule.#ctor">
            <summary>Initializes a new instance of type StubIElementActivationRule</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationRule.ElementTypeGet">
            <summary>Sets the stub of IElementActivationRule.get_ElementType()</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of IElementActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationRule.papiadng::Phytel#API#AppDomain#NG#Programs#ElementActivation#IElementActivationRule#Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of IElementActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationRule.papiadng::Phytel#API#AppDomain#NG#Programs#ElementActivation#IElementActivationRule#ElementType">
            <summary>Sets the stub of IElementActivationRule.get_ElementType()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationStrategy">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.IElementActivationStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationStrategy.#ctor">
            <summary>Initializes a new instance of type StubIElementActivationStrategy</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationStrategy.papiadng::Phytel#API#AppDomain#NG#Programs#ElementActivation#IElementActivationStrategy#Run(Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,System.String,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of IElementActivationStrategy.Run(PlanElementEventArg e, SpawnElement rse, String userId, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubIElementActivationStrategy.RunPlanElementEventArgSpawnElementStringProgramAttributeData">
            <summary>Sets the stub of IElementActivationStrategy.Run(PlanElementEventArg e, SpawnElement rse, String userId, ProgramAttributeData pad)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubModuleActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ModuleActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubModuleActivationRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubModuleActivationRule.Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of ModuleActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubModuleActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of ModuleActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubModuleActivationRule.InitializeStub">
            <summary>Initializes a new instance of type StubModuleActivationRule</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubModuleActivationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubModuleActivationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubModuleActivationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProblemActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ProblemActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProblemActivationRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProblemActivationRule.Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of ProblemActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProblemActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of ProblemActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProblemActivationRule.InitializeStub">
            <summary>Initializes a new instance of type StubProblemActivationRule</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProblemActivationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProblemActivationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProblemActivationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ProgramActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramActivationRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramActivationRule.Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of ProgramActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of ProgramActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramActivationRule.InitializeStub">
            <summary>Initializes a new instance of type StubProgramActivationRule</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramActivationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramActivationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramActivationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramAttributeActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ProgramAttributeActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramAttributeActivationRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramAttributeActivationRule.Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of ProgramAttributeActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramAttributeActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of ProgramAttributeActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramAttributeActivationRule.InitializeStub">
            <summary>Initializes a new instance of type StubProgramAttributeActivationRule</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramAttributeActivationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramAttributeActivationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubProgramAttributeActivationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubStepActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.StepActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubStepActivationRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubStepActivationRule.Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of StepActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubStepActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of StepActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement se, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubStepActivationRule.InitializeStub">
            <summary>Initializes a new instance of type StubStepActivationRule</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubStepActivationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubStepActivationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubStepActivationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubToDoActivationRule">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.ElementActivation.ToDoActivationRule</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubToDoActivationRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubToDoActivationRule.Execute(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,Phytel.API.AppDomain.NG.DTO.SpawnElement,Phytel.API.DataDomain.Program.DTO.ProgramAttributeData)">
            <summary>Sets the stub of ToDoActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubToDoActivationRule.ExecuteStringPlanElementEventArgSpawnElementProgramAttributeData">
            <summary>Sets the stub of ToDoActivationRule.Execute(String userId, PlanElementEventArg arg, SpawnElement pe, ProgramAttributeData pad)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubToDoActivationRule.InitializeStub">
            <summary>Initializes a new instance of type StubToDoActivationRule</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubToDoActivationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubToDoActivationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.ElementActivation.Fakes.StubToDoActivationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.IEndpointUtils</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.#ctor">
            <summary>Initializes a new instance of type StubIEndpointUtils</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.AssignPatientToProgramPostPatientToProgramsRequestString">
            <summary>Sets the stub of IEndpointUtils.AssignPatientToProgram(PostPatientToProgramsRequest request, String careManagerId)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.GetPatientProblemStringPlanElementEventArgString">
            <summary>Sets the stub of IEndpointUtils.GetPatientProblem(String probId, PlanElementEventArg e, String userId)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.GetPrimaryCareManagerForPatientPostPatientToProgramsRequest">
            <summary>Sets the stub of IEndpointUtils.GetPrimaryCareManagerForPatient(PostPatientToProgramsRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.GetProgramAttributesStringIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.GetProgramAttributes(String planElemId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.GetResponsesForStepStringIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.GetResponsesForStep(String stepId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.GetScheduleToDoByIdStringStringIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.GetScheduleToDoById(String p, String userId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.InsertNewProgramAttributeProgramAttributeDataIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.InsertNewProgramAttribute(ProgramAttributeData pa, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#AssignPatientToProgram(Phytel.API.AppDomain.NG.DTO.PostPatientToProgramsRequest,System.String)">
            <summary>Sets the stub of IEndpointUtils.AssignPatientToProgram(PostPatientToProgramsRequest request, String careManagerId)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#GetPatientProblem(System.String,Phytel.API.AppDomain.NG.PlanCOR.PlanElementEventArg,System.String)">
            <summary>Sets the stub of IEndpointUtils.GetPatientProblem(String probId, PlanElementEventArg e, String userId)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#GetPrimaryCareManagerForPatient(Phytel.API.AppDomain.NG.DTO.PostPatientToProgramsRequest)">
            <summary>Sets the stub of IEndpointUtils.GetPrimaryCareManagerForPatient(PostPatientToProgramsRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#GetProgramAttributes(System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.GetProgramAttributes(String planElemId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#GetResponsesForStep(System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.GetResponsesForStep(String stepId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#GetScheduleToDoById(System.String,System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.GetScheduleToDoById(String p, String userId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#InsertNewProgramAttribute(Phytel.API.DataDomain.Program.DTO.ProgramAttributeData,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.InsertNewProgramAttribute(ProgramAttributeData pa, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#PutInsertToDo(Phytel.API.DataDomain.Scheduling.DTO.ToDoData,System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.PutInsertToDo(ToDoData todo, String p, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#PutNewPatientProblem(System.String,System.String,System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.PutNewPatientProblem(String patientId, String userId, String elementId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#RequestCohortPatientViewData(System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.RequestCohortPatientViewData(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#RequestPatientProgramDetail(Phytel.API.AppDomain.NG.DTO.IProcessActionRequest)">
            <summary>Sets the stub of IEndpointUtils.RequestPatientProgramDetail(IProcessActionRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#RequestPatientProgramDetailsSummary(Phytel.API.AppDomain.NG.DTO.GetPatientProgramDetailsSummaryRequest)">
            <summary>Sets the stub of IEndpointUtils.RequestPatientProgramDetailsSummary(GetPatientProgramDetailsSummaryRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#SaveAction(Phytel.API.AppDomain.NG.DTO.IProcessActionRequest,System.String,Phytel.API.AppDomain.NG.DTO.Program,System.Boolean)">
            <summary>Sets the stub of IEndpointUtils.SaveAction(IProcessActionRequest request, String actionId, Program p, Boolean repeat)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#SaveProgramAttributeChanges(Phytel.API.AppDomain.NG.DTO.PostProgramAttributesChangeRequest,Phytel.API.DataDomain.Program.DTO.ProgramDetail)">
            <summary>Sets the stub of IEndpointUtils.SaveProgramAttributeChanges(PostProgramAttributesChangeRequest request, ProgramDetail pg)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#SaveResponses(Phytel.API.AppDomain.NG.DTO.Actions,Phytel.API.AppDomain.NG.DTO.IProcessActionRequest,System.Boolean)">
            <summary>Sets the stub of IEndpointUtils.SaveResponses(Actions action, IProcessActionRequest request, Boolean repeat)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#UpdateCohortPatientViewProblem(Phytel.API.DataDomain.Patient.DTO.CohortPatientViewData,System.String,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.UpdateCohortPatientViewProblem(CohortPatientViewData cpvd, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#UpdatePatientProblem(System.String,System.String,System.String,Phytel.API.AppDomain.NG.DTO.PatientObservation,System.Boolean,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.UpdatePatientProblem(String patientId, String userId, String elementId, PatientObservation pod, Boolean _active, IAppDomainRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.papiadng::Phytel#API#AppDomain#NG#Programs#IEndpointUtils#UpdateProgramAttributes(Phytel.API.DataDomain.Program.DTO.ProgramAttributeData,Phytel.API.Interface.IAppDomainRequest)">
            <summary>Sets the stub of IEndpointUtils.UpdateProgramAttributes(ProgramAttributeData pAtt, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.PutInsertToDoToDoDataStringIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.PutInsertToDo(ToDoData todo, String p, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.PutNewPatientProblemStringStringStringIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.PutNewPatientProblem(String patientId, String userId, String elementId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.RequestCohortPatientViewDataStringIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.RequestCohortPatientViewData(String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.RequestPatientProgramDetailIProcessActionRequest">
            <summary>Sets the stub of IEndpointUtils.RequestPatientProgramDetail(IProcessActionRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.RequestPatientProgramDetailsSummaryGetPatientProgramDetailsSummaryRequest">
            <summary>Sets the stub of IEndpointUtils.RequestPatientProgramDetailsSummary(GetPatientProgramDetailsSummaryRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.SaveActionIProcessActionRequestStringProgramBoolean">
            <summary>Sets the stub of IEndpointUtils.SaveAction(IProcessActionRequest request, String actionId, Program p, Boolean repeat)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.SaveProgramAttributeChangesPostProgramAttributesChangeRequestProgramDetail">
            <summary>Sets the stub of IEndpointUtils.SaveProgramAttributeChanges(PostProgramAttributesChangeRequest request, ProgramDetail pg)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.SaveResponsesActionsIProcessActionRequestBoolean">
            <summary>Sets the stub of IEndpointUtils.SaveResponses(Actions action, IProcessActionRequest request, Boolean repeat)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.UpdateCohortPatientViewProblemCohortPatientViewDataStringIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.UpdateCohortPatientViewProblem(CohortPatientViewData cpvd, String patientId, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.UpdatePatientProblemStringStringStringPatientObservationBooleanIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.UpdatePatientProblem(String patientId, String userId, String elementId, PatientObservation pod, Boolean _active, IAppDomainRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIEndpointUtils.UpdateProgramAttributesProgramAttributeDataIAppDomainRequest">
            <summary>Sets the stub of IEndpointUtils.UpdateProgramAttributes(ProgramAttributeData pAtt, IAppDomainRequest request)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager">
            <summary>Stub type of Phytel.API.AppDomain.NG.Programs.IPlanManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.#ctor">
            <summary>Initializes a new instance of type StubIPlanManager</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.AttachBackingFieldToPEUtils">
            <summary>Attaches delegates to emulate StubIPlanManager.PEUtils as a property with a backing field.</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.AttachBackingFieldToProcessedElements">
            <summary>Attaches delegates to emulate StubIPlanManager.ProcessedElements as a property with a backing field.</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.AttachBackingFieldToRelatedChanges">
            <summary>Attaches delegates to emulate StubIPlanManager.RelatedChanges as a property with a backing field.</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.PEUtilsGet">
            <summary>Sets the stub of IPlanManager.get_PEUtils()</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.PEUtilsSetIPlanElementUtils">
            <summary>Sets the stub of IPlanManager.set_PEUtils(IPlanElementUtils value)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.papiadng::Phytel#API#AppDomain#NG#Programs#IPlanManager#ProcessActionResults(Phytel.API.AppDomain.NG.DTO.PostProcessActionRequest)">
            <summary>Sets the stub of IPlanManager.ProcessActionResults(PostProcessActionRequest request)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.papiadng::Phytel#API#AppDomain#NG#Programs#IPlanManager#SaveActionResults(Phytel.API.AppDomain.NG.DTO.PostSaveActionRequest)">
            <summary>Sets the stub of IPlanManager.SaveActionResults(PostSaveActionRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.ProcessActionResultsPostProcessActionRequest">
            <summary>Sets the stub of IPlanManager.ProcessActionResults(PostProcessActionRequest request)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.ProcessedElementsGet">
            <summary>Sets the stub of IPlanManager.get_ProcessedElements()</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.ProcessedElementsSetListOfObject">
            <summary>Sets the stub of IPlanManager.set_ProcessedElements(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.RelatedChangesGet">
            <summary>Sets the stub of IPlanManager.get_RelatedChanges()</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.RelatedChangesSetListOfString">
            <summary>Sets the stub of IPlanManager.set_RelatedChanges(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.SaveActionResultsPostSaveActionRequest">
            <summary>Sets the stub of IPlanManager.SaveActionResults(PostSaveActionRequest request)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.papiadng::Phytel#API#AppDomain#NG#Programs#IPlanManager#PEUtils">
            <summary>Sets the stub of IPlanManager.get_PEUtils()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.papiadng::Phytel#API#AppDomain#NG#Programs#IPlanManager#ProcessedElements">
            <summary>Sets the stub of IPlanManager.get_ProcessedElements()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Programs.Fakes.StubIPlanManager.papiadng::Phytel#API#AppDomain#NG#Programs#IPlanManager#RelatedChanges">
            <summary>Sets the stub of IPlanManager.get_RelatedChanges()</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.AndSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.AndSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.ConstructorSpecificationOfT0SpecificationOfT0">
            <summary>Sets the shim of AndSpecification`1.AndSpecification`1(Specification`1&lt;!0&gt; leftSide, Specification`1&lt;!0&gt; rightSide)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of AndSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimAndSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of AndSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.Completed`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.#ctor(Phytel.API.AppDomain.NG.Specifications.Completed{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.Constructor">
            <summary>Sets the shim of Completed`1.Completed`1()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.IsSatisfiedByT0">
            <summary>Sets the shim of Completed`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompleted`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of Completed`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompositeSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.CompositeSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompositeSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.CompositeSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompositeSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompositeSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompositeSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompositeSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompositeSpecification`1.ConstructorSpecificationOfT0SpecificationOfT0">
            <summary>Sets the shim of CompositeSpecification`1.CompositeSpecification`1(Specification`1&lt;!0&gt; leftSide, Specification`1&lt;!0&gt; rightSide)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimCompositeSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.IsActionInitialSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.IsActionInitialSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.Constructor">
            <summary>Sets the shim of IsActionInitialSpecification`1.IsActionInitialSpecification`1()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of IsActionInitialSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsActionInitialSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of IsActionInitialSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.IsInitialActionSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.IsInitialActionSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.Constructor">
            <summary>Sets the shim of IsInitialActionSpecification`1.IsInitialActionSpecification`1()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of IsInitialActionSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsInitialActionSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of IsInitialActionSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.IsModifyAllowedSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.IsModifyAllowedSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.Constructor">
            <summary>Sets the shim of IsModifyAllowedSpecification`1.IsModifyAllowedSpecification`1()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of IsModifyAllowedSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModifyAllowedSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of IsModifyAllowedSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.IsModuleCompletedSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.IsModuleCompletedSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.Constructor">
            <summary>Sets the shim of IsModuleCompletedSpecification`1.IsModuleCompletedSpecification`1()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of IsModuleCompletedSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimIsModuleCompletedSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of IsModuleCompletedSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.NotSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.NotSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.ConstructorSpecificationOfT0SpecificationOfT0">
            <summary>Sets the shim of NotSpecification`1.NotSpecification`1(Specification`1&lt;!0&gt; leftSide, Specification`1&lt;!0&gt; rightSide)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of NotSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimNotSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of NotSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.OrSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.OrSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.ConstructorSpecificationOfT0SpecificationOfT0">
            <summary>Sets the shim of OrSpecification`1.OrSpecification`1(Specification`1&lt;!0&gt; leftSide, Specification`1&lt;!0&gt; rightSide)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of OrSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimOrSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of OrSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.RemoveSelectedResponseSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.RemoveSelectedResponseSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.Constructor">
            <summary>Sets the shim of RemoveSelectedResponseSpecification`1.RemoveSelectedResponseSpecification`1()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of RemoveSelectedResponseSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimRemoveSelectedResponseSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of RemoveSelectedResponseSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.ResponseSpawnAllowed`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.#ctor(Phytel.API.AppDomain.NG.Specifications.ResponseSpawnAllowed{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.Constructor">
            <summary>Sets the shim of ResponseSpawnAllowed`1.ResponseSpawnAllowed`1()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.IsSatisfiedByT0">
            <summary>Sets the shim of ResponseSpawnAllowed`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimResponseSpawnAllowed`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of ResponseSpawnAllowed`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1">
            <summary>Shim type of Phytel.API.AppDomain.NG.Specifications.Specification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.Specification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.Bind(Phytel.API.AppDomain.NG.Specifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.AndSpecificationOfT0">
            <summary>Sets the shim of Specification`1.And(Specification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.Constructor">
            <summary>Sets the shim of Specification`1.Specification`1()</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.NotSpecificationOfT0">
            <summary>Sets the shim of Specification`1.Not(Specification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.OrSpecificationOfT0">
            <summary>Sets the shim of Specification`1.Or(Specification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.AllInstances.AndSpecificationOfT0">
            <summary>Sets the shim of Specification`1.And(Specification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.AllInstances.NotSpecificationOfT0">
            <summary>Sets the shim of Specification`1.Not(Specification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.ShimSpecification`1.AllInstances.OrSpecificationOfT0">
            <summary>Sets the shim of Specification`1.Or(Specification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubAndSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.AndSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubAndSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.Specification{`0},Phytel.API.AppDomain.NG.Specifications.Specification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubAndSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubAndSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubAndSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of AndSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubAndSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of AndSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubAndSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubAndSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubAndSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompleted`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.Completed`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompleted`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompleted`1.InitializeStub">
            <summary>Initializes a new instance of type StubCompleted</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompleted`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Completed`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompleted`1.IsSatisfiedByT0">
            <summary>Sets the stub of Completed`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompleted`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompleted`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompleted`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompositeSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.CompositeSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompositeSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.Specification{`0},Phytel.API.AppDomain.NG.Specifications.Specification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompositeSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubCompositeSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompositeSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompositeSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompositeSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompositeSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubCompositeSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubISpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.ISpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubISpecification`1.#ctor">
            <summary>Initializes a new instance of type StubISpecification</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubISpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of ISpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubISpecification`1.papiadng::Phytel#API#AppDomain#NG#Specifications#ISpecification{T}#IsSatisfiedBy(`0)">
            <summary>Sets the stub of ISpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsActionInitialSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.IsActionInitialSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsActionInitialSpecification`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsActionInitialSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubIsActionInitialSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsActionInitialSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of IsActionInitialSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsActionInitialSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of IsActionInitialSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsActionInitialSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsActionInitialSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsActionInitialSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsInitialActionSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.IsInitialActionSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsInitialActionSpecification`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsInitialActionSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubIsInitialActionSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsInitialActionSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of IsInitialActionSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsInitialActionSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of IsInitialActionSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsInitialActionSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsInitialActionSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsInitialActionSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModifyAllowedSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.IsModifyAllowedSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModifyAllowedSpecification`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModifyAllowedSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubIsModifyAllowedSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModifyAllowedSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of IsModifyAllowedSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModifyAllowedSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of IsModifyAllowedSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModifyAllowedSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModifyAllowedSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModifyAllowedSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModuleCompletedSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.IsModuleCompletedSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModuleCompletedSpecification`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModuleCompletedSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubIsModuleCompletedSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModuleCompletedSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of IsModuleCompletedSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModuleCompletedSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of IsModuleCompletedSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModuleCompletedSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModuleCompletedSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubIsModuleCompletedSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubNotSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.NotSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubNotSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.Specification{`0},Phytel.API.AppDomain.NG.Specifications.Specification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubNotSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubNotSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubNotSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of NotSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubNotSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of NotSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubNotSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubNotSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubNotSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubOrSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.OrSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubOrSpecification`1.#ctor(Phytel.API.AppDomain.NG.Specifications.Specification{`0},Phytel.API.AppDomain.NG.Specifications.Specification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubOrSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubOrSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubOrSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of OrSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubOrSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of OrSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubOrSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubOrSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubOrSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubRemoveSelectedResponseSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.RemoveSelectedResponseSpecification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubRemoveSelectedResponseSpecification`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubRemoveSelectedResponseSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubRemoveSelectedResponseSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubRemoveSelectedResponseSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of RemoveSelectedResponseSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubRemoveSelectedResponseSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of RemoveSelectedResponseSpecification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubRemoveSelectedResponseSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubRemoveSelectedResponseSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubRemoveSelectedResponseSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubResponseSpawnAllowed`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.ResponseSpawnAllowed`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubResponseSpawnAllowed`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubResponseSpawnAllowed`1.InitializeStub">
            <summary>Initializes a new instance of type StubResponseSpawnAllowed</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubResponseSpawnAllowed`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of ResponseSpawnAllowed`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubResponseSpawnAllowed`1.IsSatisfiedByT0">
            <summary>Sets the stub of ResponseSpawnAllowed`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubResponseSpawnAllowed`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubResponseSpawnAllowed`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubResponseSpawnAllowed`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phytel.API.AppDomain.NG.Specifications.Fakes.StubSpecification`1">
            <summary>Stub type of Phytel.API.AppDomain.NG.Specifications.Specification`1</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubSpecification`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubSpecification</summary>
        </member>
        <member name="M:Phytel.API.AppDomain.NG.Specifications.Fakes.StubSpecification`1.IsSatisfiedBy(`0)">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="F:Phytel.API.AppDomain.NG.Specifications.Fakes.StubSpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of Specification`1.IsSatisfiedBy(!0 obj)</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phytel.API.AppDomain.NG.Specifications.Fakes.StubSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>

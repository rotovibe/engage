@mixin divider($remove-first-child: true, $style: solid, $padding: $grid-padding, $margin: $grid-padding) {
  border-top: 1px $style $grey;
  margin-top: $margin;
  padding-top: $padding;
  @if $remove-first-child {
    &:first-child {
      border-top: none;
      margin-top: 0;
    }
  }
}

@mixin drop-shadow {
  @include box-shadow(3px 3px 5px rgba(black, 0.3));
}

@mixin height($h) {
  line-height: $h;
  min-height: $h;
}

@mixin icon($url) {
  background-image: image-url(#{$url});
}

@mixin overflow-vertical {
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

@mixin placeholder-color($color) {
  ::-webkit-input-placeholder {
    color: $color !important;
  }
  :-moz-placeholder {
    color: $color !important;
  }
  ::-moz-placeholder {
    color: $color !important;
  }
  :-ms-input-placeholder {
    color: $color !important;
  }
}

@mixin toggle-setup($disabled: false) {
  @if $disabled == disabled {
    cursor: default;
    opacity: 0.15;
  }
  @else {
    cursor: pointer;
    opacity: 0.35;
    &:hover {
      opacity: 1;
    }
  }
}

@mixin triangle($direction, $size, $color: $grey) {
  width: 0;
  height: 0;
  @if $direction is left {
    border-top: $size + px solid transparent;
    border-right: 1.5 * $size + px solid $color;
    border-bottom: $size + px solid transparent;
  }
  @else if $direction is right {
    border-top: $size + px solid transparent;
    border-left: 1.5 * $size + px solid $color;
    border-bottom: $size + px solid transparent;
  }
  @else if $direction is top {
    border-left: $size + px solid transparent;
    border-bottom: 1.5 * $size + px solid $color;
    border-right: $size + px solid transparent;
  }
  @else if $direction is bottom {
    border-left: $size + px solid transparent;
    border-top: 1.5 * $size + px solid $color;
    border-right: $size + px solid transparent;
  }
}

@mixin size($size) {
  @if length($size) == 1 {
    @if $size == auto {
      width: $size;
      height: $size;
    }
    @else if unitless($size) {
      width: $size + px;
      height: $size + px;
    }
    @else if not unitless($size) {
      width: $size;
      height: $size;
    }
  }
  // Width x Height
  @if length($size) == 2 {
    $width: nth($size, 1);
    $height: nth($size, 2);
    @if $width == auto {
      width: $width;
    }
    @else if not unitless($width) {
      width: $width;
    }
    @else if unitless($width) {
      width: $width + px;
    }
    @if $height == auto {
      height: $height;
    }
    @else if not unitless($height) {
      height: $height;
    }
    @else if unitless($height) {
      height: $height + px;
    }
  }
}

@mixin input-selectors {
  input[type="email"],
  input[type="number"],
  input[type="password"],
  input[type="search"],
  input[type="tel"],
  input[type="text"],
  input[type="url"],
  textarea {
    @content;
  }
}

//screen size mixin
@mixin screensize($point) {  
    $screensize-xtra-large: 2048px;
    $screensize-large-screen: 1824px;
    $screensize-bigscreen: 1824px;
    $screensize-bigscreen2: 1500px;
    $screensize-bigscreen1: 1280px;
    $screensize-ipad-max: 1024px;
    $screensize-ipad-min: 768px;
    $screensize-iphone5-max: 568px;
    $screensize-iphone-max: 480px;
    $screensize-iphone-min: 320px;
    // **
    // --------------------
    // Options of screen breakpoints:
    // 1. large-screen - from 1824px
    // 2. big-screen - to 1824px
    // 3. ipad-mini - to 758px
    // 4. ipad - from 758px to 1024px
    // 5. ipad-portrait - to 758px
    // 6. iphone5-landscape - to 568px
    // 7. iphone - from 320px to 480px
    // 8. iphone-portrait - to 320px
    // --------------------
    // **
    @if $point == large-screen {
      @media // Very Large Screens
      only screen and (min-width: #{$screensize-large-screen}),
      only screen and (min-device-width: #{$screensize-large-screen}) {
        @content;
      }
    }
    @if $point == big-screen {
      @media // Desktops and Laptops
      only screen and (max-width: #{$screensize-bigscreen}) and (min-width: #{$screensize-bigscreen1}),
      only screen and (max-device-width: #{$screensize-bigscreen}) and (min-device-width: #{$screensize-bigscreen1}) {
        @content;
      }
    }
    @if $point == big-screen2 {
      @media // Desktops and Laptops
      only screen and (max-width: #{$screensize-bigscreen2}) and (min-width: #{$screensize-bigscreen1}),
      only screen and (max-device-width: #{$screensize-bigscreen2}) and (min-device-width: #{$screensize-bigscreen1}) {
        @content;
      }
    }
    @if $point == big-screen1 {
      @media // Desktops and Laptops
      only screen and (max-width: #{$screensize-bigscreen1}) and (min-width: #{$screensize-ipad-max}),
      only screen and (max-device-width: #{$screensize-bigscreen1}) and (min-device-width: #{$screensize-ipad-max}) {
        @content;
      }
    }
    @if $point == ipad-mini {
      @media // iPad-Mini (portrait and landscape)
      handheld,
      only screen and (min-device-pixel-ratio: 1),
      only screen and (max-width: #{$screensize-ipad-min}){
        @content;
      }
    }
    @if $point == ipad {
      @media // iPad (portrait and landscape)
      handheld,
      only screen and (max-width: #{$screensize-ipad-max})
                  and (min-width: #{$screensize-ipad-min}) { 
        @content;
      }
    }
    @if $point == ipad-portrait {
      @media // iPad (portrait)
      handheld,
      only screen and (min-device-pixel-ratio: 2),
      only screen and (max-width: #{$screensize-ipad-min})
                  and (orientation: portrait) {
        @content;
      }
    }
    @if $point == iphone5-landscape {
      @media // iPhone 5 (landscape)
      handheld,
      only screen and (min-device-pixel-ratio: 2),
      only screen and (max-width: #{$screensize-iphone5-max}) {
        @content;
      }
    }
    @if $point == iphone {
      @media // iPhone (portrait and landscape)
      handheld,
      only screen and (min-device-pixel-ratio: 2),
      only screen and (max-width: #{$screensize-iphone-max})
                  and (min-width: #{$screensize-iphone-min}) {
        @content;
      }
    }
    @if $point == iphone-portrait {
      @media // iPhone (portrait)
      handheld,
      only screen and (min-device-pixel-ratio: 2),
      only screen and (max-width: #{$screensize-iphone-min}) {
        @content;
      }
    }
}

@mixin modalstrech($width, $height){
    margin-left: - $width / 2;        
    width: $width; 
    height: $height;
    .body {
        height: $height - 94px;
        > .row.modal-tab{
            max-height: $height - 94px;
        }
    }    
}

@mixin sizemodal($factor){    
    @include screensize(large-screen){  
        @include modalstrech(1824px * $factor, 1000px * $factor);                 
    }
    @include screensize(big-screen){
        @include modalstrech(1824px * $factor, 1000px * $factor);
    }
     @include screensize(big-screen2){
        @include modalstrech(1500px * $factor, 800px * $factor);
    }
    @include screensize(big-screen1){
        @include modalstrech(1024px * $factor, 800px * $factor);
    }
    @include screensize(ipad){
        @include modalstrech(1050px * $factor, 800px * $factor);
         margin-left: -335px;
    }
    @include screensize(ipad-portrait){
        @include modalstrech(768px * $factor, 640px * $factor);
    }
    @include screensize(ipad-mini){
        @include modalstrech(768px * $factor, 640px * $factor);
    }    
    @include screensize(iphone5-landscape){
        @include modalstrech(568px * $factor, 480px * $factor);
    }
    @include screensize(iphone){
        @include modalstrech(480px * $factor, 320px * $factor);
    }
    @include screensize(iphone-portrait){
        @include modalstrech(320px * $factor, 280px * $factor);
    }            
}
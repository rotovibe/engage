{"version":3,"sources":["../config-wrap-start-default.js","../Scripts/durandal/system.js","../Scripts/durandal/viewEngine.js","../Scripts/durandal/viewLocator.js","../Scripts/durandal/binder.js","../Scripts/durandal/activator.js","../Scripts/durandal/composition.js","../Scripts/durandal/events.js","../Scripts/durandal/app.js","main.js","config.app.js","config.routes.js","config.services.js","services/validatorfactory.js","services/formatter.js","services/customvalidators.js","models/base.js","services/session.js","services/dateHelper.js","models/allergies.js","models/contacts.js","models/controls.js","models/goals.js","models/lookups.js","models/medications.js","models/notes.js","models/observations.js","services/entityserializer.js","services/local.collections.js","services/entityfinder.js","services/dataservices/programsservice.js","models/programs.js","models/users.js","services/analytics.js","services/bindings.js","services/branding.js","services/jsonResultsAdapter.js","services/dataservices/getentityservice.js","services/dataservices/usersservice.js","services/dataservices/calendarservice.js","services/usercontext.js","services/dataservices/contactservice.js","services/dataservices/lookupsservice.js","services/dataservices/goalsservice.js","services/dataservices/notesservice.js","services/dataservices/observationsservice.js","services/dataservices/caremembersservice.js","services/dataservices/patientsservice.js","services/dataservices/allergiesservice.js","services/dataservices/medicationsservice.js","services/datacontext.js","services/dataservices/stepservice.js","services/logger.js","../Scripts/durandal/plugins/history.js","../Scripts/durandal/plugins/router.js","services/navigation.js","services/report.context.js","viewmodels/shell/shell.js","viewmodels/admin/concierge/index.js","viewmodels/admin/index.js","viewmodels/admin/reports/index.js","viewmodels/admin/reports/dynamic.report.js","viewmodels/admin/reports/entity.template.js","viewmodels/admin/reports/matching.actions.js","viewmodels/admin/reports/matching.patients.js","viewmodels/admin/reports/matching.programs.js","viewmodels/admin/reports/query.builder.js","viewmodels/admin/widgets/delete.individuals.list.js","viewmodels/authenticate.js","viewmodels/home/contacts/contact.details.js","viewmodels/home/contacts/index.js","viewmodels/home/index.js","viewmodels/home/myhome/myhome.js","viewmodels/home/population/index.js","viewmodels/home/todos/index.js","viewmodels/insight/index.js","viewmodels/insight/reports/index.js","viewmodels/insight/widgets/active.report.js","viewmodels/insight/widgets/reports.list.js","viewmodels/patients/index.js","viewmodels/patients/data/index.js","viewmodels/patients/careplan/index.js","viewmodels/patients/goals/index.js","viewmodels/patients/history/index.js","viewmodels/patients/medications/index.js","viewmodels/patients/notes/index.js","viewmodels/patients/overview/index.js","viewmodels/patients/sections/additional.observations.js","viewmodels/patients/sections/additional.problem.observations.js","viewmodels/patients/sections/allergies.edit.js","viewmodels/patients/sections/allergies.search.js","viewmodels/patients/sections/allergy.details.js","viewmodels/patients/sections/background.js","viewmodels/patients/sections/barrier.details.js","viewmodels/patients/sections/basic.observations.js","viewmodels/patients/team/index.js","viewmodels/patients/sections/care.team.js","viewmodels/patients/sections/clinicalBackground.js","viewmodels/patients/sections/communications.js","viewmodels/patients/sections/data.list.js","viewmodels/patients/sections/demographics.js","viewmodels/patients/sections/dropdown.w.addnew.js","viewmodels/patients/sections/focus.areas.js","viewmodels/patients/sections/goal.details.js","viewmodels/patients/sections/goals.js","viewmodels/patients/sections/intervention.details.js","viewmodels/patients/sections/medication.details.js","viewmodels/patients/sections/medication.edit.js","viewmodels/patients/sections/medications.js","viewmodels/patients/sections/medications.search.js","viewmodels/patients/sections/notes.js","viewmodels/patients/sections/problems.list.js","viewmodels/patients/sections/programs.js","viewmodels/patients/sections/recent.individuals.js","viewmodels/patients/sections/status.js","viewmodels/patients/sections/system.ids.js","viewmodels/patients/sections/task.details.js","viewmodels/patients/tabs/action.details.js","viewmodels/patients/tabs/action.steps.js","viewmodels/patients/tabs/module.details.js","viewmodels/patients/tabs/module.objectives.js","viewmodels/patients/tabs/program.details.js","viewmodels/patients/tabs/program.goals.js","viewmodels/patients/tabs/program.objectives.js","viewmodels/patients/team/careMember.details.js","viewmodels/patients/widgets/action.details.js","viewmodels/patients/widgets/allergies.js","viewmodels/patients/widgets/careMembers.js","viewmodels/patients/widgets/medication.groups.js","viewmodels/patients/widgets/medications.js","viewmodels/patients/widgets/module.details.js","viewmodels/patients/widgets/program.details.js","viewmodels/populations/index.js","viewmodels/programdesigner/designer/index.js","viewmodels/programdesigner/index.js","viewmodels/programdesigner/widgets/modulewidget.js","viewmodels/programdesigner/widgets/programwidget.js","viewmodels/shell/quickadd/assign.js","viewmodels/shell/quickadd/notes.js","viewmodels/shell/quickadd/quickaddpopover.js","viewmodels/shell/quickadd/todo.js","viewmodels/shell/sidebar.js","viewmodels/templates/action.edit.js","viewmodels/templates/allergies.panel.js","viewmodels/templates/allergy.edit.js","viewmodels/templates/barrier.edit.js","viewmodels/templates/care.team.edit.js","viewmodels/templates/careMember.edit.js","viewmodels/templates/careMembers.panel.js","viewmodels/templates/clinical.dataentry.js","viewmodels/templates/contact.edit.js","viewmodels/templates/datetimepicker.js","viewmodels/templates/event.details.js","viewmodels/templates/focusproblems.js","viewmodels/templates/goal.edit.js","viewmodels/templates/intervention.edit.js","viewmodels/templates/intervention.panel.js","viewmodels/templates/medication.groups.panel.js","viewmodels/templates/medications.panel.js","viewmodels/templates/module.edit.js","viewmodels/templates/note.general.edit.js","viewmodels/templates/note.touchpoint.edit.js","viewmodels/templates/note.utilization.edit.js","viewmodels/templates/observation.add.js","viewmodels/templates/observation.bloodpressure.add.js","viewmodels/templates/patient.status.js","viewmodels/templates/patient.systems.js","viewmodels/templates/program.edit.js","viewmodels/templates/program.remove.js","viewmodels/templates/task.edit.js","viewmodels/templates/task.panel.js","viewmodels/templates/todo.edit.js","viewmodels/templates/todo.panel.js","viewmodels/venn/patient.venn.js","widgets/chsnmultiple/viewmodel.js","widgets/chsnsingle/viewmodel.js","widgets/chsnsingledark/viewmodel.js","widgets/multiselect/viewmodel.js","widgets/singleselect/viewmodel.js","../Scripts/durandal/plugins/dialog.js","../Scripts/durandal/plugins/http.js","../Scripts/durandal/plugins/observable.js","../Scripts/durandal/plugins/serializer.js","../Scripts/durandal/plugins/widget.js","../Scripts/durandal/transitions/entrance.js","../Scripts/text.js","views/admin/concierge/index.html!text","views/admin/index.html!text","views/admin/reports/dynamic.report.html!text","views/admin/reports/entity.template.html!text","views/admin/reports/index.html!text","views/admin/reports/matching.actions.html!text","views/admin/reports/matching.patients.html!text","views/admin/reports/matching.programs.html!text","views/admin/reports/query.builder.html!text","views/admin/widgets/delete.individuals.list.html!text","views/authenticate.html!text","views/columns/flexcolumn.html!text","views/columns/fullcolumn.html!text","views/home/contacts/contact.details.html!text","views/home/contacts/index.html!text","views/home/index.html!text","views/home/myhome/myhome.html!text","views/home/population/index.html!text","views/home/todos/index.html!text","views/insight/index.html!text","views/insight/reports/index.html!text","views/insight/widgets/active.report.html!text","views/insight/widgets/reports.list.html!text","views/patients/careplan/index.html!text","views/patients/data/index.html!text","views/patients/goals/index.html!text","views/patients/history/index.html!text","views/patients/index.html!text","views/patients/medications/index.html!text","views/patients/notes/index.html!text","views/patients/overview/index.html!text","views/patients/sections/additional.observations.html!text","views/patients/sections/additional.problem.observations.html!text","views/patients/sections/allergies.edit.html!text","views/patients/sections/allergies.search.html!text","views/patients/sections/allergy.details.html!text","views/patients/sections/background.html!text","views/patients/sections/barrier.details.html!text","views/patients/sections/basic.observations.html!text","views/patients/sections/care.team.html!text","views/patients/sections/clinicalBackground.html!text","views/patients/sections/communications.html!text","views/patients/sections/data.list.html!text","views/patients/sections/demographics.html!text","views/patients/sections/dropdown.w.addnew.html!text","views/patients/sections/focus.areas.html!text","views/patients/sections/goal.details.html!text","views/patients/sections/goals.html!text","views/patients/sections/intervention.details.html!text","views/patients/sections/medication.details.html!text","views/patients/sections/medication.edit.html!text","views/patients/sections/medications.html!text","views/patients/sections/medications.search.html!text","views/patients/sections/notes.html!text","views/patients/sections/problems.list.html!text","views/patients/sections/programs.html!text","views/patients/sections/recent.individuals.html!text","views/patients/sections/status.html!text","views/patients/sections/system.ids.html!text","views/patients/sections/task.details.html!text","views/patients/tabs/action.details.html!text","views/patients/tabs/action.steps.html!text","views/patients/tabs/module.details.html!text","views/patients/tabs/module.objectives.html!text","views/patients/tabs/program.details.html!text","views/patients/tabs/program.goals.html!text","views/patients/tabs/program.objectives.html!text","views/patients/team/careMember.details.html!text","views/patients/team/index.html!text","views/patients/widgets/action.details.html!text","views/patients/widgets/allergies.html!text","views/patients/widgets/careMembers.html!text","views/patients/widgets/careplan.html!text","views/patients/widgets/data.summary.html!text","views/patients/widgets/goals.html!text","views/patients/widgets/history.detail.html!text","views/patients/widgets/history.list.html!text","views/patients/widgets/medication.groups.html!text","views/patients/widgets/medications.html!text","views/patients/widgets/module.details.html!text","views/patients/widgets/patients.details.html!text","views/patients/widgets/patients.list.flyout.html!text","views/patients/widgets/program.details.html!text","views/patients/widgets/todos.html!text","views/populations/index.html!text","views/programdesigner/customattributes/datepicker.edit.html!text","views/programdesigner/customattributes/datepicker.html!text","views/programdesigner/customattributes/datetimepicker.edit.html!text","views/programdesigner/customattributes/datetimepicker.html!text","views/programdesigner/customattributes/input.edit.html!text","views/programdesigner/customattributes/input.html!text","views/programdesigner/customattributes/multiselect.edit.html!text","views/programdesigner/customattributes/multiselect.html!text","views/programdesigner/customattributes/singleselect.edit.html!text","views/programdesigner/customattributes/singleselect.html!text","views/programdesigner/designer/index.html!text","views/programdesigner/index.html!text","views/programdesigner/questiontypes/button.html!text","views/programdesigner/questiontypes/checkbox.html!text","views/programdesigner/questiontypes/datepicker.html!text","views/programdesigner/questiontypes/datetimepicker.html!text","views/programdesigner/questiontypes/label.html!text","views/programdesigner/questiontypes/modal.html!text","views/programdesigner/questiontypes/questioneditor.html!text","views/programdesigner/questiontypes/radio.html!text","views/programdesigner/questiontypes/singleselect.html!text","views/programdesigner/questiontypes/textarea.html!text","views/programdesigner/questiontypes/textbox.html!text","views/programdesigner/questiontypes/timepicker.html!text","views/programdesigner/widgets/modulewidget.html!text","views/programdesigner/widgets/programwidget.html!text","views/shell/alerttypes/error.html!text","views/shell/alerttypes/info.html!text","views/shell/alerttypes/warning.html!text","views/shell/banner.html!text","views/shell/footer.html!text","views/shell/quickadd/assign.html!text","views/shell/quickadd/communication.html!text","views/shell/quickadd/dataentry.html!text","views/shell/quickadd/general.note.html!text","views/shell/quickadd/notes.html!text","views/shell/quickadd/quickaddpopover.html!text","views/shell/quickadd/todo.html!text","views/shell/quickadd/touchpoint.note.html!text","views/shell/quickadd/utilization.note.html!text","views/shell/shell.html!text","views/shell/sidebar.html!text","views/shell/subnav.html!text","views/templates/action.edit.html!text","views/templates/address.edit.html!text","views/templates/address.html!text","views/templates/allergies.panel.html!text","views/templates/allergy.edit.html!text","views/templates/allergy.expand.html!text","views/templates/allergy.name.html!text","views/templates/allergy.severity.html!text","views/templates/allergy.startdate.html!text","views/templates/allergy.status.html!text","views/templates/allergy.type.html!text","views/templates/background.html!text","views/templates/barrier.edit.html!text","views/templates/care.team.edit.html!text","views/templates/careMember.edit.html!text","views/templates/careMembers.panel.html!text","views/templates/clinical.dataentry.html!text","views/templates/clinicalBackground.html!text","views/templates/contact.edit.html!text","views/templates/contact.tabs.html!text","views/templates/contactSearchResults.panel.html!text","views/templates/contactcard.html!text","views/templates/datetimepicker.html!text","views/templates/email.edit.html!text","views/templates/email.html!text","views/templates/event.details.html!text","views/templates/focusproblem.edit.html!text","views/templates/focusproblems.html!text","views/templates/forcephone.html!text","views/templates/goal.edit.html!text","views/templates/intervention.assignedto.html!text","views/templates/intervention.category.html!text","views/templates/intervention.closeddate.html!text","views/templates/intervention.description.html!text","views/templates/intervention.duedate.html!text","views/templates/intervention.edit.html!text","views/templates/intervention.goal.html!text","views/templates/intervention.panel.html!text","views/templates/intervention.patient.html!text","views/templates/intervention.startdate.html!text","views/templates/intervention.status.html!text","views/templates/language.html!text","views/templates/medication.expand.html!text","views/templates/medication.groups.panel.html!text","views/templates/medication.name.html!text","views/templates/medication.reason.html!text","views/templates/medication.sortdate.html!text","views/templates/medication.startdate.html!text","views/templates/medication.status.html!text","views/templates/medication.strength.html!text","views/templates/medication.type.html!text","views/templates/medications.panel.html!text","views/templates/module.edit.html!text","views/templates/note.general.details.html!text","views/templates/note.general.edit.html!text","views/templates/note.touchpoint.details.html!text","views/templates/note.touchpoint.edit.html!text","views/templates/note.utilization.details.html!text","views/templates/note.utilization.edit.html!text","views/templates/observation.add.html!text","views/templates/observation.bloodpressure.add.html!text","views/templates/patient.delete.html!text","views/templates/patient.html!text","views/templates/patient.status.html!text","views/templates/patient.systems.html!text","views/templates/phone.edit.html!text","views/templates/phone.html!text","views/templates/program.edit.html!text","views/templates/program.remove.html!text","views/templates/system.id.edit.html!text","views/templates/system.ids.list.html!text","views/templates/task.closeddate.html!text","views/templates/task.description.html!text","views/templates/task.edit.html!text","views/templates/task.goal.html!text","views/templates/task.panel.html!text","views/templates/task.startdate.html!text","views/templates/task.status.html!text","views/templates/task.statusdate.html!text","views/templates/task.targetdate.html!text","views/templates/task.targetvalue.html!text","views/templates/todo.assignedto.html!text","views/templates/todo.category.html!text","views/templates/todo.closedon.html!text","views/templates/todo.duedate.html!text","views/templates/todo.edit.html!text","views/templates/todo.panel.html!text","views/templates/todo.patient.html!text","views/templates/todo.priority.html!text","views/templates/todo.status.html!text","views/templates/todo.title.html!text","views/templates/todo.updatedon.html!text","views/templates/validation.errors.html!text","views/widgets/controls.html!text","views/widgets/controls.two.html!text","widgets/chsnmultiple/view.html!text","widgets/chsnsingle/view.html!text","widgets/chsnsingledark/view.html!text","widgets/multiselect/view.html!text","widgets/singleselect/view.html!text","../../../../../../../../../module-insertRequire.js","../config-wrap-end-default.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","onResourceLoad","deps","id","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","uri","callback","cjsModule","ret","usingExports","load","alt","setTimeout","cfg","_defined","amd","jQuery","$","makeIsFunction","system","toString","isDebugging","nativeKeys","keys","treatAsIE8","nativeIsArray","Array","isArray","String","trim","this","replace","Function","bind","console","log","forEach","method","ex","on","mid","setModuleId","context","depArray","noop","window","opera","ignore","logError","error","err","exception","innerError","version","getModuleId","__moduleId__","resolveObject","isFunction","debug","enable","assert","condition","message","defer","action","Deferred","guid","d","Date","getTime","c","r","Math","random","floor","acquire","modules","first","arrayRequest","dfd","resolve","reject","promise","extend","rest","source","wait","milliseconds","TypeError","key","isElement","nodeType","isObject","isBoolean","isPromise","then","isChecks","parseMarkup","parseHTML","html","get","cache","viewExtension","viewPlugin","viewPluginParameters","isViewUrl","url","convertViewUrlToViewId","convertViewIdToRequirePath","viewId","processMarkup","markup","allElements","ensureSingleElement","withoutCommentsOrEmptyText","current","result","test","nodeValue","push","wrapAll","parent","tryGetViewFromCache","putViewInCache","view","createView","that","requirePath","existing","cloneNode","element","setAttribute","fail","createFallbackView","viewEngine","findInElements","nodes","existingUrl","getAttribute","escape","str","useConvention","modulesPath","viewsPath","areasPath","reg","RegExp","convertModuleIdToViewId","moduleId","translateViewIdToArea","area","locateViewForObject","elementsToSearch","getView","locateView","viewUrl","determineFallbackViewId","funcNameRegex","results","exec","constructor","typeName","viewOrUrlOrId","ko","normalizeBindingInstruction","undefined","applyBindings","doBind","bindingTarget","data","binder","throwOnErrors","insufficientInfoMessage","unexpectedViewMessage","viewName","instruction","binding","utils","domData","set","koBindingContextKey","$data","bindingComplete","bindingInstructionKey","getBindingInstruction","bindContext","bindingContext","dataAlias","createChildContext","ensureSettings","settings","closeOnDeactivate","activator","defaults","beforeActivate","afterDeactivate","affirmations","interpretResponse","areSameItem","findChildActivator","invoke","target","deactivate","item","close","setter","reason","activate","newItem","activeItem","activationData","canDeactivateItem","options","defaultOptions","lifecycleData","continueCanDeactivate","canDeactivate","resultOrPromise","childActivator","canActivateItem","activeData","newActivationData","canActivate","createActivator","initialActiveItem","observable","computed","read","write","newValue","viaSetter","activateItem","__activator__","isActivating","forceActiveItem","deactivateItem","notifySubscribers","currentItem","dfd2","toCheck","toActivate","includeIn","forItems","items","determineNextItemToActivate","list","lastIndex","toRemoveAt","oldItem","remove","originalCanDeactivate","finish","originalDeactivate","doDeactivate","listLength","activatorSettings","can","isString","arrayIndexOf","toLowerCase","currentActivationData","create","isActivator","object","viewLocator","onError","endComposition","getHostState","elements","state","childElements","activeView","child","virtualElements","firstChild","activeViewAttributeName","nextSibling","compositionCount","callBacks","compositionCompleteCallbacks","cleanUp","viewElements","tryActivate","successCallback","skipActivation","model","triggerAttach","removeAttribute","attached","composingNewView","alwaysTriggerAttach","detached","domNodeDisposal","addDisposeCallback","e2","shouldTransition","transition","skipTransitionOnSameViewId","currentViewId","newViewId","cloneNodes","nodesArray","newNodesArray","clonedNode","replaceParts","replacementParts","composition","getParts","standardParts","partId","toReplace","parentNode","replaceChild","removePreviousView","len","children","childNodes","arrayChildren","removeNode","hide","visibilityKey","style","display","show","displayStyle","hasComposition","dataBind","composeBindings","dummyModel","compositionDataKey","partAttributeName","bindableSettings","compositionTransaction","complete","convertTransitionToModuleId","defaultTransitionName","addBindingHandler","initOptionsFactory","handler","dataKey","bindingHandlers","init","valueAccessor","allBindingsAccessor","viewModel","trigger","update","hasChildNodes","finalize","transitionModuleId","cacheViews","emptyNode","bindAndShow","__composition_context","preserveContext","prepend","as","modelToBind","currentModel","dataFor","recreatedView","defaultStrategy","getSettings","unwrapObservable","activatorPresent","attrName","executeStrategy","strategy","inject","compose","fromBinding","compositionComplete","hostState","controlsDescendantBindings","mode","allowedBindings","eventSplitter","Events","Subscription","owner","events","off","calls","event","callbacks","shift","all","proxy","arg","targetObject","loadPlugins","allPluginIds","loaded","currentModule","install","allPluginConfigs","app","title","configurePlugins","baseUrl","pluginIds","start","document","setRoot","root","applicationHost","finishComposition","actualResult","hostElement","er","getElementById","paths","text","durandal","plugins","transitions","waitSeconds","urlArgs","support","cors","router","dialog","widget","kinds","remoteServiceName","routes","route","imageSource","content","pages","subroute","nav","routeConfig","createEndPoint","contractNumber","entityType","params","self","ResourcePath","EntityType","Parameters","apiAppKey","gaId","location","href","securityServiceName","datacontext","fixNamesAndRegisterValidators","metadataStore","entityTypeName","propList","thisEntityType","getEntityType","arrayForEach","entityProp","thisProp","getProperty","displayName","validatorsList","validator","validators","formatter","padZeroLeft","num","size","s","appendNewDetails","newDetails","details","userName","append","moment","format","formatSeparators","inp","xPattern","separator","relevantLength","pos","section","date","optimizeYear","dateParts","year","thisYear","Number","newDate","isValid","optimizeDate","optimizeMonth","monthStr","day","optimizeDay","dayStr","optimizeTime","time","newTime","timeParts","dateValidatorFn","isNaN","valueOf","msg","property","theMoment","formattedValue","minDate","errorMessage","isBefore","maxDate","isAfter","notAllZeroesFn","strippedStr","parseInt","zipValidator","breeze","Validator","makeRegExpValidator","ssnValidator","dateValidator","messageTemplate","isNotAllZeroes","validatorFactory","customValidators","session","propertyName","propertyValue","Parameter","val","op","Property","Operator","Value","modal","modalSettings","Title","relatedPatientName","showSelectedPatientInTitle","checkPatientsIndex","patientFullName","selectedPatient","fullName","Entity","entity","customButtons","TemplatePath","templatePath","classOverride","Showing","showing","saveChanges","saveOverride","checkDataContext","thisEntity","unwrap","cancelChanges","cancelOverride","confirmed","deleteOverride","deleteText","canDelete","quickAddSection","type","iconPath","path","Type","IconPath","Path","Gender","gender","desc","Id","Description","SmallImgSrc","LargeImgSrc","Day","code","Code","Name","SomeType","validationError","propName","PropName","Message","initialize","patientInitializer","patient","isNew","isDuplicate","forcedSave","age","dOB","dob","add","rightnow","diff","fullFirstName","fn","firstName","pn","preferredName","mi","middleName","substr","fullfn","fullLastName","ln","lastName","sfx","suffix","fullln","formattedSSN","thisString","lastFourSSN","genderModel","thisGender","arrayFirst","enums","genders","toUpperCase","forceSave","thisPatient","saveIndividual","cancelEntityChanges","subscribe","canSave","validationErrors","observableArray","entityAspect","validationErrorsChanged","validationChangeArgs","hasErrors","hasValidationErrors","errorsList","errors","getValidationErrors","validationErrorsArray","thisArray","setDefaultStatusReason","unknownReason","patientStatusReasons","patientStatusReason","canSavePatientSystems","systemIds","patientSystems","hasChanges","record","entityState","getPrimaryPatientSystem","primaries","arrayFilter","primary","statusId","sort","a","b","x","createdOn","y","minor","minorAge","getSettingsParam","deceasedId","isLoaded","patientSystemInitializer","patientSystem","isDeleted","systemCareManager","getSystemCareManager","isEditable","createdById","careMemberInitializer","member","careTeamValidationErrors","checkAppend","newNotes","notes","getUsercareManagerName","startDateErrors","endDateErrors","setInvalidStartDate","setInvalidEndDate","customRoleName","roleId","dataSource","computedRoleName","roleType","role","throttle","contactId","startDate","endDate","careTeamInitializer","careTeam","primaryCareManagerRoleName","primaryCarePhysicianRoleName","primaryCarePhysicians","teamMembers","members","activeStatusId","pcp","m","core","primaryCareManagers","pcm","patientProblemInitializer","problem","level","alertInitializer","alert","alertPath","thisToken","alerts","dispose","addEntityType","shortName","namespace","dataProperties","background","dataType","clinicalBackground","displaySystemId","displaySystemName","displayLabel","flagged","fullSSN","isPartOfKey","maritalStatusId","priority","protected","providerId","reasonId","statusDataSource","twitterHandle","navigationProperties","provider","isScalar","associationName","foreignKeyNames","maritalStatus","priorityModel","patientStatus","problems","programs","goals","todos","allergies","medications","contactCard","observations","deceased","patientPropertyList","required","maxLength","subtract","iD","patientID","problemID","patientProblems","patients","sName","description","isComplexType","updatedById","updatedOn","patientContact","careTeamId","typeId","frequencyId","distance","distanceUnit","externalRecordId","defaultValue","contact","status","frequency","createdBy","updatedBy","autoGeneratedKeyType","AutoGeneratedKeyType","Identity","patientId","systemId","patientSystemStatus","field","systemStatus","registerEntityTypeCtor","patientsIndex","DataType","modelConfig","logOff","resource","currentUser","contracts","number","logOutUserByToken","finishLoggingOff","clearSession","clearLocalStorage","deleteCookie","setLocalStorageAndCookie","localStorageEnabled","thisUser","toJS","JSON","stringify","localStorage","setItem","cookiesEnabled","setCookie","clear","c_name","c_value","cookie","getCookie","c_start","c_end","unescape","runTests","lsTest","removeItem","are_cookies_enabled","cookieEnabled","navigator","ls","cookies","getUserFromSession","retrievedItem","getItem","user","parse","aPIToken","createUserFromSessionUser","dateHelper","isValidDate","isInvalidDate","emptyIsInvalid","search","minStr","maxStr","isSameDate","moment1","moment2","isSame","setDateValue","momentSrc","momentDest","month","setTimeValue","hour","minute","patientAllergyInitializer","allergy","isUserCreated","typeString","allergyTypeIds","allg","thisAllergyType","allergyTypes","faEnum","allergyErrors","allergyName","needToSave","isModified","sourceId","reactionString","reactionIds","thisReacion","reactions","setStatus","doneBannerMessage","saveCompleted","acceptChanges","createAlert","saveAllergies","inactivate","activatePatientAllergy","deletePatientAllergy","deleted","confirm","allergyId","deleteFlag","systemName","complexTypeName","severityId","codingSystemId","severity","allergyModels","contactSubTypeInitializer","contactSubType","subTypeName","subTypeId","subType","getContactTypeLookupById","specialtyName","specialtyId","specialty","subSpecialtyString","subSpecialtyIds","sub","contactType","contactCardInitializer","getDetailedSubTypeText","subTypeText","getSubTypeSummaryText","hasProfileErrors","profileErrors","errorsFound","isPatient","profileValidationErrors","hasPhoneErrors","phoneErrors","phones","phone","validate","validationMessage","phoneValidationErrors","activeTab","originalContactSubTypes","originalSubTypes","contactSubTypes","arrayPushAll","originalPreferredTimesOfDayIds","preferredTimesOfDayIds","originalPreferredDaysOfWeekIds","preferredDaysOfWeekIds","originalLanguages","languages","originalModes","modes","originalEmails","emails","originalPhones","originalAddresses","addresses","prefCommMethods","commModeString","thisMode","optOut","preferred","preferredMode","communicationModes","lookUpModeId","secondaryLanguagesText","languageString","contactLanguage","thisLanguage","language","lookUpLanguageId","preferredTimesOfDay","timeOfDayString","todId","thisTimeOfDay","timesOfDay","tod","preferredDaysOfWeek","daysOfWeekString","dowId","thisDayOfWeek","daysOfWeek","dow","addPhone","thismode","nextId","defaultTypeId","phoneTypes","newPhone","createComplexType","isFocused","removePhone","addEmail","emailTypes","newEmail","removeEmail","email","addAddress","addressTypes","newAddress","removeAddress","address","newLanguage","languageValidationErrors","canAddLanguage","alreadyExist","LANGUAGE_ALREADY_EXIST","addLanguage","thisNewLanguage","removeLanguage","preferredPhone","thisPhone","phonePreferred","preferredText","textPreferred","preferredEmail","thisEmail","preferredAddress","thisAddress","firstLastOrPreferredName","detailedSubTypes","subTypeStrings","contactSummary","summary","subTypesText","phoneNumber","formattedPhone","cityState","preferredLanguage","phoneOptedOut","returnValue","optOutOfPhones","textOptedOut","optOutOfTexts","addressOptedOut","optOutOfAddresses","emailOptedOut","optOutOfEmails","profileValidationErrorsArray","isDirty","clearDirty","watchDirty","propToken","propertyChanged","subTypesToken","phoneValidationErrorsArray","isDuplicateTested","saveContactCard","cancelAllChangesToContactCard","contactLanguageInitializer","contactModeInitializer","contactMode","phoneInitializer","thisTypeId","thisType","formattedNumber","thisPhoneNumber","match","emailInitializer","addressInitializer","thisStateId","stateId","thisState","states","peek","city","cityStateZip","postalCode","fullFormatted","addLine1","line1","addLine2","line2","addLine3","line3","userId","isUser","timeZoneId","contactTypeId","timeZone","contactStatus","isText","parentId","group","contactModels","barrierInitializer","barrier","relatedInterventions","interventionList","goal","interventions","intervention","thisBarrierId","barrierIds","baEnum","relatedTasks","taskList","tasks","task","taskListString","interventionListString","barrierErrors","goalInitializer","focusAreaString","focusAreaIds","focusArea","thisFocusArea","focusAreas","programString","theseProgramIds","programIds","thesePrograms","program","thisProgram","programEnum","goalErrors","sortedInterventions","l","sortedTasks","interventionInitializer","barrierString","thisBarrier","barriers","relatedBarriers","barriersList","computedGoalName","returnString","goalName","computedPatient","returnPatient","patientDetails","barriersToken","dueDateErrors","interventionErrors","dueDate","taskInitializer","taskErrors","attributeInitializer","attribute","thisControlType","controlType","thisPath","displayPath","values","thisValue","computedValue","displayValue","option","careManagerInitializer","careManager","targetValue","targetDate","customAttributes","order","categoryId","patientGoalId","category","closedDate","statusDate","assignedToId","assignedTo","iconClass","textClass","createMocks","manager","goalModels","commModeIds","levelName","isDefault","initializeEnums","createEntity","stepmodels","medicationInitializer","medication","isCreateNewMedication","customFrequency","familyId","isEditing","recalculateNDC","computedSigCode","strDateRange","days","freqQuantity","strength","form","quantity","howOften","computedDisplayName","medSortDate","orderedDate","rxDate","prescribedDate","computedPrescribedBy","prescribedBy","strDate","computedOrderedBy","orderedBy","computedRxInfo","rxNumber","computedDuration","durationUnit","duration","saveMedication","activatePatientMedication","deletePatientMedication","prescribedDateErrors","orderedDateErrors","rxDateErrors","medicationErrors","medFrequencyInitializer","sortOrder","dosage","freqHowOftenId","freqWhenId","sigCode","nDCs","pharmClasses","originalDataSource","durationUnitId","otherDuration","reviewId","refusalReasonId","otherRefusalReason","pharmacy","freqHowOften","freqWhen","review","refusalReason","isNullable","medicationModels","toDoPatientInitializer","noteInitializer","note","thisMatchedCareManager","careManagers","caremanager","localDate","thisDate","displayText","thisText","contactedOnErrors","admitDateErrors","dischargeDateErrors","programsToken","newContent","noteErrors","contactedOn","admitDate","dischargeDate","visitType","otherType","disposition","otherDisposition","utilizationLocation","otherLocation","showOtherVisitType","isOther","showOtherLocation","showOtherDisposition","getUtilizationLength","admitted","utilizationLengthStr","utilizationLength","utilizationLengthDesc","setInvalidAdmitDate","setInvalidDischargeDate","todoInitializer","todo","patientName","startTimeErrors","showInvalidStartTime","showInvalidDueDate","todoErrors","startTime","getAsNewEvent","getEventTitle","getEventPatientName","assignedToName","updateEventTimes","allDay","updateExistingEvent","existingEvent","isEvent","methodId","outcomeId","whoId","validatedIdentity","visitTypeId","utilizationSourceId","dispositionId","locationId","outcome","who","utilizationSource","priorityId","theEvent","startDateTime","endDateTime","momentStartDate","momentStartTime","momentStartDateTime","toDate","clone","end","userCareManagerName","noteModels","patientObservationInitializer","patObs","thisObservationsValues","computedValueString","diastValue","systValue","units","hasActualValues","validateGeneralObservation","obsErrors","validateProblem","observationInitializer","addtlObs","observationValueInitializer","obsValue","previousValueString","previousValue","startdate","unit","observationId","standard","displayId","groupId","observation","allowedTypeIds","observationModels","serializeAction","thisAction","Steps","SpawnElement","actionQuery","EntityQuery","from","where","toType","select","executeQueryLocally","unwrappedAction","steps","spawnElement","spawnelement","unwrappedSpawnElement","elementId","elementType","tag","step","stepQuery","stepresults","unwrappedStep","responses","response","responseQuery","responseresponse","unwrappedResponse","ModuleId","SourceId","Order","Completed","completed","CompletedBy","completedBy","Enabled","enabled","Status","DeleteFlag","ElementState","elementState","StateUpdatedOn","stateUpdatedOn","DateCompleted","dateCompleted","Next","next","Previous","previous","AssignDate","assignDate","AssignById","assignById","AssignToId","assignToId","Archived","archived","ArchiveOriginId","archiveOriginId","AttrStartDate","attrStartDate","AttrEndDate","attrEndDate","ElementId","ElementType","Tag","newStep","Responses","Header","header","Text","Question","question","Notes","ActionId","actionId","StepTypeId","stepTypeId","SelectedResponseId","selectedResponseId","newResponse","Required","StepId","stepId","Nominal","nominal","NextStepId","nextStepId","serializeContactCard","entityName","startsWith","thisContactCard","Modes","Addresses","Phones","Emails","Languages","TimesOfDaysId","WeekDays","ContactSubTypes","contactCardQuery","unwrappedContactCard","thisDowId","PatientId","TimeZoneId","IsPatient","UserId","IsUser","FirstName","MiddleName","LastName","PreferredName","ContactTypeId","ExternalRecordId","DataSource","StatusId","DeceasedId","Prefix","Suffix","CreatedOn","UpdatedOn","CreatedById","UpdatedById","newMode","LookUpModeId","OptOut","Preferred","TypeId","City","StateId","PostalCode","Line1","Line2","Line3","IsText","PhonePreferred","TextPreferred","LookUpLanguageId","SubTypeId","SpecialtyId","SubSpecialtyIds","sid","serializeGoal","thisGoal","FocusAreaIds","ProgramIds","CustomAttributes","goalQuery","unwrappedGoal","fa","pid","customAttribute","newCustomAttribute","ControlType","Options","Values","Display","StartDate","EndDate","TargetValue","TargetDate","Details","serializeIntervention","interventionQuery","thisIntervention","newIntervention","BarrierIds","CategoryId","AssignedToId","DueDate","ClosedDate","PatientGoalId","barId","serializeTask","taskQuery","thisTask","newTask","StatusDate","serializeBarrier","barrierQuery","newBarrier","serializeObservation","thisObservation","observationQuery","unwrappedObservation","startMoment","toISOString","endMoment","GroupId","Standard","ObservationId","Source","Units","DisplayId","serializeNote","thisNote","noteQuery","unwrappedNote","MethodId","OutcomeId","WhoId","Duration","ContactedOn","ValidatedIdentity","serializeToDo","thisToDo","todoQuery","unwrappedToDo","PriorityId","StartTime","serializeCareTeam","thisCareTeam","careTeamQuery","unwrappedCareTeam","ContactId","thisCareMember","serializeCareTeamMember","careMember","careMemberQuery","unwrappedCareMember","RoleId","CustomRoleName","Core","FrequencyId","Distance","DistanceUnit","CareTeamId","serializeCareMember","Primary","serializeIndividual","thisIndividual","patientQuery","unwrappedIndividual","Priority","DOB","Background","ClinicalBackground","ReasonId","StatusDataSource","MaritalStatusId","Protected","FullSSN","InsertDuplicate","serializePatientSystem","thisPatSys","patientSystemQuery","unwrappedPatSys","SystemId","serializePatientAllergy","thisAllergy","allergyQuery","unwrappedAllergy","AllergyName","AllergyId","SeverityId","SystemName","CodingSystemId","IsNewAllergy","AllergyTypeIds","ReactionIds","serializePatientMedication","thisMedication","medicationQuery","Dosage","Strength","Route","Form","FreqQuantity","FreqHowOftenId","FreqWhenId","PrescribedBy","SigCode","Reason","FamilyId","RecalculateNDC","OriginalDataSource","DurationUnitId","OtherDuration","ReviewId","RefusalReasonId","OtherRefusalReason","OrderedBy","OrderedDate","PrescribedDate","RxNumber","RxDate","Pharmacy","NDCs","PharmClasses","entitySerializer","refreshToDos","getEntityList","refreshInterventions","priorities","patientStatuses","systems","userAssociatedTypes","maritalStatuses","deceasedStatuses","contactStatuses","careMemberStatuses","contactLookUpGroupType","textTypes","timeZones","communicationTypes","sources","barrierCategories","toDoCategories","interventionCategories","goalTypes","goalTaskStatuses","barrierStatuses","interventionStatuses","careMemberTypes","careMemberFrequency","observationTypes","observationStates","observationDisplays","objectives","noteTypes","noteMethods","noteWhos","noteSources","noteOutcomes","visitTypes","utilizationSources","dispositions","utilizationLocations","severities","allergySources","allergyStatuses","medicationStatuses","medicationCategories","freqHowOftens","medSuppTypes","freqWhens","durationUnits","refusalReasons","medicationReviews","contacts","contactTypesTree","contactTypes","localcollections","servicesConfig","localCollections","searchForEntities","Result","thisAlert","Program","Programs","createProgram","searchForProblems","RelatedChanges","change","patientProblemEndPoint","getPatientsToDos","searchForLocalCollectionEntities","planElems","intv","entityFinder","cancelChangesForNonComputedPath","thisComputedPath","computedPath","rejectChanges","setCompletedSteps","saveActionPost","serializedAction","programId","postMethod","endPoint","payload","Action","ProgramId","query","withParameters","$method","$encoding","executeQuery","saveFailed","removeProgram","programName","saveSucceeded","ProgramName","savePlanElemAttrs","planelem","PlanElement","programsSaving","repeatAction","getRepeatedAction","programsService","programInitializer","eligibilityDatesStatement","eligibilityStartDate","enddate","eligibilityEndDate","thistext","today","dateDiff","allModulesOpen","firstClosed","isOpen","moduleInitializer","completeActionsCount","theseActions","actions","count","act","openActionsCount","notStartedActionsCount","objectiveInitializer","objective","thisObjective","categoriesString","categories","cat","actionInitializer","checkForHistory","array","historicalAction","inactiveStepFound","theseSteps","alphabeticalOrderSort","computedSteps","isFirstStep","activeStep","theNextStep","findNextStep","deferEvaluation","isSaving","isLoading","saveAction","formattedCompletedDate","history","tempArray","stepInitializer","selectedResponse","computedResponse","getEntityById","hasNoTrueAnswers","stepType","thisAnswer","rspnse","getNextStep","setActive","nextStepObservable","nextStep","isCompleteStep","ifRequiredHasValue","ifIsSingleSelectAndRequiredHasValue","completeAction","eligibilityRequirements","programState","templateName","authoredBy","programVersion","templateVersion","programVersionUpdatedOn","attributes","elementStateModel","assignBy","assignTo","moduleVersion","moduleVersionUpdatedOn","archivedDate","actionVersion","actionVersionUpdatedOn","selectType","planElementId","ineligibleReason","eligibility","enrollment","graduatedFlag","population","removedReason","didNotEnrollReason","overrideReason","market","eligibilityModel","enrollmentModel","graduatedFlagModel","completedModel","extSaveAction","userInitializer","recentIndividuals","computedRecentIndividuals","theseIndividuals","eventInitializer","hasTimes","timeString","endTime","createCalendarMocks","getDate","getMonth","getFullYear","usermodels","contractId","ga","dimension1","dimension2","sendPageView","page","bindEditableDate","attr","which","keyCode","ctrlKey","preventDefault","datepicker","shiftKey","position","selectionStart","setHeights","$el","nobody","$contents","$widgets","find","fullscreen","$bodys","fullScreenHeight","hasClass","css","closest","height","each","$widget","offsetHeight","body","parentHeight","parentElement","isIe11","positionArrow","el","top","offset","parents","outerHeight","blockNonNumeric","blockExtraDecimal","DateTime","DateOrNothing","DateOrDash","StringOrDash","Time","LongTime","clickRadio","setValue","clickToggleInArray","thisComplexType","obs","theseParameters","theIndex","clickToggleInLanguageArray","thisObservableArray","lookupPropertyName","nameValue","clickTrue","clickFalse","hoverToggle","registerEventHandler","toggleDomNodeCssClass","clickToggle","canToggle","thisCanToggle","setActiveTab","updateActionElementState","numericDecimal","observableNumber","newNumber","setSelectionRange","numeric","ssn","removeClass","addClass","datepickerOptions","dynoptions","datepickerDynamicOptions","observableMoment","utc","local","datepickerMoment","isObservable","initMinDate","newMinDate","setDate","initMaxDate","newMaxDate","blur","_clearDate","datepickerEditable","selectedDate","jqtimepicker","onTimeChange","initialized","newHour","newMinutes","timepickerMoment","timeMoment","hours","getHours","minutes","getMinutes","showDate","dateObservable","observableLocalMoment","seconds","observableDateTime","thisElement","timepicker","zindex","interval","scrollbar","dynamic","initHour","initMinute","notify","timeStr","thisMoment","dstOffset","isDST","valueAsDate","adjustedTime","getTimezoneOffset","adjustedDate","setHours","getSeconds","timeOut","timeOutOptions","delay","fullCalendar","innerHTML","defaultView","allDayText","editable","contentHeight","eventClick","viewDate","typeahead","initOptions","dataset","triggerChange","triggerUpdate","selectedValue","displayKey","dupDetector","remoteMatch","localMatch","valueChangedEvent","overrideSelected","taOptions","ttAdapter","autoHeight","scrollHeight","chosen","allBindings","caption","chosenOptions","isSearch","isCancel","disable_search","allow_single_deselect","search_contains","display_selected_options","inherit_select_classes","placeholder_text_multiple","placeholder_text_single","width","chosenUpdater","disabled","disable","removeAttr","arrowMover","setHeightFromPrev","prev","pieChart","chartItems","chartOptions","highcharts","chart","plotBackgroundColor","plotShadow","tooltip","pointFormat","plotOptions","pie","animation","allowPointSelect","cursor","dataLabels","color","Highcharts","theme","contrastTextColor","colors","credits","series","showResultsCount","typeaheadOpts","firstchild","createElement","insertBefore","columnSizer","ready","triggers","brand","logoPath","brandName","currentBrand","branding","JsonResultsAdapter","extractResults","Problems","PatientProblem","PatientProblems","Patient","Cohorts","Patients","PlanElems","States","CommModes","TimesOfDays","TimeZones","CommTypes","Contact","Contacts","LookUps","LookUpDetails","Goals","Goal","Note","PatientNote","Utilization","Library","CareMembers","CareTeam","CareTeamMember","Observations","Observation","PatientObservations","PatientObservation","Actions","Attributes","Objectives","ToDo","ToDos","PatientDetails","Intervention","Interventions","Task","Tasks","Systems","PatientSystems","Allergy","Allergies","PatientAllergy","PatientAllergies","PatientMedSupp","PatientMedSupps","PatientMedFrequencies","ContactTypeLookUps","visitNode","node","mappingContext","nodeContext","PatientProblemID","ConditionID","DisplayName","Flagged","thisDateCompleted","dateString","thisSomethingThing","thisNewDate","setTime","ContractProgramId","Enrollment","PlanElementId","CommModeIds","theseIds","fromEntityType","PreferredTimesOfDayIds","PreferredDaysOfWeekIds","navigationProperty","theseValues","Members","Categories","AllowedTypeIds","TypeIds","tempAllergyTypeIds","tempReactionIds","tempNDCs","tempPharmClasses","getLocalList","parentPropertyName","parentPropertyId","orderby","orderBy","getLocalById","idPropertyName","orderResults","checkForFourOhOne","entityObservable","endpoint","forceRemote","skipMerge","querySucceeded","queryFailed","messager","Q","parameters","finalQuery","queryOptions","using","MergeStrategy","SkipMerge","fullEndPoint","getMelsEntityById","service","serviceConfig","loginFailed","getSessionUser","userObservable","tokenId","Token","APIKey","Context","deleteSessionToken","token","fullUrl","ajax","headers","success","getUserSettings","apiToken","Settings","userData","userservice","userModelsConfig","removeCalendarEvent","setDeleted","removeCalendarEventById","eventId","matchedEvent","evt","getEventsByUserId","eventsObservable","createCalendarEvent","thisEvent","getEventById","userModelConfig","userService","calendarService","configureBreezeManager","NamingConvention","camelCase","setAsDefault","mgr","EntityManager","dataService","ds","currentUserId","DataService","serviceName","hasServerMetadata","getUserByUserToken","constructorProperties","usercontext","serializedContactCard","isInsert","httpResponse","copyArray","dest","removeAll","copy","isAddedModifiedOrDeleted","setUnchanged","getLocalContacts","contactEntity","preds","param","thispred","Predicate","pred","and","getContacts","observableTotalCount","searchSucceeded","TotalCount","ContactTypeIds","contactTypeIds","ContactSubTypeIds","contactSubTypeIds","ContactStatuses","FilterType","filterType","Take","take","Skip","skip","contactService","getLookup","getNoteLookup","initializeEntity","goalId","postFailed","saveGoal","serializedGoal","saveIntervention","serializedIntervention","saveTask","serializedTask","saveBarrier","serializedBarrier","Barrier","deleteGoal","getInterventions","FromDate","StatusIds","InterventionFilterType","myInterventionsEndPoint","getInterventionsQuery","orderString","getTasks","myTasksEndPoint","getTasksQuery","saveNote","serializedNote","receivingEntityType","deleteNote","getNote","saveToDo","serializedToDo","verb","getToDos","NotAssignedToId","CategoryIds","PriorityIds","Sort","myToDosEndPoint","getToDosQuery","getObservations","theseOptions","getObservationsByTypeId","observationsReturned","falseOrNot","saveObservations","serializedObservations","initializeObservation","dataReturned","observationsSaving","observationsService","saveCareTeam","serializedCareTeam","saveCareTeamMember","serializedCareMember","teamId","patientContactId","deleteCareTeamMember","deleteSucceeded","getCareTeam","getCareTeamSucceeded","getCareTeamFailed","saveCareMemberOld","saveType","CareMember","careMemberService","serializedPatient","insert","Insert","deleteIndividual","initializeIndividual","deletePatientSystems","deleteIds","IdsString","savePatientSystems","serializedPatientSystems","getFullSSN","addPatientToRecentList","theseRecentIndividuals","unshift","patientsService","getRemoteAllergies","searchString","SearchTerm","initializeAllergy","allergySaving","initializeNewAllergy","serializedAllergies","patientAllergyId","getPatientAllergies","myPatientAllergiesEndPoint","getPatientAllergiesQuery","allergiesService","getEntityService","getRemoteMedications","getRemoteMedicationFields","medicationName","initializeMedication","medicationId","medicationSaving","MedicationId","initializeNewMedication","MedicationMap","FullName","serializedMedication","getLocalFrequencyById","medicationFrequencyEndpoint","saveCustomFrequency","existingFrequency","EntityState","Unchanged","PatientMedFrequency","getPatientFrequencies","getLocalFrequencies","localQuerySucceeded","FilterQueryOp","Equals","or","localQuery","FetchStrategy","FromLocalCache","remoteQuerySucceeded","getPatientMedications","myPatientMedicationsEndPoint","getPatientMedicationsQuery","medicationsService","jsonResultsAdapter","stepModelConfig","lookupModelConfig","contactModelConfig","goalModelConfig","notesModelConfig","observationsModelConfig","allergyModelConfig","medicationModelConfig","lookupsService","goalsService","notesService","careMembersService","loadingMessage","configureCustomHeaders","ajaxAdapter","getAdapterInstance","defaultSettings","otehrAdapter","initializeAdapterInstance","ajaxpost","createInstance","primeData","loadUpEnums","getSystems","getPatientLookup","getProblemsLookup","getCohortsLookup","getContractProgramsLookup","getTimesOfDayLookup","getPatientStatusReasonLookup","getTimeZonesLookup","getAllStatesLookup","getAllLanguagesLookup","getAllCommModesLookup","getAllCommTypesLookup","getNoteLookups","getGoalLookups","getMedicationLookups","getObjectivesLookup","getObservationTypeLookups","getCareMemberTypeLookups","getAllergyLookups","getAllCareManagers","getRecentIndividuals","loadUpMocks","getContactTypesTree","processLookpus","filterCommModes","processFrequencyLookup","processNoteLookups","sortLookupAlphabetic","lookupArray","setOtherOptionLast","sortFunc","individual","recentIndividualsEndPoint","checkIfAllObservationsAreLoadedYet","thisEndPoint","observationsLoaded","getAllObservations","commModesFiltered","phoneId","emailId","addressId","textId","allChangedEntities","getAllChanges","saveAllChangesToEntities","queryStarted","addLoadingMessage","queryCompleted","programFlag","removeLoadingMessage","loadingMessages","saveChangesToPatientProperty","unwrappedPatient","detachEntity","reload","Outcome","updateTodoPatient","updateContact","serializedIndividual","initializePatient","saveActionCompleted","repeatActionCompleted","repeatedAction","savePlanElemAttr","planElement","planElem","getContactTypes","isRoot","types","contactPatient","updatedPhones","UpdatedPhone","updatedEmails","UpdatedEmail","updatedAddresses","UpdatedAddress","phoneToUpdate","oldPhone","OldId","NewId","emailToUpdate","oldEmail","addressToUpdate","oldAddress","getLocalContactById","contactsReturned","deleteCompleted","saveUtilizationCompleted","syncUpdateProps","saveNoteCompleted","returnedNote","noteType","careTeamReturned","team","arrayRemove","ent","theseObservations","serializedObservation","patientSystemsSaving","patSys","valueHasMutated","trimmedValue","serializedPatientSystem","getChanges","entities","todosReturned","todosSaving","orderstring","getToDosRemoteOpenAssignedToMe","getLocalTodos","theseTodos","interventionsReturned","interventionsSaving","tasksReturned","tasksSaving","serializedTodo","SystemCareManager","getUserCareManager","getUserFullName","getCalendarEvents","userEvents","syncCalendarEvents","syncEventFromTodo","updateCalendarEventFromTodo","insertCalendarEventFromTodo","newEvent","checkForEntityLocally","thisTodoPatient","initializeNewPatientMedication","medId","defaultSource","src","defaultType","patMed","medicationReturned","handleCreateNew","saveIt","trimNewMedicationFields","deleteFailed","isNewAllergy","serializedAllergy","allergiesReturned","searchterm","singleSort","breezeEntities","loadingMessagesShowing","adapterName","setEntityTypeForResourceName","hasChangesChanged","eventArgs","saveCareMember","createMockStepAndQuestions","thisStepMap","stepMap","getStepById","stepservice","getMockStepMap","analytics","isLogging","logNavigation","updateHash","fragment","replaceState","hash","routeStripper","rootStripper","isExplorer","trailingSlash","active","getHash","getFragment","forcePushState","_hasPushState","_wantsHashChange","pathname","hashChange","_wantsPushState","pushState","docMode","documentMode","oldIE","userAgent","iframe","appendTo","contentWindow","navigate","checkUrl","_checkUrlInterval","setInterval","loc","atRoot","silent","loadUrl","startRoute","clearInterval","fragmentOverride","routeHandler","assign","open","navigateBack","back","routeStringToRegExp","routeString","escapeRegExp","optionalParam","namedParam","optional","splatParam","routesAreCaseSensitive","stripParametersFromRoute","colonIndex","endsWith","compareArrays","second","reconstructUrl","queryString","startDeferred","rootRouter","lastUrl","lastTryUrl","createRouter","hasChildRouter","instance","parentRouter","setCurrentInstructionRouteIsActive","flag","currentInstruction","isActive","completeNavigation","fromModuleId","currentActivation","toModuleId","updateDocumentTitle","explicitNavigation","navigatingBack","cancelNavigation","activeInstruction","isProcessing","redirect","activateRoute","succeeded","previousActivation","withChild","fullFragment","handleGuardedRoute","guardRoute","ensureActivation","canReuseCurrentActivation","canReuseForRoute","dequeueInstruction","queue","tempActivator","queueInstruction","createParams","routePattern","decodeURIComponent","queryParams","parseQueryString","configureRoute","isRegExp","convertRouteToTitle","convertRouteToModuleId","convertRouteToHash","hasChildRoutes","paramInfo","mapRoute","setTitle","appTitle","navigationModel","isNavigating","processing","currentRouterIsProcesing","__router__","queryObject","pairs","pair","coreFragment","queryIndex","relativeToParentRouter","titleSubscription","buildNavigationModel","defaultOrder","fallbackOrder","isNumber","mapUnknownRoutes","replaceRoute","catchAllRoute","catchAllPattern","reset","makeRelative","fromParent","dynamicHash","childRouter","createChildRouter","makeRoutesCaseSensitive","targetIsThisWindow","targetWindow","delegate","altKey","metaKey","theRouter","logger","setRoute","sender","thisRoute","setSubRoute","currentSubRoute","currentRoute","indexOverride","navRoutes","navigation","clause","comp","Comparator","createDynamicQuery","clauses","report","columns","runNewReport","reportpassedin","thisReport","theseEntities","getListLocally","goThroughArray","goThroughChildren","thisObject","childEntities","thisChildEntityType","onlyFirst","thisPropName","makeParentPropName","goThroughNavProperties","navProperties","thisNavPropType","navPropName","getNavPropLocally","referencePropName","columnsString","column","string","reportContext","bindings","configServices","showSideBar","hasATokenId","foundUser","boot","initializeLogger","toggleNavVisibility","toggleQuickAddShowing","showQuickAdd","goBack","alphabeticalNameSort","compLoadingMessages","messages","theseMessages","userMenuOpen","currentModal","shell","protectedStatuses","stateList","activeSecondColumn","createIndividual","indReturned","newPatient","createModalShowing","editingToken","dupetoken","forcingToken","vm","programLoading","runProgramReport","getAllPrograms","runActionReport","getAllActions","runCareMemberReport","getAllCareMembers","runGoalReport","getAllGoals","haveGoalPatReport","goalsList","showPatientList","haveGoalPatientsList","withProgPatReport","programsList","haveProgramPatientsList","thesePatients","notStartedProgReport","showProgramList","notStartedProgramsList","inProgressProgReport","inProgressProgramsList","completedProgReport","completedProgramsList","closedProgReport","closedProgramsList","notStartedActionReport","actionsList","showActionList","notStartedActionsList","inProgressActionReport","inProgressActionsList","completedActionReport","completedActionsList","closedActionReport","closedActionsList","showProgramResults","thisLength","programLength","patientProgramEndPoint","matchingPrograms","prog","programsByCohortLoaded","selectedIds","selectedProgramStateIds","progstateid","patientsList","patientProgramsReturned","thesePatientsPrograms","patprog","programReturned","programsLoading","thisPatProgLoading","actionsByCohortLoaded","selectedActionStateIds","actionstateid","actionsLoading","mod","actionsReturned","thisActionLoading","actionEndPoint","goalsByCohortLoaded","goalsReturned","theseGoals","thisgoal","goalsLoading","goalEndPoint","careMembersByCohortLoaded","careMembersReturned","theseCareMembers","thisCM","careMembersList","careMembersLoading","careMemberEndPoint","initializeViewModel","cohortsReturned","thisCohortMatch","cohortsList","cohort","selectedCohort","elementStateList","cohortEndPoint","selectedCohortToken","getPatientsByCohort","searchValue","currentCohortsPatientsEndPoint","SearchFilter","getPatientsByCareManagerReport","queryJson","parseJSON","showDynamicReport","actionCountReport","dynamicReport","dynamicReportName","dynamicReportDescription","dynamicReportColumns","dynamicReportQueryJSON","getJSONResults","displayname","haveCareManagerPatientsList","returnList","careMembers","cm","canShowProgramReport","pl","canShowActionReport","canShowCareManagerReport","canLoadProgramData","pbcl","sc","canLoadActionData","cspr","canLoadGoalData","gbcl","canLoadCareMemberData","cmbcl","programInfoVisible","goalInfoVisible","overviewInfoVisible","careMemberInfoVisible","dynamicReportVisible","reportsIndex","ctor","computedEntities","pat","selected","allSelected","allAreSelected","thisPat","isselected","closeReport","sendCleanCSV","colDelim","rowDelim","propArray","currentProp","blob","Blob","csvUrl","URL","createObjectURL","download","click","propname","navprops","childentities","availableColumns","availableNavProps","availableChildEntities","theseAvailableColumns","theseAvailableNavProps","navprop","theseAvailableChildEntities","computedActions","computedPatients","goalsLoaded","programsLoaded","sendToExcel","data_type","table_div","table_html","outerHTML","dateSort","computedPrograms","thisProg","showMetaData","md","exportMetadata","odType","structuraltypes","structuralTypes","selectedMainType","newQueryReport","queryBuilder","clearCohortFilter","cohortFilter","choosePatient","patientReturned","deleteModalShowing","patientEndPoint","canLoadMoreCohortPatients","showNoResultsMessage","cohortPatientsSkip","throttledFilterToken","throttledFilter","totalPatientCount","maxPatientCount","calculateSkipTake","totalRecordsShowing","maxPossibleRecordsShowing","loadMoreCohortPatients","filter","newPatients","noResultsMessage","tokenIdFromUrl","getUserSessionByToken","auth","setActiveDetailsTab","activeDetailsTab","isContactSelected","primaryCommunications","communications","contactcard","prefPhone","template","prefText","prefEmail","prefAddress","Tab","cssClass","imgSource","imgAlt","isShowing","detailsTabs","modalEntity","callbackReturnTo","theContact","modalShowing","ModalEntity","canSaveObservable","contactok","saveFunction","addContact","contactReturnedCallback","contactFirstName","contactLastName","newModes","editPatientContact","startEditContactDialog","editContact","titleText","showPatientName","contactsShowingText","myContactSearchResults","totalQueryCount","totalCount","showResetFilters","criteriaFirstName","criteriaLastName","defaultContactType","criteriaContactTypeId","criteriaContactSubTypes","activeContactStatus","criteriaContactStatuses","selectedStatuses","canSearchContacts","canSearch","statuses","subTypes","searching","selectedContactId","selectedContact","showEditButton","hasContactSelected","showDeleteButton","maxContactsCount","contactsTake","toggleOpenColumn","leftColumnOpen","toggleFullScreen","widgetname","fullScreenWidget","deleteContact","resetTabs","tabs","tab","selectContact","findDefaultContactType","resetFilters","canLoadMoreContacts","maxContactsLoaded","noResultsFound","getContactTypeChildren","allContactTypes","clearCacheAndLoad","contactsSkip","loadContacts","statusObjects","statusEnum","getContactsReturned","loadMoreContacts","searchContacts","skipped","nextSkip","tabIndex","profile","general","contactTypeGroupId","typesList","activeStatuses","getCohorts","cohorts","cohortPatientSelectPanelShowing","extenders","calculateShowingPatients","computedCohorts","theseCohorts","isChecked","CalendarOptionsModel","thisSubRoute","eventModalEntity","eventModal","eventModalShowing","dummyFunction","myToDos","newTodo","Event","toggleTodoSort","selectedTodoSortColumn","sortProperty","backendSort","toggleInterventionSort","selectedInterventionSortColumn","toggleWidgetOpen","myToDoListOpen","myWorkListOpen","myInterventionListOpen","addEvent","todosProcessing","clearTodosCacheAndLoad","resizeCalendar","maxTodosCount","todosTake","getCurrentUserInterventions","subscriptionTokens","editToDo","addToDo","getCurrentUserToDos","todosSkip","canLoadMoreTodos","maxToToDosLoaded","loadMoreTodos","generateCalendarEvents","myToDosQueryResult","todosTotalCount","returnedCount","refreshMyTodos","todook","EventModalEntity","todosLoading","eventModalSettings","lastSort","myEvents","myHeader","left","right","updateCalendarEvents","selectedSortCol","todosReloading","saving","todosShowingText","reloading","myInterventions","theseInterventions","finalOrderString","activeTodoColumns","activeInterventionColumns","calendarOptions","createVenn","Visualization","overdue","conditions","care_gaps","myHomeIndex","manageTodoPaging","localCount","selectedView","activeFilters","selectedSortColumn","primarySort","isFilterSelectionChanged","lastSelected","changed","getLocalInterventions","ChartToDo","percentage","refreshView","views","selectedCategories","selectedPriorities","filtersOpen","toggleSort","remoteParams","refreshTodos","loadInterventionsFromServer","interventionFilterType","View","cols","prisort","Summary","mainprop","secprop","mainProperty","secondaryProperty","catNotSet","filtersHeaderOpen","thirtyDaysAgo","viewChanged","categoryChanged","priorityChanged","availableTodoSummaries","selectedTodoSummary","availableInterventionSummaries","selectedInterventionSummary","lastSelectedView","lastSelectedCategories","lastSelectedPriorities","thesetodocats","theseCats","selectedViewToken","selectedcategories","selectedpriorities","categoryFilterChanged","priorityFilterChanged","returnfilters","othercats","selectCat","foundselectednull","activeColumns","selectedview","viewchanged","bSort","myToDosChart","finaldata","total","dt","newChart","myInterventionsChart","getReportsList","Report","label","visualize","password","pwOrToken","organization","v","resourcesSearch","folderUri","repoName","recursive","repo","availableReports","resourceType","fetchingReport","reportPath","container","containerToLoad","userSettings","un","setting","Key","org","pw","canGetReports","insightReportIndex","Count","Container","setActiveReportContainer","numberOfContainers","selectedCount","reportContainers","thisCount","activereport","patientDataColumnOpen","checkForAnyChanges","actionsHaveChanges","notesHaveChanges","goalsHaveChanges","todosHaveChanges","defaultVisitType","patientsListFlyoutOpen","allPatientPromises","getPatientsInterventions","getPatientsTasks","contactCardEndPoint","getPatientsAllergies","patientSystemEndPoint","patientFullyLoaded","canleave","ObservationsEndPoint","noteEndPoint","todosPromises","freqPromise","gotMedicationFrequencies","togglePatientsColumn","minimizePatientsDataColumn","maximizePatientsDataColumn","minimizePatientsListFlyoutColumn","maximizePatientsListFlyoutColumn","canLeave","leaving","toggleEditing","save","patientsRoute","isComposed","routerInstructionToken","oldvalue","oldRoute","saveAllData","activeDataType","saveNewMedication","saveDataEntry","cancelDataEntry","toggleModalShowing","isFullScreen","widgets","computedOpenColumn","openColumn","addData","needsSaving","saveAllergiesCompleted","destroyThese","removeDataEntries","saveMedicationCompleted","cleanInvalidMedications","thisMedsArray","med","deleteThese","refreshDataPage","needToRefreshObservations","thisObsArray","thisAllgArray","alleg","thisActiveDataType","setActiveDataType","minimizeThisColumn","maximizeThisColumn","showDropdown","showActions","allergiesType","medicationsType","dataObservations","dataTypes","theseObservationTypes","dataIndex","elementStateIds","sortOverride","ioToken","selectedPatientToken","activeAction","activeModule","activeProgram","planColumn","getStepsForAction","genericActionEndPoint","openwidgets","wid","programsSortTwo","p1","p2","o1","o2","selectedPatientsPrograms","endDateSort","activeaction","detailsColumn","statusIds","canAdd","canadd","emptyMesssage","emptymessage","sortoverride","Column","addEntity","entityReturned","thisId","thisGoalId","thisPatientId","editGoal","goalCancel","getGoalDetails","goalModalShowing","addGoal","goalReturned","newGoal","activeGoal","spToken","activeTask","activeIntervention","goalColumn","forceReload","goalHasLoaded","alreadyLoaded","navToken","isExpanded","contentItem","showEdit","showDelete","isOpenToken","isShowEditButton","activeNote","getNotes","theseNotes","descendingDateSort","groupNotes","Group","groups","thisLocalDate","thisGroup","notesToken","setActiveNote","editNote","originalProgramIds","progIds","noteModalShowing","thistype","setOpenColumn","editClickFunc","deleteClickFunc","defaultSort","allowAdd","medicationGroups","addMedication","activeMedication","activeAllergy","medicationColumn","editMedication","MedicationModalEntity","medicationCancel","medicationModalShowing","editAllergy","AllergyModalEntity","allergyCancel","allergyModalShowing","medicationok","medicationtitle","medicationstatus","allergyok","allergytitle","allergystatus","medGroupSort","MedicationGroup","firstMedication","sortedMedications","groupedMedications","newGroup","activeMedicationGroups","inactiveMedicationGroups","activeMedicationColumns","toggleMedicationSort","medicationColumnWidgets","setActiveMedication","setActiveAllergy","selectedTemplate","cancelNote","currentNote","resetTodoFilters","selectedTodoCategories","selectedTodoPriorities","todoFiltersOpen","refreshTodoView","resetInterventionFilters","selectedInterventionCategories","interventionFiltersOpen","refreshInterventionView","resetTaskFilters","taskFiltersOpen","toggleTaskSort","selectedTaskSortColumn","refreshTaskView","toggleHeaderOpen","widgetOpen","todosPanelOpen","taskPanelOpen","interventionsPanelOpen","todoFiltersHeaderOpen","interventionFiltersHeaderOpen","taskFiltersHeaderOpen","selectedTodoView","selectedTodoViewIndex","todoViews","selectedpatient","theseviews","tvToken","todoCategories","todoPriorities","stvToken","activeTodoFilters","matchingcat","computedTodoTitle","thistitle","selectedInterventionView","dummySubscription","selectedInterventionViewIndex","interventionViews","ivToken","sivToken","activeInterventionFilters","computedInterventionTitle","selectedTaskView","selectedTaskViewIndex","taskViews","tdvToken","activeTaskFilters","activeTaskColumns","computedTaskTitle","myTasks","theseTasks","models","addNewObservation","newObservation","additionalObservationsToEnter","selectedAdditionalObservation","matchedObservation","additionalObservations","addtlObsBloodhound","Bloodhound","datumTokenizer","tokenizers","whitespace","queryTokenizer","remote","transport","onSuccess","deferred","done","filterVal","resolveWith","getAdditionalObservationsById","tempObservations","getAdditionalObservations","addNew","senderIndex","nonstandardObservations","addtl","resetCache","problemObservations","filterProblemObservations","filteredArray","truthy","patsObs","probObsBloodhound","getProblemObservations","selectedObservation","problemObservationTypeId","limit","removeAllergy","newPatientAllergies","filteredPatAllergies","patientAllergies","filterAllergies","allergyBloodhound","addNewAllergy","initializedNew","createdAllergy","matchedAllergy","newAllergy","selectedAllergy","trimmedAllergy","cleanedAllergy","resultsMessage","allergSaving","trimAllerg","retAllergy","searchQuery","beforeSend","jqXhr","setRequestHeader","parsedResponse","selectedallergy","matchingPatientAllergy","patallerg","allerg","matchingAllergy","matchingResponse","rateLimitWait","getAllergies","medicationsIndex","edit","isNotesExpanded","backgroundModalShowing","saveBackground","cancelBackground","goalsIndex","editEntity","saveoverride","canceloverride","cancel","reqpropname","computedBarrier","isDetailsExpanded","hasDetails","toggleIsExpanded","toggleDetailsExpanded","editBarrier","deleteBarrier","thisTaskBarrierId","basicObservations","observationsEndPoint","getBasicObservationsById","computedBasicObservations","contactsIndex","sortFunction","saveAndAddAnother","addCareMember","saveTeamCompleted","newCareTeam","newCareMember","canAddCareMember","memberok","careTeamMembers","careMemberRoles","pcmContactSubType","pcpContactSubType","addContactReturnedCallback","addContactReturned","btnEnabled","btnFunction","btnText","editCareMemberContact","editCareMember","deleteCareMember","selectedCareMember","activeWidgetOpen","careMemberRolesGroup","activeMembersSort","newSelectedPatient","leftRole","rightRole","inactiveMembersSort","leftUpdatedOn","rightUpdatedOn","careTeamColumn","selectedCareMemberName","teamIndex","savetype","primaryCareManager","primaryCarePhysician","primaryCareTeam","canAssignToMe","isPatientLoaded","thisUserCareMember","canReassignToMe","careMemberType","cmType","ctMember","editModalShowing","assignToMe","pcmRoleId","userCareManager","userContactId","userCareMember","caremanagerid","careManagerId","communicationModalShowing","secondaryCommunications","groupObservations","tempGroup","obsGroups","roughGroups","matchingObservations","ObservationGroup","isLoadingObs","hasBeenExpanded","computedObservations","parentObservation","firstItem","observationsHistoryEndPoint","groupSort","groupArray","blowUpObservations","dataObservationGroups","theseObservationGroups","obsgrp","thisMatchedGroup","arrayGroup","computedObservationGroups","theseObsGroups","removeObservation","toggleExpand","thisObservationId","toggleFlagged","currentValue","showFullSSN","ssnReturned","SSN","canViewFullSSN","primaryIdLabel","primaryIdTitle","primaryIdValue","primaryId","newCustomValue","searchQueryText","isEditModeOnly","isCreateNew","isDropDownFocused","checkEscape","getCustomValue","selectionLabel","optionsLabel","placeholderText","optionTextProp","optionIdValueProp","AddNewOptionText","isAddNewOption","isCreateNewEnabled","isEnabled","selectOptions","getSelectedValueText","addNewOption","addNewOptionToSelection","opToken","sbsToken","newValueText","alphabeticalSort","patientsObservations","filteredObservations","primaryProblems","theseProblems","searchProblems","limitToFive","secondaryProblems","focusProblemModalShowing","saveProblemObservations","cancelProblemObservations","computedGoal","isGoalDetailsExpanded","toggleGoalDetailsExpanded","addBarrier","doSomething","selectedPatientChanged","computedGoals","goalsSortTwo","emptyMessage","disposeWhen","addTask","editTask","addIntervention","editIntervention","setActiveGoal","setActiveTask","setActiveIntervention","saved","newBarrierId","deleteIntervention","createdString","updatedString","DropDownValue","newMedPostfix","screenModes","NoMedSelected","MedSelected","AddNewMed","AddNewMedValues","dosageForms","strengths","checkForDropdownValues","removeMedication","getFrequencyOptions","frequencies","lastMedName","isCreateNewFrequencyEnabled","newPatientMedication","patientMedications","filteredPatMed","trimmedMedication","thismed","trimmedForm","trimmedStrength","trimmedRoute","showOtherReason","showRefusalReason","statusName","initializeMedSearch","isAddingNewRouteValue","isAddingNewFormValue","isAddingNewStrengthValue","isAddingNewFrequencyValue","isDropdownEnabled","isNewMedicationName","setInvalidPrescribedDate","setInvalidOrderedDate","setInvalidRxDate","screenMode","medSaving","trimMed","isDup","medicationBloodhound","selectedmedication","ltrim","ProprietaryNames","matchingMedication","patmed","newMedication","addNewOptionText","resetDropdowns","clearDropdowns","ignoreMedicationNameChange","currentName","newName","medicationNameWatcher","medName","isValidCustomOptionValue","optionValue","evaluateIsCreateNewMedication","thisMed","isCustomValueCreated","medicationParameters","addingNewValue","initialMedicationValues","recalculateNDCWatcher","thisStrength","thisForm","populateDropDowns","fieldsReturned","DosageForms","Strengths","Routes","thisName","suggestion","foundMed","carePlanIndex","contractProgramsEndPoint","passedInSort","selectedSort","setActiveAction","setActiveProgram","setActiveModule","toggleOpen","toggleAllExpanded","addNewMedication","createdMedication","matchedMedication","patientmedications","newMedicationExists","retMedication","matchingPatientMedication","newThenAlphabeticalSort","deleteFocusProblem","problemType","theseStates","computedProblemObservations","finalPrograms","recentIndividualsList","statusModalShowing","saveStatus","cancelStatus","updateStatusReason","systemIdsSortFunc","showEllipsis","computedPatientSystemsDisplay","patientSystemsModalShowing","afterDelete","changes","updated","afterUpdate","created","processChanges","cancelPatientSystems","modalEntityObservable","editSystemIds","deleteTask","isshowing","objectiveSort","elementStateId","availableHistoricalActions","selectedHistoricalAction","descriptionSectionOpen","individualAttributesSectionOpen","attributesSectionOpen","objectivesSectionOpen","shouldBeShowing","computedObjectives","theseObjectives","historicalComputedObjectives","canEdit","getInProgressActions","setInProgressActions","inProgActs","isCareMemberSelected","thisActiveTab","actionActions","selectedAction","activeActionToken","disableActionActions","repeatCompleted","availableHistoricalActionsComputed","theseactions","selectedActionToken","selectedAllergyTypes","initialStatus","algsts","selectedAllergyStatuses","canReset","idsMatch","refreshData","myComputedAllergies","myAllergies","selectedallergytypes","selectedallergystatuses","theseAllergies","orderProp","finalallergies","allgtypeid","tempAllergies","matches","ati","temps","statusIdFilters","activeAllergyColumns","toggleAllergySort","addAllergy","myCareMembers","typeNotSet","selectedMedicationTypes","myComputedMedications","thesetypes","theseTypes","selectedmedicationtypes","statid","othertypes","medtype","matchingtype","myMedications","sortDefaultProp","finalmedications","tempmedications","tempmed","programActions","deleteFinished","querystring","thisColumn","theseWidgets","thisWidget","activeWidgets","modulesList","modulesListFlyoutOpen","Category","selectedCategory","contractPrograms","selectedProgram","createCategories","getContractProgramsByCategory","ContractNumber","cancelAssign","saveAssign","programAssigned","patientIndex","historyIndex","newNote","newTouchPoint","newUtilization","newTouchPointToken","touchpointType","selectedNoteType","activeNoteType","typename","methods","whos","outcomes","defaultOutcome","defaultMethod","defaultWho","defaultUtilizationSource","defaultDisposition","defaultUtilizationLocation","tpContentOpen","tpDetailsOpen","tpLastNotesOpen","gnContentOpen","gnLastNotesOpen","utContentOpen","utDetailsOpen","utLastNotesOpen","createNewNote","generalNoteType","thisNoteId","createNewUtilization","utilizationNoteType","thisUtilizationId","createNewTouchPoint","touchpointNoteType","thisTouchPointId","thisnow","alphabeticalDateSort","noteSaved","availablePrograms","saveTouchPoint","saveUtilization","viewDetails","gotoHistory","canSaveTouchPoint","canSaveUtilization","lastThreeNotes","lastNotes","isAdded","createQuickAddSections","quickAddSections","activeQuickAddTab","patientIsSelected","savable","createNewTodo","patientDetailsEntity","noPatient","thisTodoId","removeAssignment","assignedToDisplay","removeAssociation","removeUserAssociation","matchedCareManager","checkForMatch","validMatch","careManagersBloodhound","theseCareManagers","assignToDisplay","findColumnByName","allColumns","allcol","cssclass","sortprop","disablesort","canSort","allergySort","tempcols","thesecols","col","matchingCol","computedAllergies","td","existingDetailsOpen","newAssignedTo","showResultsHeader","searchResults","editMode","contactSelectedToken","contactSearch","canAddContact","showResults","contactAlreadyAssigned","validateCareMember","dup","roleName","pcPhysicians","pcManagers","duplicateRoleName","toDupName","computedRoles","roles","defaultRoleId","showCustomRole","existingNotesOpen","createNewContact","validateMemberRole","pcPysicians","saveMember","activeCareMemberStatus","inActiveCarememberStatus","selectCareMember","setCore","clearCore","Template","pathone","pathtwo","firstSection","Section","secondSection","templates","computedActiveDataType","matchingTemplate","newId","firstNameToken","checkDuplicateContact","lastNameToken","tabErrorsUpdater","isDuplicateProfile","isDuplicateSubType","selectedSubType","selectedSpecialty","selectedSubSpecialties","contactSpecialties","specialties","contactSubSpecialties","subSpecialties","checkDuplicateSubType","subspecial","duplicates","subt","subSpecialtyId","subDups","subsid","showInvalidSubSpecialties","showInvalidSpecialty","canAddContactSubType","addContactSubType","removeContactSubType","getSubSpecialtyIds","ids","getSubSpecialties","subs","contactTypesShowing","parseTime","parsed","tails","dateElm","dateName","dateStr","isDatepicker","minDateToken","maxDateToken","timeElm","timeName","dateCss","emptyDateIsValid","dateErrors","showInvalid","showInvalidTime","showTime","timeCss","isDisableTime","ShowTime","Modernizr","inputtypes","enteredDateStr","dateError","disableTime","datetimeWatcher","enteredTimeStr","enteredMoment","needsUpdate","btnMsg","gotoSource","hasPatient","saveFocusProblems","cancelFocusProblems","computedBarriers","setInvalidDueDate","interventionSort","progId","loadModalCompleted","computedInterventions","gotoGoal","nameSort","computedMedicationGroups","medicationSort","computedMedications","existingContentOpen","diastolicObservationValue","diastolic","systolicObservationValue","systolic","customBPString","diasvalue","systvalue","DUPLICATE_MESSAGE","ADD_DUPLICATE_MESSAGE","newSystemId","theseSystems","patientSystemStatuses","primarySystem","newPatientSystemIdValue","newSelectedSystem","addNewDuplicate","newIdValidationErrors","canAddNewPatientSystem","hasPrimarySelected","systemIdRecord","sysId","oneMessage","setPrimary","canAddId","computedEditSystemIds","newIdValidationErrorsArray","isInvalidProp","patientSystemId","patientSystemPropertyHasError","createNewId","deletePatientSystemId","taskok","taskdesc","taskSort","computedTasks","ErrorMsg","errorlist","deleteToDo","removePatientAssociation","todoSort","isBackendSort","computedTodos","finalTodos","noDataFound","selector","rad_prop","_this","svg","d3","color_scale","scale","category10","dynamic_radius","filters","min","padding","show_backgrounds","force","layout","charge","gravity","tick","data_grouping","chart_setup","radius","selectAll","enter","active_filters","all_conditions","overlap_exists","not","uniform","overlaps","overlap","duplicate","_","pluck","max","sets","conditional","group_index","central_patients","union","difference","color_mixer","isEmpty","venn","layoutFunction","classicMDSLayout","scaleSolution","patient_attractions","middle","coords","intersection","bounds","cluster","lens_center","unscoped_patients","flatten","circumcenter","determine_radius","gaps","sum","circleArea","sqrt","PI","node_animations","placeholders","filter_patients","datum","unscoped","k","q","geom","quadtree","alpha","o","visit","contain","hidden_rows","patient_ids","table_rows","contains","exit","cartesian_to_polar","point","center","angle","atan2","magnitude","functions","intx","points","circleCircleIntersection","slope","midpoint","yint","collide","nx1","nx2","ny1","ny2","quad","x1","y1","x2","y2","pow","Color","pop","mix","darken","rgbString","exclude","bound","coord","polar_to_cartesian","inverse","c1","c2","theta","cos","sin","idValue","computedOptions","thisList","computedLabel","thisItem","addStickySearchResultItem","highlightIt","added","addNewElm","ulSearchResults","stickeySearchItemText","highlight","stickeyIndex","selectElm","searchTokenInput","stickeyOption","isRequired","isInvalid","canClose","isInFocus","selectedValues","stringValue","checkForIdValue","idvalue","thisMatch","selectOption","stopClosing","foundComplexType","thisIndex","inFocusTracker","startClosing","isDisabled","toggleDropdown","checkClosing","ensureDialogInstance","objOrModuleId","contexts","dialogCount","MessageBox","autoclose","defaultTitle","dialogResult","defaultViewMarkup","setViewUrl","buttonClass","primaryButtonClass","secondaryButtonClass","class","setDefaults","getButtonClass","$index","getClass","getStyle","getButtonText","stringOrObject","t","getButtonValue","currentZIndex","getNextZIndex","getContext","addContext","dialogContext","helperName","createCompositionSettings","getDialog","__dialog__","theDialog","dialogActivator","closeSuccess","removeHost","addHost","host","showMessage","showDialog","closeDialog","messageBox","messageBoxView","messageBoxViewUrl","blockoutOpacity","removeDelay","blockout","z-index","opacity","oldBodyMarginRight","oldInlineMarginRight","marginRight","oldBodyOuterWidth","outerWidth","oldScrollTop","scrollTop","newBodyOuterWidth","$child","loadables","$this","setDialogPosition","childView","objDialog","$childView","reposition","focus","$view","$window","windowHeight","windowWidth","constrainedHeight","constrainedWidth","margin-top","margin-left","overflow-y","callbackParam","toJSON","jsonp","put","contentType","post","defaultShouldIgnorePropertyName","changeDetectionMethod","isNode","canConvertType","jquery","nonObservableTypes","createLookup","defineProperty","enumerable","configurable","writable","makeObservableArray","original","hasChanged","lookup","__observable__","__full__","es5Functions","methodName","arrayProto","observableArrayMethods","methodCallResult","observableArrayFunctions","arrayMethods","valueWillMutate","additiveArrayFunctions","convertObject","shouldIgnorePropertyName","descriptor","getPropertyDescriptor","convertProperty","logConversion","innerSetter","destroyAll","skipPromises","oa","func","arrayChanges","isWriteableObservable","evaluatorOrOptions","observableModule","getOwnPropertyDescriptor","getPrototypeOf","proto","skipConversion","changeDetection","typeAttribute","space","replacer","serialize","getTypeId","typeMap","registerType","reviver","getConstructor","fromJSON","deserialize","extractParts","widgetDataKey","kindModuleMaps","kindViewMaps","kind","registerKind","mapKind","mapKindToModuleId","convertKindToModulePath","mapKindToViewId","convertKindToViewPath","compositionSettings","bindingName","toRegister","removeAnimationClasses","ele","fadeOnly","classList","fadeOutDuration","endValues","clearValues","bottom","isIE","domPrefixes","elm","animationName","entrance","endTransition","scrollIfNeeded","keepScrollPosition","startTransition","animate","easing","always","startValues","fadeOut","fs","Cc","Ci","xmlRegExp","bodyRegExp","hasLocation","defaultProtocol","protocol","defaultHostName","hostname","defaultPort","port","buildMap","masterConfig","strip","jsEscape","createXhr","xhr","XMLHttpRequest","ActiveXObject","parseName","modName","ext","temp","isRelative","moduleName","xdRegExp","useXhr","uProtocol","uHostName","uPort","finishLoad","onLoad","isBuild","inlineText","nonStripName","toUrl","pluginName","asModule","writeFile","extPart","fileName","textWrite","contents","env","process","versions","nodeRequire","errback","file","readFileSync","onXhr","onreadystatechange","readyState","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","encoding","io","File","lineSeparator","lang","System","input","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","Components","classes","interfaces","inStream","convertStream","readData","fileObj","FileUtils","nsIFileInputStream","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACprGA,ADsGA;ACrlhvrzmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxhuhanjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7JA,AD8JA;AC7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpHA,ADqHA;ACpxOA,ADyOA;ACxOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzxtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpv3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChzrIA,ADsIA;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClnGA,ADoGA;ACnvEA,ADwEA;ACvhclWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzJA,AD0JA;ACznhUA,ADiUA;AChthBA,ADuhBA;ACthuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACpxtmvJA,ADwJA;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjnpBA,ADopBA;ACnpjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACprzjrlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACptnjhnpBA,AD2pBA;AC1pxYA,ADyYA;ACxYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnvlhxtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChzlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1XA,AD2XA;AC1XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxlpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzptrrsznBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACznHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChppQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjhNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzhvrgvhhVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvjxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrpxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvzbpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA,ADsFA;ACrtjrtrfile":"main.build.js","sourcesContent":["(function() {\n/**\r\n * almond 0.2.6 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/jrburke/almond for details\r\n */\r\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\r\n//be followed.\r\n/*jslint sloppy: true */\r\n/*global setTimeout: false */\r\n\r\nvar requirejs, require, define;\r\n(function (undef) {\r\n    var main, req, makeMap, handlers,\r\n        defined = {},\r\n        waiting = {},\r\n        config = {},\r\n        defining = {},\r\n        hasOwn = Object.prototype.hasOwnProperty,\r\n        aps = [].slice;\r\n\r\n    function hasProp(obj, prop) {\r\n        return hasOwn.call(obj, prop);\r\n    }\r\n\r\n    /**\r\n     * Given a relative module name, like ./something, normalize it to\r\n     * a real name that can be mapped to a path.\r\n     * @param {String} name the relative name\r\n     * @param {String} baseName a real name that the name arg is relative\r\n     * to.\r\n     * @returns {String} normalized name\r\n     */\r\n    function normalize(name, baseName) {\r\n        var nameParts, nameSegment, mapValue, foundMap,\r\n            foundI, foundStarMap, starI, i, j, part,\r\n            baseParts = baseName && baseName.split(\"/\"),\r\n            map = config.map,\r\n            starMap = (map && map['*']) || {};\r\n\r\n        //Adjust any relative paths.\r\n        if (name && name.charAt(0) === \".\") {\r\n            //If have a base name, try to normalize against it,\r\n            //otherwise, assume it is a top-level require that will\r\n            //be relative to baseUrl in the end.\r\n            if (baseName) {\r\n                //Convert baseName to array, and lop off the last part,\r\n                //so that . matches that \"directory\" and not name of the baseName's\r\n                //module. For instance, baseName of \"one/two/three\", maps to\r\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\r\n                //this normalization.\r\n                baseParts = baseParts.slice(0, baseParts.length - 1);\r\n\r\n                name = baseParts.concat(name.split(\"/\"));\r\n\r\n                //start trimDots\r\n                for (i = 0; i < name.length; i += 1) {\r\n                    part = name[i];\r\n                    if (part === \".\") {\r\n                        name.splice(i, 1);\r\n                        i -= 1;\r\n                    } else if (part === \"..\") {\r\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\r\n                            //End of the line. Keep at least one non-dot\r\n                            //path segment at the front so it can be mapped\r\n                            //correctly to disk. Otherwise, there is likely\r\n                            //no path mapping for a path starting with '..'.\r\n                            //This can still fail, but catches the most reasonable\r\n                            //uses of ..\r\n                            break;\r\n                        } else if (i > 0) {\r\n                            name.splice(i - 1, 2);\r\n                            i -= 2;\r\n                        }\r\n                    }\r\n                }\r\n                //end trimDots\r\n\r\n                name = name.join(\"/\");\r\n            } else if (name.indexOf('./') === 0) {\r\n                // No baseName, so this is ID is resolved relative\r\n                // to baseUrl, pull off the leading dot.\r\n                name = name.substring(2);\r\n            }\r\n        }\r\n\r\n        //Apply map config if available.\r\n        if ((baseParts || starMap) && map) {\r\n            nameParts = name.split('/');\r\n\r\n            for (i = nameParts.length; i > 0; i -= 1) {\r\n                nameSegment = nameParts.slice(0, i).join(\"/\");\r\n\r\n                if (baseParts) {\r\n                    //Find the longest baseName segment match in the config.\r\n                    //So, do joins on the biggest to smallest lengths of baseParts.\r\n                    for (j = baseParts.length; j > 0; j -= 1) {\r\n                        mapValue = map[baseParts.slice(0, j).join('/')];\r\n\r\n                        //baseName segment has  config, find if it has one for\r\n                        //this name.\r\n                        if (mapValue) {\r\n                            mapValue = mapValue[nameSegment];\r\n                            if (mapValue) {\r\n                                //Match, update name to the new value.\r\n                                foundMap = mapValue;\r\n                                foundI = i;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (foundMap) {\r\n                    break;\r\n                }\r\n\r\n                //Check for a star map match, but just hold on to it,\r\n                //if there is a shorter segment match later in a matching\r\n                //config, then favor over this star map.\r\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\r\n                    foundStarMap = starMap[nameSegment];\r\n                    starI = i;\r\n                }\r\n            }\r\n\r\n            if (!foundMap && foundStarMap) {\r\n                foundMap = foundStarMap;\r\n                foundI = starI;\r\n            }\r\n\r\n            if (foundMap) {\r\n                nameParts.splice(0, foundI, foundMap);\r\n                name = nameParts.join('/');\r\n            }\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    function makeRequire(relName, forceSync) {\r\n        return function () {\r\n            //A version of a require function that passes a moduleName\r\n            //value for items that may need to\r\n            //look up paths relative to the moduleName\r\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\r\n        };\r\n    }\r\n\r\n    function makeNormalize(relName) {\r\n        return function (name) {\r\n            return normalize(name, relName);\r\n        };\r\n    }\r\n\r\n    function makeLoad(depName) {\r\n        return function (value) {\r\n            defined[depName] = value;\r\n        };\r\n    }\r\n\r\n    function callDep(name) {\r\n        if (hasProp(waiting, name)) {\r\n            var args = waiting[name];\r\n            delete waiting[name];\r\n            defining[name] = true;\r\n            main.apply(undef, args);\r\n        }\r\n\r\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\r\n            throw new Error('No ' + name);\r\n        }\r\n        return defined[name];\r\n    }\r\n\r\n    //Turns a plugin!resource to [plugin, resource]\r\n    //with the plugin being undefined if the name\r\n    //did not have a plugin prefix.\r\n    function splitPrefix(name) {\r\n        var prefix,\r\n            index = name ? name.indexOf('!') : -1;\r\n        if (index > -1) {\r\n            prefix = name.substring(0, index);\r\n            name = name.substring(index + 1, name.length);\r\n        }\r\n        return [prefix, name];\r\n    }\r\n\r\n    function onResourceLoad(name, defined, deps){\r\n        if(requirejs.onResourceLoad && name){\r\n            requirejs.onResourceLoad({defined:defined}, {id:name}, deps);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Makes a name map, normalizing the name, and using a plugin\r\n     * for normalization if necessary. Grabs a ref to plugin\r\n     * too, as an optimization.\r\n     */\r\n    makeMap = function (name, relName) {\r\n        var plugin,\r\n            parts = splitPrefix(name),\r\n            prefix = parts[0];\r\n\r\n        name = parts[1];\r\n\r\n        if (prefix) {\r\n            prefix = normalize(prefix, relName);\r\n            plugin = callDep(prefix);\r\n        }\r\n\r\n        //Normalize according\r\n        if (prefix) {\r\n            if (plugin && plugin.normalize) {\r\n                name = plugin.normalize(name, makeNormalize(relName));\r\n            } else {\r\n                name = normalize(name, relName);\r\n            }\r\n        } else {\r\n            name = normalize(name, relName);\r\n            parts = splitPrefix(name);\r\n            prefix = parts[0];\r\n            name = parts[1];\r\n            if (prefix) {\r\n                plugin = callDep(prefix);\r\n            }\r\n        }\r\n\r\n        //Using ridiculous property names for space reasons\r\n        return {\r\n            f: prefix ? prefix + '!' + name : name, //fullName\r\n            n: name,\r\n            pr: prefix,\r\n            p: plugin\r\n        };\r\n    };\r\n\r\n    function makeConfig(name) {\r\n        return function () {\r\n            return (config && config.config && config.config[name]) || {};\r\n        };\r\n    }\r\n\r\n    handlers = {\r\n        require: function (name) {\r\n            return makeRequire(name);\r\n        },\r\n        exports: function (name) {\r\n            var e = defined[name];\r\n            if (typeof e !== 'undefined') {\r\n                return e;\r\n            } else {\r\n                return (defined[name] = {});\r\n            }\r\n        },\r\n        module: function (name) {\r\n            return {\r\n                id: name,\r\n                uri: '',\r\n                exports: defined[name],\r\n                config: makeConfig(name)\r\n            };\r\n        }\r\n    };\r\n\r\n    main = function (name, deps, callback, relName) {\r\n        var cjsModule, depName, ret, map, i,\r\n            args = [],\r\n            usingExports;\r\n\r\n        //Use name if no relName\r\n        relName = relName || name;\r\n\r\n        //Call the callback to define the module, if necessary.\r\n        if (typeof callback === 'function') {\r\n\r\n            //Pull out the defined dependencies and pass the ordered\r\n            //values to the callback.\r\n            //Default to [require, exports, module] if no deps\r\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\r\n            for (i = 0; i < deps.length; i += 1) {\r\n                map = makeMap(deps[i], relName);\r\n                depName = map.f;\r\n\r\n                //Fast path CommonJS standard dependencies.\r\n                if (depName === \"require\") {\r\n                    args[i] = handlers.require(name);\r\n                } else if (depName === \"exports\") {\r\n                    //CommonJS module spec 1.1\r\n                    args[i] = handlers.exports(name);\r\n                    usingExports = true;\r\n                } else if (depName === \"module\") {\r\n                    //CommonJS module spec 1.1\r\n                    cjsModule = args[i] = handlers.module(name);\r\n                } else if (hasProp(defined, depName) ||\r\n                    hasProp(waiting, depName) ||\r\n                    hasProp(defining, depName)) {\r\n                    args[i] = callDep(depName);\r\n                } else if (map.p) {\r\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\r\n                    args[i] = defined[depName];\r\n                } else {\r\n                    throw new Error(name + ' missing ' + depName);\r\n                }\r\n            }\r\n\r\n            ret = callback.apply(defined[name], args);\r\n\r\n            if (name) {\r\n                //If setting exports via \"module\" is in play,\r\n                //favor that over return value and exports. After that,\r\n                //favor a non-undefined return value over exports use.\r\n                if (cjsModule && cjsModule.exports !== undef &&\r\n                    cjsModule.exports !== defined[name]) {\r\n                    defined[name] = cjsModule.exports;\r\n                } else if (ret !== undef || !usingExports) {\r\n                    //Use the return value from the function.\r\n                    defined[name] = ret;\r\n                }\r\n            }\r\n        } else if (name) {\r\n            //May just be an object definition for the module. Only\r\n            //worry about defining if have a module name.\r\n            defined[name] = callback;\r\n        }\r\n\r\n        onResourceLoad(name, defined, args);\r\n    };\r\n\r\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\r\n        if (typeof deps === \"string\") {\r\n            if (handlers[deps]) {\r\n                //callback in this case is really relName\r\n                return handlers[deps](callback);\r\n            }\r\n            //Just return the module wanted. In this scenario, the\r\n            //deps arg is the module name, and second arg (if passed)\r\n            //is just the relName.\r\n            //Normalize module name, if it contains . or ..\r\n            return callDep(makeMap(deps, callback).f);\r\n        } else if (!deps.splice) {\r\n            //deps is a config object, not an array.\r\n            config = deps;\r\n            if (callback.splice) {\r\n                //callback is an array, which means it is a dependency list.\r\n                //Adjust args if there are dependencies\r\n                deps = callback;\r\n                callback = relName;\r\n                relName = null;\r\n            } else {\r\n                deps = undef;\r\n            }\r\n        }\r\n\r\n        //Support require(['a'])\r\n        callback = callback || function () {};\r\n\r\n        //If relName is a function, it is an errback handler,\r\n        //so remove it.\r\n        if (typeof relName === 'function') {\r\n            relName = forceSync;\r\n            forceSync = alt;\r\n        }\r\n\r\n        //Simulate async callback;\r\n        if (forceSync) {\r\n            main(undef, deps, callback, relName);\r\n        } else {\r\n            //Using a non-zero value because of concern for what old browsers\r\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\r\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\r\n            //If want a value immediately, use require('id') instead -- something\r\n            //that works in almond on the global level, but not guaranteed and\r\n            //unlikely to work in other AMD implementations.\r\n            setTimeout(function () {\r\n                main(undef, deps, callback, relName);\r\n            }, 4);\r\n        }\r\n\r\n        return req;\r\n    };\r\n\r\n    /**\r\n     * Just drops the config on the floor, but returns req in case\r\n     * the config return value is used.\r\n     */\r\n    req.config = function (cfg) {\r\n        config = cfg;\r\n        if (config.deps) {\r\n            req(config.deps, config.callback);\r\n        }\r\n        return req;\r\n    };\r\n\r\n    /**\r\n     * Expose module registry for debugging and tooling\r\n     */\r\n    requirejs._defined = defined;\r\n\r\n    define = function (name, deps, callback) {\r\n\r\n        //This module may not have dependencies\r\n        if (!deps.splice) {\r\n            //deps is not an array, so probably means\r\n            //an object literal or factory function for\r\n            //the value. Adjust args.\r\n            callback = deps;\r\n            deps = [];\r\n        }\r\n\r\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\r\n            waiting[name] = [name, deps, callback];\r\n        }\r\n    };\r\n\r\n    define.amd = {\r\n        jQuery: true\r\n    };\r\n}());\n","/**\r\n * The system module encapsulates the most basic features used by other modules.\r\n * @module system\r\n * @requires require\r\n * @requires jquery\r\n */\r\ndefine('durandal/system',['require', 'jquery'], function(require, $) {\r\n    var isDebugging = false,\r\n        nativeKeys = Object.keys,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        toString = Object.prototype.toString,\r\n        system,\r\n        treatAsIE8 = false,\r\n        nativeIsArray = Array.isArray,\r\n        slice = Array.prototype.slice;\r\n\r\n    //polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim\r\n    if (!String.prototype.trim) {\r\n        String.prototype.trim = function () {\r\n            return this.replace(/^\\s+|\\s+$/g, '');\r\n        };\r\n    }\r\n\r\n    //see http://patik.com/blog/complete-cross-browser-console-log/\r\n    // Tell IE9 to use its built-in console\r\n    if (Function.prototype.bind && (typeof console === 'object' || typeof console === 'function') && typeof console.log == 'object') {\r\n        try {\r\n            ['log', 'info', 'warn', 'error', 'assert', 'dir', 'clear', 'profile', 'profileEnd']\r\n                .forEach(function(method) {\r\n                    console[method] = this.call(console[method], console);\r\n                }, Function.prototype.bind);\r\n        } catch (ex) {\r\n            treatAsIE8 = true;\r\n        }\r\n    }\r\n\r\n    // callback for dojo's loader \r\n    // note: if you wish to use Durandal with dojo's AMD loader,\r\n    // currently you must fork the dojo source with the following\r\n    // dojo/dojo.js, line 1187, the last line of the finishExec() function: \r\n    //  (add) signal(\"moduleLoaded\", [module.result, module.mid]);\r\n    // an enhancement request has been submitted to dojo to make this\r\n    // a permanent change. To view the status of this request, visit:\r\n    // http://bugs.dojotoolkit.org/ticket/16727\r\n\r\n    if (require.on) {\r\n        require.on(\"moduleLoaded\", function(module, mid) {\r\n            system.setModuleId(module, mid);\r\n        });\r\n    }\r\n\r\n    // callback for require.js loader\r\n    if (typeof requirejs !== 'undefined') {\r\n        requirejs.onResourceLoad = function(context, map, depArray) {\r\n            system.setModuleId(context.defined[map.id], map.id);\r\n        };\r\n    }\r\n\r\n    var noop = function() { };\r\n\r\n    var log = function() {\r\n        try {\r\n            // Modern browsers\r\n            if (typeof console != 'undefined' && typeof console.log == 'function') {\r\n                // Opera 11\r\n                if (window.opera) {\r\n                    var i = 0;\r\n                    while (i < arguments.length) {\r\n                        console.log('Item ' + (i + 1) + ': ' + arguments[i]);\r\n                        i++;\r\n                    }\r\n                }\r\n                // All other modern browsers\r\n                else if ((slice.call(arguments)).length == 1 && typeof slice.call(arguments)[0] == 'string') {\r\n                    console.log((slice.call(arguments)).toString());\r\n                } else {\r\n                    console.log.apply(console, slice.call(arguments));\r\n                }\r\n            }\r\n            // IE8\r\n            else if ((!Function.prototype.bind || treatAsIE8) && typeof console != 'undefined' && typeof console.log == 'object') {\r\n                Function.prototype.call.call(console.log, console, slice.call(arguments));\r\n            }\r\n\r\n            // IE7 and lower, and other old browsers\r\n        } catch (ignore) { }\r\n    };\r\n\r\n    var logError = function(error, err) {\r\n        var exception;\r\n        \r\n        if(error instanceof Error){\r\n            exception = error;\r\n        } else {\r\n            exception = new Error(error);\r\n        }\r\n        \r\n        exception.innerError = err;\r\n        \r\n        //Report the error as an error, not as a log\r\n        try {\r\n            // Modern browsers (it's only a single item, no need for argument splitting as in log() above)\r\n            if (typeof console != 'undefined' && typeof console.error == 'function') {\r\n                console.error(exception);\r\n            }\r\n            // IE8\r\n            else if ((!Function.prototype.bind || treatAsIE8) && typeof console != 'undefined' && typeof console.error == 'object') {\r\n                Function.prototype.call.call(console.error, console, exception);\r\n            }\r\n            // IE7 and lower, and other old browsers\r\n        } catch (ignore) { }\r\n\r\n        throw exception;\r\n    };\r\n\r\n    /**\r\n     * @class SystemModule\r\n     * @static\r\n     */\r\n    system = {\r\n        /**\r\n         * Durandal's version.\r\n         * @property {string} version\r\n         */\r\n        version: \"2.1.0\",\r\n        /**\r\n         * A noop function.\r\n         * @method noop\r\n         */\r\n        noop: noop,\r\n        /**\r\n         * Gets the module id for the specified object.\r\n         * @method getModuleId\r\n         * @param {object} obj The object whose module id you wish to determine.\r\n         * @return {string} The module id.\r\n         */\r\n        getModuleId: function(obj) {\r\n            if (!obj) {\r\n                return null;\r\n            }\r\n\r\n            if (typeof obj == 'function' && obj.prototype) {\r\n                return obj.prototype.__moduleId__;\r\n            }\r\n\r\n            if (typeof obj == 'string') {\r\n                return null;\r\n            }\r\n\r\n            return obj.__moduleId__;\r\n        },\r\n        /**\r\n         * Sets the module id for the specified object.\r\n         * @method setModuleId\r\n         * @param {object} obj The object whose module id you wish to set.\r\n         * @param {string} id The id to set for the specified object.\r\n         */\r\n        setModuleId: function(obj, id) {\r\n            if (!obj) {\r\n                return;\r\n            }\r\n\r\n            if (typeof obj == 'function' && obj.prototype) {\r\n                obj.prototype.__moduleId__ = id;\r\n                return;\r\n            }\r\n\r\n            if (typeof obj == 'string') {\r\n                return;\r\n            }\r\n\r\n            obj.__moduleId__ = id;\r\n        },\r\n        /**\r\n         * Resolves the default object instance for a module. If the module is an object, the module is returned. If the module is a function, that function is called with `new` and it's result is returned.\r\n         * @method resolveObject\r\n         * @param {object} module The module to use to get/create the default object for.\r\n         * @return {object} The default object for the module.\r\n         */\r\n        resolveObject: function(module) {\r\n            if (system.isFunction(module)) {\r\n                return new module();\r\n            } else {\r\n                return module;\r\n            }\r\n        },\r\n        /**\r\n         * Gets/Sets whether or not Durandal is in debug mode.\r\n         * @method debug\r\n         * @param {boolean} [enable] Turns on/off debugging.\r\n         * @return {boolean} Whether or not Durandal is current debugging.\r\n         */\r\n        debug: function(enable) {\r\n            if (arguments.length == 1) {\r\n                isDebugging = enable;\r\n                if (isDebugging) {\r\n                    this.log = log;\r\n                    this.error = logError;\r\n                    this.log('Debug:Enabled');\r\n                } else {\r\n                    this.log('Debug:Disabled');\r\n                    this.log = noop;\r\n                    this.error = noop;\r\n                }\r\n            }\r\n\r\n            return isDebugging;\r\n        },\r\n        /**\r\n         * Logs data to the console. Pass any number of parameters to be logged. Log output is not processed if the framework is not running in debug mode.\r\n         * @method log\r\n         * @param {object} info* The objects to log.\r\n         */\r\n        log: noop,\r\n        /**\r\n         * Logs an error.\r\n         * @method error\r\n         * @param {string|Error} obj The error to report.\r\n         */\r\n        error: noop,\r\n        /**\r\n         * Asserts a condition by throwing an error if the condition fails.\r\n         * @method assert\r\n         * @param {boolean} condition The condition to check.\r\n         * @param {string} message The message to report in the error if the condition check fails.\r\n         */\r\n        assert: function (condition, message) {\r\n            if (!condition) {\r\n                system.error(new Error(message || 'Assert:Failed'));\r\n            }\r\n        },\r\n        /**\r\n         * Creates a deferred object which can be used to create a promise. Optionally pass a function action to perform which will be passed an object used in resolving the promise.\r\n         * @method defer\r\n         * @param {function} [action] The action to defer. You will be passed the deferred object as a paramter.\r\n         * @return {Deferred} The deferred object.\r\n         */\r\n        defer: function(action) {\r\n            return $.Deferred(action);\r\n        },\r\n        /**\r\n         * Creates a simple V4 UUID. This should not be used as a PK in your database. It can be used to generate internal, unique ids. For a more robust solution see [node-uuid](https://github.com/broofa/node-uuid).\r\n         * @method guid\r\n         * @return {string} The guid.\r\n         */\r\n        guid: function() {\r\n            var d = new Date().getTime();\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (d + Math.random() * 16) % 16 | 0;\r\n                d = Math.floor(d/16);\r\n                return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16);\r\n            });\r\n        },\r\n        /**\r\n         * Uses require.js to obtain a module. This function returns a promise which resolves with the module instance. You can pass more than one module id to this function or an array of ids. If more than one or an array is passed, then the promise will resolve with an array of module instances.\r\n         * @method acquire\r\n         * @param {string|string[]} moduleId The id(s) of the modules to load.\r\n         * @return {Promise} A promise for the loaded module(s).\r\n         */\r\n        acquire: function() {\r\n            var modules,\r\n                first = arguments[0],\r\n                arrayRequest = false;\r\n\r\n            if(system.isArray(first)){\r\n                modules = first;\r\n                arrayRequest = true;\r\n            }else{\r\n                modules = slice.call(arguments, 0);\r\n            }\r\n\r\n            return this.defer(function(dfd) {\r\n                require(modules, function() {\r\n                    var args = arguments;\r\n                    setTimeout(function() {\r\n                        if(args.length > 1 || arrayRequest){\r\n                            dfd.resolve(slice.call(args, 0));\r\n                        }else{\r\n                            dfd.resolve(args[0]);\r\n                        }\r\n                    }, 1);\r\n                }, function(err){\r\n                    dfd.reject(err);\r\n                });\r\n            }).promise();\r\n        },\r\n        /**\r\n         * Extends the first object with the properties of the following objects.\r\n         * @method extend\r\n         * @param {object} obj The target object to extend.\r\n         * @param {object} extension* Uses to extend the target object.\r\n         */\r\n        extend: function(obj) {\r\n            var rest = slice.call(arguments, 1);\r\n\r\n            for (var i = 0; i < rest.length; i++) {\r\n                var source = rest[i];\r\n\r\n                if (source) {\r\n                    for (var prop in source) {\r\n                        obj[prop] = source[prop];\r\n                    }\r\n                }\r\n            }\r\n\r\n            return obj;\r\n        },\r\n        /**\r\n         * Uses a setTimeout to wait the specified milliseconds.\r\n         * @method wait\r\n         * @param {number} milliseconds The number of milliseconds to wait.\r\n         * @return {Promise}\r\n         */\r\n        wait: function(milliseconds) {\r\n            return system.defer(function(dfd) {\r\n                setTimeout(dfd.resolve, milliseconds);\r\n            }).promise();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets all the owned keys of the specified object.\r\n     * @method keys\r\n     * @param {object} object The object whose owned keys should be returned.\r\n     * @return {string[]} The keys.\r\n     */\r\n    system.keys = nativeKeys || function(obj) {\r\n        if (obj !== Object(obj)) {\r\n            throw new TypeError('Invalid object');\r\n        }\r\n\r\n        var keys = [];\r\n\r\n        for (var key in obj) {\r\n            if (hasOwnProperty.call(obj, key)) {\r\n                keys[keys.length] = key;\r\n            }\r\n        }\r\n\r\n        return keys;\r\n    };\r\n\r\n    /**\r\n     * Determines if the specified object is an html element.\r\n     * @method isElement\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n    system.isElement = function(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    };\r\n\r\n    /**\r\n     * Determines if the specified object is an array.\r\n     * @method isArray\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n    system.isArray = nativeIsArray || function(obj) {\r\n        return toString.call(obj) == '[object Array]';\r\n    };\r\n\r\n    /**\r\n     * Determines if the specified object is...an object. ie. Not an array, string, etc.\r\n     * @method isObject\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n    system.isObject = function(obj) {\r\n        return obj === Object(obj);\r\n    };\r\n\r\n    /**\r\n     * Determines if the specified object is a boolean.\r\n     * @method isBoolean\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n    system.isBoolean = function(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    };\r\n\r\n    /**\r\n     * Determines if the specified object is a promise.\r\n     * @method isPromise\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n    system.isPromise = function(obj) {\r\n        return obj && system.isFunction(obj.then);\r\n    };\r\n\r\n    /**\r\n     * Determines if the specified object is a function arguments object.\r\n     * @method isArguments\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n\r\n    /**\r\n     * Determines if the specified object is a function.\r\n     * @method isFunction\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n\r\n    /**\r\n     * Determines if the specified object is a string.\r\n     * @method isString\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n\r\n    /**\r\n     * Determines if the specified object is a number.\r\n     * @method isNumber\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n\r\n    /**\r\n     * Determines if the specified object is a date.\r\n     * @method isDate\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n\r\n    /**\r\n     * Determines if the specified object is a boolean.\r\n     * @method isBoolean\r\n     * @param {object} object The object to check.\r\n     * @return {boolean} True if matches the type, false otherwise.\r\n     */\r\n\r\n    //isArguments, isFunction, isString, isNumber, isDate, isRegExp.\r\n    var isChecks = ['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'];\r\n\r\n    function makeIsFunction(name) {\r\n        var value = '[object ' + name + ']';\r\n        system['is' + name] = function(obj) {\r\n            return toString.call(obj) == value;\r\n        };\r\n    }\r\n\r\n    for (var i = 0; i < isChecks.length; i++) {\r\n        makeIsFunction(isChecks[i]);\r\n    }\r\n\r\n    return system;\r\n});\r\n\n","/**\r\n * The viewEngine module provides information to the viewLocator module which is used to locate the view's source file. The viewEngine also transforms a view id into a view instance.\r\n * @module viewEngine\r\n * @requires system\r\n * @requires jquery\r\n */\r\ndefine('durandal/viewEngine',['durandal/system', 'jquery'], function (system, $) {\r\n    var parseMarkup;\r\n\r\n    if ($.parseHTML) {\r\n        parseMarkup = function (html) {\r\n            return $.parseHTML(html);\r\n        };\r\n    } else {\r\n        parseMarkup = function (html) {\r\n            return $(html).get();\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @class ViewEngineModule\r\n     * @static\r\n     */\r\n    return {\r\n        cache:{},\r\n        /**\r\n         * The file extension that view source files are expected to have.\r\n         * @property {string} viewExtension\r\n         * @default .html\r\n         */\r\n        viewExtension: '.html',\r\n        /**\r\n         * The name of the RequireJS loader plugin used by the viewLocator to obtain the view source. (Use requirejs to map the plugin's full path).\r\n         * @property {string} viewPlugin\r\n         * @default text\r\n         */\r\n        viewPlugin: 'text',\r\n        /**\r\n         * Parameters passed to the RequireJS loader plugin used by the viewLocator to obtain the view source.\r\n         * @property {string} viewPluginParameters\r\n         * @default The empty string by default.\r\n         */\r\n        viewPluginParameters: '',\r\n        /**\r\n         * Determines if the url is a url for a view, according to the view engine.\r\n         * @method isViewUrl\r\n         * @param {string} url The potential view url.\r\n         * @return {boolean} True if the url is a view url, false otherwise.\r\n         */\r\n        isViewUrl: function (url) {\r\n            return url.indexOf(this.viewExtension, url.length - this.viewExtension.length) !== -1;\r\n        },\r\n        /**\r\n         * Converts a view url into a view id.\r\n         * @method convertViewUrlToViewId\r\n         * @param {string} url The url to convert.\r\n         * @return {string} The view id.\r\n         */\r\n        convertViewUrlToViewId: function (url) {\r\n            return url.substring(0, url.length - this.viewExtension.length);\r\n        },\r\n        /**\r\n         * Converts a view id into a full RequireJS path.\r\n         * @method convertViewIdToRequirePath\r\n         * @param {string} viewId The view id to convert.\r\n         * @return {string} The require path.\r\n         */\r\n        convertViewIdToRequirePath: function (viewId) {\r\n            var plugin = this.viewPlugin ? this.viewPlugin + '!' : '';\r\n            return plugin + viewId + this.viewExtension + this.viewPluginParameters;\r\n        },\r\n        /**\r\n         * Parses the view engine recognized markup and returns DOM elements.\r\n         * @method parseMarkup\r\n         * @param {string} markup The markup to parse.\r\n         * @return {DOMElement[]} The elements.\r\n         */\r\n        parseMarkup: parseMarkup,\r\n        /**\r\n         * Calls `parseMarkup` and then pipes the results through `ensureSingleElement`.\r\n         * @method processMarkup\r\n         * @param {string} markup The markup to process.\r\n         * @return {DOMElement} The view.\r\n         */\r\n        processMarkup: function (markup) {\r\n            var allElements = this.parseMarkup(markup);\r\n            return this.ensureSingleElement(allElements);\r\n        },\r\n        /**\r\n         * Converts an array of elements into a single element. White space and comments are removed. If a single element does not remain, then the elements are wrapped.\r\n         * @method ensureSingleElement\r\n         * @param {DOMElement[]} allElements The elements.\r\n         * @return {DOMElement} A single element.\r\n         */\r\n        ensureSingleElement:function(allElements){\r\n            if (allElements.length == 1) {\r\n                return allElements[0];\r\n            }\r\n\r\n            var withoutCommentsOrEmptyText = [];\r\n\r\n            for (var i = 0; i < allElements.length; i++) {\r\n                var current = allElements[i];\r\n                if (current.nodeType != 8) {\r\n                    if (current.nodeType == 3) {\r\n                        var result = /\\S/.test(current.nodeValue);\r\n                        if (!result) {\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    withoutCommentsOrEmptyText.push(current);\r\n                }\r\n            }\r\n\r\n            if (withoutCommentsOrEmptyText.length > 1) {\r\n                return $(withoutCommentsOrEmptyText).wrapAll('<div class=\"durandal-wrapper\"></div>').parent().get(0);\r\n            }\r\n\r\n            return withoutCommentsOrEmptyText[0];\r\n        },\r\n        /**\r\n         * Gets the view associated with the id from the cache of parsed views.\r\n         * @method tryGetViewFromCache\r\n         * @param {string} id The view id to lookup in the cache.\r\n         * @return {DOMElement|null} The cached view or null if it's not in the cache.\r\n         */\r\n        tryGetViewFromCache:function(id) {\r\n            return this.cache[id];\r\n        },\r\n        /**\r\n         * Puts the view associated with the id into the cache of parsed views.\r\n         * @method putViewInCache\r\n         * @param {string} id The view id whose view should be cached.\r\n         * @param {DOMElement} view The view to cache.\r\n         */\r\n        putViewInCache: function (id, view) {\r\n            this.cache[id] = view;\r\n        },\r\n        /**\r\n         * Creates the view associated with the view id.\r\n         * @method createView\r\n         * @param {string} viewId The view id whose view should be created.\r\n         * @return {Promise} A promise of the view.\r\n         */\r\n        createView: function(viewId) {\r\n            var that = this;\r\n            var requirePath = this.convertViewIdToRequirePath(viewId);\r\n            var existing = this.tryGetViewFromCache(requirePath);\r\n\r\n            if (existing) {\r\n                return system.defer(function(dfd) {\r\n                    dfd.resolve(existing.cloneNode(true));\r\n                }).promise();\r\n            }\r\n\r\n            return system.defer(function(dfd) {\r\n                system.acquire(requirePath).then(function(markup) {\r\n                    var element = that.processMarkup(markup);\r\n                    element.setAttribute('data-view', viewId);\r\n                    that.putViewInCache(requirePath, element);\r\n                    dfd.resolve(element.cloneNode(true));\r\n                }).fail(function(err) {\r\n                    that.createFallbackView(viewId, requirePath, err).then(function(element) {\r\n                        element.setAttribute('data-view', viewId);\r\n                        that.cache[requirePath] = element;\r\n                        dfd.resolve(element.cloneNode(true));\r\n                    });\r\n                });\r\n            }).promise();\r\n        },\r\n        /**\r\n         * Called when a view cannot be found to provide the opportunity to locate or generate a fallback view. Mainly used to ease development.\r\n         * @method createFallbackView\r\n         * @param {string} viewId The view id whose view should be created.\r\n         * @param {string} requirePath The require path that was attempted.\r\n         * @param {Error} requirePath The error that was returned from the attempt to locate the default view.\r\n         * @return {Promise} A promise for the fallback view.\r\n         */\r\n        createFallbackView: function (viewId, requirePath, err) {\r\n            var that = this,\r\n                message = 'View Not Found. Searched for \"' + viewId + '\" via path \"' + requirePath + '\".';\r\n\r\n            return system.defer(function(dfd) {\r\n                dfd.resolve(that.processMarkup('<div class=\"durandal-view-404\">' + message + '</div>'));\r\n            }).promise();\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * The viewLocator module collaborates with the viewEngine module to provide views (literally dom sub-trees) to other parts of the framework as needed. The primary consumer of the viewLocator is the composition module.\r\n * @module viewLocator\r\n * @requires system\r\n * @requires viewEngine\r\n */\r\ndefine('durandal/viewLocator',['durandal/system', 'durandal/viewEngine'], function (system, viewEngine) {\r\n    function findInElements(nodes, url) {\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var current = nodes[i];\r\n            var existingUrl = current.getAttribute('data-view');\r\n            if (existingUrl == url) {\r\n                return current;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function escape(str) {\r\n        return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}\\=\\!\\<\\>\\|\\:])/g, \"\\\\$1\");\r\n    }\r\n\r\n    /**\r\n     * @class ViewLocatorModule\r\n     * @static\r\n     */\r\n    return {\r\n        /**\r\n         * Allows you to set up a convention for mapping module folders to view folders. It is a convenience method that customizes `convertModuleIdToViewId` and `translateViewIdToArea` under the covers.\r\n         * @method useConvention\r\n         * @param {string} [modulesPath] A string to match in the path and replace with the viewsPath. If not specified, the match is 'viewmodels'.\r\n         * @param {string} [viewsPath] The replacement for the modulesPath. If not specified, the replacement is 'views'.\r\n         * @param {string} [areasPath] Partial views are mapped to the \"views\" folder if not specified. Use this parameter to change their location.\r\n         */\r\n        useConvention: function(modulesPath, viewsPath, areasPath) {\r\n            modulesPath = modulesPath || 'viewmodels';\r\n            viewsPath = viewsPath || 'views';\r\n            areasPath = areasPath || viewsPath;\r\n\r\n            var reg = new RegExp(escape(modulesPath), 'gi');\r\n\r\n            this.convertModuleIdToViewId = function (moduleId) {\r\n                return moduleId.replace(reg, viewsPath);\r\n            };\r\n\r\n            this.translateViewIdToArea = function (viewId, area) {\r\n                if (!area || area == 'partial') {\r\n                    return areasPath + '/' + viewId;\r\n                }\r\n                \r\n                return areasPath + '/' + area + '/' + viewId;\r\n            };\r\n        },\r\n        /**\r\n         * Maps an object instance to a view instance.\r\n         * @method locateViewForObject\r\n         * @param {object} obj The object to locate the view for.\r\n         * @param {string} [area] The area to translate the view to.\r\n         * @param {DOMElement[]} [elementsToSearch] An existing set of elements to search first.\r\n         * @return {Promise} A promise of the view.\r\n         */\r\n        locateViewForObject: function(obj, area, elementsToSearch) {\r\n            var view;\r\n\r\n            if (obj.getView) {\r\n                view = obj.getView();\r\n                if (view) {\r\n                    return this.locateView(view, area, elementsToSearch);\r\n                }\r\n            }\r\n\r\n            if (obj.viewUrl) {\r\n                return this.locateView(obj.viewUrl, area, elementsToSearch);\r\n            }\r\n\r\n            var id = system.getModuleId(obj);\r\n            if (id) {\r\n                return this.locateView(this.convertModuleIdToViewId(id), area, elementsToSearch);\r\n            }\r\n\r\n            return this.locateView(this.determineFallbackViewId(obj), area, elementsToSearch);\r\n        },\r\n        /**\r\n         * Converts a module id into a view id. By default the ids are the same.\r\n         * @method convertModuleIdToViewId\r\n         * @param {string} moduleId The module id.\r\n         * @return {string} The view id.\r\n         */\r\n        convertModuleIdToViewId: function(moduleId) {\r\n            return moduleId;\r\n        },\r\n        /**\r\n         * If no view id can be determined, this function is called to genreate one. By default it attempts to determine the object's type and use that.\r\n         * @method determineFallbackViewId\r\n         * @param {object} obj The object to determine the fallback id for.\r\n         * @return {string} The view id.\r\n         */\r\n        determineFallbackViewId: function (obj) {\r\n            var funcNameRegex = /function (.{1,})\\(/;\r\n            var results = (funcNameRegex).exec((obj).constructor.toString());\r\n            var typeName = (results && results.length > 1) ? results[1] : \"\";\r\n            typeName = typeName.trim();\r\n            return 'views/' + typeName;\r\n        },\r\n        /**\r\n         * Takes a view id and translates it into a particular area. By default, no translation occurs.\r\n         * @method translateViewIdToArea\r\n         * @param {string} viewId The view id.\r\n         * @param {string} area The area to translate the view to.\r\n         * @return {string} The translated view id.\r\n         */\r\n        translateViewIdToArea: function (viewId, area) {\r\n            return viewId;\r\n        },\r\n        /**\r\n         * Locates the specified view.\r\n         * @method locateView\r\n         * @param {string|DOMElement} viewOrUrlOrId A view, view url or view id to locate.\r\n         * @param {string} [area] The area to translate the view to.\r\n         * @param {DOMElement[]} [elementsToSearch] An existing set of elements to search first.\r\n         * @return {Promise} A promise of the view.\r\n         */\r\n        locateView: function(viewOrUrlOrId, area, elementsToSearch) {\r\n            if (typeof viewOrUrlOrId === 'string') {\r\n                var viewId;\r\n\r\n                if (viewEngine.isViewUrl(viewOrUrlOrId)) {\r\n                    viewId = viewEngine.convertViewUrlToViewId(viewOrUrlOrId);\r\n                } else {\r\n                    viewId = viewOrUrlOrId;\r\n                }\r\n\r\n                if (area) {\r\n                    viewId = this.translateViewIdToArea(viewId, area);\r\n                }\r\n\r\n                if (elementsToSearch) {\r\n                    var existing = findInElements(elementsToSearch, viewId);\r\n                    if (existing) {\r\n                        return system.defer(function(dfd) {\r\n                            dfd.resolve(existing);\r\n                        }).promise();\r\n                    }\r\n                }\r\n\r\n                return viewEngine.createView(viewId);\r\n            }\r\n\r\n            return system.defer(function(dfd) {\r\n                dfd.resolve(viewOrUrlOrId);\r\n            }).promise();\r\n        }\r\n    };\r\n});\n","/**\r\n * The binder joins an object instance and a DOM element tree by applying databinding and/or invoking binding lifecycle callbacks (binding and bindingComplete).\r\n * @module binder\r\n * @requires system\r\n * @requires knockout\r\n */\r\ndefine('durandal/binder',['durandal/system', 'knockout'], function (system, ko) {\r\n    var binder,\r\n        insufficientInfoMessage = 'Insufficient Information to Bind',\r\n        unexpectedViewMessage = 'Unexpected View Type',\r\n        bindingInstructionKey = 'durandal-binding-instruction',\r\n        koBindingContextKey = '__ko_bindingContext__';\r\n\r\n    function normalizeBindingInstruction(result){\r\n        if(result === undefined){\r\n            return { applyBindings: true };\r\n        }\r\n\r\n        if(system.isBoolean(result)){\r\n            return { applyBindings:result };\r\n        }\r\n\r\n        if(result.applyBindings === undefined){\r\n            result.applyBindings = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function doBind(obj, view, bindingTarget, data){\r\n        if (!view || !bindingTarget) {\r\n            if (binder.throwOnErrors) {\r\n                system.error(insufficientInfoMessage);\r\n            } else {\r\n                system.log(insufficientInfoMessage, view, data);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!view.getAttribute) {\r\n            if (binder.throwOnErrors) {\r\n                system.error(unexpectedViewMessage);\r\n            } else {\r\n                system.log(unexpectedViewMessage, view, data);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var viewName = view.getAttribute('data-view');\r\n\r\n        try {\r\n            var instruction;\r\n\r\n            if (obj && obj.binding) {\r\n                instruction = obj.binding(view);\r\n            }\r\n\r\n            instruction = normalizeBindingInstruction(instruction);\r\n            binder.binding(data, view, instruction);\r\n\r\n            if(instruction.applyBindings){\r\n                system.log('Binding', viewName, data);\r\n                ko.applyBindings(bindingTarget, view);\r\n            }else if(obj){\r\n                ko.utils.domData.set(view, koBindingContextKey, { $data:obj });\r\n            }\r\n\r\n            binder.bindingComplete(data, view, instruction);\r\n\r\n            if (obj && obj.bindingComplete) {\r\n                obj.bindingComplete(view);\r\n            }\r\n\r\n            ko.utils.domData.set(view, bindingInstructionKey, instruction);\r\n            return instruction;\r\n        } catch (e) {\r\n            e.message = e.message + ';\\nView: ' + viewName + \";\\nModuleId: \" + system.getModuleId(data);\r\n            if (binder.throwOnErrors) {\r\n                system.error(e);\r\n            } else {\r\n                system.log(e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @class BinderModule\r\n     * @static\r\n     */\r\n    return binder = {\r\n        /**\r\n         * Called before every binding operation. Does nothing by default.\r\n         * @method binding\r\n         * @param {object} data The data that is about to be bound.\r\n         * @param {DOMElement} view The view that is about to be bound.\r\n         * @param {object} instruction The object that carries the binding instructions.\r\n         */\r\n        binding: system.noop,\r\n        /**\r\n         * Called after every binding operation. Does nothing by default.\r\n         * @method bindingComplete\r\n         * @param {object} data The data that has just been bound.\r\n         * @param {DOMElement} view The view that has just been bound.\r\n         * @param {object} instruction The object that carries the binding instructions.\r\n         */\r\n        bindingComplete: system.noop,\r\n        /**\r\n         * Indicates whether or not the binding system should throw errors or not.\r\n         * @property {boolean} throwOnErrors\r\n         * @default false The binding system will not throw errors by default. Instead it will log them.\r\n         */\r\n        throwOnErrors: false,\r\n        /**\r\n         * Gets the binding instruction that was associated with a view when it was bound.\r\n         * @method getBindingInstruction\r\n         * @param {DOMElement} view The view that was previously bound.\r\n         * @return {object} The object that carries the binding instructions.\r\n         */\r\n        getBindingInstruction:function(view){\r\n            return ko.utils.domData.get(view, bindingInstructionKey);\r\n        },\r\n        /**\r\n         * Binds the view, preserving the existing binding context. Optionally, a new context can be created, parented to the previous context.\r\n         * @method bindContext\r\n         * @param {KnockoutBindingContext} bindingContext The current binding context.\r\n         * @param {DOMElement} view The view to bind.\r\n         * @param {object} [obj] The data to bind to, causing the creation of a child binding context if present.\r\n         * @param {string} [dataAlias] An alias for $data if present.\r\n         */\r\n        bindContext: function(bindingContext, view, obj, dataAlias) {\r\n            if (obj && bindingContext) {\r\n                bindingContext = bindingContext.createChildContext(obj, typeof(dataAlias) === 'string' ? dataAlias : null);\r\n            }\r\n\r\n            return doBind(obj, view, bindingContext, obj || (bindingContext ? bindingContext.$data : null));\r\n        },\r\n        /**\r\n         * Binds the view, preserving the existing binding context. Optionally, a new context can be created, parented to the previous context.\r\n         * @method bind\r\n         * @param {object} obj The data to bind to.\r\n         * @param {DOMElement} view The view to bind.\r\n         */\r\n        bind: function(obj, view) {\r\n            return doBind(obj, view, obj, obj);\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * The activator module encapsulates all logic related to screen/component activation.\r\n * An activator is essentially an asynchronous state machine that understands a particular state transition protocol.\r\n * The protocol ensures that the following series of events always occur: `canDeactivate` (previous state), `canActivate` (new state), `deactivate` (previous state), `activate` (new state).\r\n * Each of the _can_ callbacks may return a boolean, affirmative value or promise for one of those. If either of the _can_ functions yields a false result, then activation halts.\r\n * @module activator\r\n * @requires system\r\n * @requires knockout\r\n */\r\ndefine('durandal/activator',['durandal/system', 'knockout'], function (system, ko) {\r\n    var activator;\r\n    var defaultOptions = {\r\n        canDeactivate:true\r\n    };\r\n\r\n    function ensureSettings(settings) {\r\n        if (settings == undefined) {\r\n            settings = {};\r\n        }\r\n\r\n        if (!system.isBoolean(settings.closeOnDeactivate)) {\r\n            settings.closeOnDeactivate = activator.defaults.closeOnDeactivate;\r\n        }\r\n\r\n        if (!settings.beforeActivate) {\r\n            settings.beforeActivate = activator.defaults.beforeActivate;\r\n        }\r\n\r\n        if (!settings.afterDeactivate) {\r\n            settings.afterDeactivate = activator.defaults.afterDeactivate;\r\n        }\r\n\r\n        if(!settings.affirmations){\r\n            settings.affirmations = activator.defaults.affirmations;\r\n        }\r\n\r\n        if (!settings.interpretResponse) {\r\n            settings.interpretResponse = activator.defaults.interpretResponse;\r\n        }\r\n\r\n        if (!settings.areSameItem) {\r\n            settings.areSameItem = activator.defaults.areSameItem;\r\n        }\r\n\r\n        if (!settings.findChildActivator) {\r\n            settings.findChildActivator = activator.defaults.findChildActivator;\r\n        }\r\n\r\n        return settings;\r\n    }\r\n\r\n    function invoke(target, method, data) {\r\n        if (system.isArray(data)) {\r\n            return target[method].apply(target, data);\r\n        }\r\n\r\n        return target[method](data);\r\n    }\r\n\r\n    function deactivate(item, close, settings, dfd, setter) {\r\n        if (item && item.deactivate) {\r\n            system.log('Deactivating', item);\r\n\r\n            var result;\r\n            try {\r\n                result = item.deactivate(close);\r\n            } catch(error) {\r\n                system.log('ERROR: ' + error.message, error);\r\n                dfd.resolve(false);\r\n                return;\r\n            }\r\n\r\n            if (result && result.then) {\r\n                result.then(function() {\r\n                    settings.afterDeactivate(item, close, setter);\r\n                    dfd.resolve(true);\r\n                }, function(reason) {\r\n                    system.log(reason);\r\n                    dfd.resolve(false);\r\n                });\r\n            } else {\r\n                settings.afterDeactivate(item, close, setter);\r\n                dfd.resolve(true);\r\n            }\r\n        } else {\r\n            if (item) {\r\n                settings.afterDeactivate(item, close, setter);\r\n            }\r\n\r\n            dfd.resolve(true);\r\n        }\r\n    }\r\n\r\n    function activate(newItem, activeItem, callback, activationData) {\r\n        var result;\r\n\r\n        if(newItem && newItem.activate) {\r\n            system.log('Activating', newItem);\r\n\r\n            try {\r\n                result = invoke(newItem, 'activate', activationData);\r\n            } catch(error) {\r\n                system.log('ERROR: ' + error.message, error);\r\n                callback(false);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if(result && result.then) {\r\n            result.then(function() {\r\n                activeItem(newItem);\r\n                callback(true);\r\n            }, function(reason) {\r\n                system.log('ERROR: ' + reason.message, reason);\r\n                callback(false);\r\n            });\r\n        } else {\r\n            activeItem(newItem);\r\n            callback(true);\r\n        }\r\n    }\r\n\r\n    function canDeactivateItem(item, close, settings, options) {\r\n        options = system.extend({}, defaultOptions, options);\r\n        settings.lifecycleData = null;\r\n\r\n        return system.defer(function (dfd) {\r\n            function continueCanDeactivate() {\r\n                if (item && item.canDeactivate && options.canDeactivate) {\r\n                    var resultOrPromise;\r\n                    try {\r\n                        resultOrPromise = item.canDeactivate(close);\r\n                    } catch (error) {\r\n                        system.log('ERROR: ' + error.message, error);\r\n                        dfd.resolve(false);\r\n                        return;\r\n                    }\r\n\r\n                    if (resultOrPromise.then) {\r\n                        resultOrPromise.then(function (result) {\r\n                            settings.lifecycleData = result;\r\n                            dfd.resolve(settings.interpretResponse(result));\r\n                        }, function (reason) {\r\n                            system.log('ERROR: ' + reason.message, reason);\r\n                            dfd.resolve(false);\r\n                        });\r\n                    } else {\r\n                        settings.lifecycleData = resultOrPromise;\r\n                        dfd.resolve(settings.interpretResponse(resultOrPromise));\r\n                    }\r\n                } else {\r\n                    dfd.resolve(true);\r\n                }\r\n            }\r\n\r\n            var childActivator = settings.findChildActivator(item);\r\n            if (childActivator) {\r\n                childActivator.canDeactivate().then(function(result) {\r\n                    if (result) {\r\n                        continueCanDeactivate();\r\n                    } else {\r\n                        dfd.resolve(false);\r\n                    }\r\n                });\r\n            } else {\r\n                continueCanDeactivate();\r\n            }\r\n        }).promise();\r\n    };\r\n\r\n    function canActivateItem(newItem, activeItem, settings, activeData, newActivationData) {\r\n        settings.lifecycleData = null;\r\n\r\n        return system.defer(function (dfd) {\r\n            if (settings.areSameItem(activeItem(), newItem, activeData, newActivationData)) {\r\n                dfd.resolve(true);\r\n                return;\r\n            }\r\n\r\n            if (newItem && newItem.canActivate) {\r\n                var resultOrPromise;\r\n                try {\r\n                    resultOrPromise = invoke(newItem, 'canActivate', newActivationData);\r\n                } catch (error) {\r\n                    system.log('ERROR: ' + error.message, error);\r\n                    dfd.resolve(false);\r\n                    return;\r\n                }\r\n\r\n                if (resultOrPromise.then) {\r\n                    resultOrPromise.then(function(result) {\r\n                        settings.lifecycleData = result;\r\n                        dfd.resolve(settings.interpretResponse(result));\r\n                    }, function(reason) {\r\n                        system.log('ERROR: ' + reason.message, reason);\r\n                        dfd.resolve(false);\r\n                    });\r\n                } else {\r\n                    settings.lifecycleData = resultOrPromise;\r\n                    dfd.resolve(settings.interpretResponse(resultOrPromise));\r\n                }\r\n            } else {\r\n                dfd.resolve(true);\r\n            }\r\n        }).promise();\r\n    };\r\n\r\n    /**\r\n     * An activator is a read/write computed observable that enforces the activation lifecycle whenever changing values.\r\n     * @class Activator\r\n     */\r\n    function createActivator(initialActiveItem, settings) {\r\n        var activeItem = ko.observable(null);\r\n        var activeData;\r\n\r\n        settings = ensureSettings(settings);\r\n\r\n        var computed = ko.computed({\r\n            read: function () {\r\n                return activeItem();\r\n            },\r\n            write: function (newValue) {\r\n                computed.viaSetter = true;\r\n                computed.activateItem(newValue);\r\n            }\r\n        });\r\n\r\n        computed.__activator__ = true;\r\n\r\n        /**\r\n         * The settings for this activator.\r\n         * @property {ActivatorSettings} settings\r\n         */\r\n        computed.settings = settings;\r\n        settings.activator = computed;\r\n\r\n        /**\r\n         * An observable which indicates whether or not the activator is currently in the process of activating an instance.\r\n         * @method isActivating\r\n         * @return {boolean}\r\n         */\r\n        computed.isActivating = ko.observable(false);\r\n\r\n        computed.forceActiveItem = function (item) {\r\n            activeItem(item);\r\n        };\r\n\r\n        /**\r\n         * Determines whether or not the specified item can be deactivated.\r\n         * @method canDeactivateItem\r\n         * @param {object} item The item to check.\r\n         * @param {boolean} close Whether or not to check if close is possible.\r\n         * @param {object} options Options for controlling the activation process.\r\n         * @return {promise}\r\n         */\r\n        computed.canDeactivateItem = function (item, close, options) {\r\n            return canDeactivateItem(item, close, settings, options);\r\n        };\r\n\r\n        /**\r\n         * Deactivates the specified item.\r\n         * @method deactivateItem\r\n         * @param {object} item The item to deactivate.\r\n         * @param {boolean} close Whether or not to close the item.\r\n         * @return {promise}\r\n         */\r\n        computed.deactivateItem = function (item, close) {\r\n            return system.defer(function(dfd) {\r\n                computed.canDeactivateItem(item, close).then(function(canDeactivate) {\r\n                    if (canDeactivate) {\r\n                        deactivate(item, close, settings, dfd, activeItem);\r\n                    } else {\r\n                        computed.notifySubscribers();\r\n                        dfd.resolve(false);\r\n                    }\r\n                });\r\n            }).promise();\r\n        };\r\n\r\n        /**\r\n         * Determines whether or not the specified item can be activated.\r\n         * @method canActivateItem\r\n         * @param {object} item The item to check.\r\n         * @param {object} activationData Data associated with the activation.\r\n         * @return {promise}\r\n         */\r\n        computed.canActivateItem = function (newItem, activationData) {\r\n            return canActivateItem(newItem, activeItem, settings, activeData, activationData);\r\n        };\r\n\r\n        /**\r\n         * Activates the specified item.\r\n         * @method activateItem\r\n         * @param {object} newItem The item to activate.\r\n         * @param {object} newActivationData Data associated with the activation.\r\n         * @param {object} options Options for controlling the activation process.\r\n         * @return {promise}\r\n         */\r\n        computed.activateItem = function (newItem, newActivationData, options) {\r\n            var viaSetter = computed.viaSetter;\r\n            computed.viaSetter = false;\r\n\r\n            return system.defer(function (dfd) {\r\n                if (computed.isActivating()) {\r\n                    dfd.resolve(false);\r\n                    return;\r\n                }\r\n\r\n                computed.isActivating(true);\r\n\r\n                var currentItem = activeItem();\r\n                if (settings.areSameItem(currentItem, newItem, activeData, newActivationData)) {\r\n                    computed.isActivating(false);\r\n                    dfd.resolve(true);\r\n                    return;\r\n                }\r\n\r\n                computed.canDeactivateItem(currentItem, settings.closeOnDeactivate, options).then(function (canDeactivate) {\r\n                    if (canDeactivate) {\r\n                        computed.canActivateItem(newItem, newActivationData).then(function (canActivate) {\r\n                            if (canActivate) {\r\n                                system.defer(function (dfd2) {\r\n                                    deactivate(currentItem, settings.closeOnDeactivate, settings, dfd2);\r\n                                }).promise().then(function () {\r\n                                        newItem = settings.beforeActivate(newItem, newActivationData);\r\n                                        activate(newItem, activeItem, function (result) {\r\n                                            activeData = newActivationData;\r\n                                            computed.isActivating(false);\r\n                                            dfd.resolve(result);\r\n                                        }, newActivationData);\r\n                                    });\r\n                            } else {\r\n                                if (viaSetter) {\r\n                                    computed.notifySubscribers();\r\n                                }\r\n\r\n                                computed.isActivating(false);\r\n                                dfd.resolve(false);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        if (viaSetter) {\r\n                            computed.notifySubscribers();\r\n                        }\r\n\r\n                        computed.isActivating(false);\r\n                        dfd.resolve(false);\r\n                    }\r\n                });\r\n            }).promise();\r\n        };\r\n\r\n        /**\r\n         * Determines whether or not the activator, in its current state, can be activated.\r\n         * @method canActivate\r\n         * @return {promise}\r\n         */\r\n        computed.canActivate = function () {\r\n            var toCheck;\r\n\r\n            if (initialActiveItem) {\r\n                toCheck = initialActiveItem;\r\n                initialActiveItem = false;\r\n            } else {\r\n                toCheck = computed();\r\n            }\r\n\r\n            return computed.canActivateItem(toCheck);\r\n        };\r\n\r\n        /**\r\n         * Activates the activator, in its current state.\r\n         * @method activate\r\n         * @return {promise}\r\n         */\r\n        computed.activate = function () {\r\n            var toActivate;\r\n\r\n            if (initialActiveItem) {\r\n                toActivate = initialActiveItem;\r\n                initialActiveItem = false;\r\n            } else {\r\n                toActivate = computed();\r\n            }\r\n\r\n            return computed.activateItem(toActivate);\r\n        };\r\n\r\n        /**\r\n         * Determines whether or not the activator, in its current state, can be deactivated.\r\n         * @method canDeactivate\r\n         * @return {promise}\r\n         */\r\n        computed.canDeactivate = function (close) {\r\n            return computed.canDeactivateItem(computed(), close);\r\n        };\r\n\r\n        /**\r\n         * Deactivates the activator, in its current state.\r\n         * @method deactivate\r\n         * @return {promise}\r\n         */\r\n        computed.deactivate = function (close) {\r\n            return computed.deactivateItem(computed(), close);\r\n        };\r\n\r\n        computed.includeIn = function (includeIn) {\r\n            includeIn.canActivate = function () {\r\n                return computed.canActivate();\r\n            };\r\n\r\n            includeIn.activate = function () {\r\n                return computed.activate();\r\n            };\r\n\r\n            includeIn.canDeactivate = function (close) {\r\n                return computed.canDeactivate(close);\r\n            };\r\n\r\n            includeIn.deactivate = function (close) {\r\n                return computed.deactivate(close);\r\n            };\r\n        };\r\n\r\n        if (settings.includeIn) {\r\n            computed.includeIn(settings.includeIn);\r\n        } else if (initialActiveItem) {\r\n            computed.activate();\r\n        }\r\n\r\n        computed.forItems = function (items) {\r\n            settings.closeOnDeactivate = false;\r\n\r\n            settings.determineNextItemToActivate = function (list, lastIndex) {\r\n                var toRemoveAt = lastIndex - 1;\r\n\r\n                if (toRemoveAt == -1 && list.length > 1) {\r\n                    return list[1];\r\n                }\r\n\r\n                if (toRemoveAt > -1 && toRemoveAt < list.length - 1) {\r\n                    return list[toRemoveAt];\r\n                }\r\n\r\n                return null;\r\n            };\r\n\r\n            settings.beforeActivate = function (newItem) {\r\n                var currentItem = computed();\r\n\r\n                if (!newItem) {\r\n                    newItem = settings.determineNextItemToActivate(items, currentItem ? items.indexOf(currentItem) : 0);\r\n                } else {\r\n                    var index = items.indexOf(newItem);\r\n\r\n                    if (index == -1) {\r\n                        items.push(newItem);\r\n                    } else {\r\n                        newItem = items()[index];\r\n                    }\r\n                }\r\n\r\n                return newItem;\r\n            };\r\n\r\n            settings.afterDeactivate = function (oldItem, close) {\r\n                if (close) {\r\n                    items.remove(oldItem);\r\n                }\r\n            };\r\n\r\n            var originalCanDeactivate = computed.canDeactivate;\r\n            computed.canDeactivate = function (close) {\r\n                if (close) {\r\n                    return system.defer(function (dfd) {\r\n                        var list = items();\r\n                        var results = [];\r\n\r\n                        function finish() {\r\n                            for (var j = 0; j < results.length; j++) {\r\n                                if (!results[j]) {\r\n                                    dfd.resolve(false);\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            dfd.resolve(true);\r\n                        }\r\n\r\n                        for (var i = 0; i < list.length; i++) {\r\n                            computed.canDeactivateItem(list[i], close).then(function (result) {\r\n                                results.push(result);\r\n                                if (results.length == list.length) {\r\n                                    finish();\r\n                                }\r\n                            });\r\n                        }\r\n                    }).promise();\r\n                } else {\r\n                    return originalCanDeactivate();\r\n                }\r\n            };\r\n\r\n            var originalDeactivate = computed.deactivate;\r\n            computed.deactivate = function (close) {\r\n                if (close) {\r\n                    return system.defer(function (dfd) {\r\n                        var list = items();\r\n                        var results = 0;\r\n                        var listLength = list.length;\r\n\r\n                        function doDeactivate(item) {\r\n                            setTimeout(function () {\r\n                                computed.deactivateItem(item, close).then(function () {\r\n                                    results++;\r\n                                    items.remove(item);\r\n                                    if (results == listLength) {\r\n                                        dfd.resolve();\r\n                                    }\r\n                                });\r\n                            }, 1);\r\n                        }\r\n\r\n                        for (var i = 0; i < listLength; i++) {\r\n                            doDeactivate(list[i]);\r\n                        }\r\n                    }).promise();\r\n                } else {\r\n                    return originalDeactivate();\r\n                }\r\n            };\r\n\r\n            return computed;\r\n        };\r\n\r\n        return computed;\r\n    }\r\n\r\n    /**\r\n     * @class ActivatorSettings\r\n     * @static\r\n     */\r\n    var activatorSettings = {\r\n        /**\r\n         * The default value passed to an object's deactivate function as its close parameter.\r\n         * @property {boolean} closeOnDeactivate\r\n         * @default true\r\n         */\r\n        closeOnDeactivate: true,\r\n        /**\r\n         * Lower-cased words which represent a truthy value.\r\n         * @property {string[]} affirmations\r\n         * @default ['yes', 'ok', 'true']\r\n         */\r\n        affirmations: ['yes', 'ok', 'true'],\r\n        /**\r\n         * Interprets the response of a `canActivate` or `canDeactivate` call using the known affirmative values in the `affirmations` array.\r\n         * @method interpretResponse\r\n         * @param {object} value\r\n         * @return {boolean}\r\n         */\r\n        interpretResponse: function(value) {\r\n            if(system.isObject(value)) {\r\n                value = value.can || false;\r\n            }\r\n\r\n            if(system.isString(value)) {\r\n                return ko.utils.arrayIndexOf(this.affirmations, value.toLowerCase()) !== -1;\r\n            }\r\n\r\n            return value;\r\n        },\r\n        /**\r\n         * Determines whether or not the current item and the new item are the same.\r\n         * @method areSameItem\r\n         * @param {object} currentItem\r\n         * @param {object} newItem\r\n         * @param {object} currentActivationData\r\n         * @param {object} newActivationData\r\n         * @return {boolean}\r\n         */\r\n        areSameItem: function(currentItem, newItem, currentActivationData, newActivationData) {\r\n            return currentItem == newItem;\r\n        },\r\n        /**\r\n         * Called immediately before the new item is activated.\r\n         * @method beforeActivate\r\n         * @param {object} newItem\r\n         */\r\n        beforeActivate: function(newItem) {\r\n            return newItem;\r\n        },\r\n        /**\r\n         * Called immediately after the old item is deactivated.\r\n         * @method afterDeactivate\r\n         * @param {object} oldItem The previous item.\r\n         * @param {boolean} close Whether or not the previous item was closed.\r\n         * @param {function} setter The activate item setter function.\r\n         */\r\n        afterDeactivate: function(oldItem, close, setter) {\r\n            if(close && setter) {\r\n                setter(null);\r\n            }\r\n        },\r\n        findChildActivator: function(item){\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @class ActivatorModule\r\n     * @static\r\n     */\r\n    activator = {\r\n        /**\r\n         * The default settings used by activators.\r\n         * @property {ActivatorSettings} defaults\r\n         */\r\n        defaults: activatorSettings,\r\n        /**\r\n         * Creates a new activator.\r\n         * @method create\r\n         * @param {object} [initialActiveItem] The item which should be immediately activated upon creation of the ativator.\r\n         * @param {ActivatorSettings} [settings] Per activator overrides of the default activator settings.\r\n         * @return {Activator} The created activator.\r\n         */\r\n        create: createActivator,\r\n        /**\r\n         * Determines whether or not the provided object is an activator or not.\r\n         * @method isActivator\r\n         * @param {object} object Any object you wish to verify as an activator or not.\r\n         * @return {boolean} True if the object is an activator; false otherwise.\r\n         */\r\n        isActivator:function(object){\r\n            return object && object.__activator__;\r\n        }\r\n    };\r\n\r\n    return activator;\r\n});\n","/**\r\n * The composition module encapsulates all functionality related to visual composition.\r\n * @module composition\r\n * @requires system\r\n * @requires viewLocator\r\n * @requires binder\r\n * @requires viewEngine\r\n * @requires activator\r\n * @requires jquery\r\n * @requires knockout\r\n */\r\ndefine('durandal/composition',['durandal/system', 'durandal/viewLocator', 'durandal/binder', 'durandal/viewEngine', 'durandal/activator', 'jquery', 'knockout'], function (system, viewLocator, binder, viewEngine, activator, $, ko) {\r\n    var dummyModel = {},\r\n        activeViewAttributeName = 'data-active-view',\r\n        composition,\r\n        compositionCompleteCallbacks = [],\r\n        compositionCount = 0,\r\n        compositionDataKey = 'durandal-composition-data',\r\n        partAttributeName = 'data-part',\r\n        bindableSettings = ['model', 'view', 'transition', 'area', 'strategy', 'activationData', 'onError'],\r\n        visibilityKey = \"durandal-visibility-data\",\r\n        composeBindings = ['compose:'];\r\n    \r\n    function onError(context, error, element) {\r\n        try {\r\n            if (context.onError) {\r\n                try {\r\n                    context.onError(error, element);\r\n                } catch (e) {\r\n                    system.error(e);\r\n                }\r\n            } else {\r\n                system.error(error);\r\n            }\r\n        } finally {\r\n            endComposition(context, element, true);\r\n        }\r\n    }\r\n\r\n    function getHostState(parent) {\r\n        var elements = [];\r\n        var state = {\r\n            childElements: elements,\r\n            activeView: null\r\n        };\r\n\r\n        var child = ko.virtualElements.firstChild(parent);\r\n\r\n        while (child) {\r\n            if (child.nodeType == 1) {\r\n                elements.push(child);\r\n                if (child.getAttribute(activeViewAttributeName)) {\r\n                    state.activeView = child;\r\n                }\r\n            }\r\n\r\n            child = ko.virtualElements.nextSibling(child);\r\n        }\r\n\r\n        if(!state.activeView){\r\n            state.activeView = elements[0];\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    function endComposition(context, element, error) {\r\n        compositionCount--;\r\n\r\n        if(compositionCount === 0) {\r\n            var callBacks = compositionCompleteCallbacks;\r\n            compositionCompleteCallbacks = [];\r\n            \r\n            if (!error) {\r\n                setTimeout(function () {\r\n                    var i = callBacks.length;\r\n\r\n                    while (i--) {\r\n                        try {\r\n                            callBacks[i]();\r\n                        } catch (e) {\r\n                            onError(context, e, element);\r\n                        }\r\n                    }\r\n                }, 1);\r\n            }\r\n        }\r\n\r\n        cleanUp(context);\r\n    }\r\n\r\n    function cleanUp(context){\r\n        delete context.activeView;\r\n        delete context.viewElements;\r\n    }\r\n\r\n    function tryActivate(context, successCallback, skipActivation, element) {\r\n        if(skipActivation){\r\n            successCallback();\r\n        } else if (context.activate && context.model && context.model.activate) {\r\n            var result;\r\n\r\n            try{\r\n                if(system.isArray(context.activationData)) {\r\n                    result = context.model.activate.apply(context.model, context.activationData);\r\n                } else {\r\n                    result = context.model.activate(context.activationData);\r\n                }\r\n\r\n                if(result && result.then) {\r\n                    result.then(successCallback, function(reason) {\r\n                        onError(context, reason, element);\r\n                        successCallback();\r\n                    });\r\n                } else if(result || result === undefined) {\r\n                    successCallback();\r\n                } else {\r\n                    endComposition(context, element);\r\n                }\r\n            }\r\n            catch(e){\r\n                onError(context, e, element);\r\n            }\r\n        } else {\r\n            successCallback();\r\n        }\r\n    }\r\n\r\n    function triggerAttach(context, element) {\r\n        var context = this;\r\n\r\n        if (context.activeView) {\r\n            context.activeView.removeAttribute(activeViewAttributeName);\r\n        }\r\n\r\n        if (context.child) {\r\n            try{\r\n                if (context.model && context.model.attached) {\r\n                    if (context.composingNewView || context.alwaysTriggerAttach) {\r\n                        context.model.attached(context.child, context.parent, context);\r\n                    }\r\n                }\r\n\r\n                if (context.attached) {\r\n                    context.attached(context.child, context.parent, context);\r\n                }\r\n\r\n                context.child.setAttribute(activeViewAttributeName, true);\r\n\r\n                if (context.composingNewView && context.model && context.model.detached) {\r\n                    ko.utils.domNodeDisposal.addDisposeCallback(context.child, function () {\r\n                        try{\r\n                            context.model.detached(context.child, context.parent, context);\r\n                        }catch(e2){\r\n                            onError(context, e2, element);\r\n                        }\r\n                    });\r\n                }\r\n            }catch(e){\r\n                onError(context, e, element);\r\n            }\r\n        }\r\n\r\n        context.triggerAttach = system.noop;\r\n    }\r\n\r\n    function shouldTransition(context) {\r\n        if (system.isString(context.transition)) {\r\n            if (context.activeView) {\r\n                if (context.activeView == context.child) {\r\n                    return false;\r\n                }\r\n\r\n                if (!context.child) {\r\n                    return true;\r\n                }\r\n\r\n                if (context.skipTransitionOnSameViewId) {\r\n                    var currentViewId = context.activeView.getAttribute('data-view');\r\n                    var newViewId = context.child.getAttribute('data-view');\r\n                    return currentViewId != newViewId;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function cloneNodes(nodesArray) {\r\n        for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\r\n            var clonedNode = nodesArray[i].cloneNode(true);\r\n            newNodesArray.push(clonedNode);\r\n        }\r\n        return newNodesArray;\r\n    }\r\n\r\n    function replaceParts(context){\r\n        var parts = cloneNodes(context.parts);\r\n        var replacementParts = composition.getParts(parts);\r\n        var standardParts = composition.getParts(context.child);\r\n\r\n        for (var partId in replacementParts) {\r\n            var toReplace = standardParts[partId];\r\n            if (!toReplace) {\r\n                toReplace = $('[data-part=\"' + partId + '\"]', context.child).get(0);\r\n                if (!toReplace) {\r\n                    system.log('Could not find part to override: ' + partId);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            toReplace.parentNode.replaceChild(replacementParts[partId], toReplace);\r\n        }\r\n    }\r\n\r\n    function removePreviousView(context){\r\n        var children = ko.virtualElements.childNodes(context.parent), i, len;\r\n\r\n        if(!system.isArray(children)){\r\n            var arrayChildren = [];\r\n            for(i = 0, len = children.length; i < len; i++){\r\n                arrayChildren[i] = children[i];\r\n            }\r\n            children = arrayChildren;\r\n        }\r\n\r\n        for(i = 1,len = children.length; i < len; i++){\r\n            ko.removeNode(children[i]);\r\n        }\r\n    }\r\n\r\n    function hide(view) {\r\n        ko.utils.domData.set(view, visibilityKey, view.style.display);\r\n        view.style.display = 'none';\r\n    }\r\n\r\n    function show(view) {\r\n        var displayStyle = ko.utils.domData.get(view, visibilityKey);\r\n        view.style.display = displayStyle === 'none' ? 'block' : displayStyle;\r\n    }\r\n\r\n    function hasComposition(element){\r\n        var dataBind = element.getAttribute('data-bind');\r\n        if(!dataBind){\r\n            return false;\r\n        }\r\n\r\n        for(var i = 0, length = composeBindings.length; i < length; i++){\r\n            if(dataBind.indexOf(composeBindings[i]) > -1){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @class CompositionTransaction\r\n     * @static\r\n     */\r\n    var compositionTransaction = {\r\n        /**\r\n         * Registers a callback which will be invoked when the current composition transaction has completed. The transaction includes all parent and children compositions.\r\n         * @method complete\r\n         * @param {function} callback The callback to be invoked when composition is complete.\r\n         */\r\n        complete: function (callback) {\r\n            compositionCompleteCallbacks.push(callback);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @class CompositionModule\r\n     * @static\r\n     */\r\n    composition = {\r\n        /**\r\n         * An array of all the binding handler names (includeing :) that trigger a composition.\r\n         * @property {string} composeBindings\r\n         * @default ['compose:']\r\n         */\r\n        composeBindings:composeBindings,\r\n        /**\r\n         * Converts a transition name to its moduleId.\r\n         * @method convertTransitionToModuleId\r\n         * @param {string} name The name of the transtion.\r\n         * @return {string} The moduleId.\r\n         */\r\n        convertTransitionToModuleId: function (name) {\r\n            return 'transitions/' + name;\r\n        },\r\n        /**\r\n         * The name of the transition to use in all compositions.\r\n         * @property {string} defaultTransitionName\r\n         * @default null\r\n         */\r\n        defaultTransitionName: null,\r\n        /**\r\n         * Represents the currently executing composition transaction.\r\n         * @property {CompositionTransaction} current\r\n         */\r\n        current: compositionTransaction,\r\n        /**\r\n         * Registers a binding handler that will be invoked when the current composition transaction is complete.\r\n         * @method addBindingHandler\r\n         * @param {string} name The name of the binding handler.\r\n         * @param {object} [config] The binding handler instance. If none is provided, the name will be used to look up an existing handler which will then be converted to a composition handler.\r\n         * @param {function} [initOptionsFactory] If the registered binding needs to return options from its init call back to knockout, this function will server as a factory for those options. It will receive the same parameters that the init function does.\r\n         */\r\n        addBindingHandler:function(name, config, initOptionsFactory){\r\n            var key,\r\n                dataKey = 'composition-handler-' + name,\r\n                handler;\r\n\r\n            config = config || ko.bindingHandlers[name];\r\n            initOptionsFactory = initOptionsFactory || function(){ return undefined;  };\r\n\r\n            handler = ko.bindingHandlers[name] = {\r\n                init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n                    if(compositionCount > 0){\r\n                        var data = {\r\n                            trigger:ko.observable(null)\r\n                        };\r\n\r\n                        composition.current.complete(function(){\r\n                            if(config.init){\r\n                                config.init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\r\n                            }\r\n\r\n                            if(config.update){\r\n                                ko.utils.domData.set(element, dataKey, config);\r\n                                data.trigger('trigger');\r\n                            }\r\n                        });\r\n\r\n                        ko.utils.domData.set(element, dataKey, data);\r\n                    }else{\r\n                        ko.utils.domData.set(element, dataKey, config);\r\n\r\n                        if(config.init){\r\n                            config.init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\r\n                        }\r\n                    }\r\n\r\n                    return initOptionsFactory(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\r\n                },\r\n                update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n                    var data = ko.utils.domData.get(element, dataKey);\r\n\r\n                    if(data.update){\r\n                        return data.update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\r\n                    }\r\n\r\n                    if(data.trigger){\r\n                        data.trigger();\r\n                    }\r\n                }\r\n            };\r\n\r\n            for (key in config) {\r\n                if (key !== \"init\" && key !== \"update\") {\r\n                    handler[key] = config[key];\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Gets an object keyed with all the elements that are replacable parts, found within the supplied elements. The key will be the part name and the value will be the element itself.\r\n         * @method getParts\r\n         * @param {DOMElement\\DOMElement[]} elements The element(s) to search for parts.\r\n         * @return {object} An object keyed by part.\r\n         */\r\n        getParts: function(elements, parts) {\r\n            parts = parts || {};\r\n\r\n            if (!elements) {\r\n                return parts;\r\n            }\r\n\r\n            if (elements.length === undefined) {\r\n                elements = [elements];\r\n            }\r\n\r\n            for (var i = 0, length = elements.length; i < length; i++) {\r\n                var element = elements[i],\r\n                    id;\r\n\r\n                if (element.getAttribute) {\r\n                    id = element.getAttribute(partAttributeName);\r\n                    if (id) {\r\n                        parts[id] = element;\r\n                    }\r\n\r\n                    if (element.hasChildNodes() && !hasComposition(element)) {\r\n                        composition.getParts(element.childNodes, parts);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return parts;\r\n        },\r\n        cloneNodes:cloneNodes,\r\n        finalize: function (context, element) {\r\n            if(context.transition === undefined) {\r\n                context.transition = this.defaultTransitionName;\r\n            }\r\n\r\n            if(!context.child && !context.activeView){\r\n                if (!context.cacheViews) {\r\n                    ko.virtualElements.emptyNode(context.parent);\r\n                }\r\n\r\n                context.triggerAttach(context, element);\r\n                endComposition(context, element);\r\n            } else if (shouldTransition(context)) {\r\n                var transitionModuleId = this.convertTransitionToModuleId(context.transition);\r\n\r\n                system.acquire(transitionModuleId).then(function (transition) {\r\n                    context.transition = transition;\r\n\r\n                    transition(context).then(function () {\r\n                        if (!context.cacheViews) {\r\n                            if(!context.child){\r\n                                ko.virtualElements.emptyNode(context.parent);\r\n                            }else{\r\n                                removePreviousView(context);\r\n                            }\r\n                        }else if(context.activeView){\r\n                            var instruction = binder.getBindingInstruction(context.activeView);\r\n                            if(instruction && instruction.cacheViews != undefined && !instruction.cacheViews){\r\n                                ko.removeNode(context.activeView);\r\n                            }else{\r\n                                hide(context.activeView);\r\n                            }\r\n                        }\r\n\r\n                        if (context.child) {\r\n                            show(context.child);\r\n                        }\r\n\r\n                        context.triggerAttach(context, element);\r\n                        endComposition(context, element);\r\n                    });\r\n                }).fail(function(err){\r\n                    onError(context, 'Failed to load transition (' + transitionModuleId + '). Details: ' + err.message, element);\r\n                });\r\n            } else {\r\n                if (context.child != context.activeView) {\r\n                    if (context.cacheViews && context.activeView) {\r\n                        var instruction = binder.getBindingInstruction(context.activeView);\r\n                        if(!instruction || (instruction.cacheViews != undefined && !instruction.cacheViews)){\r\n                            ko.removeNode(context.activeView);\r\n                        }else{\r\n                            hide(context.activeView);\r\n                        }\r\n                    }\r\n\r\n                    if (!context.child) {\r\n                        if (!context.cacheViews) {\r\n                            ko.virtualElements.emptyNode(context.parent);\r\n                        }\r\n                    } else {\r\n                        if (!context.cacheViews) {\r\n                            removePreviousView(context);\r\n                        }\r\n\r\n                        show(context.child);\r\n                    }\r\n                }\r\n\r\n                context.triggerAttach(context, element);\r\n                endComposition(context, element);\r\n            }\r\n        },\r\n        bindAndShow: function (child, element, context, skipActivation) {\r\n            context.child = child;\r\n            context.parent.__composition_context = context;\r\n\r\n            if (context.cacheViews) {\r\n                context.composingNewView = (ko.utils.arrayIndexOf(context.viewElements, child) == -1);\r\n            } else {\r\n                context.composingNewView = true;\r\n            }\r\n\r\n            tryActivate(context, function () {\r\n                if (context.parent.__composition_context == context) {\r\n                    delete context.parent.__composition_context;\r\n\r\n                    if (context.binding) {\r\n                        context.binding(context.child, context.parent, context);\r\n                    }\r\n\r\n                    if (context.preserveContext && context.bindingContext) {\r\n                        if (context.composingNewView) {\r\n                            if(context.parts){\r\n                                replaceParts(context);\r\n                            }\r\n\r\n                            hide(child);\r\n                            ko.virtualElements.prepend(context.parent, child);\r\n\r\n                        binder.bindContext(context.bindingContext, child, context.model, context.as);\r\n                        }\r\n                    } else if (child) {\r\n                        var modelToBind = context.model || dummyModel;\r\n                        var currentModel = ko.dataFor(child);\r\n\r\n                        if (currentModel != modelToBind) {\r\n                            if (!context.composingNewView) {\r\n                                ko.removeNode(child);\r\n                                viewEngine.createView(child.getAttribute('data-view')).then(function(recreatedView) {\r\n                                    composition.bindAndShow(recreatedView, element, context, true);\r\n                                });\r\n                                return;\r\n                            }\r\n\r\n                            if(context.parts){\r\n                                replaceParts(context);\r\n                            }\r\n\r\n                            hide(child);\r\n                            ko.virtualElements.prepend(context.parent, child);\r\n\r\n                            binder.bind(modelToBind, child);\r\n                        }\r\n                    }\r\n\r\n                    composition.finalize(context, element);\r\n                } else {\r\n                    endComposition(context, element);\r\n                }\r\n            }, skipActivation, element);\r\n        },\r\n        /**\r\n         * Eecutes the default view location strategy.\r\n         * @method defaultStrategy\r\n         * @param {object} context The composition context containing the model and possibly existing viewElements.\r\n         * @return {promise} A promise for the view.\r\n         */\r\n        defaultStrategy: function (context) {\r\n            return viewLocator.locateViewForObject(context.model, context.area, context.viewElements);\r\n        },\r\n        getSettings: function (valueAccessor, element) {\r\n            var value = valueAccessor(),\r\n                settings = ko.utils.unwrapObservable(value) || {},\r\n                activatorPresent = activator.isActivator(value),\r\n                moduleId;\r\n\r\n            if (system.isString(settings)) {\r\n                if (viewEngine.isViewUrl(settings)) {\r\n                    settings = {\r\n                        view: settings\r\n                    };\r\n                } else {\r\n                    settings = {\r\n                        model: settings,\r\n                        activate: !activatorPresent\r\n                    };\r\n                }\r\n\r\n                return settings;\r\n            }\r\n\r\n            moduleId = system.getModuleId(settings);\r\n            if (moduleId) {\r\n                settings = {\r\n                    model: settings,\r\n                    activate: !activatorPresent\r\n                };\r\n\r\n                return settings;\r\n            }\r\n\r\n            if(!activatorPresent && settings.model) {\r\n                activatorPresent = activator.isActivator(settings.model);\r\n            }\r\n\r\n            for (var attrName in settings) {\r\n                if (ko.utils.arrayIndexOf(bindableSettings, attrName) != -1) {\r\n                    settings[attrName] = ko.utils.unwrapObservable(settings[attrName]);\r\n                } else {\r\n                    settings[attrName] = settings[attrName];\r\n                }\r\n            }\r\n\r\n            if (activatorPresent) {\r\n                settings.activate = false;\r\n            } else if (settings.activate === undefined) {\r\n                settings.activate = true;\r\n            }\r\n\r\n            return settings;\r\n        },\r\n        executeStrategy: function (context, element) {\r\n            context.strategy(context).then(function (child) {\r\n                composition.bindAndShow(child, element, context);\r\n            });\r\n        },\r\n        inject: function (context, element) {\r\n            if (!context.model) {\r\n                this.bindAndShow(null, element, context);\r\n                return;\r\n            }\r\n\r\n            if (context.view) {\r\n                viewLocator.locateView(context.view, context.area, context.viewElements).then(function (child) {\r\n                    composition.bindAndShow(child, element, context);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!context.strategy) {\r\n                context.strategy = this.defaultStrategy;\r\n            }\r\n\r\n            if (system.isString(context.strategy)) {\r\n                system.acquire(context.strategy).then(function (strategy) {\r\n                    context.strategy = strategy;\r\n                    composition.executeStrategy(context, element);\r\n                }).fail(function (err) {\r\n                    onError(context, 'Failed to load view strategy (' + context.strategy + '). Details: ' + err.message, element);\r\n                });\r\n            } else {\r\n                this.executeStrategy(context, element);\r\n            }\r\n        },\r\n        /**\r\n         * Initiates a composition.\r\n         * @method compose\r\n         * @param {DOMElement} element The DOMElement or knockout virtual element that serves as the parent for the composition.\r\n         * @param {object} settings The composition settings.\r\n         * @param {object} [bindingContext] The current binding context.\r\n         */\r\n        compose: function (element, settings, bindingContext, fromBinding) {\r\n            compositionCount++;\r\n\r\n            if(!fromBinding){\r\n                settings = composition.getSettings(function() { return settings; }, element);\r\n            }\r\n\r\n            if (settings.compositionComplete) {\r\n                compositionCompleteCallbacks.push(function () {\r\n                    settings.compositionComplete(settings.child, settings.parent, settings);\r\n                });\r\n            }\r\n\r\n            compositionCompleteCallbacks.push(function () {\r\n                if(settings.composingNewView && settings.model && settings.model.compositionComplete){\r\n                    settings.model.compositionComplete(settings.child, settings.parent, settings);\r\n                }\r\n            });\r\n\r\n            var hostState = getHostState(element);\r\n\r\n            settings.activeView = hostState.activeView;\r\n            settings.parent = element;\r\n            settings.triggerAttach = triggerAttach;\r\n            settings.bindingContext = bindingContext;\r\n\r\n            if (settings.cacheViews && !settings.viewElements) {\r\n                settings.viewElements = hostState.childElements;\r\n            }\r\n\r\n            if (!settings.model) {\r\n                if (!settings.view) {\r\n                    this.bindAndShow(null, element, settings);\r\n                } else {\r\n                    settings.area = settings.area || 'partial';\r\n                    settings.preserveContext = true;\r\n\r\n                    viewLocator.locateView(settings.view, settings.area, settings.viewElements).then(function (child) {\r\n                        composition.bindAndShow(child, element, settings);\r\n                    });\r\n                }\r\n            } else if (system.isString(settings.model)) {\r\n                system.acquire(settings.model).then(function (module) {\r\n                    settings.model = system.resolveObject(module);\r\n                    composition.inject(settings, element);\r\n                }).fail(function (err) {\r\n                    onError(settings, 'Failed to load composed module (' + settings.model + '). Details: ' + err.message, element);\r\n                });\r\n            } else {\r\n                composition.inject(settings, element);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.compose = {\r\n        init: function() {\r\n            return { controlsDescendantBindings: true };\r\n        },\r\n        update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n            var settings = composition.getSettings(valueAccessor, element);\r\n            if(settings.mode){\r\n                var data = ko.utils.domData.get(element, compositionDataKey);\r\n                if(!data){\r\n                    var childNodes = ko.virtualElements.childNodes(element);\r\n                    data = {};\r\n\r\n                    if(settings.mode === 'inline'){\r\n                        data.view = viewEngine.ensureSingleElement(childNodes);\r\n                    }else if(settings.mode === 'templated'){\r\n                        data.parts = cloneNodes(childNodes);\r\n                    }\r\n\r\n                    ko.virtualElements.emptyNode(element);\r\n                    ko.utils.domData.set(element, compositionDataKey, data);\r\n                }\r\n\r\n                if(settings.mode === 'inline'){\r\n                    settings.view = data.view.cloneNode(true);\r\n                }else if(settings.mode === 'templated'){\r\n                    settings.parts = data.parts;\r\n                }\r\n\r\n                settings.preserveContext = true;\r\n            }\r\n\r\n            composition.compose(element, settings, bindingContext, true);\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.compose = true;\r\n\r\n    return composition;\r\n});\n","/**\r\n * Durandal events originate from backbone.js but also combine some ideas from signals.js as well as some additional improvements.\r\n * Events can be installed into any object and are installed into the `app` module by default for convenient app-wide eventing.\r\n * @module events\r\n * @requires system\r\n */\r\ndefine('durandal/events',['durandal/system'], function (system) {\r\n    var eventSplitter = /\\s+/;\r\n    var Events = function() { };\r\n\r\n    /**\r\n     * Represents an event subscription.\r\n     * @class Subscription\r\n     */\r\n    var Subscription = function(owner, events) {\r\n        this.owner = owner;\r\n        this.events = events;\r\n    };\r\n\r\n    /**\r\n     * Attaches a callback to the event subscription.\r\n     * @method then\r\n     * @param {function} callback The callback function to invoke when the event is triggered.\r\n     * @param {object} [context] An object to use as `this` when invoking the `callback`.\r\n     * @chainable\r\n     */\r\n    Subscription.prototype.then = function (callback, context) {\r\n        this.callback = callback || this.callback;\r\n        this.context = context || this.context;\r\n        \r\n        if (!this.callback) {\r\n            return this;\r\n        }\r\n\r\n        this.owner.on(this.events, this.callback, this.context);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Attaches a callback to the event subscription.\r\n     * @method on\r\n     * @param {function} [callback] The callback function to invoke when the event is triggered. If `callback` is not provided, the previous callback will be re-activated.\r\n     * @param {object} [context] An object to use as `this` when invoking the `callback`.\r\n     * @chainable\r\n     */\r\n    Subscription.prototype.on = Subscription.prototype.then;\r\n\r\n    /**\r\n     * Cancels the subscription.\r\n     * @method off\r\n     * @chainable\r\n     */\r\n    Subscription.prototype.off = function () {\r\n        this.owner.off(this.events, this.callback, this.context);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates an object with eventing capabilities.\r\n     * @class Events\r\n     */\r\n\r\n    /**\r\n     * Creates a subscription or registers a callback for the specified event.\r\n     * @method on\r\n     * @param {string} events One or more events, separated by white space.\r\n     * @param {function} [callback] The callback function to invoke when the event is triggered. If `callback` is not provided, a subscription instance is returned.\r\n     * @param {object} [context] An object to use as `this` when invoking the `callback`.\r\n     * @return {Subscription|Events} A subscription is returned if no callback is supplied, otherwise the events object is returned for chaining.\r\n     */\r\n    Events.prototype.on = function(events, callback, context) {\r\n        var calls, event, list;\r\n\r\n        if (!callback) {\r\n            return new Subscription(this, events);\r\n        } else {\r\n            calls = this.callbacks || (this.callbacks = {});\r\n            events = events.split(eventSplitter);\r\n\r\n            while (event = events.shift()) {\r\n                list = calls[event] || (calls[event] = []);\r\n                list.push(callback, context);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Removes the callbacks for the specified events.\r\n     * @method off\r\n     * @param {string} [events] One or more events, separated by white space to turn off. If no events are specified, then the callbacks will be removed.\r\n     * @param {function} [callback] The callback function to remove. If `callback` is not provided, all callbacks for the specified events will be removed.\r\n     * @param {object} [context] The object that was used as `this`. Callbacks with this context will be removed.\r\n     * @chainable\r\n     */\r\n    Events.prototype.off = function(events, callback, context) {\r\n        var event, calls, list, i;\r\n\r\n        // No events\r\n        if (!(calls = this.callbacks)) {\r\n            return this;\r\n        }\r\n\r\n        //removing all\r\n        if (!(events || callback || context)) {\r\n            delete this.callbacks;\r\n            return this;\r\n        }\r\n\r\n        events = events ? events.split(eventSplitter) : system.keys(calls);\r\n\r\n        // Loop through the callback list, splicing where appropriate.\r\n        while (event = events.shift()) {\r\n            if (!(list = calls[event]) || !(callback || context)) {\r\n                delete calls[event];\r\n                continue;\r\n            }\r\n\r\n            for (i = list.length - 2; i >= 0; i -= 2) {\r\n                if (!(callback && list[i] !== callback || context && list[i + 1] !== context)) {\r\n                    list.splice(i, 2);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Triggers the specified events.\r\n     * @method trigger\r\n     * @param {string} [events] One or more events, separated by white space to trigger.\r\n     * @chainable\r\n     */\r\n    Events.prototype.trigger = function(events) {\r\n        var event, calls, list, i, length, args, all, rest;\r\n        if (!(calls = this.callbacks)) {\r\n            return this;\r\n        }\r\n\r\n        rest = [];\r\n        events = events.split(eventSplitter);\r\n        for (i = 1, length = arguments.length; i < length; i++) {\r\n            rest[i - 1] = arguments[i];\r\n        }\r\n\r\n        // For each event, walk through the list of callbacks twice, first to\r\n        // trigger the event, then to trigger any `\"all\"` callbacks.\r\n        while (event = events.shift()) {\r\n            // Copy callback lists to prevent modification.\r\n            if (all = calls.all) {\r\n                all = all.slice();\r\n            }\r\n\r\n            if (list = calls[event]) {\r\n                list = list.slice();\r\n            }\r\n\r\n            // Execute event callbacks.\r\n            if (list) {\r\n                for (i = 0, length = list.length; i < length; i += 2) {\r\n                    list[i].apply(list[i + 1] || this, rest);\r\n                }\r\n            }\r\n\r\n            // Execute \"all\" callbacks.\r\n            if (all) {\r\n                args = [event].concat(rest);\r\n                for (i = 0, length = all.length; i < length; i += 2) {\r\n                    all[i].apply(all[i + 1] || this, args);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a function that will trigger the specified events when called. Simplifies proxying jQuery (or other) events through to the events object.\r\n     * @method proxy\r\n     * @param {string} events One or more events, separated by white space to trigger by invoking the returned function.\r\n     * @return {function} Calling the function will invoke the previously specified events on the events object.\r\n     */\r\n    Events.prototype.proxy = function(events) {\r\n        var that = this;\r\n        return (function(arg) {\r\n            that.trigger(events, arg);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Creates an object with eventing capabilities.\r\n     * @class EventsModule\r\n     * @static\r\n     */\r\n\r\n    /**\r\n     * Adds eventing capabilities to the specified object.\r\n     * @method includeIn\r\n     * @param {object} targetObject The object to add eventing capabilities to.\r\n     */\r\n    Events.includeIn = function(targetObject) {\r\n        targetObject.on = Events.prototype.on;\r\n        targetObject.off = Events.prototype.off;\r\n        targetObject.trigger = Events.prototype.trigger;\r\n        targetObject.proxy = Events.prototype.proxy;\r\n    };\r\n\r\n    return Events;\r\n});\n","/**\r\n * The app module controls app startup, plugin loading/configuration and root visual display.\r\n * @module app\r\n * @requires system\r\n * @requires viewEngine\r\n * @requires composition\r\n * @requires events\r\n * @requires jquery\r\n */\r\ndefine('durandal/app',['durandal/system', 'durandal/viewEngine', 'durandal/composition', 'durandal/events', 'jquery'], function(system, viewEngine, composition, Events, $) {\r\n    var app,\r\n        allPluginIds = [],\r\n        allPluginConfigs = [];\r\n\r\n    function loadPlugins(){\r\n        return system.defer(function(dfd){\r\n            if(allPluginIds.length == 0){\r\n                dfd.resolve();\r\n                return;\r\n            }\r\n\r\n            system.acquire(allPluginIds).then(function(loaded){\r\n                for(var i = 0; i < loaded.length; i++){\r\n                    var currentModule = loaded[i];\r\n\r\n                    if(currentModule.install){\r\n                        var config = allPluginConfigs[i];\r\n                        if(!system.isObject(config)){\r\n                            config = {};\r\n                        }\r\n\r\n                        currentModule.install(config);\r\n                        system.log('Plugin:Installed ' + allPluginIds[i]);\r\n                    }else{\r\n                        system.log('Plugin:Loaded ' + allPluginIds[i]);\r\n                    }\r\n                }\r\n\r\n                dfd.resolve();\r\n            }).fail(function(err){\r\n                system.error('Failed to load plugin(s). Details: ' + err.message);\r\n            });\r\n        }).promise();\r\n    }\r\n\r\n    /**\r\n     * @class AppModule\r\n     * @static\r\n     * @uses Events\r\n     */\r\n    app = {\r\n        /**\r\n         * The title of your application.\r\n         * @property {string} title\r\n         */\r\n        title: 'Application',\r\n        /**\r\n         * Configures one or more plugins to be loaded and installed into the application.\r\n         * @method configurePlugins\r\n         * @param {object} config Keys are plugin names. Values can be truthy, to simply install the plugin, or a configuration object to pass to the plugin.\r\n         * @param {string} [baseUrl] The base url to load the plugins from.\r\n         */\r\n        configurePlugins:function(config, baseUrl){\r\n            var pluginIds = system.keys(config);\r\n            baseUrl = baseUrl || 'plugins/';\r\n\r\n            if(baseUrl.indexOf('/', baseUrl.length - 1) === -1){\r\n                baseUrl += '/';\r\n            }\r\n\r\n            for(var i = 0; i < pluginIds.length; i++){\r\n                var key = pluginIds[i];\r\n                allPluginIds.push(baseUrl + key);\r\n                allPluginConfigs.push(config[key]);\r\n            }\r\n        },\r\n        /**\r\n         * Starts the application.\r\n         * @method start\r\n         * @return {promise}\r\n         */\r\n        start: function() {\r\n            system.log('Application:Starting');\r\n\r\n            if (this.title) {\r\n                document.title = this.title;\r\n            }\r\n\r\n            return system.defer(function (dfd) {\r\n                $(function() {\r\n                    loadPlugins().then(function(){\r\n                        dfd.resolve();\r\n                        system.log('Application:Started');\r\n                    });\r\n                });\r\n            }).promise();\r\n        },\r\n        /**\r\n         * Sets the root module/view for the application.\r\n         * @method setRoot\r\n         * @param {string} root The root view or module.\r\n         * @param {string} [transition] The transition to use from the previous root (or splash screen) into the new root.\r\n         * @param {string} [applicationHost] The application host element or id. By default the id 'applicationHost' will be used.\r\n         */\r\n        setRoot: function(root, transition, applicationHost) {\r\n            var hostElement, settings = { activate:true, transition: transition };\r\n\r\n            if (!applicationHost || system.isString(applicationHost)) {\r\n                hostElement = document.getElementById(applicationHost || 'applicationHost');\r\n            } else {\r\n                hostElement = applicationHost;\r\n            }\r\n\r\n            if (system.isString(root)) {\r\n                if (viewEngine.isViewUrl(root)) {\r\n                    settings.view = root;\r\n                } else {\r\n                    settings.model = root;\r\n                }\r\n            } else {\r\n                settings.model = root;\r\n            }\r\n\r\n            function finishComposition() {\r\n                if(settings.model) {\r\n                    if (settings.model.canActivate) {\r\n                        try {\r\n                            var result = settings.model.canActivate();\r\n                            if (result && result.then) {\r\n                                result.then(function (actualResult) {\r\n                                    if (actualResult) {\r\n                                        composition.compose(hostElement, settings);\r\n                                    }\r\n                                }).fail(function (err) {\r\n                                    system.error(err);\r\n                                });\r\n                            } else if (result) {\r\n                                composition.compose(hostElement, settings);\r\n                            }\r\n                        } catch (er) {\r\n                            system.error(er);\r\n                        }\r\n                    } else {\r\n                        composition.compose(hostElement, settings);\r\n                    }\r\n                } else {\r\n                    composition.compose(hostElement, settings);\r\n                }\r\n            }\r\n\r\n            if(system.isString(settings.model)) {\r\n                system.acquire(settings.model).then(function(module) {\r\n                    settings.model = system.resolveObject(module);\r\n                    finishComposition();\r\n                }).fail(function(err) {\r\n                    system.error('Failed to load root module (' + settings.model + '). Details: ' + err.message);\r\n                });\r\n            } else {\r\n                finishComposition();\r\n            }\r\n        }\r\n    };\r\n\r\n    Events.includeIn(app);\r\n\r\n    return app;\r\n});\n","requirejs.config({\r\n    paths: {\r\n        'text': '../Scripts/text',\r\n        'durandal': '../Scripts/durandal',\r\n        'plugins': '../Scripts/durandal/plugins',\r\n        'transitions': '../Scripts/durandal/transitions'\r\n    },\r\n    waitSeconds: 15,\r\n    // Bump this version to have users loading from server instead of cache\r\n    urlArgs: 'v=0.1.7.7'\r\n});\r\n\r\n// TODO: Remove this\r\njQuery.support.cors = true;\r\n\r\ndefine('jquery', [],function () { return jQuery; });\r\ndefine('knockout', ko);\r\n\r\n\r\n\r\ndefine('main',['durandal/system', 'durandal/app', 'durandal/viewLocator', 'durandal/composition'],  function (system, app, viewLocator, composition) {\r\n    //>>excludeStart(\"build\", true);\r\n    system.debug(true);\r\n    //>>excludeEnd(\"build\");\r\n\r\n    app.title = 'Nightingale';\r\n\r\n    app.configurePlugins({\r\n        router: true,\r\n        dialog: true,\r\n        widget: {\r\n            kinds: ['singleselect', 'multiselect', 'chsnsingle', 'chsnsingledark']\t//, 'datetimepicker'\r\n        }\r\n    });\r\n\r\n    app.start().then(function () {\r\n        //Replace 'viewmodels' in the moduleId with 'views' to locate the view.\r\n        //Look for partial views in a 'views' folder in the root.\r\n        viewLocator.useConvention();\r\n\t\tcomposition.addBindingHandler('hasFocus');\t//fix for durandal bug missing KO binding.\r\n        //Show the app by setting the root view model for our application with a transition.\r\n        app.setRoot('viewmodels/shell/shell');\r\n    });\r\n});\n","define('config.app',[],\r\n    function () {\r\n\r\n        var title = 'Nightingale';\r\n        var remoteServiceName = 'api';\r\n\r\n        var config = {\r\n            title: title,\r\n            remoteServiceName: remoteServiceName\r\n        };\r\n        return config;\r\n    });\n","//Set the routes up in here\r\n\r\ndefine('config.routes',[], function () {\r\n\r\n    function Widget(title, widgetroute, content) {\r\n        var self = this;\r\n        self.title = title;\r\n        self.widgetroute = widgetroute;\r\n        self.content = content;\r\n    }\r\n\r\n    // The routes define the structure that will eventually be passed down by\r\n    // the API to give routes to the client\r\n    var routes = [{\r\n        route: '',\r\n        moduleId: 'viewmodels/home/index',\r\n        title: 'home',\r\n        settings: {\r\n            imageSource: '/NightingaleUI/Content/images/nav_home.png',\r\n            content: 'Home',\r\n            pages: [\r\n                {\r\n                    title: 'myhome',\r\n                    subroute: 'viewmodels/home/myhome/myhome',\r\n                    content: 'My Home'\r\n                }, {\r\n                    title: 'todos',\r\n                    subroute: 'viewmodels/home/todos/index',\r\n                    content: 'To Do'\r\n                }, {\r\n\t\t\t\t\ttitle: 'contacts',\r\n\t\t\t\t\tsubroute: 'viewmodels/home/contacts/index',\r\n\t\t\t\t\tcontent: 'Contacts'\r\n\t\t\t\t}\r\n            ]\r\n        }\r\n    }, {\r\n        route: 'home',\r\n        moduleId: 'viewmodels/home/index',\r\n        title: 'home',\r\n        nav: true,\r\n        settings: {\r\n            imageSource: '/NightingaleUI/Content/images/nav_home.png',\r\n            content: 'Home',\r\n            pages: [\r\n                {\r\n                    title: 'myhome',\r\n                    subroute: 'viewmodels/home/myhome/myhome',\r\n                    content: 'My Home'\r\n                }, {\r\n                    title: 'todos',\r\n                    subroute: 'viewmodels/home/todos/index',\r\n                    content: 'To Do'\r\n                }, {\r\n\t\t\t\t\ttitle: 'contacts',\r\n\t\t\t\t\tsubroute: 'viewmodels/home/contacts/index',\r\n\t\t\t\t\tcontent: 'Contacts'\r\n\t\t\t\t}\r\n            ]\r\n        }\r\n    }, {\r\n        route: 'ut/(:tokenId)',\r\n        moduleId: 'viewmodels/authenticate',\r\n        title: 'authenticate',\r\n        settings: {\r\n            imageSource: '/NightingaleUI/Content/images/nav_population.png',\r\n            content: 'Authenticating',\r\n            pages: [{\r\n                title: 'myhome',\r\n                subroute: 'viewmodels/home/myhome/myhome',\r\n                content: 'My Home'\r\n            }]\r\n        }\r\n    }, {\r\n        route: 'populations',\r\n        moduleId: 'viewmodels/populations/index',\r\n        title: 'populations',\r\n        nav: false,\r\n        settings: {\r\n            imageSource: '/NightingaleUI/Content/images/nav_population.png',\r\n            content: 'Populations',\r\n            pages: [\r\n                {\r\n                    title: 'careplan',\r\n                    subroute: 'populations/careplan/index.html',\r\n                    content: 'Plan'\r\n                }, {\r\n                    title: 'overview',\r\n                    subroute: 'populations/overview/index.html',\r\n                    content: 'Overview'\r\n                }\r\n            ]\r\n        }\r\n    }, {\r\n        route: 'patients(/:id)',\r\n        moduleId: 'viewmodels/patients/index',\r\n        title: 'Individual',\r\n        nav: true,\r\n        settings: {\r\n            imageSource: '/NightingaleUI/Content/images/nav_patients.png',\r\n            content: 'Individual',\r\n            pages: [\r\n                {\r\n                   title: 'overview',\r\n                   subroute: 'viewmodels/patients/overview/index',\r\n                   content: 'Overview'\r\n                }, {\r\n                    title: 'goals',\r\n                    subroute: 'viewmodels/patients/goals/index',\r\n                    content: 'Goals'\r\n                }, {\r\n                    title: 'careplan',\r\n                    subroute: 'viewmodels/patients/careplan/index',\r\n                    content: 'Programs'\r\n                }, {\r\n                    title: 'history',\r\n                    subroute: 'viewmodels/patients/history/index',\r\n                    content: 'History'\r\n\t\t\t\t}, {\r\n                    title: 'team',\r\n                    subroute: 'viewmodels/patients/team/index',\r\n                    content: 'Team'\r\n                }, {\r\n                    title: 'data',\r\n                    subroute: 'viewmodels/patients/data/index',\r\n                    content: 'Data'\r\n                }, {\r\n                    title: 'medications',\r\n                    subroute: 'viewmodels/patients/medications/index',\r\n                    content: 'Medications'\r\n                }\r\n            ]\r\n        }\r\n    }, {\r\n        route: 'admin',\r\n        moduleId: 'viewmodels/admin/index',\r\n        title: 'admin',\r\n        nav: true,\r\n        settings: {\r\n            imageSource: '/NightingaleUI/Content/images/nav_admin.png',\r\n            content: 'Admin',\r\n            pages: [\r\n                {\r\n                    title: 'Concierge',\r\n                    subroute: 'viewmodels/admin/concierge/index',\r\n                    content: 'Concierge'\r\n                }\r\n            ]\r\n        }\r\n    }];\r\n\r\n    var routeConfig = {\r\n        routes: routes\r\n    };\r\n\r\n    return routeConfig;\r\n});\n","// Configuration for modules\r\n// and end point creation\r\n\r\ndefine('config.services',[],\r\n    function () {\r\n\r\n        // Create a route\r\n        var route, apiAppKey, gaId;\r\n\r\n        // If it is supposed to hit the model environment it will not have localhost nor :59922 in the href\r\n        if (window.location.href.indexOf('localhost') === -1 && window.location.href.indexOf('dev') === -1 && window.location.href.indexOf('login.phytel') === -1 && window.location.href.indexOf('ngmodel.phytel') === -1 && window.location.href.indexOf('staging') === -1 && window.location.href.indexOf('nightingalelogin') === -1) {\r\n            route = '//azurephytel.cloudapp.net:59900';\r\n            apiAppKey = '12345';\r\n            gaId = '';\r\n            if (window.location.href.indexOf('azurephytel.cloudapp.net') !== -1) {            \r\n                gaId = 'UA-44886803-5';                     //google analytics Engage QA (New) account \r\n                console.log('config.services - ENV = QA ');\r\n            }            \r\n        }\r\n            // Else if it is phytel model\r\n        else if (window.location.href.indexOf('ngmodel.phytel') !== -1) {\r\n            route = '//mdlapi.phytel.com';\r\n            apiAppKey = '12345';\r\n            gaId = 'UA-44886803-6';\r\n\t\tconsole.log('config.services - ENV = MODEL ');\r\n        }\r\n            // Else if it is login.phytel.com,\r\n        else if (window.location.href.indexOf('login.phytel') !== -1) {\r\n            route = '//api.phytel.com';\r\n            apiAppKey = '5273f88f69879b2f2c2fbeb3';\r\n            gaId = 'UA-44886803-4'; //google analytics production account engage PROD (New)\r\n            console.log('config.services - ENV = PROD ');\r\n        }\r\n            // Else if it is the staging environment,\r\n        else if (window.location.href.indexOf('staging') !== -1) {\r\n            route = '//azurephytelstaging.cloudapp.net:59900';\r\n            apiAppKey = '12345';\r\n            gaId = '';\r\n        }\r\n            // Else if it is the nightingale login environment,\r\n        else if (window.location.href.indexOf('nightingalelogin') !== -1) {\r\n            route = '//nightingalelogin.cloudapp.net:59900';\r\n            apiAppKey = '12345';\r\n            gaId = '';\r\n        }        \r\n        else {\r\n            // Else hit the dev environment\r\n            route = '//azurephyteldev.cloudapp.net:59900';\r\n            apiAppKey = '12345';\r\n            gaId = 'UA-44886803-3';\t//google analytics Engage Dev (New) account\r\n            console.log('config.services - ENV = DEV ');\r\n        }\r\n\r\n        // Create the paths we will expose\r\n        var remoteServiceName = route + '/Nightingale';\r\n        var securityServiceName = route + '/Security';\r\n\r\n        // Create a common end point model\r\n        function createEndPoint(version, contractNumber, name, entityType, params) {\r\n            var self = this;\r\n            self.ResourcePath = version + '/' + contractNumber + '/' + name + '/';\r\n            self.EntityType = entityType;\r\n            self.Parameters = params;\r\n        }\r\n\r\n        var datacontext = {\r\n            remoteServiceName: remoteServiceName,\r\n            securityServiceName: securityServiceName,\r\n            createEndPoint: createEndPoint,\r\n            apiAppKey: apiAppKey,\r\n            gaId: gaId\r\n        };\r\n        return datacontext;\r\n\r\n    });\n","define('services/validatorfactory',[], function () {\r\n\r\n    var validators = {\r\n        fixNamesAndRegisterValidators: fixNamesAndRegisterValidators\r\n    };\r\n\r\n    // TODO : Needs unit tests\r\n    function fixNamesAndRegisterValidators(metadataStore, entityTypeName, propList) {\r\n        var thisEntityType = metadataStore.getEntityType(entityTypeName);\r\n        ko.utils.arrayForEach(propList, function (entityProp) {\r\n            var thisProp = thisEntityType.getProperty(entityProp.name);\r\n            thisProp.displayName = entityProp.displayName;\r\n            ko.utils.arrayForEach(entityProp.validatorsList, function (validator) {\r\n                thisProp.validators.push(validator);\r\n            });\r\n        });\r\n    }\r\n\r\n    return validators;\r\n\r\n});\n","/**\r\n*\tstring format helper utility\r\n*\t@module formatter\r\n*/\r\ndefine('services/formatter',[],\r\n\tfunction(){\r\n\t\tvar formatter = function(){};\r\n\t\t\r\n\t\t/**\r\n\t\t*\tzero left pad a number string\r\n\t\t*\t@method padZeroLeft\r\n\t\t*\t@param num {String} a string number\r\n\t\t*\t@param size {int} number of digits of the padded result \t\r\n\t\t*/\r\n\t\tformatter.padZeroLeft = function (num, size){\r\n\t\t\tvar s = num+\"\";\r\n\t\t\twhile (s.length < size) s = \"0\" + s;\r\n\t\t\treturn s;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t*\t@param newDetails {String} observable\r\n\t\t*\t@param details {String} observable\r\n\t\t*\t@method appendNewDetails\r\n\t\t*/\r\n\t\tformatter.appendNewDetails = function( newDetails, details, userName ){\r\n            if( newDetails() ){\r\n                var append = '';\r\n                if( details() && details().length ){\r\n                    append = '\\n';\r\n                }\r\n                append += moment().format('MM-DD-YYYY h:mm A') + ' ';\r\n                append += (' ' + userName);\r\n                append += (' - ' + newDetails());\r\n                details(details() ? details() + append : append);\r\n                newDetails('');\r\n            }\r\n        }\r\n\t\t\r\n\t\t/**\r\n\t\t*\t\r\n\t\t*\t@method formatSeparators\r\n\t\t*\t@param inp the input {string} can contain any characters, including the separator.\r\n\t\t*\t@param xPattern {string} expecting a string with a distinct character/s that are different from the separator.\r\n\t\t*\t@param separator {string} a char to be added/positioned according to its appearence in the xPattern.\r\n\t\t*\t@example \r\n\t\t*\t\tformatter.formatSeparators('1234567890', 'XXX-XXX-XXXX', '-')\t\t\t\r\n\t\t*\tresult:\t\t\r\n\t\t*\t\t\"123-456-7890\"\r\n\t\t*/\r\n\t\tformatter.formatSeparators = function(inp, xPattern, separator){\t//'1234567890', 'XXX-XXX-XXXX', '-' => 123-456-7890\r\n\t\t\tvar parts = xPattern.split(separator);\r\n\t\t\tinp = inp.replace(new RegExp(separator, 'g'), '');\t//remove all separators\r\n\t\t\tvar relevantLength = xPattern.replace(new RegExp(separator, 'g'), '').length; //length of pattern content without separators\t\r\n\t\t\tvar i = 0, pos = 0;\r\n\t\t\tvar result = '';\r\n\t\t\twhile (i < parts.length && pos < inp.length){\r\n\t\t\t\tvar section =  inp.slice(pos, pos + parts[i].length);\r\n\t\t\t\tpos += section.length;\r\n\t\t\t\tresult += section;\r\n\t\t\t\tif( section.length === parts[i].length && pos < relevantLength -1 ){\r\n\t\t\t\t\t//full section added and there is more\r\n\t\t\t\t\tresult += separator;\r\n\t\t\t\t}\r\n\t\t\t\ti += 1;\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t*\tformatting utilities specifically for a typable date field.\r\n\t\t*\t@class formatter.date\r\n\t\t*/\r\n\t\tformatter.date = function(){};\r\n\t\t\r\n\t\t/**\r\n\t\t*\tgiven a date string including a year part, the year needs to be auto-completed (century / decade).\r\n\t\t*\t@method optimizeYear\r\n\t\t*\t@param date {string} MM/DD/Y...\r\n\t\t*/\r\n\t\tformatter.date.optimizeYear = function( date ){\t\t\t\r\n\t\t\tvar dateParts = date.split('/');\r\n\t\t\t//optimize year only if we have all date parts in place:\r\n\t\t\tif( dateParts.length > 2 && dateParts[2].length > 0 && dateParts[2].length <= 2){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t//fix year if year entered partially:\t\"15\" => \"2015\" ; \"69\" => \"1969\" ; \"1\" => \"2001\"\r\n\t\t\t\tvar year = dateParts[2];\r\n\t\t\t\tif( year.length == 1 ){\r\n\t\t\t\t\t//auto-complete decade:\r\n\t\t\t\t\tyear = '0' + year;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t//auto-complete century:\t(since moment does not do it perfectly)\r\n\t\t\t\tvar thisYear = Number(String(moment().year()).slice(2,4));\r\n\t\t\t\tif( Number(year) > (thisYear) ){\r\n\t\t\t\t\tyear = '19' + year;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tyear = '20' + year;\r\n\t\t\t\t}\r\n\t\t\t\tvar newDate = dateParts[0] + '/' + dateParts[1] + '/' + year;\r\n\t\t\t\tdate = newDate;\t\t\t\t\t\t\t\r\n\t\t\t\tif( moment(date).isValid() ){\r\n\t\t\t\t\tdate = moment(date).format(\"MM/DD/YYYY\");\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t\treturn date;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t*\tgiven a date string (or an incomplete part of it, while it is typed in), format it to MM/DD/....\r\n\t\t*\texcept for the year part. the year part should be kept intact at this point.\r\n\t\t*\t@method optimizeDate\r\n\t\t*\t@param date {string} a date string - combination of digits with or without separator '/'\r\n\t\t*/\r\n\t\tformatter.date.optimizeDate = function( date ){\t\t\t\r\n\t\t\tvar newDate = date;\r\n\t\t\tif( date ){\r\n\t\t\t\tvar month, day;\t\t\t\t\r\n\t\t\t\tvar dateParts = date.split('/');\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tif( dateParts.length >= 1 ){\r\n\t\t\t\t\tnewDate = optimizeMonth(dateParts[0], dateParts.length > 1);\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\tif( dateParts.length >= 2 ){\r\n\t\t\t\t\tnewDate += optimizeDay(dateParts[1], dateParts.length > 2);\r\n\t\t\t\t\tif( dateParts.length > 2 ){\r\n\t\t\t\t\t\tnewDate += dateParts[2];\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t}\r\n\t\t\treturn newDate;\r\n\t\t\t\r\n\t\t\tfunction optimizeMonth( monthStr, complete ){\t\t\t\t\r\n\t\t\t\tvar result = monthStr;\r\n\t\t\t\tif( monthStr.length > 0 ){\r\n\t\t\t\t\tif( monthStr.length >= 2 ){\r\n\t\t\t\t\t\t//first date part (month) entered, and now added another digit without separator:\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tresult = monthStr.slice(0, 2);\r\n\t\t\t\t\t\tif( Number(result) > 12 ){\r\n\t\t\t\t\t\t\tresult = '12';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( Number(result) < 1 ){\r\n\t\t\t\t\t\t\tresult = '01';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult += '/';\r\n\t\t\t\t\t\tif( monthStr.length > 2 ){\r\n\t\t\t\t\t\t\tvar day = monthStr.slice(2,4);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tresult += optimizeDay(day, monthStr.length < 4);\r\n\t\t\t\t\t\t\tif( monthStr.length > 4 ){\r\n\t\t\t\t\t\t\t\tresult += monthStr.slice(4,8);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( monthStr.length === 1 && ( Number(monthStr) > 1 || complete ) ){\r\n\t\t\t\t\t\t//single digit month: left pad 0 \r\n\t\t\t\t\t\tif( Number(monthStr) === 0 ){\r\n\t\t\t\t\t\t\tresult = '01/';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tresult = '0' + monthStr + '/';\t\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction optimizeDay( dayStr, complete ){\r\n\t\t\t\tvar result = dayStr;\r\n\t\t\t\tif( dayStr.length > 0 ){\t\t\t\t\t\r\n\t\t\t\t\t//optimize day if needed:\r\n\t\t\t\t\tif( dayStr.length == 1 ) {\r\n\t\t\t\t\t\tif( complete || Number(dayStr) > 3 ){\r\n\t\t\t\t\t\t\tresult = '0' + dayStr + '/';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( complete && Number(dayStr) < 1 ){\r\n\t\t\t\t\t\t\tresult = '01/'; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( dayStr.length >= 2 ){\r\n\t\t\t\t\t\tresult = dayStr.slice(0,2);\r\n\t\t\t\t\t\tif( Number(result) > 31 ){\r\n\t\t\t\t\t\t\tresult = '31';\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( Number(result) < 1 ){\r\n\t\t\t\t\t\t\tresult = '01';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult += '/'; \r\n\t\t\t\t\t\tif( dayStr.length > 2 ){\r\n\t\t\t\t\t\t\tresult += dayStr.slice(2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t*\tmasking time string keyboard entry. intended as helper fo jqtimepicker\r\n\t\t*\t@method optimizeTime\r\n\t\t*\t@param\ttime {String}\r\n\t\t*/\r\n\t\tformatter.date.optimizeTime = function( time ){\r\n\t\t\tvar newTime = time;\r\n\t\t\tif( time ){\r\n\t\t\t\tvar timeParts = time.split(':');\t\t\t\t\r\n\t\t\t\tif( timeParts.length >= 1 ){\r\n\t\t\t\t\tvar part = timeParts[0];\r\n\t\t\t\t\tpart = part.replace( /\\D/g, '');\t\t\t\t\t\r\n\t\t\t\t\tif( part.length === 1 && timeParts.length > 1){\r\n\t\t\t\t\t\tnewTime = '0' + part + ':';\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( part.length === 2 ){\r\n\t\t\t\t\t\tnewTime = part + ':';\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tif( timeParts.length > 1 ){\t\t\t\r\n\t\t\t\t\t\tvar part = timeParts[1];\t\t\t\t\t\r\n\t\t\t\t\t\tnewTime = newTime + timeParts[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn newTime;\r\n\t\t};\r\n\t\t\r\n\t\treturn formatter;\r\n});\n","/**\r\n*\tcustom validators for breeze entities\r\n*\t@module customvalidators\r\n*/\r\ndefine('services/customvalidators',['services/formatter'],\r\n    function (formatter) {\r\n\r\n        var validators = {};\r\n\r\n        validators.zipValidator = breeze.Validator.makeRegExpValidator(\r\n            \"zipVal\",\r\n            /^\\d{5}([\\-]\\d{4})?$/,\r\n            \"The %displayName% '%value%' is not a valid U.S. zip code.\");\r\n\t\t\t\r\n\t\tvalidators.ssnValidator = breeze.Validator.makeRegExpValidator(\r\n\t\t\t\"SSN\",\r\n\t\t\t/^\\d{3}-?\\d{2}-?\\d{4}$/,\r\n\t\t\t\"'%value%' is not a valid %displayName%\");\r\n\r\n\t\t\r\n\t\tvalidators.dateValidator = function(context){\r\n\t\t\t\r\n\t\t\treturn new breeze.Validator(\r\n\t\t\t\t\"dateValidator\",\r\n\t\t\t\tdateValidatorFn,\r\n\t\t\t\t{\r\n\t\t\t\t\tminDate: context.minDate,\r\n\t\t\t\t\tmaxDate: context.maxDate,\r\n\t\t\t\t\tmessageTemplate: \"%msg%\",\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t);\t\r\n\t\t};\r\n\t\t\r\n\t\t//the value can be a partial date string when date fields are keyboard friendly.\r\n\t\t// moment nor breeze date validators wont cut it right.\r\n\t\tfunction dateValidatorFn( value, context ){\t\t\t\r\n\t\t\tif (value == null || value == \"\") return true;\t//valid\r\n\t\t\tif( isNaN(new Date(value).valueOf()) ){\t\t\t\t\r\n\t\t\t\tcontext.msg = \"'\"+ value + \"' is not a valid \" + context.property.displayName;\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\t\t\tvar theMoment = moment(value, [\"MM-DD-YYYY\",\"MM/DD/YYYY\", \"M/D/YYYY\"], true);\r\n\t\t\tif( !theMoment.isValid() ){\t\t\t\t\r\n\t\t\t\tvar formattedValue = formatter.date.optimizeDate( value );\t\t\t\t\r\n\t\t\t\tif( !moment(formattedValue, [\"MM-DD-YYYY\",\"MM/DD/YYYY\"], true).isValid() ){\r\n\t\t\t\t\tcontext.msg = \"'\"+ value + \"' is not a valid \" + context.property.displayName;\t\t\t\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( context.minDate ){\r\n\t\t\t\tvar minDate = context.minDate;\r\n\t\t\t\tvar errorMessage = context.property.displayName + ' must be on or after ' + moment(minDate).format(\"MM/DD/YYYY\");\r\n\t\t\t\tif( minDate === 'now' || minDate === 'today'){\r\n\t\t\t\t\terrorMessage = context.property.displayName + ' must be today or in the past';\r\n\t\t\t\t\tminDate = moment();\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tif( !moment(minDate).isValid() ) return true;\r\n\t\t\t\tif( theMoment.isBefore(moment(minDate).format(\"MM/DD/YYYY\"), 'days') ){\r\n\t\t\t\t\tcontext.msg = errorMessage;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\t\t\t\t\r\n\t\t\tif( context.maxDate ){\r\n\t\t\t\tvar maxDate = context.maxDate;\r\n\t\t\t\tvar errorMessage = context.property.displayName + ' must be on or before ' + moment(maxDate).format(\"MM/DD/YYYY\");\r\n\t\t\t\tif( maxDate === 'now' || maxDate === 'today'){\r\n\t\t\t\t\terrorMessage = context.property.displayName + ' must be today or in the past';\r\n\t\t\t\t\tmaxDate = moment();\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tif( !moment(maxDate).isValid() ) return true;\r\n\t\t\t\tif( theMoment.isAfter(moment(maxDate).format(\"MM/DD/YYYY\"), 'days') ){\r\n\t\t\t\t\tcontext.msg = errorMessage;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\t\t\t\r\n\t\t\treturn true;\t//valid\r\n\t\t}\r\n\t\t\r\n        // Check if all of the characters are zeroes\r\n        function notAllZeroesFn(value, context) {\r\n            // '== null' matches null and empty string\r\n            if (value == null) return true; \r\n            // Strip out all the dashes '-'\r\n            var strippedStr = value.replace(\"-\", \"\");\r\n            // Check if the value is all zeroes\r\n            return parseInt(strippedStr) === 0;\r\n        };\r\n\r\n        validators.isNotAllZeroes = new breeze.Validator(\r\n            \"notAllZeroes\",              // validator name\r\n            notAllZeroesFn,    // validation function\r\n            {                           // validator context\r\n                messageTemplate: \"'%displayName%' must not be all zeroes.\"\r\n            });\r\n\r\n        validators = {\r\n            validators: validators\r\n        };\r\n\r\n        return validators;\r\n\r\n});\n","/**\r\n*\tRegister entity manager models and initialize functions and provide other non-entity models.\r\n*\tincludes entity definitions for: \r\n*\t\tPatient, PatientProblem, Problem, Provider, Cohort, Identifier, AllergySearch, MedicationSearch\r\n*\t\tCareMember, PatientSystem, Alert, System\t\r\n*\t@module base\r\n*/\r\ndefine('models/base',['services/validatorfactory', 'services/customvalidators', 'services/formatter', 'services/session'],\r\n\tfunction (validatorFactory, customValidators, formatter, session) {\r\n\r\n\t\tvar datacontext;\r\n\t\tvar systemCareManager;\r\n\t\tvar DT = breeze.DataType;\r\n\t\tvar Validator = breeze.Validator;\r\n\t\tvar patientsIndex; \t\t\r\n\t\tvar selectedPatient;\r\n\t\t\r\n\t\t// Create a common user model\r\n\t\tfunction property(name, value) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.propertyName = ko.observable(name);\r\n\t\t\tself.propertyValue = ko.observable(value);\r\n\t\t}\r\n\r\n\t\t// Parameter for something\r\n\t\tfunction Parameter(prop, val, op) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.Property = prop;\r\n\t\t\tself.Operator = op;\r\n\t\t\tself.Value = val;\r\n\t\t}\r\n\t\t\t\t\r\n\t\t// Create a common modal model\r\n\t\tfunction modal( modalSettings ){\r\n\t\t    var self = this;\r\n\t\t    self.Title = modalSettings.title;\t\t\t\r\n\t\t\tif( modalSettings.relatedPatientName ){\r\n\t\t\t\tself.Title = ko.computed( function(){\r\n\t\t\t\t\tvar relatedPatientName = modalSettings.relatedPatientName();\r\n\t\t\t\t\tif( relatedPatientName ){\r\n\t\t\t\t\t\treturn modalSettings.title + ' - ' + relatedPatientName;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn modalSettings.title;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t    else if ( modalSettings.showSelectedPatientInTitle ) {\r\n\t\t        checkPatientsIndex();\r\n\t\t        self.Title = ko.computed(function () {\r\n\t\t            var title = modalSettings.title;\r\n\t\t            var patientFullName = selectedPatient && selectedPatient() ? selectedPatient().fullName() : '';\r\n\t\t            if ( patientFullName ) {\r\n\t\t                title = title + ' - ' + patientFullName;\r\n\t\t            }\r\n\t\t            return title;\r\n\t\t        });\r\n\t\t    }\r\n\t\t\tself.Entity = modalSettings.entity;\r\n\t\t\tself.customButtons = modalSettings.customButtons ? modalSettings.customButtons : [];\r\n\t\t\tself.TemplatePath = ko.observable(modalSettings.templatePath);\r\n\t\t\tself.classOverride = ko.observable(modalSettings.classOverride? modalSettings.classOverride : null);\r\n\t\t\tself.Showing = modalSettings.showing ? modalSettings.showing : false;\r\n\t\t\t// Method on the modal to save the currently mapped properties\r\n\t\t\tself.saveChanges = function () {\r\n\t\t\t\t\r\n\t\t\t\t// If a save override was passed in,\r\n\t\t\t\tif (modalSettings.saveOverride) {\r\n\t\t\t\t\t// Use that to save.\r\n\t\t\t\t\tmodalSettings.saveOverride();\r\n\t\t\t\t\tself.Showing(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// If not, use the entities default ave\r\n\t\t\t\t\t// Check if a datacontext exists\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\tvar thisEntity = ko.unwrap(self.Entity);\r\n\t\t\t\t\tthisEntity.saveChanges();\r\n\t\t\t\t\t// Close the modal when the save is complete\r\n\t\t\t\t\tself.Showing(false);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tself.cancelChanges = function () {\r\n\t\t\t\t// If a cancel override function was passed in,\r\n\t\t\t\tif (modalSettings.cancelOverride) {\r\n\t\t\t\t\t// Use it\r\n\t\t\t\t\tvar confirmed = modalSettings.cancelOverride();\r\n\t\t\t\t\tif( confirmed === undefined || confirmed === true ){\r\n\t\t\t\t\t\tself.Showing(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// If not, use the entities default\r\n\t\t\t\t\tvar thisEntity = ko.unwrap(self.Entity);\r\n\t\t\t\t\tthisEntity.cancelChanges();\r\n\t\t\t\t\tself.Showing(false);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// Placeholder delete method\r\n\t\t\tself.delete = function () {\r\n\t\t\t\t// If a cancel override function was passed in,\r\n\t\t\t\tif (modalSettings.deleteOverride) {\r\n\t\t\t\t\t// Use it\r\n\t\t\t\t\tmodalSettings.deleteOverride();\r\n\t\t\t\t\tself.Showing(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.Showing(false);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tself.deleteText = ko.observable('Delete');\r\n\t\t\t// Controls whether the modal shows save or delete buttons\r\n\t\t\tself.canDelete = ko.observable(false);\r\n\t\t}\r\n\r\n\t\t// Section for the quick add menu in the shell module\r\n\t\tfunction quickAddSection(type, title, iconPath, path) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.Type = ko.observable(type);\r\n\t\t\tself.Title = ko.observable(title);\r\n\t\t\tself.IconPath = ko.observable(iconPath);\r\n\t\t\tself.Path = ko.observable(path);\r\n\t\t}\r\n\r\n\t\t// Gender model to use\r\n\t\tfunction Gender(id, gender, desc) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.Id = id;\r\n\t\t\tself.Gender = gender;\r\n\t\t\tself.Description = desc;\r\n\t\t\tself.SmallImgSrc = '/NightingaleUI/Content/images/patient_' + desc.toLowerCase() + '_small.png';\r\n\t\t\tself.LargeImgSrc = '/NightingaleUI/Content/images/patient_' + desc.toLowerCase() + '_large.png';\r\n\t\t}\r\n\r\n\t\t// Day of week model to use\r\n\t\tfunction Day(id, code, name) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.Id = id;\r\n\t\t\tself.Code = code;\r\n\t\t\tself.Name = name;\r\n\t\t}\r\n\r\n\t\t// Place holder until I get the types done\r\n\t\tfunction SomeType(id, name) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.id = ko.observable(id);\r\n\t\t\tself.name = ko.observable(name);\r\n\t\t}\r\n\r\n\t\t// Validation error message to populate entity's collection\r\n\t\tfunction validationError(propName, message) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.PropName = propName;\r\n\t\t\tself.Message = message;\r\n\t\t}\r\n\r\n\t\t// Expose the model module to the requiring modules\r\n\t\tvar model = {\r\n\t\t\tproperty: property,\r\n\t\t\tParameter: Parameter,\r\n\t\t\tmodal: modal,\r\n\t\t\tquickAddSection: quickAddSection,\r\n\t\t\tGender: Gender,\r\n\t\t\tDay: Day,\r\n\t\t\tSomeType: SomeType,\r\n\t\t\tvalidationError: validationError,\r\n\t\t\tinitialize: initialize\r\n\t\t};\r\n\t\treturn model;\r\n\r\n\t\t// Initialize the entity models in the entity manager\r\n\t\tfunction initialize(metadataStore) {\r\n\r\n\t\t\t// Patient information\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"Patient\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tbackground: { dataType: \"String\" },\r\n\t\t\t\t\tclinicalBackground: { dataType: \"String\" },\r\n\t\t\t\t\tdeceasedId: { dataType: \"Int64\" },\r\n\t\t\t\t\tdisplaySystemId: { dataType: \"String\" },\r\n\t\t\t\t\tdisplaySystemName: { dataType: \"String\" },\r\n\t\t\t\t\tdisplayLabel: { dataType: \"String\" },\r\n\t\t\t\t\tdOB: { dataType: \"String\" },\r\n\t\t\t\t\tflagged: { dataType: \"Boolean\" },\r\n\t\t\t\t\tfirstName: { dataType: \"String\" },\r\n\t\t\t\t\tfullSSN: { dataType: \"String\" },\r\n\t\t\t\t\tgender: { dataType: \"String\" },\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tcontactId: { dataType: \"String\" },\t\t\t\t\t\r\n\t\t\t\t\tlastFourSSN: { dataType: \"String\" },\r\n\t\t\t\t\tlastName: { dataType: \"String\" },\r\n\t\t\t\t\tmaritalStatusId: { dataType: \"String\" },\r\n\t\t\t\t\tmiddleName: { dataType: \"String\" },\r\n\t\t\t\t\tpreferredName: { dataType: \"String\" },\r\n\t\t\t\t\tpriority: { dataType: \"String\" },\r\n\t\t\t\t\tprotected: { dataType: \"Boolean\" },\r\n\t\t\t\t\tproviderId: { dataType: \"Int64\" },\r\n\t\t\t\t\treasonId: { dataType: \"String\" },\r\n\t\t\t\t\tstatusId: { dataType: \"String\" },\r\n\t\t\t\t\tstatusDataSource: { dataType: \"String\" },\r\n\t\t\t\t\tsuffix: { dataType: \"String\" },\r\n\t\t\t\t\tdataSource: {dataType: \"String\" },\r\n\t\t\t\t\ttwitterHandle: { dataType: \"String\" }\r\n\t\t\t\t},\r\n\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\tprovider: {\r\n\t\t\t\t\t\tentityTypeName: \"Provider\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Provider_Patients\", foreignKeyNames: [\"providerId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaritalStatus: {\r\n\t\t\t\t\t\tentityTypeName: \"MaritalStatus\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Patient_MaritalStatus\", foreignKeyNames: [\"maritalStatusId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpriorityModel: {\r\n\t\t\t\t\t\tentityTypeName: \"Priority\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Priority_Patients\", foreignKeyNames: [\"priority\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpatientStatus: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientStatus\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Patient_PatientStatus\", foreignKeyNames: [\"statusId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpatientStatusReason: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientStatusReason\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Patient_PatientStatusReason\", foreignKeyNames: [\"reasonId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tproblems: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientProblem\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"PatientProblem_Patient\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tprograms: {\r\n\t\t\t\t\t\tentityTypeName: \"Program\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Patient_Programs\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgoals: {\r\n\t\t\t\t\t\tentityTypeName: \"Goal\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Patient_Goals\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnotes: {\r\n\t\t\t\t\t\tentityTypeName: \"Note\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Patient_Notes\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttodos: {\r\n\t\t\t\t\t\tentityTypeName: \"ToDo\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Patient_Todos\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tallergies: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientAllergy\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Patient_Allergies\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmedications: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientMedication\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Patient_Medications\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontactCard: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactCard\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Patient_ContactCard\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tobservations: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientObservation\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Patient_Observations\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpatientSystems: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientSystem\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Patient_PatientSystems\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdeceased: {\r\n\t\t\t\t\t\tentityTypeName: \"Deceased\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Patient_Deceased\", foreignKeyNames: [\"deceasedId\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar patientPropertyList = [\r\n\t\t\t\t{\r\n\t\t\t\t\t// Short name of property\r\n\t\t\t\t\tname: 'firstName',\r\n\t\t\t\t\t// Desired display name of property\r\n\t\t\t\t\tdisplayName: 'First Name',\r\n\t\t\t\t\t// Collection of validators\r\n\t\t\t\t\tvalidatorsList: [\r\n\t\t\t\t\t\tValidator.required(),\r\n\t\t\t\t\t\tValidator.maxLength({ maxLength: 20 })\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t// Short name of property\r\n\t\t\t\t\tname: 'lastName',\r\n\t\t\t\t\t// Desired display name of property\r\n\t\t\t\t\tdisplayName: 'Last Name',\r\n\t\t\t\t\t// Collection of validators\r\n\t\t\t\t\tvalidatorsList: [\r\n\t\t\t\t\t\tValidator.required(),\r\n\t\t\t\t\t\tValidator.maxLength({ maxLength: 20 })\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'fullSSN',\r\n\t\t\t\t\tdisplayName: 'SSN',\r\n\t\t\t\t\tvalidatorsList: [\r\n\t\t\t\t\t//Validator.required(),\r\n\t\t\t\t\tcustomValidators.validators.ssnValidator\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'dOB',\r\n\t\t\t\t\tdisplayName: 'DOB',\r\n\t\t\t\t\tvalidatorsList: [\r\n\t\t\t\t\t//Validator.required(),\r\n\t\t\t\t\tcustomValidators.validators.dateValidator({minDate: moment().subtract(200, 'year').format('MM/DD/YYYY'), maxDate: 'today'})\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Example of using a custom regex for validation\r\n\t\t\t\t//,\r\n\t\t\t\t//{\r\n\t\t\t\t//    name: 'suffix',\r\n\t\t\t\t//    displayName: 'Suffix',\r\n\t\t\t\t//    validatorsList: [\r\n\t\t\t\t//        customValidators.validators.zipValidator\r\n\t\t\t\t//    ]\r\n\t\t\t\t//}\r\n\t\t\t];\r\n\r\n\t\t\tvalidatorFactory.fixNamesAndRegisterValidators(metadataStore, 'Patient', patientPropertyList);\r\n\r\n\t\t\t// Junction object for Patient <--> Problem\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"PatientProblem\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tiD: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tpatientID: { dataType: \"String\" },\r\n\t\t\t\t\tproblemID: { dataType: \"String\" },\r\n\t\t\t\t\tlevel: { dataType: \"String\" }\r\n\t\t\t\t},\r\n\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\tpatient: {\r\n\t\t\t\t\t\tentityTypeName: \"Patient\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"PatientProblem_Patient\", foreignKeyNames: [\"patientID\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tproblem: {\r\n\t\t\t\t\t\tentityTypeName: \"Problem\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"PatientProblem_Problem\", foreignKeyNames: [\"problemID\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Problem for a Patient\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"Problem\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tname: { dataType: \"String\" }\r\n\t\t\t\t},\r\n\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\tpatientProblems: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientProblem\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"PatientProblem_Problem\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Provider\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"Provider\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"Int64\", isPartOfKey: true },\r\n\t\t\t\t\tname: { dataType: \"String\" }\r\n\t\t\t\t},\r\n\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\tpatients: {\r\n\t\t\t\t\t\tentityTypeName: \"Patient\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"Provider_Patients\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Cohort\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"Cohort\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tiD: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tname: { dataType: \"String\" },\r\n\t\t\t\t\tsName: { dataType: \"String\" },\r\n\t\t\t\t\tdescription: { dataType: \"String\" }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// General identifier complex type (for creating collections of ids, such as ContactCard.CommunicationModeIds\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"Identifier\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tisComplexType: true,\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"String\" }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Allergy Search\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"AllergySearch\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tname: { dataType: \"String\" },\r\n\t\t\t\t\tdisplayName: { dataType: \"String\" }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Medication Search\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"MedicationSearch\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tname: { dataType: \"String\" },\r\n\t\t\t\t\tdisplayName: { dataType: \"String\" }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"CareTeam\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tcontactId: { dataType: \"String\" },\r\n\t\t\t\t\tcreatedById: { dataType: \"String\" },\r\n\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tupdatedById: { dataType: \"String\" },\r\n\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" } \r\n\t\t\t\t},\r\n\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\tpatientContact: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactCard\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"CareTeam_Patient_ContactCard\", foreignKeyNames: [\"contactId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmembers: { \r\n\t\t\t\t\t\tentityTypeName: \"CareMember\", isScalar: false,\r\n\t\t\t\t\t\tassociationName: \"CareTeam_CareMembers\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Care Member complex type\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"CareMember\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tgender: { dataType: \"String\" },\t//TODO: remove and use contact\r\n\t\t\t\t\tpreferredName: { dataType: \"String\" },\t\t\t\t\t\r\n\t\t\t\t\tcareTeamId: { dataType: \"String\" },\r\n\t\t\t\t\tcontactId: { dataType: \"String\" },\r\n\t\t\t\t\ttypeId: { dataType: \"String\" },\r\n\t\t\t\t\tprimary: { dataType: \"Boolean\" },\r\n\t\t\t\t\troleId: { dataType: \"String\"},\r\n\t\t\t\t\tcustomRoleName: { dataType: \"String\"},\r\n\t\t\t\t\tstartDate: { dataType: \"DateTime\" }, \r\n\t\t\t\t\tendDate: { dataType: \"DateTime\" },\r\n\t\t\t\t\tcore: { dataType: \"Boolean\" },\r\n\t\t\t\t\tnotes:  { dataType: \"String\" },\r\n\t\t\t\t\tnewNotes: { dataType: \"String\" },\r\n\t\t\t\t\tfrequencyId: { dataType: \"String\" },\r\n\t\t\t\t\tdistance: { dataType: \"String\" },\r\n\t\t\t\t\tdistanceUnit: {dataType: \"String\"},\r\n\t\t\t\t\texternalRecordId: { dataType: \"String\" },\r\n\t\t\t\t\tdataSource: { dataType: \"String\" },\r\n\t\t\t\t\tstatusId: { dataType: \"Int64\", defaultValue: 1 },\r\n\t\t\t\t\tcreatedById: { dataType: \"String\" },\r\n\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tupdatedById: { dataType: \"String\" },\r\n\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" }\r\n\t\t\t\t},\r\n\t\t\t\tnavigationProperties: {\t\t\t\t    \r\n\t\t\t\t\tcareTeam: {\r\n\t\t\t\t\t\tentityTypeName: \"CareTeam\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"CareTeam_CareMembers\", foreignKeyNames: [\"careTeamId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontact:{\r\n\t\t\t\t\t\tentityTypeName: \"ContactCard\", isScalar: true,\r\n\t\t\t\t        associationName: \"CareMember_ContactCard\", foreignKeyNames: [\"contactId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t    type: {\r\n\t\t\t\t        entityTypeName: \"CareMemberType\", isScalar: true,\r\n\t\t\t\t        associationName: \"CareMember_Type\", foreignKeyNames: [\"typeId\"]\r\n\t\t\t\t    },\r\n\t\t\t\t\tstatus: {\r\n\t\t\t\t\t\tentityTypeName: \"CareMemberStatus\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"CareMember_CareMemberStatus\", foreignKeyNames: [\"statusId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfrequency: {\r\n\t\t\t\t\t\tentityTypeName: \"CareTeamFrequency\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"CareMember_CareTeamFrequency\", foreignKeyNames: [\"frequencyId\"]\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\troleType: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactTypeLookup\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactTypeLookup_ContactCard\", foreignKeyNames: [\"roleId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcreatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"PatientSystem_CreatedBy\", foreignKeyNames: [\"createdById\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"PatientSystem_UpdatedBy\", foreignKeyNames: [\"updatedById\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Alert\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"Alert\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tautoGeneratedKeyType: breeze.AutoGeneratedKeyType.Identity,\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"Int64\", isPartOfKey: true },\r\n\t\t\t\t\tresult: { dataType: \"Int64\" },\r\n\t\t\t\t\treason: { dataType: \"String\" }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Patient System\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"PatientSystem\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tpatientId: { dataType: \"String\" },\r\n\t\t\t\t\tsystemId: { dataType: \"String\" },\r\n\t\t\t\t\tvalue: { dataType: \"String\" },\r\n\t\t\t\t\tdataSource:  { dataType: \"String\" },\r\n\t\t\t\t\tstatusId: { dataType: \"String\" },\r\n\t\t\t\t\tprimary: { dataType: \"Boolean\" },\r\n\t\t\t\t\tcreatedById: { dataType: \"String\" },\r\n\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tupdatedById: { dataType: \"String\" },\r\n\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" }\r\n\t\t\t\t},\r\n\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\tpatient: {\r\n\t\t\t\t\t\tentityTypeName: \"Patient\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Patient_PatientSystems\", foreignKeyNames: [\"patientId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsystem: {\r\n\t\t\t\t\t\tentityTypeName: \"System\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"PatientSystem_System\", foreignKeyNames: [\"systemId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpatientSystemStatus: {\r\n\t\t\t\t\t\tentityTypeName: \"PatientSystemStatus\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Patient_PatientSystemStatus\", foreignKeyNames: [\"statusId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcreatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"PatientSystem_CreatedBy\", foreignKeyNames: [\"createdById\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"PatientSystem_UpdatedBy\", foreignKeyNames: [\"updatedById\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// System\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"System\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties: {\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tname:  { dataType: \"String\" },\r\n\t\t\t\t\tfield:  { dataType: \"String\" },\r\n\t\t\t\t\tdisplayLabel:  { dataType: \"String\" },\r\n\t\t\t\t\tstatusId:  { dataType: \"String\" },\r\n\t\t\t\t\tprimary: { dataType: \"Boolean\" }\r\n\t\t\t\t},\r\n\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\tpatientSystem: {\r\n\t\t\t\t\t\tentityTypeName: \"System\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Patient_System\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsystemStatus: {\r\n\t\t\t\t\t\tentityTypeName: \"SystemStatus\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"System_SystemStatus\", foreignKeyNames: [\"statusId\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//  Register constructor functions for patient\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'Patient', null, patientInitializer);\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'PatientProblem', null, patientProblemInitializer);\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'Alert', null, alertInitializer);\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'CareMember', null, careMemberInitializer);\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'CareTeam', null, careTeamInitializer);\t\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'PatientSystem', null, patientSystemInitializer);\r\n\r\n\t\t\tfunction patientInitializer(patient) {\r\n\t\t\t\t// Check if a datacontext exists\r\n\t\t\t\tcheckDataContext();\r\n\t\t\t\tpatient.isNew = ko.observable(false);\r\n\t\t\t\tpatient.isDuplicate = ko.observable(false);\r\n\t\t\t\tpatient.forcedSave = false;\r\n\t\t\t\tpatient.age = ko.computed(function () {\r\n\t\t\t\t\t// Get the DOB and add 23 hours to it, so it is always considered close to midnight as possible for all time zones\r\n\t\t\t\t\tif (!patient.dOB()) { return ''; }\r\n\t\t\t\t\tvar dob = moment(patient.dOB()).add('hours', 23);\r\n\t\t\t\t\t// Get the current moment in time to compare for age\r\n\t\t\t\t\tvar rightnow = moment(new Date()).add('days', 1);\r\n\t\t\t\t\t// If the DOB is null, is after right now, or is not a valid date, return null\r\n\t\t\t\t\tif (!dob || dob > rightnow || !dob.isValid()) {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If not then calculate and return the age\r\n\t\t\t\t\treturn rightnow.diff(dob, 'years');\r\n\t\t\t\t});\r\n\t\t\t\tpatient.fullFirstName = ko.computed(function () {\r\n\t\t\t\t\t// Get the 3 possible values to be included in the full first name\r\n\t\t\t\t\tvar fn = patient.firstName();\r\n\t\t\t\t\tvar pn = patient.preferredName();\r\n\t\t\t\t\tvar mi = patient.middleName() ? patient.middleName().substr(0, 1) + '.' : '';\r\n\t\t\t\t\t// If there is a preferred name, return that\r\n\t\t\t\t\t//      if not then check for a middle name that is 2 chars in length and return first name + middle initial\r\n\t\t\t\t\t//           if not then return first name only\r\n\t\t\t\t\tvar fullfn = pn ? pn : (mi.length === 2 ? fn + ' ' + mi : fn);\r\n\t\t\t\t\treturn fullfn;\r\n\t\t\t\t});\r\n\t\t\t\tpatient.fullLastName = ko.computed(function () {\r\n\t\t\t\t\t// Get the values we will need\r\n\t\t\t\t\tvar ln = patient.lastName();\r\n\t\t\t\t\tvar sfx = patient.suffix();\r\n\t\t\t\t\t// Get the full last name.  If there is a suffix, add it to the last name\r\n\t\t\t\t\t//      If there is not a suffix, use last name only\r\n\t\t\t\t\tvar fullln = sfx ? ln + ' ' + sfx : ln;\r\n\t\t\t\t\treturn fullln;\r\n\t\t\t\t});\r\n\t\t\t\tpatient.fullName = ko.computed(function () {\r\n\t\t\t\t\t// Get the patients full first name\r\n\t\t\t\t\tvar fn = patient.fullFirstName();\r\n\t\t\t\t\t// Get the patients full last name\r\n\t\t\t\t\tvar ln = patient.fullLastName();\r\n\t\t\t\t\t// If there is no first name, just show the last name\r\n\t\t\t\t\treturn fn ? fn + ' ' + ln : ln;\r\n\t\t\t\t});\r\n\t\t\t\tpatient.formattedSSN = ko.computed(function () {\r\n\t\t\t\t\tvar thisString = '';\r\n\t\t\t\t\tif (patient.lastFourSSN()) {\r\n\t\t\t\t\t\tthisString = \"XXX-XX-\" + patient.lastFourSSN();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn thisString;\r\n\t\t\t\t});\r\n\t\t\t\tpatient.genderModel = ko.computed({\r\n\t\t\t\t\tread: function () {\r\n\t\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\t\tvar thisGender;\r\n\t\t\t\t\t\tvar gender = patient.gender() ? patient.gender().toLowerCase() : '';\r\n\t\t\t\t\t\tif (gender === 'm' || gender === 'male') {\r\n\t\t\t\t\t\t\tpatient.gender('M');\r\n\t\t\t\t\t\t\tthisGender = ko.utils.arrayFirst(datacontext.enums.genders(), function (item) {\r\n\t\t\t\t\t\t\t\treturn 'm' === item.Id;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (gender === 'f' || gender === 'female') {\r\n\t\t\t\t\t\t\tpatient.gender('F');\r\n\t\t\t\t\t\t\tthisGender = ko.utils.arrayFirst(datacontext.enums.genders(), function (item) {\r\n\t\t\t\t\t\t\t\treturn 'f' === item.Id;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tpatient.gender('N');\r\n\t\t\t\t\t\t\tthisGender = ko.utils.arrayFirst(datacontext.enums.genders(), function (item) {\r\n\t\t\t\t\t\t\t\treturn 'n' === item.Id;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn thisGender;\r\n\t\t\t\t\t},\r\n\t\t\t\t\twrite: function (newValue) {\r\n\t\t\t\t\t\tpatient.gender(ko.unwrap(newValue).Id.toUpperCase());\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tpatient.forceSave = function () {\r\n\t\t\t\t\tpatient.forcedSave = true;\r\n\t\t\t\t\tpatient.saveChanges();\r\n\t\t\t\t};\r\n\t\t\t\t// Method to save changes to the patient\r\n\t\t\t\tpatient.saveChanges = function () {\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\tif( patient.dOB() ){\r\n\t\t\t\t\t\t//ensure zero padded date \"MM/DD/YYYY\" as in some scenarios it is possible to send \"M/D/YYYY\" :\r\n\t\t\t\t\t\tpatient.dOB( formatter.date.optimizeDate( patient.dOB() ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar thisPatient = patient;\r\n\t\t\t\t\tdatacontext.saveIndividual(thisPatient);\r\n\t\t\t\t};\r\n\t\t\t\t// Method on the modal to cancel changes to the patient\r\n\t\t\t\tpatient.cancelChanges = function () {\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\tdatacontext.cancelEntityChanges(patient);\r\n\t\t\t\t};\r\n\t\t\t\tpatient.isNew.subscribe(function (newValue) {\r\n\t\t\t\t\t// if (newValue) {\r\n\t\t\t\t\t// \tpatient.isValid(false);\r\n\t\t\t\t\t// }\r\n\t\t\t\t});\r\n\t\t\t\tpatient.isValid = ko.observable(true);\r\n\t\t\t\tpatient.canSave = ko.computed(function () {\r\n\t\t\t\t\treturn patient.isValid() && !patient.isDuplicate();\r\n\t\t\t\t});\r\n\t\t\t\tpatient.validationErrors = ko.observableArray([]);\r\n\t\t\t\tpatient.entityAspect.validationErrorsChanged.subscribe(function (validationChangeArgs) {\r\n\t\t\t\t\tvar hasErrors = patient.entityAspect.hasValidationErrors;\r\n\t\t\t\t\tvar errorsList = [];\r\n\t\t\t\t\tif (hasErrors) {\r\n\t\t\t\t\t\tpatient.isValid(false);\r\n\t\t\t\t\t\tvar errors = patient.entityAspect.getValidationErrors();\r\n\t\t\t\t\t\tko.utils.arrayForEach(errors, function (error) {\r\n\t\t\t\t\t\t\terrorsList.push(new validationError(error.propertyName, error.errorMessage));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tpatient.validationErrors(errorsList);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpatient.validationErrors([]);\r\n\t\t\t\t\t\tpatient.isValid(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tpatient.validationErrorsArray = ko.computed(function () {\r\n\t\t\t\t\tvar thisArray = [];\r\n\t\t\t\t\tko.utils.arrayForEach(patient.validationErrors(), function (error) {\r\n\t\t\t\t\t\tthisArray.push(error.PropName);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn thisArray;\r\n\t\t\t\t});\r\n\t\t\t\tif (patient.firstName() === null) {\r\n\t\t\t\t\tpatient.firstName('.');\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpatient.firstName('');\r\n\t\t\t\t\t}, 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (patient.lastName() === null) {\r\n\t\t\t\t\tpatient.lastName('.');\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpatient.lastName('');\r\n\t\t\t\t\t}, 1);\r\n\t\t\t\t}\r\n\t\t\t\tpatient.setDefaultStatusReason = function(){\r\n\t\t\t\t\tunknownReason = ko.utils.arrayFirst(datacontext.enums.patientStatusReasons(), function (reason) {\r\n\t\t\t\t\t\treturn 'Unknown' === reason.name();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tpatient.patientStatusReason(unknownReason);\r\n\t\t\t\t}\r\n\t\t\t\tpatient.canSavePatientSystems = ko.computed(function () {\r\n\t\t\t\t\tvar systemIds = patient.patientSystems();\r\n\t\t\t\t\tvar result = false;\r\n\t\t\t\t\tvar isValid = true;\r\n\t\t\t\t\tvar hasChanges = false;\r\n\t\t\t\t\tko.utils.arrayForEach( systemIds, function( record ){\r\n\t\t\t\t\t\tif( record.isNew() || record.entityAspect.entityState.name !== 'Unchanged' ){\r\n\t\t\t\t\t\t\thasChanges = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( !record.isValid() ){\r\n\t\t\t\t\t\t\tisValid = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn (isValid && hasChanges);\r\n\t\t\t\t});\r\n\t\t\t\tpatient.getPrimaryPatientSystem = function(){\r\n\t\t\t\t\tvar primaries = ko.utils.arrayFilter(patient.patientSystems(), function (system){\r\n\t\t\t\t\t\treturn system.primary() === true && system.statusId() !== '2';\r\n\t\t\t\t\t});\r\n\t\t\t\t\tprimaries = primaries.sort(\r\n\t\t\t\t\t\tfunction (a,b) {\r\n\t\t\t\t\t\t\tvar x = a.createdOn(); var y = b.createdOn(); if (x == y) { return 0; } if (isNaN(x) || x > y) { return -1; } if (isNaN(y) || x < y) { return 1; }\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\treturn primaries[0];\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tpatient.minor = ko.computed(function () {\t\t\t\t\t\r\n\t\t\t\t\tvar minorAge = datacontext.getSettingsParam('MinorAge');\r\n\t\t\t\t\treturn patient.age() !== null && parseInt(patient.age()) >= 0 && patient.age() < minorAge;\r\n\t\t\t\t});\r\n\t\t\t\t// Set the patient defaults, if not already set\r\n\t\t\t\tif (patient.protected() !== true) {\r\n\t\t\t\t\tpatient.protected(false);\r\n\t\t\t\t}\r\n\t\t\t\tif (patient.deceasedId() !== '1') {\r\n\t\t\t\t\tpatient.deceasedId('2');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t*\tobservable to flag the completion of loading a patient data of any kind (todos, care members etc \r\n\t\t\t\t*\t\tas signaled in viewmodels/patients/index - patientFullyLoaded ).\r\n\t\t\t\t*\t@method patient.isLoaded\r\n\t\t\t\t*/\r\n\t\t\t\tpatient.isLoaded = ko.observable( false );\r\n\t\t\t}\r\n\r\n\t\t\tfunction patientSystemInitializer( patientSystem ){\r\n\t\t\t\tpatientSystem.isDeleted = ko.observable( false );\r\n\t\t\t\tpatientSystem.isNew = ko.observable( false );\r\n\t\t\t\tvar systemCareManager = getSystemCareManager();\r\n\t\t\t\tpatientSystem.isEditable = ko.observable(false);\r\n\t\t\t\tif( patientSystem.createdById() === systemCareManager.id() ){\r\n\t\t\t\t\tpatientSystem.isEditable(false);\r\n\t\t\t\t} else{\r\n\t\t\t\t\tpatientSystem.isEditable(true);\r\n\t\t\t\t}\r\n\t\t\t\t//TODO: find the system user. if created by system - set isEditable = false\r\n\t\t\t\tpatientSystem.validationErrors = ko.observableArray();\r\n\t\t\t\tpatientSystem.validationErrorsArray = ko.computed(function () {\r\n\t\t\t\t\tvar thisArray = [];\r\n\t\t\t\t\tko.utils.arrayForEach(patientSystem.validationErrors(), function (error) {\r\n\t\t\t\t\t\tthisArray.push(error.PropName);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn thisArray;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tpatientSystem.isValid = ko.computed( function(){\r\n\t\t\t\t\tvar errors = [];\r\n\t\t\t\t\tvar value = patientSystem.value();\r\n\t\t\t\t\tvar system = patientSystem.system();\r\n\t\t\t\t\tvar isDeleted = patientSystem.isDeleted();\r\n\t\t\t\t\tif( isDeleted ) { return true; }\r\n\t\t\t\t\tif( !value ){\r\n\t\t\t\t\t\terrors.push({ PropName: 'value', Message: 'Value is required', Id: patientSystem.id() });\r\n\t\t\t\t\t} else if ( value.trim().length === 0 ){\r\n\t\t\t\t\t\terrors.push({ PropName: 'value', Message: 'Value cannot be blank', Id: patientSystem.id() });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( !system ){\r\n\t\t\t\t\t\terrors.push({ PropName: 'system', Message: 'System is required', Id: patientSystem.id() });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatientSystem.validationErrors( errors );\r\n\t\t\t\t\treturn (errors.length === 0)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction careMemberInitializer(member) {\r\n\t\t\t\tmember.isNew = ko.observable(false);\r\n\t\t\t\tmember.validationErrors = ko.observableArray();\r\n\t\t\t\tmember.careTeamValidationErrors = ko.observableArray();\r\n\t\t\t\tmember.validationErrorsArray = ko.computed(function () {\r\n\t\t\t\t\tvar thisArray = [];\r\n\t\t\t\t\tko.utils.arrayForEach(member.validationErrors(), function (error) {\r\n\t\t\t\t\t\tthisArray.push(error.PropName);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn thisArray;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tmember.checkAppend = function () {\r\n                    formatter.appendNewDetails( member.newNotes, member.notes, datacontext.getUsercareManagerName() );\r\n                };\r\n\t\t\t\t\r\n\t\t\t\tmember.startDateErrors = ko.observableArray([]);\r\n\t\t\t\tmember.endDateErrors = ko.observableArray([]);\r\n\t\t\t\tmember.setInvalidStartDate = ko.computed( function(){\r\n\t\t\t\t\tvar validationErrorsArray = member.validationErrorsArray();\r\n\t\t\t\t\treturn (validationErrorsArray && validationErrorsArray.indexOf('startDate') !== -1);  \r\n\t\t\t\t});\r\n\t\t\t\tmember.setInvalidEndDate = ko.computed( function(){\r\n\t\t\t\t\tvar validationErrorsArray = member.validationErrorsArray();\r\n\t\t\t\t\treturn (validationErrorsArray && validationErrorsArray.indexOf('endDate') !== -1);  \r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif( member.customRoleName() && !member.roleId() ){\r\n\t\t\t\t\tmember.roleId(-1);\t//Other Role (customRoleName)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tmember.isEditable = ko.computed( function(){\r\n\t\t\t\t\treturn member.dataSource() == 'Engage';\r\n\t\t\t\t});\r\n\t\t\t\tmember.computedRoleName = ko.computed( function(){\r\n\t\t\t\t\tvar name = '';\r\n\t\t\t\t\tvar roleId = member.roleId();\r\n\t\t\t\t\tvar roleType = member.roleType();\r\n\t\t\t\t\tvar customRoleName = member.customRoleName();\r\n\t\t\t\t\tif( roleId == -1 ){\r\n\t\t\t\t\t\tname = customRoleName;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( roleId && roleType ){\r\n\t\t\t\t\t\tname = roleType.role();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\t\r\n\t\t\t\tmember.isValid = ko.computed( function(){\r\n\t\t\t\t\tvar errors = [];\t\t\t\t\t\r\n\t\t\t\t\tvar contactId = member.contactId();\t\t\t\t\t\r\n\t\t\t\t\tvar roleId = member.roleId();\r\n\t\t\t\t\tvar customRoleName = member.customRoleName();\r\n\t\t\t\t\tvar careTeamValidationErrors = member.careTeamValidationErrors();\r\n\t\t\t\t\tif( careTeamValidationErrors.length ){\r\n\t\t\t\t\t\tko.utils.arrayForEach( careTeamValidationErrors, function(error){\r\n\t\t\t\t\t\t\terrors.push({ PropName: error.PropName, Message: error.Message });\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tif( !contactId ){\r\n\t\t\t\t\t\terrors.push({ PropName: 'contact', Message: 'A contact is required' });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( !roleId ){\r\n\t\t\t\t\t\terrors.push({ PropName: 'role', Message: 'Role is required' });\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( roleId == -1 && !customRoleName ){\r\n\t\t\t\t\t\terrors.push({ PropName: 'customRoleName', Message: 'Other Role is required' });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar startDate = member.startDate();\r\n\t\t\t\t\tvar endDate = member.endDate();\r\n\t\t\t\t\tvar startDateErrors = member.startDateErrors();\r\n\t\t\t\t\tvar endDateErrors = member.endDateErrors();\r\n\t\t\t\t\tif( startDateErrors.length > 0 ){\r\n\t\t\t\t\t\t//datetimepicker validation errors: \r\n\t\t\t\t\t\tko.utils.arrayForEach( startDateErrors, function(error){\r\n\t\t\t\t\t\t\terrors.push({ PropName: 'startDate', Message: 'Start Date ' + error.Message});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( endDateErrors.length > 0 ){\t\t\t\t\t\t\r\n\t\t\t\t\t\tko.utils.arrayForEach( endDateErrors, function(error){\r\n\t\t\t\t\t\t\terrors.push({ PropName: 'endDate', Message: 'End Date ' + error.Message});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tif( startDateErrors.length == 0 && endDateErrors.length == 0 && startDate && endDate ){\r\n\t\t\t\t\t\t//startDate - endDate range: both dates exist and valid:\r\n\t\t\t\t\t\tif( moment(startDate).isAfter( moment( endDate ) ) ){\r\n\t\t\t\t\t\t\terrors.push({ PropName: 'endDate', Message: 'End Date must be on or after: ' + moment( startDate ).format(\"MM/DD/YYYY\") });\r\n\t\t\t\t\t\t\terrors.push({ PropName: 'startDate', Message: 'Start Date must be on or before: ' + moment( endDate ).format(\"MM/DD/YYYY\") });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\tmember.validationErrors( errors );\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\treturn (errors.length === 0);\r\n\t\t\t\t});\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tfunction careTeamInitializer(careTeam){\r\n\t\t\t\tvar primaryCareManagerRoleName = 'Primary Care Manager';\r\n\t\t\t\tvar primaryCarePhysicianRoleName = 'Primary Care Physician';\r\n\t\t\t\t\r\n\t\t\t\tcareTeam.primaryCarePhysicians = ko.computed( function(){\r\n\t\t\t\t\tvar teamMembers = careTeam.members()? careTeam.members() : [];\r\n\t\t\t\t\tvar activeStatusId = 1;\r\n\t\t\t\t\tvar pcp = ko.utils.arrayFilter( teamMembers, function(m){\r\n\t\t\t\t\t\tif( m.statusId() == activeStatusId && m.roleId() && m.roleType() && m.core() ){\r\n\t\t\t\t\t\t\treturn !m.customRoleName() && ( m.roleType().role() == primaryCarePhysicianRoleName ); //if true - this is a core active pcp that is already assigned.\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn pcp;\r\n\t\t\t\t}).extend({throttle: 50});\r\n\t\t\t\t\r\n\t\t\t\tcareTeam.primaryCareManagers = ko.computed( function(){\r\n\t\t\t\t\tvar teamMembers = careTeam.members()? careTeam.members() : [];\r\n\t\t\t\t\tvar activeStatusId = 1;\r\n\t\t\t\t\tvar pcm = ko.utils.arrayFilter( teamMembers, function(m){\r\n\t\t\t\t\t\tif( m.statusId() == activeStatusId && m.roleId() && m.roleType() && m.core() ){\r\n\t\t\t\t\t\t\treturn !m.customRoleName() && ( m.roleType().role() == primaryCareManagerRoleName );\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn pcm;\r\n\t\t\t\t}).extend({throttle: 50});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction patientProblemInitializer(problem) {\r\n\t\t\t\tif (!problem.level || !problem.level()) {\r\n\t\t\t\t\tproblem.level('1');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction alertInitializer(alert) {\r\n\t\t\t\talert.type = ko.computed(function () {\r\n\t\t\t\t\tif (alert.result() || alert.result() === 0) {\r\n\t\t\t\t\t\treturn alert.result() === 0 ? 'error' : 'warning';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\t\t\t\talert.alertPath = ko.computed(function () {\r\n\t\t\t\t\tif (alert.type()) {\r\n\t\t\t\t\t\treturn 'shell/alerttypes/' + alert.type() + '.html';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t});\r\n\t\t\t\talert.showing = ko.observable(true);\r\n\t\t\t\tvar thisToken = alert.showing.subscribe(function () {\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\tdatacontext.alerts.remove(alert);\r\n\t\t\t\t\tthisToken.dispose();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t\tfunction checkDataContext() {\r\n\t\t\tif (!datacontext) {\r\n\t\t\t\tdatacontext = require('services/datacontext');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction checkPatientsIndex(){\r\n\t\t\tif( !patientsIndex ) {\r\n\t\t\t\tpatientsIndex = require('viewmodels/patients/index');\r\n\t\t\t\tselectedPatient = ko.computed(function () {\r\n\t\t\t\t\treturn patientsIndex.selectedPatient();\r\n\t\t\t\t});\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfunction getSystemCareManager(){\r\n\t\t\tif( ! systemCareManager ){\r\n\t\t\t\tcheckDataContext();\r\n\t\t\t\tsystemCareManager = datacontext.getSystemCareManager();\r\n\t\t\t}\r\n\t\t\treturn systemCareManager;\r\n\t\t}\t\t\r\n\t});\r\n\n","define('services/session',['models/base'],\r\n    function ( modelConfig) {\r\n\r\n        var datacontext;\r\n        var localStorageEnabled = false, cookiesEnabled = false;\r\n        \r\n        var currentUser = ko.observable();\r\n\r\n        var session = {\r\n            setLocalStorageAndCookie: setLocalStorageAndCookie,\r\n            deleteCookie: deleteCookie,\r\n            currentUser: currentUser,\r\n            logOff: logOff,\r\n            runTests: runTests,\r\n            getUserFromSession: getUserFromSession\r\n        };\r\n        return session;\r\n\r\n        function logOff() {\r\n            var resource = '/1.0/' + currentUser().contracts()[0].number() + '/logout';\r\n            checkDataContext();\r\n            datacontext.logOutUserByToken(resource).then(finishLoggingOff);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\r\n        function finishLoggingOff() {\r\n            clearSession();\r\n            window.location.href = \"/Logout.aspx\";\r\n        }\r\n\r\n        function clearSession() {\r\n            clearLocalStorage();\r\n            deleteCookie('ngSession');\r\n            return true;\r\n        }\r\n\r\n        function setLocalStorageAndCookie() {\r\n            // Set user to localStorage is possible\r\n            if (localStorageEnabled) {\r\n                var thisUser = ko.toJS(currentUser);\r\n                thisUser = JSON.stringify(thisUser, ['userId', 'aPIToken', 'firstName', 'lastName', 'userName', 'aPIToken', 'contracts', 'id', 'name', 'number']);\r\n                localStorage.setItem('ngSession', thisUser);\r\n            }\r\n\r\n            // Set a cookie for user if possible\r\n            if (cookiesEnabled) {\r\n                setCookie('ngSession', thisUser);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function clearLocalStorage() {\r\n            localStorage.clear();\r\n        }\r\n\r\n        function setCookie(c_name, value) {\r\n            var c_value = escape(value);\r\n            document.cookie = c_name + \"=\" + c_value;\r\n        }\r\n\r\n        function getCookie(c_name) {\r\n            var c_value = document.cookie;\r\n            var c_start = c_value.indexOf(\" \" + c_name + \"=\");\r\n            if (c_start == -1) {\r\n                c_start = c_value.indexOf(c_name + \"=\");\r\n            }\r\n            if (c_start == -1) {\r\n                c_value = null;\r\n            }\r\n            else {\r\n                c_start = c_value.indexOf(\"=\", c_start) + 1;\r\n                var c_end = c_value.indexOf(\";\", c_start);\r\n                if (c_end == -1) {\r\n                    c_end = c_value.length;\r\n                }\r\n                c_value = unescape(c_value.substring(c_start, c_end));\r\n            }\r\n            return c_value;\r\n        }\r\n\r\n        function deleteCookie(c_name) {\r\n            var name = c_name ? c_name : 'ngSession';\r\n            document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n        }\r\n\r\n        function runTests() {\r\n\r\n            // Test if local storage is enabled\r\n            function lsTest() {\r\n                var test = 'test';\r\n                try {\r\n                    localStorage.setItem(test, test);\r\n                    localStorage.removeItem(test);\r\n                    return true;\r\n                } catch (e) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // Test if local storage is enabled\r\n            function are_cookies_enabled() {\r\n                var cookieEnabled = (navigator.cookieEnabled) ? true : false;\r\n\r\n                if (typeof navigator.cookieEnabled == \"undefined\" && !cookieEnabled) {\r\n                    document.cookie = \"testcookie\";\r\n                    cookieEnabled = (document.cookie.indexOf(\"testcookie\") != -1) ? true : false;\r\n                }\r\n                return (cookieEnabled);\r\n            }\r\n\r\n            localStorageEnabled = lsTest();\r\n            cookiesEnabled = are_cookies_enabled();\r\n            return { ls: localStorageEnabled, cookies: cookiesEnabled };\r\n        }\r\n\r\n        function getUserFromSession() {\r\n            checkDataContext();\r\n            runTests();\r\n            if (localStorageEnabled) {\r\n                // Check for a session in localStorage\r\n                var retrievedItem = localStorage.getItem('ngSession');\r\n                var user = JSON.parse(retrievedItem);\r\n                // If an item is retrieved, try to get latest user by userId\r\n                if (user && user.aPIToken) {\r\n                    currentUser(datacontext.createUserFromSessionUser(user));\r\n                    return currentUser();\r\n                }\r\n            }\r\n            else if (cookiesEnabled) {\r\n                var user = getCookie('ngSession');\r\n                if (user && user.aPIToken) {\r\n                    currentUser(datacontext.createUserFromSessionUser(user));\r\n                    return currentUser();\r\n                }\r\n            }\r\n        }\r\n    });\n","\r\n/**\r\n*\tutility helper date related funcs\r\n*\t@module dateHelper\r\n*/\r\ndefine('services/dateHelper',[ 'services/formatter'],\r\n\tfunction(formatter){\r\n\t\t\r\n\t\tvar dateHelper = function(){};\r\n\t\t/**\r\n\t\t*\tvalidate a date that can be a partial date string. this is important for typeable date inputs.\r\n\t\t*\t@method isValidDate\t\t\r\n\t\t*/\r\n\t\tdateHelper.isValidDate = function (value){\r\n\t\t\treturn !this.isInvalidDate( value, null, true );\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t*\tvalidate a date and return error object with Message, or null (null=valid)\r\n\t\t*\t@method isInvalidDate\r\n\t\t*\t@param value {String} or {date} \r\n\t\t*\t@param context optional: a validation context object with minDate / maxDate\r\n\t\t*\t@param context.mindate {String} or {Date} or one of the following: 'now' , 'today'\r\n\t\t*\t@emptyIsInvalid {Boolean} if true then empty date values (null / \"\" / undefined) are not valid.\r\n\t\t* \t@example testing a date with isInvalidDate with a max date value of today: \r\n\t\t*\r\n\t\t*\t\tvar startDateError = dateHelper.isInvalidDate( medication.startDate(), { maxDate: 'today'} );\t\r\n\t\t*\t\tif( startDateError != null ){\r\n\t\t*\t\t\tmedicationErrors.push({ PropName: 'startDate', Message: medication.name() + ' Start Date ' + startDateError.Message});\r\n\t\t*\t\t\thasErrors = true;\r\n\t\t*\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tdateHelper.isInvalidDate = function(value, context, emptyIsInvalid){\r\n\t\t\tif ( value == null || value == \"\" || value === undefined ){\r\n\t\t\t\tif( emptyIsInvalid ){\r\n\t\t\t\t\treturn {Message: 'is not valid'};\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn null;\t//valid\t\r\n\t\t\t\t}\r\n\t\t\t} \t\r\n\t\t\tif( isNaN(new Date(value).valueOf()) ){\r\n\t\t\t\treturn {Message: 'is not valid'};\r\n\t\t\t}\r\n\t\t\tvar theMoment = moment(value, [\"MM-DD-YYYY\",\"MM/DD/YYYY\",\"M/D/YYYY\"], true);\r\n\t\t\tif( !theMoment.isValid() || value.search(/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}/) === -1 ){\r\n\t\t\t\t//short format failed\r\n\t\t\t\ttheMoment = moment(value, [\"YYYY-MM-DDTHH:mm:ss.SSSSZ\", \"YYYY-MM-DDTHH:mm:ssZ\"], true);\t//iso 8601\r\n\t\t\t\tif( !theMoment.isValid() ){\r\n\t\t\t\t\t//iso 8601 failed\r\n\t\t\t\t\tvar formattedValue = formatter.date.optimizeDate( value );\r\n\t\t\t\t\tif( !moment(formattedValue, [\"MM/DD/YYYY\"], true).isValid() || value.search(/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}/) === -1 ){\r\n\t\t\t\t\t\treturn {Message: 'is not valid'};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\t\r\n\t\t\tif( context && context.minDate ){\r\n\t\t\t\tvar minDate = context.minDate;\r\n\t\t\t\tvar minStr;\r\n\t\t\t\tif( minDate === 'now' || minDate === 'today'){\r\n\t\t\t\t\tminStr = minDate;\r\n\t\t\t\t\tminDate = moment();\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\telse{\r\n\t\t\t\t\tminStr = moment(minDate).format(\"MM/DD/YYYY\");\r\n\t\t\t\t}\r\n\t\t\t\tif( !moment(minDate).isValid() ) return true;\r\n\t\t\t\tif( theMoment.isBefore(moment(minDate), 'days') ){\r\n\t\t\t\t\treturn {Message: 'can not be before ' + minStr};\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\t\t\t\t\r\n\t\t\tif( context && context.maxDate ){\r\n\t\t\t\tvar maxDate = context.maxDate;\r\n\t\t\t\tvar maxStr;\r\n\t\t\t\tif( maxDate === 'now' || maxDate === 'today'){\r\n\t\t\t\t\tmaxStr = maxDate;\r\n\t\t\t\t\tmaxDate = moment();\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tmaxStr = moment(maxDate).format(\"MM/DD/YYYY\");\r\n\t\t\t\t}\r\n\t\t\t\tif( !moment(maxDate).isValid() ) return true;\r\n\t\t\t\tif( theMoment.isAfter(moment(maxDate), 'days') ){\r\n\t\t\t\t\treturn {Message: 'can not be after ' + maxStr};\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn null;\t//valid\r\n\t\t};\r\n\t\t\r\n\t\tdateHelper.isSameDate = function (moment1, moment2){\r\n\t\t\t//compare date parts only:\t\t\t\r\n\t\t\treturn moment(moment1.format('MM/DD/YYYY')).isSame(moment2.format('MM/DD/YYYY'))\r\n\t\t};\r\n\t\t\r\n\t\tdateHelper.setDateValue = function ( momentSrc, momentDest ){\t\t\t\r\n\t\t\tmomentDest.date( momentSrc.date() );\r\n\t\t\tmomentDest.month( momentSrc.month() );\r\n\t\t\tmomentDest.year( momentSrc.year() );\t\t\t\r\n\t\t\treturn momentDest;\r\n\t\t};\r\n\t\t\r\n\t\tdateHelper.setTimeValue = function( hour, minute, momentDest ){\r\n\t\t\tmomentDest.hour( hour );\r\n\t\t\tmomentDest.minute( minute );\r\n\t\t\treturn momentDest;\r\n\t\t};\r\n\t\treturn dateHelper;\r\n});\n","// Register all of the user related models in the entity manager (initialize function) and provide other non-entity models\r\ndefine('models/allergies',['services/session', 'services/dateHelper'],\r\n\tfunction (session, dateHelper) {\r\n\r\n\t    var datacontext;\r\n\r\n\t\tvar DT = breeze.DataType;\r\n\r\n\t\t// Expose the model module to the requiring modules\r\n\t\tvar allergyModels = {\r\n\t\t    initialize: initialize\r\n\t\t};\r\n\t\treturn allergyModels;\r\n\r\n\t\t// Initialize the entity models in the entity manager\r\n\t\tfunction initialize(metadataStore) {\r\n\r\n\t\t    // Note information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"PatientAllergy\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            allergyName: { dataType: \"String\" },\r\n\t\t            allergyId: { dataType: \"String\" },\r\n\t\t            patientId: { dataType: \"String\" },\r\n\t\t            deleteFlag: { dataType: \"Boolean\" },\r\n\t\t\t\t\tstartDate: { dataType: \"DateTime\" },\r\n\t\t\t\t\tendDate: { dataType: \"DateTime\" },\r\n\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" },\r\n\t\t            statusId: { dataType: \"String\" },\r\n\t\t            sourceId: { dataType: \"String\" },\r\n\t\t            systemName: { dataType: \"String\" },\r\n\t\t            allergyTypeIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t            reactionIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t            severityId: { dataType: \"String\" },\r\n\t\t            notes: { dataType: \"String\" },\r\n                    code: { dataType: \"String\" },\r\n                    codingSystemId: { dataType: \"String\" },\r\n                    dataSource: { dataType: \"String\", defaultValue: \"Engage\" },\r\n                    externalRecordId: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            patient: {\r\n\t\t                entityTypeName: \"Patient\", isScalar: true,\r\n\t\t                associationName: \"Patient_Allergies\", foreignKeyNames: [\"patientId\"]\r\n\t\t            },\r\n\t\t            severity: {\r\n\t\t                entityTypeName: \"Severity\", isScalar: true,\r\n\t\t                associationName: \"Allergy_Severity\", foreignKeyNames: [\"severityId\"]\r\n\t\t            },\r\n\t\t            status: {\r\n\t\t                entityTypeName: \"AllergyStatus\", isScalar: true,\r\n\t\t                associationName: \"Allergy_Status\", foreignKeyNames: [\"statusId\"]\r\n\t\t            },\r\n\t\t            source: {\r\n\t\t                entityTypeName: \"AllergySource\", isScalar: true,\r\n\t\t                associationName: \"Allergy_Source\", foreignKeyNames: [\"sourceId\"]\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Allergy State\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"AllergyStatus\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'PatientAllergy', null, patientAllergyInitializer);\r\n\r\n\t\t    function patientAllergyInitializer(allergy) {\r\n                allergy.isNew = ko.observable(false);\r\n                allergy.isUserCreated = ko.observable(false);\r\n                allergy.typeString = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var thisString = '';\r\n\t\t            ko.utils.arrayForEach(allergy.allergyTypeIds(), function (allg) {\r\n\t\t                var thisAllergyType = ko.utils.arrayFirst(datacontext.enums.allergyTypes(), function (faEnum) {\r\n\t\t                    return faEnum.id() === allg.id();\r\n\t\t                });\r\n\t\t                if (thisAllergyType) {\r\n\t\t                \tthisString += thisAllergyType.name() + ', ';\r\n\t\t                }\r\n\t\t            });\r\n\t\t            // If the string is longer than zero,\r\n\t\t            if (thisString.length > 0) {\r\n\t\t                // Remove the trailing comma and space\r\n\t\t                thisString = thisString.substr(0, thisString.length - 2);\r\n\t\t            }\r\n\t\t            if (thisString.length === 0) {\r\n\t\t                thisString = '-';\r\n\t\t            }\r\n\t\t            return thisString;\r\n\t\t        });\r\n\r\n\t\t\t\tallergy.startDateErrors = ko.observableArray([]);\t//datetimepicker validation errors\r\n\t\t\t\tallergy.endDateErrors = ko.observableArray([]);\t//datetimepicker validation errors\r\n\t\t\t\tallergy.validationErrors = ko.observableArray([]);\r\n\t\t\t\tallergy.isValid = ko.computed( function() {\r\n\t\t\t\t\tvar hasErrors = false;\r\n\t\t\t\t\tvar allergyErrors = [];\r\n\t\t\t\t\tvar context = {maxDate: 'today'};\r\n\t\t\t\t\tvar startDate = allergy.startDate();\r\n\t\t\t\t\tvar endDate = allergy.endDate();\r\n\t\t\t\t\tvar startDateErrors = allergy.startDateErrors();\r\n\t\t\t\t\tvar endDateErrors = allergy.endDateErrors();\r\n\t\t\t\t\tif( startDateErrors.length > 0 ){\r\n\t\t\t\t\t\t//datetimepicker validation errors:\r\n\t\t\t\t\t\tko.utils.arrayForEach( startDateErrors, function(error){\r\n\t\t\t\t\t\t\tallergyErrors.push({ PropName: 'startDate', Message: allergy.allergyName() + ' Start Date ' + error.Message});\r\n\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( endDate ){\r\n\t\t\t\t\t\tif( endDateErrors.length > 0 ){\r\n\t\t\t\t\t\t\tko.utils.arrayForEach( endDateErrors, function(error){\r\n\t\t\t\t\t\t\t\tallergyErrors.push({ PropName: 'endDate', Message: allergy.allergyName() + ' End Date ' + error.Message});\r\n\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( startDateErrors.length == 0 && endDateErrors.length == 0 && startDate && endDate ){\r\n\t\t\t\t\t\t\t//startDate - endDate range: both dates exist and valid:\r\n\t\t\t\t\t\t\tif( moment(startDate).isAfter( moment( endDate ) ) ){\r\n\t\t\t\t\t\t\t\tallergyErrors.push({ PropName: 'endDate', Message: allergy.allergyName() + ' End Date must be on or after: ' + moment( startDate ).format(\"MM/DD/YYYY\") });\r\n\t\t\t\t\t\t\t\tallergyErrors.push({ PropName: 'startDate', Message: allergy.allergyName() + ' Start Date must be on or before: ' + moment( endDate ).format(\"MM/DD/YYYY\") });\r\n\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tallergy.validationErrors(allergyErrors);\r\n\t\t\t\t\treturn !hasErrors;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t*\tcomputed. tracks for any validation errors and returns a list of the errored property names.\r\n\t\t\t\t*\tthis will be used in the property field css binding condition for invalid styling.\r\n\t\t\t\t*\t@method allergy.validationErrorsArray\r\n\t\t\t\t*/\r\n\t\t\t    allergy.validationErrorsArray = ko.computed(function () {\r\n\t\t\t        var thisArray = [];\r\n\t\t\t        ko.utils.arrayForEach(allergy.validationErrors(), function (error) {\r\n\t\t\t            thisArray.push(error.PropName);\r\n\t\t\t        });\r\n\t\t\t        return thisArray;\r\n\t\t\t    });\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t*\tcomputed. to allow forcing the datetimepicker control to set the start date as invalid.\r\n\t\t\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t\t\t*\t@method allergy.setInvalidStartDate\r\n\t\t\t\t*/\r\n\t\t\t\tallergy.setInvalidStartDate = ko.computed( function(){\r\n\t\t\t\t\tvar validationErrorsArray = allergy.validationErrorsArray();\r\n\t\t\t\t\treturn (validationErrorsArray && validationErrorsArray.indexOf('startDate') !== -1);\r\n\t\t\t\t});\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t*\tcomputed. to allow forcing the datetimepicker control to set the end date as invalid.\r\n\t\t\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t\t\t*\t@method allergy.setInvalidEndDate\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tallergy.setInvalidEndDate = ko.computed( function(){\r\n\t\t\t\t\tvar validationErrorsArray = allergy.validationErrorsArray();\r\n\t\t\t\t\treturn (validationErrorsArray && validationErrorsArray.indexOf('endDate') !== -1);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tallergy.needToSave = function(){\r\n\t\t\t\t\tvar result = (allergy.entityAspect.entityState.isModified() || allergy.isNew()) && allergy.sourceId();\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n                allergy.reactionString = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var thisString = '';\r\n\t\t            ko.utils.arrayForEach(allergy.reactionIds(), function (allg) {\r\n\t\t                var thisReacion = ko.utils.arrayFirst(datacontext.enums.reactions(), function (faEnum) {\r\n\t\t                    return faEnum.id() === allg.id();\r\n\t\t                });\r\n\t\t                if (thisReacion) {\r\n\t\t                \tthisString += thisReacion.name() + ', ';\r\n\t\t                }\r\n\t\t            });\r\n\t\t            // If the string is longer than zero,\r\n\t\t            if (thisString.length > 0) {\r\n\t\t                // Remove the trailing comma and space\r\n\t\t                thisString = thisString.substr(0, thisString.length - 2);\r\n\t\t            }\r\n\t\t            if (thisString.length === 0) {\r\n\t\t                thisString = '-';\r\n\t\t            }\r\n\t\t            return thisString;\r\n\t\t        });\r\n\t\t        // Inactivate this allergy\r\n\t\t\t\tallergy.setStatus = function(statusId, doneBannerMessage){\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t        \tallergy.statusId(statusId);\r\n\t                // Save it\r\n\t                datacontext.saveAllergies([allergy], 'Update').then(saveCompleted);\r\n\r\n\t                function saveCompleted() {\r\n\t                    allergy.isNew(false);\r\n\t                    allergy.isUserCreated(false);\r\n\t                    allergy.entityAspect.acceptChanges();\r\n\t                    datacontext.createAlert('warning', doneBannerMessage);\r\n\t                }\r\n\t\t\t\t}\r\n\t\t        allergy.inactivate = function () {\r\n\t\t\t\t\tallergy.setStatus(2,'Allergy has been deactivated!');\r\n\t\t        }\r\n\t\t\t\tallergy.activatePatientAllergy = function () {\r\n\t\t\t\t\tallergy.setStatus(1,'Allergy has been activated!');\r\n\t\t\t\t}\r\n\t\t        allergy.deletePatientAllergy = function(){\r\n\t\t\t\t\tvar message = 'You are about to delete: ' + allergy.allergyName() +' from this individual.  Press OK to continue, or cancel to return without deleting.';\r\n\t\t\t\t\tvar result = confirm(message);\r\n\t\t\t\t\tif (result === true) {\r\n\t\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\t\tdatacontext.deletePatientAllergy(allergy).then(deleted);\r\n\t\t\t\t\t\tfunction deleted () {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\tfunction checkDataContext() {\r\n\t\t    if (!datacontext) {\r\n\t\t        datacontext = require('services/datacontext');\r\n\t\t    }\r\n\t\t}\r\n\t});\n","\r\n/**\r\n*\t\r\n*\tRegister all of the user related models in the entity manager (initialize function) and provide other non-entity models\r\n*\t@module contactCard\r\n*/\r\ndefine('models/contacts',['services/session', 'services/validatorfactory', 'services/customvalidators', 'services/formatter'],\r\n\tfunction (session, validatorFactory, customValidators, formatter) {\t\t\r\n\r\n\t    var datacontext;\r\n\t\tvar DT = breeze.DataType;\r\n\t\tvar Validator = breeze.Validator;\t\t\t\t\r\n\t\tvar LANGUAGE_ALREADY_EXIST = 'Language already associated';\r\n\t\t\r\n\t\t// Expose the model module to the requiring modules\r\n\t\tvar contactModels = {\r\n\t\t    initialize: initialize\r\n\t\t};\r\n\t\treturn contactModels;\r\n\r\n\t\t// Initialize the entity models in the entity manager\r\n\t\tfunction initialize(metadataStore) {\r\n\r\n\t\t    // Contact Card information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"ContactCard\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            patientId: { dataType: \"String\" },\r\n\t\t\t\t\tisPatient: { dataType: \"Boolean\" },\r\n\t\t\t\t\tuserId:  { dataType: \"String\" },\r\n\t\t\t\t\tisUser: { dataType: \"Boolean\" },\r\n\t\t\t\t\tfirstName: { dataType: \"String\" },\r\n\t\t\t\t\tmiddleName: { dataType: \"String\" },\r\n\t\t\t\t\tlastName: { dataType: \"String\" },\r\n\t\t\t\t\tpreferredName: { dataType: \"String\" },\r\n\t\t\t\t\tgender: { dataType: \"String\", defaultValue: 'N' },\r\n\t\t            timeZoneId: { dataType: \"String\" },\r\n\t\t            preferredTimesOfDayIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t            preferredDaysOfWeekIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t            languages: { complexTypeName: \"ContactLanguage:#Nightingale\", isScalar: false },\r\n\t\t            modes: { complexTypeName: \"ContactMode:#Nightingale\", isScalar: false },\r\n\t\t            emails: { complexTypeName: \"Email:#Nightingale\", isScalar: false },\r\n\t\t            phones: { complexTypeName: \"Phone:#Nightingale\", isScalar: false },\r\n\t\t            addresses: { complexTypeName: \"Address:#Nightingale\", isScalar: false },\r\n\t\t\t\t\tcontactTypeId:  { dataType: \"String\" },\r\n\t\t\t\t\tcontactSubTypes: { complexTypeName: \"ContactSubType:#Nightingale\", isScalar: false },\r\n\t\t\t\t\texternalRecordId: { dataType: \"String\" },\r\n\t\t\t\t\tdataSource:  { dataType: \"String\", defaultValue: 'Engage' },\r\n\t\t\t\t\tstatusId: { dataType: \"Int64\", defaultValue: 1 },\r\n\t\t\t\t\tdeceasedId: { dataType: \"Int64\", defaultValue: 2 },\r\n\t\t\t\t\tprefix: { dataType: \"String\" },\r\n\t\t\t\t\tsuffix: { dataType: \"String\" },\r\n\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tcreatedById: { dataType: \"String\" },\r\n\t\t\t\t\tupdatedById: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            patient: {\r\n\t\t                entityTypeName: \"Patient\", isScalar: true,\r\n\t\t                associationName: \"Patient_ContactCard\", foreignKeyNames: [\"patientId\"]\r\n\t\t            },\r\n\t\t            timeZone: {\r\n\t\t                entityTypeName: \"TimeZone\", isScalar: true,\r\n\t\t                associationName: \"TimeZone_ContactCards\", foreignKeyNames: [\"timeZoneId\"]\r\n\t\t            },\t\t\t\t\t\r\n\t\t\t\t\tcontactType: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactTypeLookup\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactTypeLookup_ContactCard\", foreignKeyNames: [\"contactTypeId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontactStatus: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactStatus\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Contact_ContactStatus\", foreignKeyNames: [\"statusId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdeceased: {\r\n\t\t\t\t\t\tentityTypeName: \"Deceased\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Contact_Deceased\", foreignKeyNames: [\"deceasedId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcreatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactCard_CreatedBy\", foreignKeyNames: [\"createdById\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactCard_UpdatedBy\", foreignKeyNames: [\"updatedById\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcareTeam: {\r\n\t\t\t\t\t\tentityTypeName: \"CareTeam\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"CareTeam_Patient_ContactCard\"\r\n\t\t\t\t\t}\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"ContactSearch\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            patientId: { dataType: \"String\" },\r\n\t\t\t\t\tisPatient: { dataType: \"Boolean\" },\r\n\t\t\t\t\tuserId:  { dataType: \"String\" },\r\n\t\t\t\t\tisUser: { dataType: \"Boolean\" },\r\n\t\t\t\t\tfirstName: { dataType: \"String\" },\r\n\t\t\t\t\tmiddleName: { dataType: \"String\" },\r\n\t\t\t\t\tlastName: { dataType: \"String\" },\r\n\t\t\t\t\tpreferredName: { dataType: \"String\" },\r\n\t\t\t\t\tgender: { dataType: \"String\", defaultValue: 'N' },\r\n\t\t            timeZoneId: { dataType: \"String\" },\r\n\t\t            preferredTimesOfDayIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t            preferredDaysOfWeekIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t            languages: { complexTypeName: \"ContactLanguage:#Nightingale\", isScalar: false },\r\n\t\t            modes: { complexTypeName: \"ContactMode:#Nightingale\", isScalar: false },\r\n\t\t            emails: { complexTypeName: \"Email:#Nightingale\", isScalar: false },\r\n\t\t            phones: { complexTypeName: \"Phone:#Nightingale\", isScalar: false },\r\n\t\t            addresses: { complexTypeName: \"Address:#Nightingale\", isScalar: false },\r\n\t\t\t\t\tcontactTypeId:  { dataType: \"String\" },\r\n\t\t\t\t\tcontactSubTypes: { complexTypeName: \"ContactSubType:#Nightingale\", isScalar: false },\r\n\t\t\t\t\texternalRecordId: { dataType: \"String\" },\r\n\t\t\t\t\tdataSource:  { dataType: \"String\", defaultValue: 'Engage' },\r\n\t\t\t\t\tstatusId: { dataType: \"Int64\", defaultValue: 1 },\r\n\t\t\t\t\tdeceasedId: { dataType: \"Int64\", defaultValue: 2 },\r\n\t\t\t\t\tprefix: { dataType: \"String\" },\r\n\t\t\t\t\tsuffix: { dataType: \"String\" },\r\n\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tcreatedById: { dataType: \"String\" },\r\n\t\t\t\t\tupdatedById: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            patient: {\r\n\t\t                entityTypeName: \"Patient\", isScalar: true,\r\n\t\t                associationName: \"Patient_ContactSearch\", foreignKeyNames: [\"patientId\"]\r\n\t\t            },\r\n\t\t            timeZone: {\r\n\t\t                entityTypeName: \"TimeZone\", isScalar: true,\r\n\t\t                associationName: \"TimeZone_ContactCards\", foreignKeyNames: [\"timeZoneId\"]\r\n\t\t            },\t\t\t\t\t\r\n\t\t\t\t\tcontactType: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactTypeLookup\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactTypeLookup_ContactCard\", foreignKeyNames: [\"contactTypeId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontactStatus: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactStatus\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Contact_ContactStatus\", foreignKeyNames: [\"statusId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdeceased: {\r\n\t\t\t\t\t\tentityTypeName: \"Deceased\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Contact_Deceased\", foreignKeyNames: [\"deceasedId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcreatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactCard_CreatedBy\", foreignKeyNames: [\"createdById\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactCard_UpdatedBy\", foreignKeyNames: [\"updatedById\"]\r\n\t\t\t\t\t},\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"ContactCarememberSearch\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            patientId: { dataType: \"String\" },\r\n\t\t\t\t\tisPatient: { dataType: \"Boolean\" },\r\n\t\t\t\t\tuserId:  { dataType: \"String\" },\r\n\t\t\t\t\tisUser: { dataType: \"Boolean\" },\r\n\t\t\t\t\tfirstName: { dataType: \"String\" },\r\n\t\t\t\t\tmiddleName: { dataType: \"String\" },\r\n\t\t\t\t\tlastName: { dataType: \"String\" },\r\n\t\t\t\t\tpreferredName: { dataType: \"String\" },\r\n\t\t\t\t\tgender: { dataType: \"String\", defaultValue: 'N' },\r\n\t\t            timeZoneId: { dataType: \"String\" },\r\n\t\t            preferredTimesOfDayIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t            preferredDaysOfWeekIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t            languages: { complexTypeName: \"ContactLanguage:#Nightingale\", isScalar: false },\r\n\t\t            modes: { complexTypeName: \"ContactMode:#Nightingale\", isScalar: false },\r\n\t\t            emails: { complexTypeName: \"Email:#Nightingale\", isScalar: false },\r\n\t\t            phones: { complexTypeName: \"Phone:#Nightingale\", isScalar: false },\r\n\t\t            addresses: { complexTypeName: \"Address:#Nightingale\", isScalar: false },\r\n\t\t\t\t\tcontactTypeId:  { dataType: \"String\" },\r\n\t\t\t\t\tcontactSubTypes: { complexTypeName: \"ContactSubType:#Nightingale\", isScalar: false },\r\n\t\t\t\t\texternalRecordId: { dataType: \"String\" },\r\n\t\t\t\t\tdataSource:  { dataType: \"String\", defaultValue: 'Engage' },\r\n\t\t\t\t\tstatusId: { dataType: \"Int64\", defaultValue: 1 },\r\n\t\t\t\t\tdeceasedId: { dataType: \"Int64\", defaultValue: 2 },\r\n\t\t\t\t\tprefix: { dataType: \"String\" },\r\n\t\t\t\t\tsuffix: { dataType: \"String\" },\r\n\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\tcreatedById: { dataType: \"String\" },\r\n\t\t\t\t\tupdatedById: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            patient: {\r\n\t\t                entityTypeName: \"Patient\", isScalar: true,\r\n\t\t                associationName: \"Patient_ContactCarememberSearch\", foreignKeyNames: [\"patientId\"]\r\n\t\t            },\r\n\t\t            timeZone: {\r\n\t\t                entityTypeName: \"TimeZone\", isScalar: true,\r\n\t\t                associationName: \"TimeZone_ContactCards\", foreignKeyNames: [\"timeZoneId\"]\r\n\t\t            },\t\t\t\t\t\r\n\t\t\t\t\tcontactType: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactTypeLookup\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactTypeLookup_ContactCard\", foreignKeyNames: [\"contactTypeId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcontactStatus: {\r\n\t\t\t\t\t\tentityTypeName: \"ContactStatus\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Contact_ContactStatus\", foreignKeyNames: [\"statusId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdeceased: {\r\n\t\t\t\t\t\tentityTypeName: \"Deceased\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Contact_Deceased\", foreignKeyNames: [\"deceasedId\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcreatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactCard_CreatedBy\", foreignKeyNames: [\"createdById\"]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdatedBy: {\r\n\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"ContactCard_UpdatedBy\", foreignKeyNames: [\"updatedById\"]\r\n\t\t\t\t\t},\r\n\t\t        }\r\n\t\t    });\r\n\t\t\t\r\n\t\t    // Phone complex type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Phone\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\" },\r\n\t\t            number: { dataType: \"String\" },\r\n\t\t            typeId: { dataType: \"String\" },\r\n\t\t            optOut: { dataType: \"Boolean\" },\r\n\t\t            isText: { dataType: \"Boolean\" },\r\n\t\t            phonePreferred: { dataType: \"Boolean\" },\r\n\t\t            textPreferred: { dataType: \"Boolean\" },\r\n\t\t\t\t\tdataSource: { dataType: \"String\"}\t\t\t\t\t\r\n\t\t        }\r\n\t\t    });\t\t\t\r\n\t\t\t\r\n\t\t    // Email complex type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Email\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\" },\r\n\t\t            text: { dataType: \"String\" },\r\n\t\t            typeId: { dataType: \"String\" },\r\n\t\t            optOut: { dataType: \"Boolean\" },\r\n\t\t            preferred: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Contact Language complex type for a patient\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"ContactLanguage\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            lookUpLanguageId: { dataType: \"String\" },\r\n\t\t            preferred: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Contact Mode complex type for a patient\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"ContactMode\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            lookUpModeId: { dataType: \"String\" },\r\n\t\t            optOut: { dataType: \"Boolean\" },\r\n\t\t            preferred: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Address\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Address\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\" },\r\n\t\t            line1: { dataType: \"String\" },\r\n\t\t            line2: { dataType: \"String\" },\r\n\t\t            line3: { dataType: \"String\" },\r\n\t\t            city: { dataType: \"String\" },\r\n\t\t            stateId: { dataType: \"String\" },\r\n\t\t            postalCode: { dataType: \"String\" },\r\n\t\t            typeId: { dataType: \"String\" },\r\n\t\t            optOut: { dataType: \"Boolean\" },\r\n\t\t            preferred: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"ContactTypeLookup\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tparentId: { dataType: \"String\" },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t\t\t\trole: { dataType: \"String\" },\r\n\t\t\t\t\tgroup: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t\t\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"ContactSubType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\"  },//, isPartOfKey: true\r\n\t\t\t\t\tsubTypeId:  { dataType: \"String\" },\r\n\t\t            specialtyId: { dataType: \"String\" },\r\n\t\t            subSpecialtyIds:  { complexTypeName: \"Identifier:#Nightingale\", isScalar: false }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'ContactCard', null, contactCardInitializer);\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'ContactSearch', null, contactCardInitializer);\t\t\t\t\t\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'ContactCarememberSearch', null, contactCardInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'ContactLanguage', null, contactLanguageInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'ContactMode', null, contactModeInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'Address', null, addressInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'Phone', null, phoneInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'Email', null, emailInitializer);\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'ContactSubType', null, contactSubTypeInitializer);\r\n\t\t\t\r\n\t\t\tfunction contactSubTypeInitializer(contactSubType) {\r\n\t\t\t\tcontactSubType.isNew = ko.observable(false);\r\n\t\t\t\tcontactSubType.subTypeName = ko.computed( function() {\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\tvar name = null;\r\n\t\t\t\t\tvar subTypeId = contactSubType.subTypeId();\r\n\t\t\t\t\tif( subTypeId ){\r\n\t\t\t\t\t\tvar subType = datacontext.getContactTypeLookupById( subTypeId );\r\n\t\t\t\t\t\tif( subType && subType.length ){\r\n\t\t\t\t\t\t\tname = subType[0].name();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\tcontactSubType.specialtyName = ko.computed( function() {\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\tvar name = null;\r\n\t\t\t\t\tvar specialtyId = contactSubType.specialtyId();\r\n\t\t\t\t\tif( specialtyId ){\r\n\t\t\t\t\t\tvar specialty = datacontext.getContactTypeLookupById( specialtyId );\r\n\t\t\t\t\t\tif( specialty && specialty.length ){\r\n\t\t\t\t\t\t\tname = specialty[0].name();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\tcontactSubType.subSpecialtyString = ko.computed(function(){\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\tvar name = null;\r\n\t\t\t\t\tvar subSpecialtyIds = contactSubType.subSpecialtyIds();\r\n\t\t\t\t\tif( subSpecialtyIds.length ){\r\n\t\t\t\t\t\tko.utils.arrayForEach( subSpecialtyIds, function(sub){\r\n\t\t\t\t\t\t\tvar contactType = datacontext.getContactTypeLookupById( sub.id() );\r\n\t\t\t\t\t\t\tif( contactType && contactType.length > 0 ){\r\n\t\t\t\t\t\t\t\tif( name && name.length ){\r\n\t\t\t\t\t\t\t\t\tname += ', ';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tname = '';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tname += contactType[0].name();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t}\r\n\t\t\t\r\n\t\t    function contactCardInitializer(contactCard) {\t\t\t\t\r\n\t\t\t\tcontactCard.isNew = ko.observable(false);\t\t\t\t\r\n\t\t        contactCard.activeTab = ko.observable('General');\r\n\t\t\t\t\r\n\t\t\t\t//record original value of complex types for cancel:\r\n\t\t\t\tcontactCard.originalContactSubTypes = ko.observableArray();\r\n\t\t\t\tvar originalSubTypes = contactCard.originalContactSubTypes();\t\t\t\t\r\n\t\t\t\tif( contactCard.contactSubTypes().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(originalSubTypes, contactCard.contactSubTypes());\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tcontactCard.originalPreferredTimesOfDayIds = ko.observableArray();\r\n\t\t\t\tvar originalPreferredTimesOfDayIds = contactCard.originalPreferredTimesOfDayIds()\r\n\t\t\t\tif( contactCard.preferredTimesOfDayIds().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(originalPreferredTimesOfDayIds, contactCard.preferredTimesOfDayIds());\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tcontactCard.originalPreferredDaysOfWeekIds = ko.observableArray();\r\n\t\t\t\tvar originalPreferredDaysOfWeekIds = contactCard.originalPreferredDaysOfWeekIds()\r\n\t\t\t\tif( contactCard.preferredDaysOfWeekIds().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(originalPreferredDaysOfWeekIds, contactCard.preferredDaysOfWeekIds());\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tcontactCard.originalLanguages = ko.observableArray();\r\n\t\t\t\tvar originalLanguages = contactCard.originalLanguages()\r\n\t\t\t\tif( contactCard.languages().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(originalLanguages, contactCard.languages());\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tcontactCard.originalModes = ko.observableArray();\r\n\t\t\t\tvar originalModes = contactCard.originalModes()\r\n\t\t\t\tif( contactCard.modes().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(originalModes, contactCard.modes());\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tcontactCard.originalEmails = ko.observableArray();\r\n\t\t\t\tvar originalEmails = contactCard.originalEmails()\r\n\t\t\t\tif( contactCard.emails().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(originalEmails, contactCard.emails());\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tcontactCard.originalPhones = ko.observableArray();\r\n\t\t\t\tvar originalPhones = contactCard.originalPhones()\r\n\t\t\t\tif( contactCard.phones().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(originalPhones, contactCard.phones());\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tcontactCard.originalAddresses = ko.observableArray();\r\n\t\t\t\tvar originalAddresses = contactCard.originalAddresses()\r\n\t\t\t\tif( contactCard.addresses().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(originalAddresses, contactCard.addresses());\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t//end complex types\r\n\t\t\t\t\r\n\t\t        contactCard.prefCommMethods = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var commModeString = '';\r\n\t\t            // Go through the language ids for this person,\r\n\t\t            ko.utils.arrayForEach(contactCard.modes(), function (thisMode) {\r\n\t\t                if (thisMode.optOut()) {\r\n\t\t                    thisMode.preferred(false);\r\n\t\t                }\r\n\t\t                // If the mode is preferred,\r\n\t\t                if (thisMode.preferred()) {\r\n\t\t                    // And find the mode name\r\n\t\t                    var preferredMode = ko.utils.arrayFirst(datacontext.enums.communicationModes(), function (mode) {\r\n\t\t                        return mode.id() === thisMode.lookUpModeId();\r\n\t\t                    });\r\n\t\t                    // Add it to the string of preferred modes\r\n\t\t                    commModeString += preferredMode.name() + ', ';\r\n\t\t                }\r\n\t\t            });\r\n\t\t            // If the string is longer than zero,\r\n\t\t            if (commModeString.length > 0) {\r\n\t\t                // Remove the trailing comma and space\r\n\t\t                commModeString = commModeString.substr(0, commModeString.length - 2);\r\n\t\t            }\r\n\t\t            // Return the list of preferred communications\r\n\t\t            return commModeString;\r\n\t\t        });\r\n\t\t        contactCard.secondaryLanguagesText = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var languageString = '';\r\n\t\t            // Go through the language ids for this person,\r\n\t\t            ko.utils.arrayForEach(contactCard.languages(), function (contactLanguage) {\r\n\t\t                // If the language is not the preferred,\r\n\t\t                if (!contactLanguage.preferred()) {\r\n\t\t                    // And find the language name\r\n\t\t                    var thisLanguage = ko.utils.arrayFirst(datacontext.enums.languages(), function (language) {\r\n\t\t                        return language.id() === contactLanguage.lookUpLanguageId();\r\n\t\t                    });\r\n\t\t                    languageString += thisLanguage.name() + ', ';\r\n\t\t                }\r\n\t\t            });\r\n\t\t            // If the string is longer than zero,\r\n\t\t            if (languageString.length > 0) {\r\n\t\t                // Remove the trailing comma and space\r\n\t\t                languageString = languageString.substr(0, languageString.length - 2);\r\n\t\t            }\r\n\t\t            // Return the list of preferred communications\r\n\t\t            return languageString;\r\n\t\t        });\r\n\t\t        contactCard.preferredTimesOfDay = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var timeOfDayString = '';\r\n\t\t            // Go through the language ids for this person,\r\n\t\t            ko.utils.arrayForEach(contactCard.preferredTimesOfDayIds(), function (todId) {\r\n\t\t                // And find the language name\r\n\t\t                var thisTimeOfDay = ko.utils.arrayFirst(datacontext.enums.timesOfDay(), function (tod) {\r\n\t\t                    return tod.id() === todId.id();\r\n\t\t                });\r\n\t\t                timeOfDayString += thisTimeOfDay.name() + ', ';\r\n\t\t            });\r\n\t\t            // If the string is longer than zero,\r\n\t\t            if (timeOfDayString.length > 0) {\r\n\t\t                // Remove the trailing comma and space\r\n\t\t                timeOfDayString = timeOfDayString.substr(0, timeOfDayString.length - 2);\r\n\t\t            }\r\n\t\t            // Return the list of preferred communications\r\n\t\t            return timeOfDayString;\r\n\t\t        });\r\n\t\t        contactCard.preferredDaysOfWeek = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            // Create a string to hold the days of the week\r\n\t\t            var daysOfWeekString = '';\r\n\t\t            // If all days are selected,\r\n\t\t            if (contactCard.preferredDaysOfWeekIds().length === 7) {\r\n\t\t                daysOfWeekString = 'Any';\r\n\t\t            }\r\n\t\t            // If not,\r\n\t\t            else {\r\n\t\t                // Go through the language ids for this person,\r\n\t\t                ko.utils.arrayForEach(contactCard.preferredDaysOfWeekIds(), function (dowId) {\r\n\t\t                    // And find the language name\r\n\t\t                    var thisDayOfWeek = ko.utils.arrayFirst(datacontext.enums.daysOfWeek(), function (dow) {\r\n\t\t                        // And return the day of the week that matches\r\n\t\t                        return dow.Id === dowId.id();\r\n\t\t                    });\r\n\t\t                    // Add the code to the day of the week's string\r\n\t\t                    daysOfWeekString += thisDayOfWeek.Code + ', ';\r\n\t\t                });\r\n\t\t                // If the string is longer than zero,\r\n\t\t                if (daysOfWeekString.length > 0) {\r\n\t\t                    // Remove the trailing comma and space\r\n\t\t                    daysOfWeekString = daysOfWeekString.substr(0, daysOfWeekString.length - 2);\r\n\t\t                }\r\n\t\t            }\r\n\t\t            // Return the list of preferred communications\r\n\t\t            return daysOfWeekString;\r\n\t\t        });\r\n\t\t        contactCard.addPhone = function () {\r\n\t\t            // Add a phone here without properties\r\n\t\t            checkDataContext();\r\n\t\t            // Find the matching phone mode\r\n\t\t            var thismode = ko.utils.arrayFirst(contactCard.modes(), function (mode) {\r\n\t\t                return (mode && mode.name() === 'Phone');\r\n\t\t            });\r\n\t\t            // If the phone mode is not opted out,\r\n\t\t            if (thismode && !thismode.optOut()) {\r\n\t\t            \t// Add a new phone record\r\n\t\t\t            var nextId = ((contactCard.phones().length + 1) * -1);\r\n\t\t\t            var defaultTypeId = datacontext.enums.phoneTypes()[0].id();\r\n\t\t\t            var newPhone = datacontext.createComplexType('Phone', { id: nextId, typeId: defaultTypeId, dataSource: \"Engage\" });\r\n\t\t\t\t\t\tnewPhone.isFocused(true);\r\n\t\t\t            contactCard.phones.push(newPhone);\t\t            \t\r\n\t\t            }\t\t\t\t\t\r\n\t\t        }\r\n\t\t        contactCard.removePhone = function (phone) {\r\n\t\t            contactCard.phones.remove(phone);\r\n\t\t        }\r\n\t\t        contactCard.addEmail = function () {\r\n\t\t            // Add a phone here without properties\r\n\t\t            checkDataContext();\r\n\t\t            // Find the matching email mode\r\n\t\t            var thismode = ko.utils.arrayFirst(contactCard.modes(), function (mode) {\r\n\t\t                return (mode && mode.name() === 'Email');\r\n\t\t            });\r\n\t\t            // If the email mode is not opted out,\r\n\t\t            if (thismode && !thismode.optOut()) {\r\n\t\t            \t// Add a new email record\r\n\t\t\t            var nextId = contactCard.emails().length + 1;\r\n\t\t\t            var defaultTypeId = datacontext.enums.emailTypes()[0].id();\r\n\t\t\t            var newEmail = datacontext.createComplexType('Email', { id: nextId, typeId: defaultTypeId });\r\n\t\t\t            contactCard.emails.push(newEmail);\r\n\t\t            }\r\n\t\t        }\r\n\t\t        contactCard.removeEmail = function (email) {\r\n\t\t            contactCard.emails.remove(email);\r\n\t\t        }\r\n\t\t        contactCard.addAddress = function () {\r\n\t\t            // Add a phone here without properties\r\n\t\t            checkDataContext();\r\n\t\t            // Find the matching address mode\r\n\t\t            var thismode = ko.utils.arrayFirst(contactCard.modes(), function (mode) {\r\n\t\t                return (mode && mode.name() === 'Mail');\r\n\t\t            });\r\n\t\t            // If the address mode is not opted out,\r\n\t\t            if (thismode && !thismode.optOut()) {\r\n\t\t            \t// Add a new address record\r\n\t\t\t            var nextId = contactCard.addresses().length + 1;\r\n\t\t\t            var defaultTypeId = datacontext.enums.addressTypes()[0].id();\r\n\t\t\t            var newAddress = datacontext.createComplexType('Address', { id: nextId, typeId: defaultTypeId });\r\n\t\t\t            contactCard.addresses.push(newAddress);\r\n\t\t\t        }\r\n\t\t        }\r\n\t\t        contactCard.removeAddress = function (address) {\r\n\t\t            contactCard.addresses.remove(address);\r\n\t\t        }\r\n\t\t        contactCard.newLanguage = ko.observable(null);\r\n\t\t\t\tcontactCard.languageValidationErrors = ko.observableArray([]);\r\n\t\t\t\tcontactCard.canAddLanguage = ko.computed( function(){\r\n\t\t\t\t\tvar newLanguage = contactCard.newLanguage();\r\n\t\t\t\t\tvar languages = contactCard.languages();\r\n\t\t\t\t\tvar alreadyExist = false;\r\n\t\t\t\t\tvar errors = [];\r\n\t\t\t\t\tif( newLanguage ){\r\n\t\t\t\t\t\tko.utils.arrayForEach( languages, function( language ){\r\n\t\t\t\t\t\t\tif( language.name() === newLanguage.name() ){\r\n\t\t\t\t\t\t\t\talreadyExist = true;\r\n\t\t\t\t\t\t\t\terrors.push({Message: LANGUAGE_ALREADY_EXIST});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontactCard.languageValidationErrors(errors);\r\n\t\t\t\t\treturn ( newLanguage && !alreadyExist );\r\n\t\t\t\t});\r\n\t\t        contactCard.addLanguage = function () {\r\n\t\t\t\t\tif( !contactCard.canAddLanguage() ) return;\r\n\t\t            // Add a language here\r\n\t\t            checkDataContext();\r\n\t\t            var thisLanguage = contactCard.newLanguage();\r\n\t\t            var thisNewLanguage = datacontext.createComplexType('ContactLanguage', { lookUpLanguageId: thisLanguage.id(), name: thisLanguage.name() });\r\n\t\t            contactCard.languages.push(thisNewLanguage);\r\n\t\t            contactCard.newLanguage(null);\r\n\t\t        }\r\n\t\t        contactCard.removeLanguage = function (language) {\r\n\t\t            contactCard.languages.remove(language);\r\n\t\t        }\r\n\t\t        //contactCard.phoneOptedOut = ko.observable(false);\r\n\t\t        contactCard.preferredPhone = ko.computed({\r\n\t\t            read: function () {\r\n\t\t                // Go through each of the phones\r\n\t\t                var thisPhone;\r\n\t\t                ko.utils.arrayForEach(contactCard.phones(), function (phone) {\r\n\t\t                    // If the phone is preferred, and not opted out,\r\n\t\t                    if (phone.phonePreferred() && !phone.optOut()) {\r\n\t\t                        // Return it\r\n\t\t                        thisPhone = phone;\r\n\t\t                    }\r\n\t\t                    if (phone.optOut()) {\r\n\t\t                        phone.phonePreferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t                if (thisPhone) {\r\n\t\t                    return thisPhone;\r\n\t\t                }\r\n\t\t                // If no phones are found that are preferred, return null\r\n\t\t                return null;\r\n\t\t            },\r\n\t\t            write: function (newValue) {\r\n\t\t                // If the newValue is not null,\r\n\t\t                if (newValue) {\r\n\t\t                    // Set it's preferred property to true\r\n\t\t                    newValue.phonePreferred(true);\r\n\t\t                }\r\n\t\t                // Set all of the other phones to false\r\n\t\t                ko.utils.arrayForEach(contactCard.phones(), function (phone) {\r\n\t\t                    // As long as it is not the one we just set to true\r\n\t\t                    if (phone !== newValue) {\r\n\t\t                        phone.phonePreferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t            }\r\n\t\t        }).extend({ throttle: 50 });\r\n\t\t        contactCard.preferredText = ko.computed({\r\n\t\t            read: function () {\r\n\t\t                // Go through each of the phones\r\n\t\t                var thisPhone;\r\n\t\t                ko.utils.arrayForEach(contactCard.phones(), function (phone) {\r\n\t\t                    // If the phone is preferred,\r\n\t\t                    if (phone.textPreferred() && !phone.optOut()) {\r\n\t\t                        // Return it\r\n\t\t                        thisPhone = phone;\r\n\t\t                    }\r\n\t\t                    if (phone.optOut()) {\r\n\t\t                        phone.textPreferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t                if (thisPhone) {\r\n\t\t                    return thisPhone;\r\n\t\t                }\r\n\t\t                // If no phones are found that are preferred, return null\r\n\t\t                return null;\r\n\t\t            },\r\n\t\t            write: function (newValue) {\r\n\t\t                // If the newValue is not null,\r\n\t\t                if (newValue) {\r\n\t\t                    // Set it's preferred property to true\r\n\t\t                    newValue.textPreferred(true);\r\n\t\t                }\r\n\t\t                // Set all of the other phones to false\r\n\t\t                ko.utils.arrayForEach(contactCard.phones(), function (phone) {\r\n\t\t                    // As long as it is not the one we just set to true\r\n\t\t                    if (phone !== newValue) {\r\n\t\t                        phone.textPreferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t            }\r\n\t\t        }).extend({ throttle: 50 });\r\n\t\t        contactCard.preferredEmail = ko.computed({\r\n\t\t            read: function () {\r\n\t\t                // Go through each of the emails\r\n\t\t                var thisEmail;\r\n\t\t                ko.utils.arrayForEach(contactCard.emails(), function (email) {\r\n\t\t                    // If the phone is preferred, and not opted out\r\n\t\t                    if (email.preferred() && !email.optOut()) {\r\n\t\t                        // Return it\r\n\t\t                        thisEmail = email;\r\n\t\t                    }\r\n\t\t                    if (email.optOut()) {\r\n\t\t                        email.preferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t                if (thisEmail) {\r\n\t\t                    return thisEmail;\r\n\t\t                }\r\n\t\t                // If no phones are found that are preferred, return null\r\n\t\t                return null;\r\n\t\t            },\r\n\t\t            write: function (newValue) {\r\n\t\t                // If the newValue is not null,\r\n\t\t                if (newValue) {\r\n\t\t                    // Set it's preferred property to true\r\n\t\t                    newValue.preferred(true);\r\n\t\t                }\r\n\t\t                // Set all of the other phones to false\r\n\t\t                ko.utils.arrayForEach(contactCard.emails(), function (email) {\r\n\t\t                    // As long as it is not the one we just set to true\r\n\t\t                    if (email !== newValue) {\r\n\t\t                        email.preferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t            }\r\n\t\t        }).extend({ throttle: 50 });\r\n\t\t        contactCard.preferredAddress = ko.computed({\r\n\t\t            read: function () {\r\n\t\t                // Go through each of the addresses\r\n\t\t                var thisAddress;\r\n\t\t                ko.utils.arrayForEach(contactCard.addresses(), function (address) {\r\n\t\t                    // If the address is preferred, and not opted out\r\n\t\t                    if (address.preferred() && !address.optOut()) {\r\n\t\t                        // Return it\r\n\t\t                        thisAddress = address;\r\n\t\t                    }\r\n\t\t                    if (address.optOut()) {\r\n\t\t                        address.preferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t                if (thisAddress) {\r\n\t\t                    return thisAddress;\r\n\t\t                }\r\n\t\t                // If no addresses are found that are preferred, return null\r\n\t\t                return null;\r\n\t\t            },\r\n\t\t            write: function (newValue) {\r\n\t\t                // If the newValue is not null,\r\n\t\t                if (newValue) {\r\n\t\t                    // Set it's preferred property to true\r\n\t\t                    newValue.preferred(true);\r\n\t\t                }\r\n\t\t                // Set all of the other phones to false\r\n\t\t                ko.utils.arrayForEach(contactCard.addresses(), function (address) {\r\n\t\t                    // As long as it is not the one we just set to true\r\n\t\t                    if (address !== newValue) {\r\n\t\t                        address.preferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t            }\r\n\t\t        }).extend({ throttle: 50 });\r\n\r\n\t\t\t\tcontactCard.fullName = ko.computed( function(){\r\n\t\t\t\t\tvar fullName = '';\r\n\t\t\t\t\tvar prefix = contactCard.prefix();\r\n\t\t\t\t\tvar suffix = contactCard.suffix();\r\n\t\t\t\t\tvar firstName = contactCard.firstName();\r\n\t\t\t\t\tvar lastName = contactCard.lastName();\r\n\t\t\t\t\tvar middleName = contactCard.middleName();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( prefix ){\r\n\t\t\t\t\t\tfullName += prefix + ' ' ;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( firstName ){\t\t\t\t\t\t\r\n\t\t\t\t\t\tfullName += firstName + ' ';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( middleName ){\t\t\t\t\t\t\r\n\t\t\t\t\t\tfullName += middleName + ' ';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( lastName ){\t\t\t\t\t\t\r\n\t\t\t\t\t\tfullName += lastName + ' ';\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tif( suffix ){\t\t\t\t\t\t\r\n\t\t\t\t\t\tfullName += suffix;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfullName = fullName.trim();\r\n\t\t\t\t\treturn fullName;\r\n\t\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\t\r\n\t\t\t\tcontactCard.genderModel = ko.computed({\r\n\t\t\t\t\tread: function () {\r\n\t\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\t\tvar thisGender;\r\n\t\t\t\t\t\tvar gender = contactCard.gender()? contactCard.gender().toLowerCase() : '';\r\n\t\t\t\t\t\tif (gender === 'm' || gender === 'male') {\r\n\t\t\t\t\t\t\tcontactCard.gender('M');\r\n\t\t\t\t\t\t\tthisGender = ko.utils.arrayFirst(datacontext.enums.genders(), function (item) {\r\n\t\t\t\t\t\t\t\treturn 'm' === item.Id;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (gender === 'f' || gender === 'female') {\r\n\t\t\t\t\t\t\tcontactCard.gender('F');\r\n\t\t\t\t\t\t\tthisGender = ko.utils.arrayFirst(datacontext.enums.genders(), function (item) {\r\n\t\t\t\t\t\t\t\treturn 'f' === item.Id;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tcontactCard.gender('N');\r\n\t\t\t\t\t\t\tthisGender = ko.utils.arrayFirst(datacontext.enums.genders(), function (item) {\r\n\t\t\t\t\t\t\t\treturn 'n' === item.Id;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn thisGender;\r\n\t\t\t\t\t},\r\n\t\t\t\t\twrite: function (newValue) {\r\n\t\t\t\t\t\tcontactCard.gender(ko.unwrap(newValue).Id.toUpperCase());\r\n\t\t\t\t\t}\r\n\t\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\t\r\n\t\t\t\tcontactCard.firstLastOrPreferredName = ko.computed( function(){\r\n\t\t\t\t\tvar preferred = contactCard.preferredName();\r\n\t\t\t\t\tvar firstName = contactCard.firstName();\r\n\t\t\t\t\tif( !firstName ) {\r\n\t\t\t\t\t\tfirstName = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar lastName = contactCard.lastName();\r\n\t\t\t\t\tif( !lastName ) {\r\n\t\t\t\t\t\tlastName = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn preferred? preferred : (firstName + ' ' + lastName);\r\n\t\t\t\t}).extend({throttle: 100});\r\n\t\t\t\t\r\n\t\t\t\tfunction getDetailedSubTypeText(subType){\r\n\t\t\t\t\t//subtype, specialty and sub specialty\r\n\t\t\t\t\tvar subTypeText = '';\t\t\t\t\t\t\t\r\n\t\t\t\t\tsubTypeText += subType.subTypeName();\r\n\t\t\t\t\tif( subType.specialtyId() ){\r\n\t\t\t\t\t\tsubTypeText += ' - ' + subType.specialtyName();\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(subType.subSpecialtyString()){\r\n\t\t\t\t\t\t\tsubTypeText += ' (' + subType.subSpecialtyString() + ')';\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn subTypeText;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcontactCard.detailedSubTypes = ko.computed( function(){\r\n\t\t\t\t\tvar subTypeStrings = [];\r\n\t\t\t\t\tif( contactCard.contactSubTypes && contactCard.contactSubTypes().length ){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tko.utils.arrayForEach( contactCard.contactSubTypes(), function( subType ){\r\n\t\t\t\t\t\t\tvar subTypeText = getDetailedSubTypeText(subType);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tsubTypeStrings.push( subTypeText );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn subTypeStrings;\r\n\t\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\t\r\n\t\t\t\tfunction getSubTypeSummaryText(subType){\r\n\t\t\t\t\t//subtype and specialty text only\r\n\t\t\t\t\tvar text = subType.subTypeName();\r\n\t\t\t\t\tif( subType.specialtyId() ){\r\n\t\t\t\t\t\ttext += ' - ' + subType.specialtyName();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcontactCard.contactSummary = ko.computed( function(){\r\n\t\t\t\t\tvar summary = '';\t\t\t\t\t\r\n\t\t\t\t\tif( contactCard.contactSubTypes && contactCard.contactSubTypes().length ){\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar subTypesText = '';\r\n\t\t\t\t\t\tko.utils.arrayForEach( contactCard.contactSubTypes(), function( subType ){\r\n\t\t\t\t\t\t\tif( subTypesText.length ) {\r\n\t\t\t\t\t\t\t\tsubTypesText += ', ';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsubTypesText += getSubTypeSummaryText(subType);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsummary += subTypesText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( contactCard.preferredPhone() && contactCard.preferredPhone().number() ){\r\n\t\t\t\t\t\tvar phoneNumber = contactCard.preferredPhone().number();\r\n\t\t\t\t\t\tphoneNumber = phoneNumber.replace( /\\D/g, '');\r\n\t\t\t\t\t\tformattedPhone = formatter.formatSeparators( phoneNumber, 'XXX-XXX-XXXX', '-');\r\n\t\t\t\t\t\tif( summary.length ){\r\n\t\t\t\t\t\t\tsummary += ', ';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsummary += formattedPhone;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tif( contactCard.preferredAddress() && contactCard.preferredAddress().cityState() ){\r\n\t\t\t\t\t\tif( summary.length ){\r\n\t\t\t\t\t\t\tsummary += ', ';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsummary += contactCard.preferredAddress().cityState();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn summary;\r\n\t\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\t\r\n\t\t        contactCard.preferredLanguage = ko.computed({\r\n\t\t            read: function () {\r\n\t\t                // Go through each of the languages\r\n\t\t                var thisLanguage;\r\n\t\t                ko.utils.arrayForEach(contactCard.languages(), function (language) {\r\n\t\t                    // If the language is preferred,\r\n\t\t                    if (language.preferred()) {\r\n\t\t                        // Return it\r\n\t\t                        thisLanguage = language;\r\n\t\t                    }\r\n\t\t                });\r\n\t\t                if (thisLanguage) {\r\n\t\t                    return thisLanguage;\r\n\t\t                }\r\n\t\t                // If no languages are found that are preferred, return null\r\n\t\t                return null;\r\n\t\t            },\r\n\t\t            write: function (newValue) {\r\n\t\t                // If the newValue is not null,\r\n\t\t                if (newValue) {\r\n\t\t                    // Set it's preferred property to true\r\n\t\t                    newValue.preferred(true);\r\n\t\t                }\r\n\t\t                // Set all of the other phones to false\r\n\t\t                ko.utils.arrayForEach(contactCard.languages(), function (language) {\r\n\t\t                    // As long as it is not the one we just set to true\r\n\t\t                    if (language !== newValue) {\r\n\t\t                        language.preferred(false);\r\n\t\t                    }\r\n\t\t                });\r\n\t\t            }\r\n\t\t        }).extend({ throttle: 50 });\r\n\r\n\t\t        contactCard.phoneOptedOut = ko.computed(function () {\r\n\t\t            var returnValue = false;\r\n\t\t            ko.utils.arrayForEach(contactCard.modes(), function (mode) {\r\n\t\t                if (mode && mode.name() === 'Phone') {\r\n\t\t                    var newValue = mode.optOut();\r\n\t\t                    if (newValue) {\r\n\t\t                        optOutOfPhones(contactCard);\r\n\t\t                    }\r\n\t\t                    returnValue = newValue;\r\n\t\t                }\r\n\t\t            });\r\n\t\t            return returnValue;\r\n\t\t        });\r\n\t\t        contactCard.textOptedOut = ko.computed(function () {\r\n\t\t            var returnValue = false;\r\n\t\t            ko.utils.arrayForEach(contactCard.modes(), function (mode) {\r\n\t\t                if (mode && mode.name() === 'Text') {\r\n\t\t                    var newValue = mode.optOut();\r\n\t\t                    if (newValue) {\r\n\t\t                        optOutOfTexts(contactCard);\r\n\t\t                    }\r\n\t\t                    returnValue = newValue;\r\n\t\t                }\r\n\t\t            });\r\n\t\t            return returnValue;\r\n\t\t        });\r\n\t\t        contactCard.addressOptedOut = ko.computed(function () {\r\n\t\t            var returnValue = false;\r\n\t\t            ko.utils.arrayForEach(contactCard.modes(), function (mode) {\r\n\t\t                if (mode && mode.name() === 'Mail') {\r\n\t\t                    var newValue = mode.optOut();\r\n\t\t                    if (newValue) {\r\n\t\t                        optOutOfAddresses(contactCard);\r\n\t\t                    }\r\n\t\t                    returnValue = newValue;\r\n\t\t                }\r\n\t\t            });\r\n\t\t            return returnValue;\r\n\t\t        });\r\n\t\t        contactCard.emailOptedOut = ko.computed(function () {\r\n\t\t            var returnValue = false;\r\n\t\t            ko.utils.arrayForEach(contactCard.modes(), function (mode) {\r\n\t\t                if (mode && mode.name() === 'Email') {\r\n\t\t                    var newValue = mode.optOut();\r\n\t\t                    if (newValue) {\r\n\t\t                        optOutOfEmails(contactCard);\r\n\t\t                    }\r\n\t\t                    returnValue = newValue;\r\n\t\t                }\r\n\t\t            });\r\n\t\t            return returnValue;\r\n\t\t        });\r\n\t\t\t\t\r\n\t\t\t\tif( contactCard.isPatient() && contactCard.patient() ){\r\n\t\t\t\t\t//sync dup properties from patient: (TBD - this may not be necessary later on)\r\n\t\t\t\t\tif( !contactCard.firstName() ){\r\n\t\t\t\t\t\tcontactCard.firstName( contactCard.patient().firstName() );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( !contactCard.lastName() ){\r\n\t\t\t\t\t\tcontactCard.lastName( contactCard.patient().lastName() );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//validation:\t\t\t\t\r\n\t\t\t\tcontactCard.phoneValidationErrors = ko.observableArray([]);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tcontactCard.profileValidationErrors = ko.observableArray([]);\r\n\t\t\t\tcontactCard.profileValidationErrorsArray = ko.computed(function () {\r\n\t\t\t        var thisArray = [];\r\n\t\t\t        ko.utils.arrayForEach(contactCard.profileValidationErrors(), function (error) {\r\n\t\t\t            thisArray.push(error.PropName);\r\n\t\t\t        });\r\n\t\t\t        return thisArray;\r\n\t\t\t    });\r\n\t\t\t\t\r\n\t\t\t\tcontactCard.isDirty = ko.observable(false);\r\n                contactCard.clearDirty = function(){\r\n                    contactCard.isDirty(false);\r\n                };\r\n                contactCard.watchDirty = function () {\r\n                    var propToken = contactCard.entityAspect.propertyChanged.subscribe(function (newValue) {\r\n                        contactCard.isDirty(true);\r\n                        propToken.dispose();\r\n                    });\r\n                    var subTypesToken = contactCard.contactSubTypes.subscribe(function (newValue) {\r\n                        contactCard.isDirty(true);\r\n                        subTypesToken.dispose();\r\n                    });\r\n                };\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t*\tvalidate the profile tab part of a contact card\r\n\t\t\t\t*\t@method hasProfileErrors\r\n\t\t\t\t*/\r\n\t\t\t\tfunction hasProfileErrors(){\r\n\t\t\t\t\tvar profileErrors = [];\r\n\t\t\t\t\tvar errorsFound = false;\r\n\t\t\t\t\tvar firstName = contactCard.firstName();\r\n\t\t\t\t\tvar lastName = contactCard.lastName();\r\n\t\t\t\t\t//var hasChanges = contactCard.isDirty();\r\n\t\t\t\t\tvar isPatient = contactCard.isPatient();\r\n\t\t\t\t\tif( !firstName || !firstName.trim().length ){\r\n\t\t\t\t\t\t\tprofileErrors.push({ PropName: 'firstName', Message: \"'First Name' is required\"});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\terrorsFound = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( !lastName || !lastName.trim().length ){\r\n\t\t\t\t\t\t\tprofileErrors.push({ PropName: 'lastName', Message: \"'Last Name' is required\"});\r\n\t\t\t\t\t\t\terrorsFound = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontactCard.profileValidationErrors(profileErrors);\r\n\t\t\t\t\treturn errorsFound;\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t*\tvalidates all phones in the contact card phones collection.\t\t\t\t\t\r\n\t\t\t\t*\t@method hasPhoneErrors\r\n\t\t\t\t*/\r\n\t\t\t\tfunction hasPhoneErrors(){\r\n\t\t\t\t\tvar phoneErrors = [];\r\n\t\t\t\t\tvar errorsFound = false;\r\n\t\t\t\t\tko.utils.arrayForEach( contactCard.phones(), function(phone){\r\n\t\t\t\t\t\tphone.validate();\r\n\t\t\t\t\t\tvar isValid = phone.isValid();\r\n\t\t\t\t\t\tif( !isValid ){\r\n\t\t\t\t\t\t\tphoneErrors.push({Message: phone.validationMessage()});\r\n\t\t\t\t\t\t\terrorsFound = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcontactCard.phoneValidationErrors(phoneErrors);\t\r\n\t\t\t\t\treturn errorsFound;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t    contactCard.phoneValidationErrorsArray = ko.computed(function () {\r\n\t\t\t        var thisArray = [];\r\n\t\t\t        ko.utils.arrayForEach(contactCard.phoneValidationErrors(), function (error) {\r\n\t\t\t            thisArray.push(error.PropName + error.Value);\r\n\t\t\t        });\r\n\t\t\t        return thisArray;\r\n\t\t\t    }).extend({ throttle: 50 });\r\n\t\t\t\t\r\n\t\t\t\tcontactCard.isDuplicate = ko.observable(false);\r\n\t\t\t\tcontactCard.isDuplicateTested = ko.observable(true);\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t*\tcomputed. tracks for any validation errors on all tabs of the contact card.\r\n\t\t\t\t*\t@method isValid \r\n\t\t\t\t*/\r\n\t\t\t\tcontactCard.isValid = ko.computed(function(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tvar profileErrors = hasProfileErrors();\r\n\t\t\t\t\tvar phoneErrors = hasPhoneErrors();\t\t\t\t\t\r\n\t\t\t\t\treturn !phoneErrors && !profileErrors;\r\n\t\t\t\t}).extend({ throttle: 50 });\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\tcontactCard.isEditable = ko.computed( function(){\r\n\t\t\t\t\treturn contactCard.dataSource() == 'Engage';\r\n\t\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\t\r\n\t\t        // Can the contact card save?  Fake validation goes here\r\n\t\t        contactCard.canSave = ko.computed(function () {\r\n\t\t            return contactCard.isValid();\r\n\t\t        }).extend({ throttle: 50 });\r\n\t\t        // Method to save changes to the patient\r\n\t\t        contactCard.saveChanges = function () {\r\n\t\t            checkDataContext();\r\n\t\t            // Go save the entity, pass in which parameters should be different\r\n\t\t            return datacontext.saveContactCard(contactCard);\t\t\t\t\t\r\n\t\t        }\r\n\t\t        // Method on the modal to cancel changes to the patient\r\n\t\t        contactCard.cancelChanges = function () {\r\n\t\t            checkDataContext();\r\n\t\t            datacontext.cancelAllChangesToContactCard(contactCard);\r\n\t\t        }\r\n\t\t    }\r\n\r\n\t\t    function contactLanguageInitializer(contactLanguage) {\r\n\t\t        checkDataContext();\r\n\t\t        contactLanguage.name = ko.computed(function () {\r\n\t\t            var thisLanguage = ko.utils.arrayFirst(datacontext.enums.languages(), function (language) {\r\n\t\t                return language.id() === contactLanguage.lookUpLanguageId();\r\n\t\t            });\r\n\t\t            if (thisLanguage) {\r\n\t\t                return thisLanguage.name();\r\n\t\t            }\r\n\t\t        });\r\n\t\t    }\r\n\r\n\t\t    function contactModeInitializer(contactMode) {\r\n\t\t        checkDataContext();\r\n\t\t        contactMode.name = ko.computed(function () {\r\n\t\t            var thisMode = ko.utils.arrayFirst(datacontext.enums.communicationModes(), function (mode) {\r\n\t\t                return mode.id() === contactMode.lookUpModeId();\r\n\t\t            });\r\n\t\t            if (thisMode) {\r\n\t\t                return thisMode.name();\r\n\t\t            }\r\n\t\t        });\r\n\t\t    }\r\n\r\n\t\t    function phoneInitializer(phone) {\r\n\t\t        phone.type = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var thisTypeId = phone.typeId();\r\n\t\t            var thisType = null;\r\n\t\t            // If there is a type id on the phone,\r\n\t\t            if (thisTypeId) {\r\n\t\t                // Get the type\r\n\t\t                thisType = ko.utils.arrayFirst(datacontext.enums.phoneTypes(), function (item) {\r\n\t\t                    return thisTypeId === item.id();\r\n\t\t                });\r\n\t\t            }\r\n\t\t            return thisType;\r\n\t\t        });\r\n\t\t        phone.formattedNumber = ko.computed(function () {\r\n\t\t            var thisPhoneNumber = phone.number();\r\n\t\t            if (thisPhoneNumber) {\r\n\t\t                thisPhoneNumber = thisPhoneNumber.toString();\r\n\t\t                return thisPhoneNumber.replace(/(\\d{3})-?(\\d{3})-?(\\d{4})/, '($1) $2-$3');\r\n\t\t            }\r\n\t\t            return null;\r\n\t\t        });\r\n\t\t\t\tphone.isValid = ko.observable(true);\r\n\t\t\t\tphone.validationMessage = ko.observable();\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t*\tvalidate a phone number. include generating error message into phone.validationMessage.\r\n\t\t\t\t*\t( note that this works better than breeze custom validation ).\r\n\t\t\t\t*\t@method phone.validate\r\n\t\t\t\t*/\r\n\t\t\t\tphone.validate = function(){\r\n\t\t\t\t\tif( phone.number() && phone.number().match(/^\\d{3}-?\\d{3}-?\\d{4}$/) ){\r\n\t\t\t\t\t\tphone.isValid(true);\r\n\t\t\t\t\t\tphone.validationMessage(null);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tphone.isValid(false);\r\n\t\t\t\t\t\tvar msg;\r\n\t\t\t\t\t\tif(phone.number() && phone.number().length > 0){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tmsg = phone.number() + ' is not a valid Phone Number';\r\n\t\t\t\t\t\t\tif( phone.number().length < 12 ){\r\n\t\t\t\t\t\t\t\tmsg += ' (must have 10 digits)';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tmsg = 'Phone Number is required';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tphone.validationMessage( msg );\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tphone.isFocused = ko.observable(false);\t\t\t\t\r\n\t\t    }\r\n\r\n\t\t    function emailInitializer(email) {\r\n\t\t        email.type = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var thisTypeId = email.typeId();\r\n\t\t            var thisType = null;\r\n\t\t            // If there is a type id on the phone,\r\n\t\t            if (thisTypeId) {\r\n\t\t                // Get the type\r\n\t\t                thisType = ko.utils.arrayFirst(datacontext.enums.emailTypes(), function (item) {\r\n\t\t                    return thisTypeId === item.id();\r\n\t\t                });\r\n\t\t            }\r\n\t\t            return thisType;\r\n\t\t        });\r\n\t\t    }\r\n\r\n\t\t    function addressInitializer(address) {\r\n\t\t        address.type = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var thisTypeId = address.typeId();\r\n\t\t            var thisType = null;\r\n\t\t            // If there is a type id on the phone,\r\n\t\t            if (thisTypeId) {\r\n\t\t                // Get the type\r\n\t\t                thisType = ko.utils.arrayFirst(datacontext.enums.addressTypes(), function (item) {\r\n\t\t                    return thisTypeId === item.id();\r\n\t\t                });\r\n\t\t            }\r\n\t\t            return thisType;\r\n\t\t        });\r\n\t\t        address.state = ko.computed(function () {\r\n\t\t            checkDataContext();\r\n\t\t            var thisStateId = address.stateId();\r\n\t\t            if (thisStateId) {\r\n\t\t                var thisState = ko.utils.arrayFirst(datacontext.enums.states.peek(), function (state) {\r\n\t\t                    return state.id() === thisStateId;\r\n\t\t                });\r\n\t\t                return thisState;\r\n\t\t            }\r\n\t\t            return null;\r\n\t\t        });\r\n\t\t\t\taddress.cityState = ko.computed( function(){\r\n\t\t\t\t\tvar city = address.city() || '';\r\n\t\t            var state = address.state() ? address.state().code() : '';\t\t            \r\n\t\t            return city + ', ' + state;\r\n\t\t\t\t});\r\n\t\t        address.cityStateZip = ko.computed(function () {\r\n\t\t            var city = address.city() || '';\r\n\t\t            var state = address.state() ? address.state().code() : '';\r\n\t\t            var postalCode = address.postalCode() || '';\r\n\t\t            return city + ', ' + state + '  ' + postalCode;\r\n\t\t        });\r\n\t\t        // Full formatted address with line breaks\r\n\t\t        address.fullFormatted = ko.computed(function () {\r\n\t\t        \tvar addLine1 = address.line1() ? address.line1() + ' \\x0A' : '';\r\n\t\t        \tvar addLine2 = address.line2() ? address.line2() + ' \\x0A' : '';\r\n\t\t        \tvar addLine3 = address.line3() ? address.line3() + ' \\x0A' : '';\r\n\t\t        \tvar cityStateZip = address.cityStateZip();\r\n\t\t        \treturn addLine1 + addLine2 + addLine3 + cityStateZip;\r\n\t\t        });\r\n\t\t    }\r\n            \r\n\t\t    function optOutOfPhones(contactCard) {\r\n\t\t        ko.utils.arrayForEach(contactCard.phones(), function (phone) {\r\n\t\t            phone.phonePreferred(false);\r\n\t\t        });\r\n\t\t    }\r\n\r\n\t\t    function optOutOfTexts(contactCard) {\r\n\t\t        ko.utils.arrayForEach(contactCard.phones(), function (phone) {\r\n\t\t            phone.textPreferred(false);\r\n\t\t        });\r\n\t\t    }\r\n\r\n\t\t    function optOutOfAddresses(contactCard) {\r\n\t\t        ko.utils.arrayForEach(contactCard.addresses(), function (address) {\r\n\t\t            address.preferred(false);\r\n\t\t        });\r\n\t\t    }\r\n\r\n\t\t    function optOutOfEmails(contactCard) {\r\n\t\t        ko.utils.arrayForEach(contactCard.emails(), function (email) {\r\n\t\t            email.preferred(false);\r\n\t\t        });\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\tfunction checkDataContext() {\r\n\t\t    if (!datacontext) {\r\n\t\t        datacontext = require('services/datacontext');\r\n\t\t    }\r\n\t\t}\r\n\t});\n","define('models/controls',[],\r\n    function () {\r\n\r\n    \tfunction modal () {\r\n    \t\treturn this;\r\n    \t}\r\n\r\n        var config = {\r\n        \tmodal: modal\r\n        };\r\n        return config;\r\n    });\n","define('models/goals',['services/session'],\r\n    function (session) {\r\n\r\n        var datacontext;\r\n\r\n        var DT = breeze.DataType;\r\n\r\n        var goalModels = {\r\n            initialize: initialize,\r\n            createMocks: createMocks\r\n        };\r\n        return goalModels;\r\n\r\n        function initialize(metadataStore) {\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"Goal\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    sourceId: { dataType: \"String\" },\r\n                    statusId: { dataType: \"String\" },\r\n                    typeId: { dataType: \"String\" },\r\n                    patientId: { dataType: \"String\" },\r\n                    targetValue: { dataType: \"String\" },\r\n                    startDate: { dataType: \"DateTime\" },\r\n                    endDate: { dataType: \"DateTime\" },\r\n                    targetDate: { dataType: \"DateTime\" },\r\n                    focusAreaIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n                    programIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n                    customAttributes: { complexTypeName: \"Attribute:#Nightingale\", isScalar: false },\r\n                    details: { dataType: \"String\" },\r\n                    newDetails:  { dataType: \"String\" }\r\n                },\r\n                navigationProperties: {\r\n                    source: {\r\n                        entityTypeName: \"Source\", isScalar: true,\r\n                        associationName: \"Goal_Source\", foreignKeyNames: [\"sourceId\"]\r\n                    },\r\n                    type: {\r\n                        entityTypeName: \"GoalType\", isScalar: true,\r\n                        associationName: \"Goal_Type\", foreignKeyNames: [\"typeId\"]\r\n                    },\r\n                    status: {\r\n                        entityTypeName: \"GoalTaskStatus\", isScalar: true,\r\n                        associationName: \"Goal_Status\", foreignKeyNames: [\"statusId\"]\r\n                    },\r\n                    patient: {\r\n                        entityTypeName: \"Patient\", isScalar: true,\r\n                        associationName: \"Patient_Goals\", foreignKeyNames: [\"patientId\"]\r\n                    },\r\n                    tasks: {\r\n                        entityTypeName: \"Task\", isScalar: false,\r\n                        associationName: \"Goal_Tasks\"\r\n                    },\r\n                    barriers: {\r\n                        entityTypeName: \"Barrier\", isScalar: false,\r\n                        associationName: \"Goal_Barriers\"\r\n                    },\r\n                    interventions: {\r\n                        entityTypeName: \"Intervention\", isScalar: false,\r\n                        associationName: \"Goal_Interventions\"\r\n                    }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"Attribute\",\r\n                namespace: \"Nightingale\",\r\n                isComplexType: true,\r\n                dataProperties: {\r\n                    id: { dataType: \"String\" },\r\n                    name: { dataType: \"String\" },\r\n                    values: { complexTypeName: \"Value:#Nightingale\", isScalar: false },\r\n                    controlType: { dataType: \"Int64\" },\r\n                    order: { dataType: \"Int64\" },\r\n                    options: { complexTypeName: \"ValueDisplay:#Nightingale\", isScalar: false }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"Value\",\r\n                namespace: \"Nightingale\",\r\n                isComplexType: true,\r\n                dataProperties: {\r\n                    value: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"Barrier\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    categoryId: { dataType: \"String\" },\r\n                    statusId: { dataType: \"String\" },\r\n                    patientGoalId: { dataType: \"String\" },\r\n                    deleteFlag: { dataType: \"Boolean\" },\r\n                    details: { dataType: \"String\" },\r\n                    newDetails:  { dataType: \"String\" }\r\n                },\r\n                navigationProperties: {\r\n                    category: {\r\n                        entityTypeName: \"BarrierCategory\", isScalar: true,\r\n                        associationName: \"Barrier_Category\", foreignKeyNames: [\"categoryId\"]\r\n                    },\r\n                    status: {\r\n                        entityTypeName: \"BarrierStatus\", isScalar: true,\r\n                        associationName: \"Barrier_Status\", foreignKeyNames: [\"statusId\"]\r\n                    },\r\n                    goal: {\r\n                        entityTypeName: \"Goal\", isScalar: true,\r\n                        associationName: \"Goal_Barriers\", foreignKeyNames: [\"patientGoalId\"]\r\n                    }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"Task\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    description: { dataType: \"String\" },\r\n                    statusId: { dataType: \"String\" },\r\n                    createdById: { dataType: \"String\" },\r\n                    targetValue: { dataType: \"String\" },\r\n                    startDate: { dataType: \"DateTime\" },\r\n                    targetDate: { dataType: \"DateTime\" },\r\n                    closedDate: { dataType: \"DateTime\" },\r\n                    statusDate: { dataType: \"DateTime\" },\r\n                    goalName: { dataType: \"String\" },\r\n                    patientGoalId: { dataType: \"String\" },\r\n                    patientId: { dataType: \"String\" },\r\n                    barrierIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n                    customAttributes: { complexTypeName: \"Attribute:#Nightingale\", isScalar: false },\r\n                    deleteFlag: { dataType: \"Boolean\" },\r\n                    details: { dataType: \"String\" },\r\n                    newDetails:  { dataType: \"String\" }\r\n                },\r\n                navigationProperties: {\r\n                    status: {\r\n                        entityTypeName: \"GoalTaskStatus\", isScalar: true,\r\n                        associationName: \"Task_Status\", foreignKeyNames: [\"statusId\"]\r\n                    },\r\n                    goal: {\r\n                        entityTypeName: \"Goal\", isScalar: true,\r\n                        associationName: \"Goal_Tasks\", foreignKeyNames: [\"patientGoalId\"]\r\n                    },\r\n                    patientDetails: {\r\n                        entityTypeName: \"ToDoPatient\", isScalar: true,\r\n                        associationName: \"Task_PatientDetails\", foreignKeyNames: [\"patientId\"]\r\n                    }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"Intervention\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    description: { dataType: \"String\" },\r\n                    statusId: { dataType: \"String\" },\r\n                    createdById: { dataType: \"String\" },\r\n                    categoryId: { dataType: \"String\" },\r\n                    startDate: { dataType: \"DateTime\" },\r\n                    dueDate: { dataType: \"DateTime\" },\r\n                    closedDate: { dataType: \"DateTime\" },\r\n                    goalName: { dataType: \"String\" },\r\n                    patientGoalId: { dataType: \"String\" },\r\n                    patientId: { dataType: \"String\" },\r\n                    assignedToId: { dataType: \"String\" },\r\n                    barrierIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n                    deleteFlag: { dataType: \"Boolean\" },\r\n                    details: { dataType: \"String\" },\r\n                    newDetails:  { dataType: \"String\" }\r\n                },\r\n                navigationProperties: {\r\n                    status: {\r\n                        entityTypeName: \"InterventionStatus\", isScalar: true,\r\n                        associationName: \"Intervention_Status\", foreignKeyNames: [\"statusId\"]\r\n                    },\r\n                    category: {\r\n                        entityTypeName: \"InterventionCategory\", isScalar: true,\r\n                        associationName: \"Intervention_Status\", foreignKeyNames: [\"categoryId\"]\r\n                    },\r\n                    goal: {\r\n                        entityTypeName: \"Goal\", isScalar: true,\r\n                        associationName: \"Goal_Interventions\", foreignKeyNames: [\"patientGoalId\"]\r\n                    },\r\n                    assignedTo: {\r\n                        entityTypeName: \"CareManager\", isScalar: true,\r\n                        associationName: \"Intervention_CareManager\", foreignKeyNames: [\"assignedToId\"]\r\n                    },\r\n                    patientDetails: {\r\n                        entityTypeName: \"ToDoPatient\", isScalar: true,\r\n                        associationName: \"Intervention_PatientDetails\", foreignKeyNames: [\"patientId\"]\r\n                    }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"PatientDetails\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    firstName: { dataType: \"String\" },\r\n                    lastName: { dataType: \"String\" },\r\n                    middleName: { dataType: \"String\" },\r\n                    suffix: { dataType: \"String\" },\r\n                    preferredName: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"IdName\",\r\n                namespace: \"Nightingale\",\r\n                isComplexType: true,\r\n                dataProperties: {\r\n                    id: { dataType: \"String\" },\r\n                    name: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"ValueDisplay\",\r\n                namespace: \"Nightingale\",\r\n                isComplexType: true,\r\n                dataProperties: {\r\n                    value: { dataType: \"String\" },\r\n                    display: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"FocusArea\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"Source\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"BarrierCategory\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"InterventionCategory\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"InterventionStatus\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    iconClass: { dataType: \"String\" },\r\n                    textClass: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"BarrierStatus\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    iconClass: { dataType: \"String\" },\r\n                    textClass: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"GoalTaskStatus\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    order: { dataType: \"Int64\" },\r\n                    iconClass: { dataType: \"String\" },\r\n                    textClass: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"GoalType\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"CareManager\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    userId: { dataType: \"String\" },\r\n                    preferredName: { dataType: \"String\" },\r\n                    firstName: { dataType: \"String\" },\r\n                    lastName: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.registerEntityTypeCtor(\r\n                'Goal', null, goalInitializer);\r\n            metadataStore.registerEntityTypeCtor(\r\n                'Barrier', null, barrierInitializer);\r\n            metadataStore.registerEntityTypeCtor(\r\n                'Intervention', null, interventionInitializer);\r\n            metadataStore.registerEntityTypeCtor(\r\n                'Task', null, taskInitializer);\r\n            metadataStore.registerEntityTypeCtor(\r\n                'Attribute', null, attributeInitializer);\r\n            metadataStore.registerEntityTypeCtor(\r\n                'CareManager', null, careManagerInitializer);\r\n\r\n            function barrierInitializer(barrier) {\r\n                barrier.isNew = ko.observable(false);\r\n                barrier.checkAppend = function () {\r\n                    appendNewDetails( barrier.newDetails, barrier.details );\r\n                };\r\n\r\n                barrier.relatedInterventions = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var interventionList = [];\r\n                    if (barrier.goal()) {\r\n                        ko.utils.arrayForEach(barrier.goal().interventions(), function (intervention) {\r\n                            var thisBarrierId = ko.utils.arrayFirst(intervention.barrierIds(), function (baEnum) {\r\n                                return baEnum.id() === barrier.id();\r\n                            });\r\n                            if (thisBarrierId) {\r\n                                interventionList.push(intervention);\r\n                            }\r\n                        });\r\n                    }\r\n                    return interventionList;\r\n                });\r\n\r\n                barrier.relatedTasks = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var taskList = [];\r\n                    if (barrier.goal()) {\r\n                        ko.utils.arrayForEach(barrier.goal().tasks(), function (task) {\r\n                            var thisBarrierId = ko.utils.arrayFirst(task.barrierIds(), function (baEnum) {\r\n                                return baEnum.id() === barrier.id();\r\n                            });\r\n                            if (thisBarrierId) {\r\n                                taskList.push(task);\r\n                            }\r\n                        });\r\n                    }\r\n                    return taskList;\r\n                });\r\n\r\n                barrier.taskListString = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var thisString = '';\r\n                    var tasks = barrier.relatedTasks();\r\n                    ko.utils.arrayForEach(tasks, function (task) {\r\n                        thisString += task ? task.description() + ', ' : '';\r\n                    });\r\n                    if (thisString.length > 0) {\r\n                        thisString = thisString.substr(0, thisString.length - 2);\r\n                    } else if (thisString.length === 0) {\r\n                        thisString = 'None';\r\n                    }\r\n                    return thisString;\r\n                });\r\n\r\n                barrier.interventionListString = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var thisString = '';\r\n                    var interventions = barrier.relatedInterventions();\r\n                    ko.utils.arrayForEach(interventions, function (intervention) {\r\n                        thisString += intervention ? intervention.description() + ', ' : '';\r\n                    });\r\n                    if (thisString.length > 0) {\r\n                        thisString = thisString.substr(0, thisString.length - 2);\r\n                    } else if (thisString.length === 0) {\r\n                        thisString = 'None';\r\n                    }\r\n                    return thisString;\r\n                });\r\n\r\n                barrier.validationErrors = ko.observableArray([]);\r\n                barrier.isValid = ko.computed( function() {\r\n                    var hasErrors = false;\r\n                    var barrierErrors = [];\r\n                    var name = barrier.name();\r\n                    if( !name ){\r\n                        barrierErrors.push({ PropName: 'name', Message: 'Description is required' });\r\n                        hasErrors = true;\r\n                    }\r\n                    barrier.validationErrors(barrierErrors);\r\n                    return !hasErrors;\r\n                });\r\n                barrier.validationErrorsArray = ko.computed(function () {\r\n                    var thisArray = [];\r\n                    ko.utils.arrayForEach(barrier.validationErrors(), function (error) {\r\n                        thisArray.push(error.PropName);\r\n                    });\r\n                    return thisArray;\r\n                });\r\n\r\n            }\r\n\r\n            function goalInitializer(goal) {\r\n                goal.isNew = ko.observable(false);\r\n                goal.checkAppend = function () {\r\n                    appendNewDetails( goal.newDetails, goal.details );\r\n                };\r\n                goal.focusAreaString = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var thisString = '';\r\n                    ko.utils.arrayForEach(goal.focusAreaIds(), function (focusArea) {\r\n                        var thisFocusArea = ko.utils.arrayFirst(datacontext.enums.focusAreas(), function (faEnum) {\r\n                            return faEnum.id() === focusArea.id();\r\n                        });\r\n                        thisString += thisFocusArea.name() + ', ';\r\n                    });\r\n                    if (thisString.length > 0) {\r\n                        thisString = thisString.substr(0, thisString.length - 2);\r\n                    }\r\n                    if (thisString.length === 0) {\r\n                        thisString = '-';\r\n                    }\r\n                    return thisString;\r\n                });\r\n                goal.programString = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var thisString = '';\r\n                    var theseProgramIds = goal.programIds();\r\n                    if (goal.patient() && goal.patient().programs()) {\r\n                        var thesePrograms = goal.patient().programs();\r\n                        ko.utils.arrayForEach(theseProgramIds, function (program) {\r\n                            var thisProgram = ko.utils.arrayFirst(thesePrograms, function (programEnum) {\r\n                                return programEnum.id() === program.id();\r\n                            });\r\n                            thisString += thisProgram ? thisProgram.name() + ', ' : '';\r\n                        });\r\n                        if (thisString.length > 0) {\r\n                            thisString = thisString.substr(0, thisString.length - 2);\r\n                        }\r\n                    }\r\n                    if (thisString.length === 0) {\r\n                        thisString = 'None';\r\n                    }\r\n                    return thisString;\r\n                });\r\n                goal.isLoaded = false;\r\n                goal.validationErrors = ko.observableArray([]);\r\n                goal.isValid = ko.computed( function() {\r\n                    var hasErrors = false;\r\n                    var goalErrors = [];\r\n                    var name = goal.name();\r\n                    if( !name ){\r\n                        goalErrors.push({ PropName: 'name', Message: 'Description is required' });\r\n                        hasErrors = true;\r\n                    }\r\n                    goal.validationErrors(goalErrors);\r\n                    return !hasErrors;\r\n                });\r\n                goal.validationErrorsArray = ko.computed(function () {\r\n                    var thisArray = [];\r\n                    ko.utils.arrayForEach(goal.validationErrors(), function (error) {\r\n                        thisArray.push(error.PropName);\r\n                    });\r\n                    return thisArray;\r\n                });\r\n                goal.sortedInterventions = ko.computed(function () {\r\n                    return goal.interventions().sort(function (l, r) { return (l.description() == r.description()) ? (l.description() < r.description() ? -1 : 1) : (l.description() < r.description() ? -1 : 1) });\r\n                });\r\n                goal.sortedTasks = ko.computed(function () {\r\n                    return goal.tasks().sort(function (l, r) { return (l.description() == r.description()) ? (l.description() < r.description() ? -1 : 1) : (l.description() < r.description() ? -1 : 1) });\r\n                });\r\n            }\r\n\r\n            function interventionInitializer(intervention) {\r\n                intervention.isNew = ko.observable(false);\r\n                intervention.checkAppend = function () {\r\n                    appendNewDetails( intervention.newDetails, intervention.details );\r\n                };\r\n                intervention.barrierString = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var thisString = '';\r\n                    if (intervention.goal()) {\r\n                        ko.utils.arrayForEach(intervention.barrierIds(), function (barrier) {\r\n                            var thisBarrier = ko.utils.arrayFirst(intervention.goal().barriers(), function (baEnum) {\r\n                                return baEnum.id() === barrier.id();\r\n                            });\r\n                            if (thisBarrier) {\r\n                                thisString += thisBarrier.name() + ', ';\r\n                            }\r\n                        });\r\n                        if (thisString.length > 0) {\r\n                            thisString = thisString.substr(0, thisString.length - 2);\r\n                        }\r\n                    }\r\n                    if (thisString.length === 0) {\r\n                        thisString = 'None';\r\n                    }\r\n                    return thisString;\r\n                });\r\n\r\n                intervention.relatedBarriers = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var barriersList = [];\r\n                    if (intervention.goal()) {\r\n                        ko.utils.arrayForEach(intervention.barrierIds(), function (barrier) {\r\n                            var thisBarrier = ko.utils.arrayFirst(intervention.goal().barriers(), function (baEnum) {\r\n                                return baEnum.id() === barrier.id();\r\n                            });\r\n                            if (thisBarrier) {\r\n                                barriersList.push(thisBarrier);\r\n                            }\r\n                        });\r\n                    }\r\n                    return barriersList;\r\n                });\r\n\r\n                intervention.computedGoalName = ko.computed(function () {\r\n                    var returnString = '';\r\n                    if (intervention.goal()) {\r\n                        returnString = intervention.goal().name();\r\n                    } else if (intervention.goalName()) {\r\n                        returnString = intervention.goalName();\r\n                    }\r\n                    return returnString;\r\n                });\r\n                intervention.computedPatient = ko.computed(function () {\r\n                    var returnPatient = '';\r\n                    if (intervention.goal() && intervention.goal().patient()) {\r\n                        returnPatient = intervention.goal().patient();\r\n                    } else if (intervention.goalName()) {\r\n                        returnPatient = intervention.patientDetails();\r\n                    }\r\n                    return returnPatient;\r\n                });\r\n                intervention.isDirty = ko.observable(false);\r\n                intervention.clearDirty = function(){\r\n                    intervention.isDirty(false);\r\n                };\r\n                intervention.watchDirty = function () {\r\n                    var propToken = intervention.entityAspect.propertyChanged.subscribe(function (newValue) {\r\n                        intervention.isDirty(true);\r\n                        propToken.dispose();\r\n                    });\r\n                    var barriersToken = intervention.barrierIds.subscribe(function (newValue) {\r\n                        intervention.isDirty(true);\r\n                        barriersToken.dispose();\r\n                    });\r\n                };\r\n                intervention.dueDateErrors = ko.observableArray([]);\r\n                intervention.startDateErrors = ko.observableArray([]);\r\n                intervention.validationErrors = ko.observableArray([]);\r\n                intervention.isValid = ko.computed( function() {\r\n                    var hasErrors = false;\r\n                    var description = intervention.description();\r\n                    var startDate = intervention.startDate();\r\n                    var dueDate = intervention.dueDate();\r\n                    var interventionErrors = [];\r\n                    var dueDateErrors = intervention.dueDateErrors();\r\n                    var startDateErrors = intervention.startDateErrors();\r\n                    var hasChanges = intervention.isDirty();\r\n                    if( !description ){\r\n                        hasErrors = true;\r\n                        if( hasChanges || !intervention.isNew() ){\r\n                            interventionErrors.push({ PropName: 'description', Message: 'Description is required' });\r\n                        }\r\n                    }\r\n                    if( startDateErrors.length > 0 ){\r\n                        ko.utils.arrayForEach( startDateErrors, function(error){\r\n                            interventionErrors.push({ PropName: 'startDate', Message: 'Start Date ' + error.Message});\r\n                            hasErrors = true;\r\n                        });\r\n                    }\r\n                    if( dueDateErrors.length > 0 ){\r\n                        ko.utils.arrayForEach( dueDateErrors, function(error){\r\n                            interventionErrors.push({ PropName: 'dueDate', Message: 'Due Date ' + error.Message});\r\n                            hasErrors = true;\r\n                        });\r\n                    }\r\n\r\n                    intervention.validationErrors(interventionErrors)\r\n                    return !hasErrors;\r\n                });\r\n\r\n                intervention.validationErrorsArray = ko.computed(function () {\r\n                    var thisArray = [];\r\n                    ko.utils.arrayForEach(intervention.validationErrors(), function (error) {\r\n                        thisArray.push(error.PropName);\r\n                    });\r\n                    return thisArray;\r\n                });\r\n            }\r\n\r\n            function taskInitializer(task) {\r\n                task.checkAppend = function () {\r\n                    appendNewDetails( task.newDetails, task.details );\r\n                };\r\n                task.barrierString = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var thisString = '';\r\n                    if (task.goal()) {\r\n                        ko.utils.arrayForEach(task.barrierIds(), function (barrier) {\r\n                            var thisBarrier = ko.utils.arrayFirst(task.goal().barriers(), function (baEnum) {\r\n                                return baEnum.id() === barrier.id();\r\n                            });\r\n                            if (thisBarrier) {\r\n                                thisString += thisBarrier.name() + ', ';\r\n                            }\r\n                        });\r\n                        if (thisString.length > 0) {\r\n                            thisString = thisString.substr(0, thisString.length - 2);\r\n                        }\r\n                    }\r\n                    if (thisString.length === 0) {\r\n                        thisString = 'None';\r\n                    }\r\n                    return thisString;\r\n                });\r\n                task.relatedBarriers = ko.computed(function () {\r\n                    checkDataContext();\r\n                    var barriersList = [];\r\n                    if (task.goal()) {\r\n                        ko.utils.arrayForEach(task.barrierIds(), function (barrier) {\r\n                            var thisBarrier = ko.utils.arrayFirst(task.goal().barriers(), function (baEnum) {\r\n                                return baEnum.id() === barrier.id();\r\n                            });\r\n                            if (thisBarrier) {\r\n                                barriersList.push(thisBarrier);\r\n                            }\r\n                        });\r\n                    }\r\n                    return barriersList;\r\n                });\r\n                task.computedGoalName = ko.computed(function () {\r\n                    var returnString = '';\r\n                    if (task.goal()) {\r\n                        returnString = task.goal().name();\r\n                    } else if (task.goalName()) {\r\n                        returnString = task.goalName();\r\n                    }\r\n                    return returnString;\r\n                });\r\n                task.validationErrors = ko.observableArray([]);\r\n                task.isValid = ko.computed( function() {\r\n                    var hasErrors = false;\r\n                    var taskErrors = [];\r\n                    var description = task.description();\r\n                    if( !description ){\r\n                        taskErrors.push({ PropName: 'description', Message: 'Description is required' });\r\n                        hasErrors = true;\r\n                    }\r\n                    task.validationErrors(taskErrors);\r\n                    return !hasErrors;\r\n                });\r\n                task.validationErrorsArray = ko.computed(function () {\r\n                    var thisArray = [];\r\n                    ko.utils.arrayForEach(task.validationErrors(), function (error) {\r\n                        thisArray.push(error.PropName);\r\n                    });\r\n                    return thisArray;\r\n                });\r\n            }\r\n\r\n            function attributeInitializer(attribute) {\r\n                checkDataContext();\r\n                attribute.path = ko.computed(function () {\r\n                    var thisControlType = attribute.controlType();\r\n                    var thisPath = '';\r\n                    if (thisControlType) {\r\n                        if (thisControlType === 1) {\r\n                            thisPath = 'programdesigner/customattributes/singleselect.edit.html';\r\n                        }\r\n                        else if (thisControlType === 2) {\r\n                            thisPath = 'programdesigner/customattributes/multiselect.edit.html';\r\n                        }\r\n                        else if (thisControlType === 3) {\r\n                            thisPath = 'programdesigner/customattributes/datepicker.edit.html';\r\n                        }\r\n                        else if (thisControlType === 4) {\r\n                            thisPath = 'programdesigner/customattributes/datetimepicker.edit.html';\r\n                        }\r\n                        else if (thisControlType === 5) {\r\n                            thisPath = 'programdesigner/customattributes/input.edit.html';\r\n                        }\r\n                    }\r\n                    return thisPath;\r\n                });\r\n                attribute.displayPath = ko.computed(function () {\r\n                    var thisControlType = attribute.controlType();\r\n                    var thisPath = '';\r\n                    if (thisControlType) {\r\n                        if (thisControlType === 1) {\r\n                            thisPath = 'programdesigner/customattributes/singleselect.html';\r\n                        }\r\n                        else if (thisControlType === 2) {\r\n                            thisPath = 'programdesigner/customattributes/multiselect.html';\r\n                        }\r\n                        else if (thisControlType === 3) {\r\n                            thisPath = 'programdesigner/customattributes/datepicker.html';\r\n                        }\r\n                        else if (thisControlType === 4) {\r\n                            thisPath = 'programdesigner/customattributes/datetimepicker.html';\r\n                        }\r\n                        else if (thisControlType === 5) {\r\n                            thisPath = 'programdesigner/customattributes/input.html';\r\n                        }\r\n                    }\r\n                    return thisPath;\r\n                });\r\n                if (attribute.values().length === 0) {\r\n                    var thisValue = datacontext.createComplexType('Value', {});\r\n                    attribute.values.push(thisValue);\r\n                }\r\n                attribute.computedValue = ko.computed({\r\n                    read: function () {\r\n                        var returnValue = null;\r\n                        if (attribute.values().length === 1) {\r\n                            returnValue = attribute.values()[0];\r\n                        }\r\n                        else if (attribute.values().length > 1) {\r\n                            returnValue = attribute.values();\r\n                        }\r\n                        return returnValue;\r\n                    },\r\n                    write: function (newValue) {\r\n                        if (attribute.controlType === 2) {\r\n\r\n                        } else {\r\n                            attribute.values()[0].value(newValue);\r\n                        }\r\n                    }\r\n                });\r\n                attribute.displayValue = ko.computed(function () {\r\n                    var returnValue = null;\r\n                    if (attribute.values().length === 1) {\r\n                        returnValue = ko.utils.arrayFirst(attribute.options(), function (option) {\r\n                            return attribute.values()[0].value() === option.value();\r\n                        });\r\n                    }\r\n                    else if (attribute.values().length > 1) {\r\n                        returnValue = attribute.values();\r\n                    }\r\n                    return returnValue? returnValue.display() : '';\r\n                });\r\n            }\r\n\r\n            function careManagerInitializer(careManager) {\r\n                careManager.fullName = ko.computed(function () {\r\n                    var fn = careManager.firstName();\r\n                    var ln = careManager.lastName();\r\n                    return fn + ' ' + ln;\r\n                }).extend({ throttle: 100 });\r\n\t\t\t\t\r\n\t\t\t\tcareManager.firstLastOrPreferredName = ko.computed( function(){\r\n\t\t\t\t\tvar preferred = careManager.preferredName();\r\n\t\t\t\t\tvar firstName = careManager.firstName();\r\n\t\t\t\t\tif( !firstName ) {\r\n\t\t\t\t\t\tfirstName = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar lastName = careManager.lastName();\r\n\t\t\t\t\tif( !lastName ) {\r\n\t\t\t\t\t\tlastName = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn preferred? preferred : (firstName + ' ' + lastName);\r\n\t\t\t\t}).extend({throttle: 100});\r\n\t\t\t\t\r\n            }\r\n        }\r\n\r\n        function appendNewDetails( newDetails, details ){\r\n            if( newDetails() ){\r\n                var append = '';\r\n                if( details() && details().length ){\r\n                    append = '\\n';\r\n                }\r\n                checkDataContext();\r\n                append += moment().format('MM-DD-YYYY h:mm A') + ' ';\r\n                append += (' ' + datacontext.getUsercareManagerName());\r\n                append += (' - ' + newDetails());\r\n                details(details() ? details() + append : append);\r\n                newDetails('');\r\n            }\r\n        }\r\n\r\n        function createMocks(manager) {\r\n\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n    });\r\n\n","// Register all of the models in the entity manager (initialize function) and provide other non-entity models\r\ndefine('models/lookups',['services/session'],\r\n\tfunction (session) {\r\n\r\n\t    var datacontext;\r\n\r\n\t\tvar DT = breeze.DataType;\r\n\r\n\t\t// Expose the model module to the requiring modules\r\n\t\tvar stepmodels = {\r\n\t\t    initialize: initialize,\r\n\t\t    initializeEnums: initializeEnums\r\n\t\t};\r\n\t\treturn stepmodels;\r\n\r\n\t\t// Initialize the entity models in the entity manager\r\n\t\tfunction initialize(metadataStore) {\r\n\r\n\t\t    // Time of Day information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"TimeOfDay\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Time Zone information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"TimeZone\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            preferred: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Language information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Language\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            code: { dataType: \"String\" },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // State information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"State\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            code: { dataType: \"String\" },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Communication Mode\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"CommunicationMode\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Communication Type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"CommunicationType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            commModeIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Priority\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Priority\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            levelName: { dataType: \"String\" },\r\n\t\t            imageSource: { dataType: \"String\" },\r\n\t\t            iconClass: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            patients: {\r\n\t\t                entityTypeName: \"Patient\", isScalar: false,\r\n\t\t                associationName: \"Priority_Patients\"\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t\t//individual status - enum\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"PatientStatus\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t\t//contact status - enum\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"ContactStatus\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t\t//care member status - enum\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"CareMemberStatus\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t\t\t\tisDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t\t//care member frequency\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"CareTeamFrequency\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t\t//system status - enum\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"SystemStatus\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties:{\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tname: { dataType: \"String\" }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//patient system status - enum (multi id = patient system)\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\tshortName: \"PatientSystemStatus\",\r\n\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\tdataProperties:{\r\n\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\tname: { dataType: \"String\" }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//individual status reason - lookup\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"PatientStatusReason\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Observation Type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"ObservationType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Care Member Type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"CareMemberType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Element State\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"ElementState\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n                    order: { dataType: \"Int64\" },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Eligibility State\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"EligibilityStatus\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Enrollment Status State\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"EnrollmentStatus\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // YesOrNo State\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"YesOrNo\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // TodoCategory\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"ToDoCategory\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // NoteMethod\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"NoteMethod\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // NoteOutcome\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"NoteOutcome\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // NoteWho\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"NoteWho\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // NoteSource\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"NoteSource\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // NoteType\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"NoteType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t\t//utilization note:\tVisitType\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"VisitType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t\t//utilization note:\tUtilizationSource\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"UtilizationSource\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t\t//utilization note:\tDisposition\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"Disposition\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t\t//utilization note: UtilizationLocation\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t        shortName: \"UtilizationLocation\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // AllergyType\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"AllergyType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Severity\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Severity\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Reaction\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Reaction\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // AllergySource\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"AllergySource\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            isDefault: { dataType: \"Boolean\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // TypeName\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"MedSuppType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t    // FreqHowOften\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"FreqHowOften\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t    // FreqWhen\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"FreqWhen\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t    // Frequency\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Frequency\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\t\t    // MedicationStatus\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"MedicationStatus\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // MedicationCategory\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"MedicationCategory\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n            // DurationUnit\r\n            metadataStore.addEntityType({\r\n                shortName: \"DurationUnit\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" }\r\n                }\r\n            });\r\n\r\n            // RefusalReason\r\n            metadataStore.addEntityType({\r\n                shortName: \"RefusalReason\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    isDefault: { dataType: \"Boolean\" }\r\n                }\r\n            });\r\n\r\n            // MedicationReview\r\n            metadataStore.addEntityType({\r\n                shortName: \"MedicationReview\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    isDefault: { dataType: \"Boolean\" }\r\n                }\r\n            });\r\n\r\n\t\t\t\t// Marital Status for a Patient\r\n\t\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\t\t\tshortName: \"MaritalStatus\",\r\n\t\t\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\t\t\tdataProperties: {\r\n\t\t\t\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\t\t\t\tname: { dataType: \"String\" }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Deceased State for a Patient\r\n\t\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\t\t\tshortName: \"Deceased\",\r\n\t\t\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\t\t\tdataProperties: {\r\n\t\t\t\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\t\t\t\tname: { dataType: \"String\" }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t    // Initialize the entity models in the entity manager\r\n\t\tfunction initializeEnums(manager) {\r\n\r\n\t\t    // Create the enums to use for element states so that they can be shared throughout the application\r\n\t\t    manager.createEntity('ElementState', { id: 1, order: 6, name: 'Removed' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('ElementState', { id: 2, order: 3, name: 'Not Started' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('ElementState', { id: 3, order: 1, name: 'Started' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('ElementState', { id: 5, order: 4, name: 'Completed' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('ElementState', { id: 4, order: 2, name: 'In Progress' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('ElementState', { id: 6, order: 5, name: 'Closed' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Create the enums to re-use and save their changes so they don't show up as having changes\r\n\t\t    manager.createEntity('Priority', { id: 0, levelName: 'Not Set', imageSource: '/NightingaleUI/Content/images/priority_empty.png', iconClass: 'icon-priority-empty' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('Priority', { id: 1, levelName: 'Low', imageSource: '/NightingaleUI/Content/images/priority_low.png', iconClass: 'icon-priority grey' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('Priority', { id: 2, levelName: 'Medium', imageSource: '/NightingaleUI/Content/images/priority_medium.png', iconClass: 'icon-priority yellow' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('Priority', { id: 3, levelName: 'High', imageSource: '/NightingaleUI/Content/images/priority_high.png', iconClass: 'icon-priority red' }).entityAspect.acceptChanges();\r\n\r\n\t\t\t//enums.patientStatus\r\n\t\t    manager.createEntity('PatientStatus', { id: 1, name: 'Active'   }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('PatientStatus', { id: 2, name: 'Inactive' }).entityAspect.acceptChanges();\r\n\t\t\tmanager.createEntity('PatientStatus', { id: 3, name: 'Archived' }).entityAspect.acceptChanges();\r\n\r\n\t\t\t//enums.contactStatus\r\n\t\t    manager.createEntity('ContactStatus', { id: 1, name: 'Active'   }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('ContactStatus', { id: 2, name: 'Inactive' }).entityAspect.acceptChanges();\r\n\t\t\tmanager.createEntity('ContactStatus', { id: 3, name: 'Archived' }).entityAspect.acceptChanges();\r\n\r\n\t\t\t//enums.careMemberStatuses\r\n\t\t\tmanager.createEntity('CareMemberStatus', { id: 1, name: 'Active' }).entityAspect.acceptChanges();\r\n\t\t\tmanager.createEntity('CareMemberStatus', { id: 2, name: 'Inactive' }).entityAspect.acceptChanges();\r\n\t\t\tmanager.createEntity('CareMemberStatus', { id: 3, name: 'Invalid' }).entityAspect.acceptChanges();\r\n\r\n\t\t\t//enums.systemStatus\r\n\t\t\tmanager.createEntity('SystemStatus', {id: 1, name: 'Active'\t\t}).entityAspect.acceptChanges();\r\n\t\t\tmanager.createEntity('SystemStatus', {id: 2, name: 'Inactive'\t}).entityAspect.acceptChanges();\r\n\r\n\t\t\t//enums.patientSystemStatus\r\n\t\t\tmanager.createEntity('PatientSystemStatus',  {id: 1, name: 'Active'\t\t}).entityAspect.acceptChanges();\r\n\t\t\tmanager.createEntity('PatientSystemStatus',  {id: 2, name: 'Inactive'\t}).entityAspect.acceptChanges();\r\n\r\n            // Types of steps enums\r\n\t\t    manager.createEntity('StepType', { id: 1, name: 'Radio', path: 'programdesigner/questiontypes/radio.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 2, name: 'Text', path: 'programdesigner/questiontypes/label.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 3, name: 'Textbox', path: 'programdesigner/questiontypes/textbox.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 10, name: 'TextArea', path: 'programdesigner/questiontypes/textarea.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 4, name: 'SingleSelect', path: 'programdesigner/questiontypes/singleselect.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 7, name: 'Complete', path: 'programdesigner/questiontypes/button.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 6, name: 'DatePicker', path: 'programdesigner/questiontypes/datepicker.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 8, name: 'TimePicker', path: 'programdesigner/questiontypes/timepicker.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 9, name: 'DateTimePicker', path: 'programdesigner/questiontypes/datetimepicker.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 5, name: 'Checkbox', path: 'programdesigner/questiontypes/checkbox.html' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('StepType', { id: 11, name: 'Modal', path: 'programdesigner/questiontypes/modal.html' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Goal task status enums\r\n\t\t    manager.createEntity('GoalTaskStatus', { id: 1, name: 'Open', order: 1, iconClass: 'icon-priority-empty orange', textClass: '' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('GoalTaskStatus', { id: 2, name: 'Met', order: 4, iconClass: 'icon-check darkgreen', textClass: 'grey' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('GoalTaskStatus', { id: 3, name: 'Not Met', order: 2, iconClass: 'icon-warning-o red', textClass: 'grey' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('GoalTaskStatus', { id: 4, name: 'Abandoned', order: 3, iconClass: 'icon-warning red', textClass: 'grey' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Barrier status enums\r\n\t\t    manager.createEntity('BarrierStatus', { id: 1, name: 'Open', iconClass: 'icon-priority-empty orange', textClass: '' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('BarrierStatus', { id: 2, name: 'Resolved', iconClass: 'icon-check darkgreen', textClass: 'grey' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Intervention status enums\r\n\t\t    manager.createEntity('InterventionStatus', { id: 1, name: 'Open', iconClass: 'icon-priority-empty orange', textClass: '' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('InterventionStatus', { id: 2, name: 'Completed', iconClass: 'icon-check darkgreen', textClass: 'grey' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('InterventionStatus', { id: 3, name: 'Removed', iconClass: 'icon-warning-o red', textClass: 'grey' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Goal type enums\r\n\t\t    manager.createEntity('GoalType', { id: 1, name: 'Long-Term' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('GoalType', { id: 2, name: 'Short-Term' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Observation Display enums\r\n\t\t    manager.createEntity('ObservationDisplay', { id: -1, name: 'None' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('ObservationDisplay', { id: 1, name: 'Primary' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('ObservationDisplay', { id: 2, name: 'Secondary' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Eligibility enums\r\n\t\t    manager.createEntity('EligibilityStatus', { id: 1, name: 'Not Eligible' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('EligibilityStatus', { id: 2, name: 'Eligible' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('EligibilityStatus', { id: 3, name: 'Pending' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Enrollment Status enums\r\n\t\t    manager.createEntity('EnrollmentStatus', { id: 1, name: 'Enrolled' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('EnrollmentStatus', { id: 2, name: 'Pending' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('EnrollmentStatus', { id: 3, name: 'Did Not Enroll' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('EnrollmentStatus', { id: 4, name: 'Disenrolled' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('EnrollmentStatus', { id: 5, name: 'Completed Program' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Enrollment Status enums\r\n\t\t    manager.createEntity('YesOrNo', { id: 1, name: 'No' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('YesOrNo', { id: 2, name: 'Yes' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Note Types enums\r\n\t\t    // manager.createEntity('NoteType', { id: 1, name: 'General' }).entityAspect.acceptChanges();\r\n\t\t    // manager.createEntity('NoteType', { id: 2, name: 'Touchpoint' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Allergy status enums\r\n            manager.createEntity('AllergyStatus', { id: 1, name: 'Active' }).entityAspect.acceptChanges();\r\n            manager.createEntity('AllergyStatus', { id: 2, name: 'Inactive' }).entityAspect.acceptChanges();\r\n            manager.createEntity('AllergyStatus', { id: 3, name: 'Refused' }).entityAspect.acceptChanges();\r\n            manager.createEntity('AllergyStatus', { id: 4, name: 'Not Done Medical' }).entityAspect.acceptChanges();\r\n            manager.createEntity('AllergyStatus', { id: 5, name: 'Unknown' }).entityAspect.acceptChanges();\r\n            manager.createEntity('AllergyStatus', { id: 6, name: 'Invalid' }).entityAspect.acceptChanges();\r\n            manager.createEntity('AllergyStatus', { id: 7, name: 'Duplicate' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Medication status enums\r\n\t\t    manager.createEntity('MedicationStatus', { id: 1, name: 'Active' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('MedicationStatus', { id: 2, name: 'Inactive' }).entityAspect.acceptChanges();\r\n            manager.createEntity('MedicationStatus', { id: 3, name: 'Refused' }).entityAspect.acceptChanges();\r\n            manager.createEntity('MedicationStatus', { id: 4, name: 'Not Done Medical' }).entityAspect.acceptChanges();\r\n            manager.createEntity('MedicationStatus', { id: 5, name: 'Unknown' }).entityAspect.acceptChanges();\r\n            manager.createEntity('MedicationStatus', { id: 6, name: 'Invalid' }).entityAspect.acceptChanges();\r\n            manager.createEntity('MedicationStatus', { id: 7, name: 'Duplicate' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Medication category enums\r\n\t\t    manager.createEntity('MedicationCategory', { id: 1, name: 'Medication' }).entityAspect.acceptChanges();\r\n\t\t    // manager.createEntity('MedicationCategory', { id: 2, name: 'Supplement' }).entityAspect.acceptChanges();\r\n\r\n\t\t    // Deceased enums\r\n\t\t    manager.createEntity('Deceased', { id: 1, name: 'Yes' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('Deceased', { id: 2, name: 'No' }).entityAspect.acceptChanges();\r\n\t\t}\r\n\r\n\t\tfunction checkDataContext() {\r\n\t\t    if (!datacontext) {\r\n\t\t        datacontext = require('services/datacontext');\r\n\t\t    }\r\n\t\t}\r\n\t});\n","define('models/medications',['services/session', 'services/dateHelper'],\r\n    function (session, dateHelper) {\r\n\r\n        var datacontext;\r\n\r\n        var DT = breeze.DataType;\r\n\r\n        var medicationModels = {\r\n            initialize: initialize\r\n        };\r\n        return medicationModels;\r\n\r\n        function initialize(metadataStore) {\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"PatientMedication\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    patientId: { dataType: \"String\" },\r\n                    dosage: { dataType: \"String\" },\r\n                    strength: { dataType: \"String\" },\r\n                    route: { dataType: \"String\" },\r\n                    form: { dataType: \"String\" },\r\n                    deleteFlag: { dataType: \"Boolean\" },\r\n                    startDate: { dataType: \"DateTime\" },\r\n                    endDate: { dataType: \"DateTime\" },\r\n                    createdOn: { dataType: \"DateTime\" },\r\n                    updatedOn: { dataType: \"DateTime\" },\r\n                    statusId: { dataType: \"String\" },\r\n                    freqQuantity: { dataType: \"String\" },\r\n                    freqHowOftenId: { dataType: \"String\" },\r\n                    frequencyId:  { dataType: \"String\" },\r\n                    freqWhenId: { dataType: \"String\" },\r\n                    categoryId: { dataType: \"String\" },\r\n                    sourceId: { dataType: \"String\" },\r\n                    systemName: { dataType: \"String\" },\r\n                    typeId: { dataType: \"String\" },\r\n                    prescribedBy: { dataType: \"String\" },\r\n                    sigCode: { dataType: \"String\" },\r\n                    reason: { dataType: \"String\" },\r\n                    isCreateNewMedication: { dataType: \"Boolean\" },\r\n                    customFrequency:  { dataType: \"String\" },\r\n                    isDuplicate: { dataType: \"Boolean\" },\r\n                    familyId: { dataType: \"String\" },\r\n                    notes: { dataType: \"String\" },\r\n                    nDCs: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n                    pharmClasses: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n                    dataSource: { dataType: \"String\", defaultValue: \"Engage\" },\r\n                    originalDataSource: { dataType: \"String\" },\r\n                    duration: { dataType: \"String\" },\r\n                    durationUnitId: { dataType: \"String\" },\r\n                    otherDuration: { dataType: \"String\" },\r\n                    reviewId: { dataType: \"String\" },\r\n                    refusalReasonId: { dataType: \"String\" },\r\n                    otherRefusalReason: { dataType: \"String\" },\r\n                    orderedBy: { dataType: \"String\" },\r\n                    orderedDate: { dataType: \"DateTime\" },\r\n                    prescribedDate: { dataType: \"DateTime\" },\r\n                    rxNumber: { dataType: \"String\" },\r\n                    rxDate: { dataType: \"DateTime\" },\r\n                    pharmacy: { dataType: \"String\" },\r\n                    externalRecordId: { dataType: \"String\" }\r\n                },\r\n                navigationProperties: {\r\n                    patient: {\r\n                        entityTypeName: \"Patient\", isScalar: true,\r\n                        associationName: \"Patient_Medications\", foreignKeyNames: [\"patientId\"]\r\n                    },\r\n                    status: {\r\n                        entityTypeName: \"MedicationStatus\", isScalar: true,\r\n                        associationName: \"Medication_Status\", foreignKeyNames: [\"statusId\"]\r\n                    },\r\n                    category: {\r\n                        entityTypeName: \"MedicationCategory\", isScalar: true,\r\n                        associationName: \"Medication_Category\", foreignKeyNames: [\"categoryId\"]\r\n                    },\r\n                    type: {\r\n                        entityTypeName: \"MedSuppType\", isScalar: true,\r\n                        associationName: \"Medication_Type\", foreignKeyNames: [\"typeId\"]\r\n                    },\r\n                    source: {\r\n                        entityTypeName: \"AllergySource\", isScalar: true,\r\n                        associationName: \"Medication_Source\", foreignKeyNames: [\"sourceId\"]\r\n                    },\r\n                    freqHowOften: {\r\n                        entityTypeName: \"FreqHowOften\", isScalar: true,\r\n                        associationName: \"Medication_FreqHowOften\", foreignKeyNames: [\"freqHowOftenId\"]\r\n                    },\r\n                    freqWhen: {\r\n                        entityTypeName: \"FreqWhen\", isScalar: true,\r\n                        associationName: \"Medication_FreqWhen\", foreignKeyNames: [\"freqWhenId\"]\r\n                    },\r\n                    frequency: {\r\n                        entityTypeName: \"PatientMedicationFrequency\", isScalar: true,\r\n                        associationName: \"Medication_Frequency\", foreignKeyNames: [\"frequencyId\"]\r\n                    },\r\n                    durationUnit: {\r\n                        entityTypeName: \"DurationUnit\", isScalar: true,\r\n                        associationName: \"Medication_DurationUnit\", foreignKeyNames: [\"durationUnitId\"]\r\n                    },\r\n                    review: {\r\n                        entityTypeName: \"MedicationReview\", isScalar: true,\r\n                        associationName: \"Medication_MedicationReview\", foreignKeyNames: [\"reviewId\"]\r\n                    },\r\n                    refusalReason: {\r\n                        entityTypeName: \"RefusalReason\", isScalar: true,\r\n                        associationName: \"Medication_RefusalReason\", foreignKeyNames: [\"refusalReasonId\"]\r\n                    }\r\n                }\r\n            });\r\n\r\n            metadataStore.registerEntityTypeCtor(\r\n                'PatientMedication', null, medicationInitializer);\r\n\r\n            function medicationInitializer(medication) {\r\n                medication.isNew = ko.observable(false);\r\n\r\n                medication.isCreateNewMedication = ko.observable(false);\r\n\r\n                medication.customFrequency = ko.observable();\r\n                medication.isDuplicate = ko.observable(false);\r\n                medication.familyId = ko.observable();\r\n                medication.canSave = ko.observable(false);\r\n                medication.isEditing = ko.observable(false);\r\n                medication.recalculateNDC = ko.observable(false);\r\n                medication.deleteFlag(false);\r\n                medication.computedSigCode = ko.computed(function () {\r\n                    var strDateRange = '';\r\n                    if(medication.startDate() && medication.endDate()){\r\n                        var startDate = moment(medication.startDate());\r\n                        var startDate = startDate && startDate.isValid() ? startDate : null;\r\n                        var endDate = moment(medication.endDate());\r\n                        var endDate = endDate && endDate.isValid() ? endDate : null;\r\n                        if(startDate && endDate){\r\n                            var days = endDate.diff(startDate, 'days');\r\n                            if (days){\r\n                                strDateRange = 'for ' + days + (days==1 ? ' day' : ' days');\r\n                            }\r\n                        }\r\n                    }\r\n                    if(!medication.freqQuantity() && !medication.strength() && !medication.form() && !medication.route() &&  !medication.frequency() && !strDateRange){\r\n                        return '-';\r\n                    }\r\n\r\n                    var strength = medication.strength() ? medication.strength().trim() : '';\r\n                    var form = medication.form() ? medication.form().trim() : '';\r\n                    var route = medication.route() ? medication.route().trim() : '';\r\n\r\n                    var quantity = medication.freqQuantity() ? medication.freqQuantity().trim() : '';\r\n                    quantity = quantity ? quantity: '';\r\n                    var howOften = medication.frequency() ? medication.frequency().name().trim() : '';\r\n\r\n                    if(!quantity && !strength && !form && !route && !howOften && !strDateRange){\r\n                        return '-';\r\n                    }\r\n                    return quantity + ' ' + strength + ' ' + form + ' ' + route + ' ' + howOften + ' ' + strDateRange;\r\n                });\r\n                medication.computedDisplayName = ko.computed(function () {\r\n                    var result = '';\r\n                    var quantity = medication.freqQuantity();\r\n                    var name = medication.name();\r\n                    var strength = medication.strength();\r\n                    var route = medication.route();\r\n                    var form = medication.form();\r\n                    result = result + (name ? name + ' - ' : '');\r\n                    result = result + (quantity ? '(' + quantity + ') ' : '');\r\n                    result = result + (strength ? strength + ' ' : '');\r\n                    result = result + (route ? route + ' ' : '');\r\n                    result = result + (form ? form + ' ' : '');\r\n                    if (result.substr(result.length - 3) === ' - ') {\r\n                        result = result.slice(0, -3);\r\n                    }\r\n                    return result;\r\n                });\r\n                medication.medSortDate = ko.computed(function () {\r\n                    var result = '';\r\n                    var startDate = medication.startDate();\r\n                    var orderedDate = medication.orderedDate();\r\n                    var rxDate = medication.rxDate();\r\n                    var prescribedDate = medication.prescribedDate();\r\n                    result = (startDate ? startDate : (orderedDate ? orderedDate : (rxDate ? rxDate : (prescribedDate ? prescribedDate : null))));\r\n                    return result;\r\n                });\r\n                medication.computedPrescribedBy = ko.computed(function () {\r\n                    var result = '';\r\n                    var prescribedBy = medication.prescribedBy();\r\n                    result = prescribedBy ? prescribedBy : '';\r\n                    var prescribedDate = medication.prescribedDate();\r\n                    if (prescribedDate) {\r\n                        var date = moment(prescribedDate);\r\n                        var strDate = date.format('MM/DD/YYYY');\r\n                        result = result ? (result + ' on ' + strDate) : strDate;\r\n                    }\r\n                    return result;\r\n                });\r\n                medication.computedOrderedBy = ko.computed(function () {\r\n                    var result = '';\r\n                    var orderedBy = medication.orderedBy();\r\n                    result = orderedBy ? orderedBy : '';\r\n                    var orderedDate = medication.orderedDate();\r\n                    if (orderedDate) {\r\n                        var date = moment(orderedDate);\r\n                        var strDate = date.format('MM/DD/YYYY');\r\n                        result = result ? (result + ' on ' + strDate) : strDate;\r\n                    }\r\n                    return result;\r\n                });\r\n                medication.computedRxInfo = ko.computed(function () {\r\n                    var result = '';\r\n                    var type = medication.type();\r\n                    result = type ? type.name() : 'Unknown';\r\n                    var rxNumber = medication.rxNumber();\r\n                    result = rxNumber ? (result + ', Rx # ' + rxNumber) : result;\r\n                    var rxDate = medication.rxDate();\r\n                    if (rxDate) {\r\n                        var date = moment(rxDate);\r\n                        var strDate = date.format('MM/DD/YYYY');\r\n                        result = result ? (result + ' on ' + strDate) : result;\r\n                    }\r\n                    return result;\r\n                });\r\n                medication.computedDuration = ko.computed(function () {\r\n                    var result = '';\r\n                    var name = '' + (medication.durationUnit() ? medication.durationUnit().name() : '');\r\n                    var duration = medication.duration() ? medication.duration() + ' ' : '';\r\n                    result = duration + name;\r\n                    return result;\r\n                });\r\n                medication.setStatus = function(statusId, doneBannerMessage){\r\n                    checkDataContext();\r\n                    medication.statusId(statusId);\r\n                    datacontext.saveMedication(medication).then(saveCompleted);\r\n\r\n                    function saveCompleted() {\r\n                        medication.isNew(false);\r\n                        medication.entityAspect.acceptChanges();\r\n                        datacontext.createAlert('warning', doneBannerMessage);\r\n                    }\r\n                }\r\n                medication.inactivate = function () {\r\n                    medication.setStatus(2, 'Medication has been deactivated!');\r\n                }\r\n                medication.activatePatientMedication = function(){\r\n                    medication.setStatus(1, 'Medication has been activated!');\r\n                }\r\n                medication.deletePatientMedication = function(){\r\n                    var message = 'You are about to delete: ' + medication.name() +' from this individual.  Press OK to continue, or cancel to return without deleting.';\r\n                    var result = confirm(message);\r\n                    if (result === true) {\r\n                        checkDataContext();\r\n                        datacontext.deletePatientMedication(medication).then(deleted);\r\n                        function deleted () {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n                medication.startDateErrors = ko.observableArray([]);\r\n                medication.endDateErrors = ko.observableArray([]);\r\n                medication.prescribedDateErrors = ko.observableArray([]);\r\n                medication.orderedDateErrors = ko.observableArray([]);\r\n                medication.rxDateErrors = ko.observableArray([]);\r\n                medication.validationErrors = ko.observableArray([]);\r\n                medication.isValid = ko.computed( function() {\r\n                    var hasErrors = false;\r\n                    var medicationErrors = [];\r\n                    var startDate = medication.startDate();\r\n                    var endDate = medication.endDate();\r\n                    var startDateErrors = medication.startDateErrors();\r\n                    var endDateErrors = medication.endDateErrors();\r\n                    if( startDateErrors.length > 0 ){\r\n                        ko.utils.arrayForEach( startDateErrors, function(error){\r\n                            medicationErrors.push({ PropName: 'startDate', Message: medication.name() + ' Start Date ' + error.Message});\r\n                            hasErrors = true;\r\n                        });\r\n                    }\r\n                    if( endDate ){\r\n                        if( endDateErrors.length > 0 ){\r\n                            ko.utils.arrayForEach( endDateErrors, function(error){\r\n                                medicationErrors.push({ PropName: 'endDate', Message: medication.name() + ' End Date ' + error.Message});\r\n                                hasErrors = true;\r\n                            });\r\n                        }\r\n                        if( startDate && !hasErrors ){\r\n                            if( moment(startDate).isAfter( moment( endDate ) ) ){\r\n                                medicationErrors.push({ PropName: 'endDate', Message: medication.name() + ' End Date must be on or after: ' + moment( startDate ).format(\"MM/DD/YYYY\") });\r\n                                medicationErrors.push({ PropName: 'startDate', Message: medication.name() + ' Start Date must be on or before: ' + moment( endDate ).format(\"MM/DD/YYYY\") });\r\n                                hasErrors = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    medication.validationErrors(medicationErrors);\r\n                    return medication.canSave() && !hasErrors;\r\n                });\r\n\r\n                medication.needToSave = function(){\r\n                    var result = (medication.isNew() && medication.name() && medication.type() && medication.category() && medication.canSave());\r\n                    result = result || ( medication.isEditing() && medication.entityAspect.entityState.isModified() );\r\n                    return result;\r\n                }\r\n                medication.validationErrorsArray = ko.computed(function () {\r\n                    var thisArray = [];\r\n                    ko.utils.arrayForEach(medication.validationErrors(), function (error) {\r\n                        thisArray.push(error.PropName);\r\n                    });\r\n                    return thisArray;\r\n                });\r\n\r\n            }\r\n\r\n            metadataStore.addEntityType({\r\n                shortName: \"PatientMedicationFrequency\",\r\n                namespace: \"Nightingale\",\r\n                dataProperties: {\r\n                    id: { dataType: \"String\", isPartOfKey: true },\r\n                    name: { dataType: \"String\" },\r\n                    patientId: { dataType: \"String\", isNullable: true },\r\n                    sortOrder:  { dataType: \"Int64\" }\r\n                }\r\n            });\r\n\r\n            metadataStore.registerEntityTypeCtor(\r\n                'PatientMedicationFrequency', null, medFrequencyInitializer);\r\n\r\n            function medFrequencyInitializer(frequency) {\r\n                if(frequency.patientId === undefined){\r\n                    frequency.patientId = ko.observable(null);\r\n                }\r\n                if(frequency.sortOrder === undefined){\r\n                    frequency.sortOrder = ko.observable(0);\r\n                }\r\n            }\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n    });\n","// Register all of the user related models in the entity manager (initialize function) and provide other non-entity models\r\ndefine('models/notes',['services/session', 'services/dateHelper'],\r\n\tfunction (session, dateHelper) {\r\n\r\n\t\tvar datacontext;\r\n\t\tvar systemCareManager;\r\n\t\tvar userCareManagerName;\r\n\t\tvar DT = breeze.DataType;\r\n\r\n\t\t// Expose the model module to the requiring modules\r\n\t\tvar noteModels = {\r\n\t\t\t\tinitialize: initialize\r\n\t\t};\r\n\t\treturn noteModels;\r\n\r\n\t\t// Initialize the entity models in the entity manager\r\n\t\tfunction initialize(metadataStore) {\r\n\r\n\t\t\t\t// Note information\r\n\t\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\t\tshortName: \"Note\",\r\n\t\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\t\tdataProperties: {\r\n\t\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\t\tpatientId: { dataType: \"String\" },\r\n\t\t\t\t\t\ttext: { dataType: \"String\" },\r\n\t\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\tcreatedById: { dataType: \"String\" },\r\n\t\t\t\t\t\tupdatedById: { dataType: \"String\" },\r\n\t\t\t\t\t\ttypeId: { dataType: \"String\" },\r\n\t\t\t\t\t\tmethodId: { dataType: \"String\" },\r\n\t\t\t\t\t\toutcomeId: { dataType: \"String\" },\r\n\t\t\t\t\t\twhoId: { dataType: \"String\" },\r\n\t\t\t\t\t\tsourceId: { dataType: \"String\" },\r\n\t\t\t\t\t\tduration: { dataType: \"Int64\" },\r\n\t\t\t\t\t\tcontactedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\tvalidatedIdentity: { dataType: \"Boolean\" },\r\n\t\t\t\t\t\tprogramIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false },\r\n\t\t\t\t\t\t//utilization props:\r\n\t\t\t\t\t\tadmitDate: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\tdischargeDate: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\tdataSource: { dataType: \"String\" },\r\n\t\t\t\t\t\tadmitted: { dataType: \"Boolean\" },\r\n\t\t\t\t\t\tvisitTypeId: { dataType: \"String\" },\r\n\t\t\t\t\t\totherType: { dataType: \"String\" },\r\n\t\t\t\t\t\tutilizationSourceId: { dataType: \"String\" },\t//<-map from sourceId\r\n\t\t\t\t\t\tdispositionId: { dataType: \"String\" },\r\n\t\t\t\t\t\totherDisposition: { dataType: \"String\" },\r\n\t\t\t\t\t\tlocationId: { dataType: \"String\" },\t//utilizationLocationId\r\n\t\t\t\t\t\totherLocation: { dataType: \"String\" }\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\t\tpatient: {\r\n\t\t\t\t\t\t\tentityTypeName: \"Patient\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Patient_Notes\", foreignKeyNames: [\"patientId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttype: {\r\n\t\t\t\t\t\t\tentityTypeName: \"NoteType\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_Type\", foreignKeyNames: [\"typeId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tmethod: {\r\n\t\t\t\t\t\t\tentityTypeName: \"NoteMethod\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_Method\", foreignKeyNames: [\"methodId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\toutcome: {\r\n\t\t\t\t\t\t\tentityTypeName: \"NoteOutcome\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_Outcome\", foreignKeyNames: [\"outcomeId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\twho: {\r\n\t\t\t\t\t\t\tentityTypeName: \"NoteWho\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_Who\", foreignKeyNames: [\"whoId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsource: {\r\n\t\t\t\t\t\t\tentityTypeName: \"NoteSource\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_Source\", foreignKeyNames: [\"sourceId\"]\r\n\t\t\t\t\t\t},\t\t\t\t\t\t\r\n\t\t\t\t\t\t//utilization lookups:\r\n\t\t\t\t\t\tvisitType: {\r\n\t\t\t\t\t\t\tentityTypeName: \"VisitType\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_VisitType\", foreignKeyNames: [\"visitTypeId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tutilizationSource: {\r\n\t\t\t\t\t\t\tentityTypeName: \"UtilizationSource\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_UtilizationSource\", foreignKeyNames: [\"utilizationSourceId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdisposition: {\r\n\t\t\t\t\t\t\tentityTypeName: \"Disposition\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_Disposition\", foreignKeyNames: [\"dispositionId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tutilizationLocation: {\r\n\t\t\t\t\t\t\tentityTypeName: \"UtilizationLocation\", isScalar: true,\r\n\t\t\t\t\t\t\tassociationName: \"Note_UtilizationLocation\", foreignKeyNames: [\"locationId\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// ToDo information\r\n\t\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\t\t\tshortName: \"ToDo\",\r\n\t\t\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\t\t\tdataProperties: {\r\n\t\t\t\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\t\t\t\tcreatedById: { dataType: \"String\" },\r\n\t\t\t\t\t\t\t\tassignedToId: { dataType: \"String\" },\r\n\t\t\t\t\t\t\t\tstatusId: { dataType: \"Int64\" },\r\n\t\t\t\t\t\t\t\tcategoryId: { dataType: \"String\" },\r\n\t\t\t\t\t\t\t\tpriorityId: { dataType: \"Int64\" },\r\n\t\t\t\t\t\t\t\tdueDate: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\t\t\tstartTime: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\t\t\tduration: { dataType: \"Int64\" },\r\n\t\t\t\t\t\t\t\ttitle: { dataType: \"String\" },\r\n\t\t\t\t\t\t\t\tdescription: { dataType: \"String\" },\r\n\t\t\t\t\t\t\t\tcreatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\t\t\tupdatedOn: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\t\t\tclosedDate: { dataType: \"DateTime\" },\r\n\t\t\t\t\t\t\t\tpatientId: { dataType: \"String\" },\r\n\t\t\t\t\t\t\t\tdeleteFlag: { dataType: \"Boolean\" },\r\n\t\t\t\t\t\t\t\tprogramIds: { complexTypeName: \"Identifier:#Nightingale\", isScalar: false }\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\t\t\t\tcreatedBy: {\r\n\t\t\t\t\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\t\t\t\t\tassociationName: \"Todo_CreatedBy\", foreignKeyNames: [\"createdById\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tassignedTo: {\r\n\t\t\t\t\t\t\t\t\t\tentityTypeName: \"CareManager\", isScalar: true,\r\n\t\t\t\t\t\t\t\t\t\tassociationName: \"Todo_AssignedTo\", foreignKeyNames: [\"assignedToId\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tcategory: {\r\n\t\t\t\t\t\t\t\t\t\tentityTypeName: \"ToDoCategory\", isScalar: true,\r\n\t\t\t\t\t\t\t\t\t\tassociationName: \"Todo_TodoCategory\", foreignKeyNames: [\"categoryId\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tpriority: {\r\n\t\t\t\t\t\t\t\t\t\tentityTypeName: \"Priority\", isScalar: true,\r\n\t\t\t\t\t\t\t\t\t\tassociationName: \"Todo_Priority\", foreignKeyNames: [\"priorityId\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tstatus: {\r\n\t\t\t\t\t\t\t\t\t\tentityTypeName: \"GoalTaskStatus\", isScalar: true,\r\n\t\t\t\t\t\t\t\t\t\tassociationName: \"Todo_Status\", foreignKeyNames: [\"statusId\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tpatient: {\r\n\t\t\t\t\t\t\t\t\tentityTypeName: \"Patient\", isScalar: true,\r\n\t\t\t\t\t\t\t\t\tassociationName: \"Patient_Todos\", foreignKeyNames: [\"patientId\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tpatientDetails: {\r\n\t\t\t\t\t\t\t\t\tentityTypeName: \"ToDoPatient\", isScalar: true,\r\n\t\t\t\t\t\t\t\t\tassociationName: \"ToDoPatient_Todos\", foreignKeyNames: [\"patientId\"]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Patient DTO\r\n\t\t\tmetadataStore.addEntityType({\r\n\t\t\t\t\tshortName: \"ToDoPatient\",\r\n\t\t\t\t\tnamespace: \"Nightingale\",\r\n\t\t\t\t\tdataProperties: {\r\n\t\t\t\t\t\t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t\t\t\t\t\tfirstName: { dataType: \"String\" },\r\n\t\t\t\t\t\t\tlastName: { dataType: \"String\" },\r\n\t\t\t\t\t\t\tmiddleName: { dataType: \"String\" },\r\n\t\t\t\t\t\t\tsuffix: { dataType: \"String\" },\r\n\t\t\t\t\t\t\tpreferredName: { dataType: \"String\" }\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'Note', null, noteInitializer);\r\n\t\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'ToDo', null, todoInitializer);\r\n\t\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'ToDoPatient', null, toDoPatientInitializer);\r\n\r\n\t\t\t\tfunction toDoPatientInitializer (patient) {\r\n\t\t\t\t\t\t\t\tpatient.fullFirstName = ko.computed(function () {\r\n\t\t\t\t\t\t\t\t\t\t// Get the 3 possible values to be included in the full first name\r\n\t\t\t\t\t\t\t\t\t\tvar fn = patient.firstName();\r\n\t\t\t\t\t\t\t\t\t\tvar pn = patient.preferredName();\r\n\t\t\t\t\t\t\t\t\t\tvar mi = patient.middleName() ? patient.middleName().substr(0, 1) + '.' : '';\r\n\t\t\t\t\t\t\t\t\t\t// If there is a preferred name, return that\r\n\t\t\t\t\t\t\t\t\t\t//      if not then check for a middle name that is 2 chars in length and return first name + middle initial\r\n\t\t\t\t\t\t\t\t\t\t//           if not then return first name only\r\n\t\t\t\t\t\t\t\t\t\tvar fullfn = pn ? pn : (mi.length === 2 ? fn + ' ' + mi : fn);\r\n\t\t\t\t\t\t\t\t\t\treturn fullfn;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tpatient.fullLastName = ko.computed(function () {\r\n\t\t\t\t\t\t\t\t\t\t// Get the values we will need\r\n\t\t\t\t\t\t\t\t\t\tvar ln = patient.lastName();\r\n\t\t\t\t\t\t\t\t\t\tvar sfx = patient.suffix();\r\n\t\t\t\t\t\t\t\t\t\t// Get the full last name.  If there is a suffix, add it to the last name\r\n\t\t\t\t\t\t\t\t\t\t//      If there is not a suffix, use last name only\r\n\t\t\t\t\t\t\t\t\t\tvar fullln = sfx ? ln + ' ' + sfx : ln;\r\n\t\t\t\t\t\t\t\t\t\treturn fullln;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tpatient.fullName = ko.computed(function () {\r\n\t\t\t\t\t\t\t\t\t\t// Get the patients full first name\r\n\t\t\t\t\t\t\t\t\t\tvar fn = patient.fullFirstName();\r\n\t\t\t\t\t\t\t\t\t\t// Get the patients full last name\r\n\t\t\t\t\t\t\t\t\t\tvar ln = patient.fullLastName();\r\n\t\t\t\t\t\t\t\t\t\t// If there is no first name, just show the last name\r\n\t\t\t\t\t\t\t\t\t\treturn fn ? fn + ' ' + ln : ln;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction noteInitializer(note) {\r\n\t\t\t\t\tnote.isNew = ko.observable(false);\r\n\t\t\t\t\tnote.programString = ko.computed(function () {\r\n\t\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\t\tvar thisString = '';\r\n\t\t\t\t\t\tvar theseProgramIds = note.programIds();\r\n\t\t\t\t\t\tif (note.patient() && note.patient().programs()) {\r\n\t\t\t\t\t\t\tvar thesePrograms = note.patient().programs();\r\n\t\t\t\t\t\t\tko.utils.arrayForEach(theseProgramIds, function (program) {\r\n\t\t\t\t\t\t\t\tvar thisProgram = ko.utils.arrayFirst(thesePrograms, function (programEnum) {\r\n\t\t\t\t\t\t\t\t\treturn programEnum.id() === program.id();\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif (thisProgram) {\r\n\t\t\t\t\t\t\t\t\tthisString += thisProgram.name() + ', ';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// If the string is longer than zero,\r\n\t\t\t\t\t\t\tif (thisString.length > 0) {\r\n\t\t\t\t\t\t\t\t// Remove the trailing comma and space\r\n\t\t\t\t\t\t\t\tthisString = thisString.substr(0, thisString.length - 2);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (thisString.length === 0) {\r\n\t\t\t\t\t\t\tthisString = 'None';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn thisString;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnote.createdBy = ko.computed(function () {\r\n\t\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\t\tvar thisMatchedCareManager = ko.utils.arrayFirst(datacontext.enums.careManagers(), function (caremanager) {\r\n\t\t\t\t\t\t\treturn caremanager.id() === note.createdById();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn thisMatchedCareManager;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar systemCareManager = getSystemCareManager();\r\n\t\t\t\t\t//if created by system user make it non editable:\r\n\t\t\t\t\tnote.isEditable = ko.observable(false);\r\n\t\t\t\t\tif( note.createdById() === systemCareManager.id() ){\r\n\t\t\t\t\t\tnote.isEditable(false);\r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\tnote.isEditable(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnote.updatedBy = ko.computed(function () {\r\n\t\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\t\tvar thisMatchedCareManager = ko.utils.arrayFirst(datacontext.enums.careManagers(), function (caremanager) {\r\n\t\t\t\t\t\t\t\treturn caremanager.id() === note.updatedById();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn thisMatchedCareManager;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnote.localDate = ko.computed(function () {\r\n\t\t\t\t\t\tvar thisDate = moment(note.createdOn()).format('MM/DD/YYYY');\r\n\t\t\t\t\t\treturn thisDate;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnote.displayText = ko.computed(function () {\r\n\t\t\t\t\t\tvar thisText = '';\r\n\t\t\t\t\t\tif (note.text() && /\\S/.test(note.text())) {\r\n\t\t\t\t\t\t\tthisText = note.text();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthisText = '-';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn thisText;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tnote.contactedOnErrors = ko.observableArray([]);\t//datetimepicker validation errors\r\n\t\t\t\t\tnote.admitDateErrors = ko.observableArray([]);\r\n\t\t\t\t\tnote.dischargeDateErrors = ko.observableArray([]);\r\n\t\t\t\t\tnote.validationErrors = ko.observableArray([]);\r\n\t\t\t\t\tnote.isDirty = ko.observable(false);\r\n\t\t\t\t\tnote.clearDirty = function () {\r\n\t\t\t\t\t\tnote.isDirty(false);\t\t\t\t\t\t\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnote.watchDirty = function () {\r\n\t\t\t\t\t\tvar propToken = note.entityAspect.propertyChanged.subscribe(function (newValue) {\r\n\t\t\t\t\t\t\tnote.isDirty(true);\r\n\t\t\t\t\t\t\tpropToken.dispose();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//specifically subscribe to the programIds as propertyChanged wont be notified:\r\n\t\t\t\t\t\tvar programsToken = note.programIds.subscribe(function (newValue) {\r\n\t\t\t\t\t\t\tnote.isDirty(true);\r\n\t\t\t\t\t\t\tprogramsToken.dispose();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnote.checkAppend = function () {\r\n\t\t\t\t\t\t// Append the new content\r\n\t\t\t\t\t\tvar append = '\\n' + moment().format('MM-DD-YYYY h:mm A') + ' ';\r\n\t\t\t\t\t\tappend += (' ' +  getUsercareManagerName());\r\n\t\t\t\t\t\tappend += (' - ' + note.newContent());\r\n\t\t\t\t\t\tnote.text(note.text() ? note.text() + append : append);\r\n\t\t\t\t\t\tnote.newContent('');\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// New content when editing a note\r\n\t\t\t\t\tnote.newContent = ko.observable();\r\n\t\t\t\t\tnote.isValid = ko.computed( function(){\r\n\t\t\t\t\t\tvar type = note.type();\r\n\t\t\t\t\t\tvar typeName = type ? type.name().toLowerCase() : null;\r\n\t\t\t\t\t\tvar hasErrors = false;\r\n\t\t\t\t\t\tvar noteErrors = [];\r\n\t\t\t\t\t\tvar contactedOn = note.contactedOn();\r\n\t\t\t\t\t\tvar contactedOnErrors = note.contactedOnErrors();\r\n\t\t\t\t\t\tvar text = note.text();\r\n\t\t\t\t\t\tvar duration = note.duration();\r\n\t\t\t\t\t\t//utilization:\r\n\t\t\t\t\t\tvar admitDateErrors = note.admitDateErrors();\r\n\t\t\t\t\t\tvar admitDate = note.admitDate();\r\n\t\t\t\t\t\tvar dischargeDateErrors = note.dischargeDateErrors();\r\n\t\t\t\t\t\tvar dischargeDate = note.dischargeDate();\r\n\t\t\t\t\t\tvar visitType = note.visitType();\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar otherType = note.otherType();\r\n\t\t\t\t\t\tvar disposition = note.disposition();\r\n\t\t\t\t\t\tvar otherDisposition = note.otherDisposition();\r\n\t\t\t\t\t\tvar utilizationLocation = note.utilizationLocation();\r\n\t\t\t\t\t\tvar otherLocation = note.otherLocation();\r\n\t\t\t\t\t\tvar hasChanges = note.isDirty();\r\n\r\n\t\t\t\t\t\tif( duration && duration > 1440 ){\r\n\t\t\t\t\t\t\tsetTimeout( function(){ note.duration(1440); }, 100 ); //auto-correct range violation\r\n\t\t\t\t\t\t\t//noteErrors.push({ PropName: 'duration', Message: 'Duration must be less than or equal to 1440 minutes (24 hours)' });\r\n\t\t\t\t\t\t\t//hasErrors = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( duration !== null && duration < 1 ){\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tsetTimeout( function(){ note.duration(null); }, 100 ); //auto-correct range violation\r\n\t\t\t\t\t\t\t// noteErrors.push({ PropName: 'duration', Message: 'Duration must be greater than 0' });\r\n\t\t\t\t\t\t\t// hasErrors = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tswitch( typeName ){\r\n\t\t\t\t\t\t\tcase 'touchpoint':\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif( !text ){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t\t\tif( hasChanges ){\r\n\t\t\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'text', Message: 'Content is required' });\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif( contactedOn ){\r\n\t\t\t\t\t\t\t\t\tif( contactedOnErrors.length > 0 ){\r\n\t\t\t\t\t\t\t\t\t\t//datetimepicker validation errors:\r\n\t\t\t\t\t\t\t\t\t\tko.utils.arrayForEach( contactedOnErrors, function(error){\r\n\t\t\t\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'contactedOn', Message: 'Date/Time of Contact ' + error.Message});\r\n\t\t\t\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase 'utilization':\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif( admitDateErrors.length > 0 ){\r\n\t\t\t\t\t\t\t\t\t//datetimepicker validation errors\r\n\t\t\t\t\t\t\t\t\tko.utils.arrayForEach( admitDateErrors, function(error){\r\n\t\t\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'admitDate', Message: 'Visit/Admit Date ' + error.Message});\r\n\t\t\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif( dischargeDateErrors.length > 0 ){\r\n\t\t\t\t\t\t\t\t\t//datetimepicker validation errors\r\n\t\t\t\t\t\t\t\t\tko.utils.arrayForEach( dischargeDateErrors, function(error){\r\n\t\t\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'dischargeDate', Message: 'Discharge Date ' + error.Message});\r\n\t\t\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif( admitDateErrors.length == 0 && dischargeDateErrors.length == 0 && admitDate && dischargeDate ){\r\n\t\t\t\t\t\t\t\t\t//admitDate - dischargeDate range: both dates exist and valid:\r\n\t\t\t\t\t\t\t\t\tif( moment(admitDate).isAfter( moment( dischargeDate ) ) ){\r\n\t\t\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'admitDate', Message: ' Discharge Date must be on or after: ' + moment( admitDate ).format(\"MM/DD/YYYY\") });\r\n\t\t\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'dischargeDate', Message: ' Visit/Admit Date must be on or before: ' + moment( dischargeDate ).format(\"MM/DD/YYYY\") });\r\n\t\t\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif( !visitType ){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t\t\tif( hasChanges ){\r\n\t\t\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'visitType', Message: 'Visit Type is required' });\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// else if( visitType.name().toLowerCase() === 'other' && !otherType ){\r\n\t\t\t\t\t\t\t\t\t// noteErrors.push({ PropName: 'otherType', Message: 'Other Visit Type is required' });\r\n\t\t\t\t\t\t\t\t\t// hasErrors = true;\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t// if( utilizationLocation && utilizationLocation.name().toLowerCase() === 'other' && !otherLocation ){\r\n\t\t\t\t\t\t\t\t\t// noteErrors.push({ PropName: 'otherLocation', Message: 'Other Location is required' });\r\n\t\t\t\t\t\t\t\t\t// hasErrors = true;\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t// if( disposition && disposition.name().toLowerCase() === 'other' && !otherDisposition ){\r\n\t\t\t\t\t\t\t\t\t// noteErrors.push({ PropName: 'otherDisposition', Message: 'Other Disposition is required' });\r\n\t\t\t\t\t\t\t\t\t// hasErrors = true;\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase null:\r\n\t\t\t\t\t\t\tcase undefined:\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'Type', Message: 'Type is required '});\r\n\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif( !text ){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t\t\tif( hasChanges ){\r\n\t\t\t\t\t\t\t\t\t\tnoteErrors.push({ PropName: 'text', Message: 'Content is required' });\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnote.validationErrors(noteErrors);\r\n\t\t\t\t\t\treturn !hasErrors;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//utilization:\r\n\t\t\t\t\tnote.showOtherVisitType\t= ko.computed( function(){\r\n\t\t\t\t\t\tvar visitType = note.visitType();\r\n\t\t\t\t\t\tvar isOther = (!!visitType && visitType.name().toLowerCase() === 'other');\r\n\t\t\t\t\t\tif( !isOther ){\r\n\t\t\t\t\t\t\tnote.otherType(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn isOther;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//utilization:\r\n\t\t\t\t\tnote.showOtherLocation\t= ko.computed( function(){\r\n\t\t\t\t\t\tvar utilizationLocation = note.utilizationLocation();\r\n\t\t\t\t\t\tvar isOther = (!!utilizationLocation && utilizationLocation.name().toLowerCase() === 'other');\r\n\t\t\t\t\t\tif( !isOther ){\r\n\t\t\t\t\t\t\tnote.otherLocation(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn isOther;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//utilization:\r\n\t\t\t\t\tnote.showOtherDisposition = ko.computed( function(){\r\n\t\t\t\t\t\tvar disposition = note.disposition();\r\n\t\t\t\t\t\tvar isOther = (!!disposition && disposition.name().toLowerCase() === 'other');\r\n\t\t\t\t\t\tif( !isOther ){\r\n\t\t\t\t\t\t\tnote.otherDisposition(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn isOther;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t*\tfor utilization note type: calculate the days from admitDate to discharge ( or until today )\r\n\t\t\t\t\t*\tnote: same day (admission = discharge) should calculate to 0\r\n\t\t\t\t\t*\t@method getUtilizationLength\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tnote.getUtilizationLength = function(){\r\n\t\t\t\t\t\tvar admitted = note.admitted();\r\n\t\t\t\t\t\tvar admitDate = note.admitDate();\r\n\t\t\t\t\t\tvar dischargeDate = note.dischargeDate();\r\n\t\t\t\t\t\tvar admitDateErrors = note.admitDateErrors();\r\n\t\t\t\t\t\tvar dischargeDateErrors = note.dischargeDateErrors();\r\n\t\t\t\t\t\tvar result = null;\r\n\t\t\t\t\t\tif( moment(admitDate).isValid() && admitDateErrors.length === 0){\r\n\t\t\t\t\t\t\tif(!dischargeDate && admitted){\r\n\t\t\t\t\t\t\t\t//days from Visit/Admit Date until today\r\n\t\t\t\t\t\t\t\tresult = moment().diff( admitDate, 'days' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(dischargeDate && dischargeDateErrors.length === 0){\r\n\t\t\t\t\t\t\t\t//days from Visit/Admit Date until discharge Date\r\n\t\t\t\t\t\t\t\tresult = moment(dischargeDate).diff( admitDate, 'days' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnote.utilizationLengthStr = ko.computed(function(){\r\n\t\t\t\t\t\tvar utilizationLength = note.getUtilizationLength();\r\n\t\t\t\t\t\tvar result = '';\r\n\t\t\t\t\t\tif( utilizationLength === 1 ){\r\n\t\t\t\t\t\t\tresult = String(utilizationLength) + ' day';\r\n\t\t\t\t\t\t} else if( utilizationLength === 0 || utilizationLength > 1 ){\r\n\t\t\t\t\t\t\tresult = String(utilizationLength) + ' days';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// Descriptor in view for note util length\r\n\t\t\t\t\tnote.utilizationLengthDesc = ko.computed(function(){\r\n\t\t\t\t\t\tvar result = '';\r\n\t\t\t\t\t\tif (note.admitDate() && note.admitted() && !note.dischargeDate()) {\r\n\t\t\t\t\t\t\tresult = 'Current Stay';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult = 'Total Stay';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnote.validationErrorsArray = ko.computed( function(){\r\n\t\t\t\t\t\tvar thisArray = [];\r\n\t\t\t\t\t\tko.utils.arrayForEach( note.validationErrors(), function(error){\r\n\t\t\t\t\t\t\tthisArray.push( error.PropName );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn thisArray;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t*\tcomputed. for utilization to allow forcing the datetimepicker control to set the admit/visit date as invalid.\r\n\t\t\t\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t\t\t\t*\t@method note.setInvalidStartDate\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tnote.setInvalidAdmitDate = ko.computed( function(){\r\n\t\t\t\t\t\tvar validationErrorsArray = note.validationErrorsArray();\r\n\t\t\t\t\t\treturn (validationErrorsArray && validationErrorsArray.indexOf('admitDate') !== -1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t*\tcomputed. for utilization to allow forcing the datetimepicker control to set the discharge date as invalid.\r\n\t\t\t\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t\t\t\t*\t@method note.setInvalidDischargeDate\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tnote.setInvalidDischargeDate = ko.computed( function(){\r\n\t\t\t\t\t\tvar validationErrorsArray = note.validationErrorsArray();\r\n\t\t\t\t\t\treturn (validationErrorsArray && validationErrorsArray.indexOf('dischargeDate') !== -1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction todoInitializer (todo) {\r\n\t\t\t\t\ttodo.isNew = ko.observable(false);\r\n\t\t\t\t\ttodo.programString = ko.computed(function () {\r\n\t\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\t\tvar thisString = '';\r\n\t\t\t\t\t\tvar theseProgramIds = todo.programIds();\r\n\t\t\t\t\t\tif (todo.patientId() && todo.patient() && todo.patient().programs()) {\r\n\t\t\t\t\t\t\tvar thesePrograms = todo.patient().programs();\r\n\t\t\t\t\t\t\tko.utils.arrayForEach(theseProgramIds, function (program) {\r\n\t\t\t\t\t\t\t\tvar thisProgram = ko.utils.arrayFirst(thesePrograms, function (programEnum) {\r\n\t\t\t\t\t\t\t\t\t\treturn programEnum.id() === program.id();\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif (thisProgram) {\r\n\t\t\t\t\t\t\t\t\t\tthisString += thisProgram.name() + ', ';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// If the string is longer than zero,\r\n\t\t\t\t\t\t\tif (thisString.length > 0) {\r\n\t\t\t\t\t\t\t\t// Remove the trailing comma and space\r\n\t\t\t\t\t\t\t\tthisString = thisString.substr(0, thisString.length - 2);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (thisString.length === 0) {\r\n\t\t\t\t\t\t\t\tthisString = 'None';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn thisString;\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttodo.patientName = ko.computed( function(){\r\n\t\t\t\t\t\tvar patientId = todo.patientId();\r\n\t\t\t\t\t\tvar patient = todo.patient();\r\n\t\t\t\t\t\tif( patientId && patient ){\r\n\t\t\t\t\t\t\treturn patient.fullName();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttodo.isDirty = ko.observable(false);\r\n\t\t\t\t\ttodo.clearDirty = function () {\r\n\t\t\t\t\t\ttodo.isDirty(false);\t\t\t\t\t\t\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttodo.watchDirty = function () {\r\n\t\t\t\t\t\tvar propToken = todo.entityAspect.propertyChanged.subscribe(function (newValue) {\r\n\t\t\t\t\t\t\ttodo.isDirty(true);\r\n\t\t\t\t\t\t\tpropToken.dispose();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//specifically subscribe to the programIds as propertyChanged wont be notified:\r\n\t\t\t\t\t\tvar programsToken = todo.programIds.subscribe(function (newValue) {\r\n\t\t\t\t\t\t\ttodo.isDirty(true);\r\n\t\t\t\t\t\t\tprogramsToken.dispose();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\ttodo.dueDateErrors = ko.observableArray([]);\t//datetimepicker validation errors\r\n\t\t\t\t\ttodo.startTimeErrors = ko.observableArray([]);\t//datetimepicker validation errors\r\n\t\t\t\t\ttodo.validationErrors = ko.observableArray([]);\r\n\t\t\t\t\ttodo.validationErrorsArray = ko.computed( function(){\r\n\t\t\t\t\t\tvar thisArray = [];\r\n\t\t\t\t\t\tko.utils.arrayForEach( todo.validationErrors(), function(error){\r\n\t\t\t\t\t\t\tthisArray.push( error.PropName );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn thisArray;\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttodo.showInvalidStartTime = ko.computed( function(){\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar result = false;\r\n\t\t\t\t\t\tvar validationErrorsArray = todo.validationErrorsArray();\r\n\t\t\t\t\t\tresult = ( validationErrorsArray.indexOf('startTime') !== -1 );\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttodo.showInvalidDueDate = ko.computed( function(){\r\n\t\t\t\t\t\tvar result = false;\r\n\t\t\t\t\t\tvar validationErrorsArray = todo.validationErrorsArray();\r\n\t\t\t\t\t\tresult = ( validationErrorsArray.indexOf('dueDate') !== -1 );\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttodo.isValid = ko.computed( function(){\r\n\t\t\t\t\t\tvar hasErrors = false;\r\n\t\t\t\t\t\tvar todoErrors = [];\r\n\t\t\t\t\t\tvar startTime = todo.startTime();\r\n\t\t\t\t\t\tvar duration = todo.duration();\r\n\t\t\t\t\t\tvar dueDate = todo.dueDate();\r\n\t\t\t\t\t\tvar dueDateErrors = todo.dueDateErrors();\r\n\t\t\t\t\t\tvar hasChanges = todo.isDirty();\r\n\t\t\t\t\t\tvar title = todo.title();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( duration && duration > 1440 ){\r\n\t\t\t\t\t\t\tsetTimeout( function(){ todo.duration(1440); }, 100 ); //auto-correct range violation\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( duration !== null && duration < 1 ){\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tsetTimeout( function(){ todo.duration(null); }, 100 ); //auto-correct range violation\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( dueDateErrors.length > 0 ){\r\n\t\t\t\t\t\t\t//datetimepicker validation errors\r\n\t\t\t\t\t\t\tko.utils.arrayForEach( dueDateErrors, function(error){\r\n\t\t\t\t\t\t\t\ttodoErrors.push({ PropName: 'dueDate', Message: 'Due Date ' + error.Message});\r\n\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( (startTime || duration) && !dueDate ){\r\n\t\t\t\t\t\t\thasErrors = true;\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttodoErrors.push({ PropName: 'dueDate', Message: 'Due Date is required if Start Time / Duration are provided'});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( duration && !startTime ){\r\n\t\t\t\t\t\t\thasErrors = true;\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttodoErrors.push({ PropName: 'startTime', Message: 'Start Time is required if Duration is provided'});\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( startTime && !duration ){\r\n\t\t\t\t\t\t\thasErrors = true;\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttodoErrors.push({ PropName: 'duration', Message: 'Duration is required if Start Time is provided'});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( !title ){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\tif( hasChanges ){\r\n\t\t\t\t\t\t\t\ttodoErrors.push({ PropName: 'title', Message: 'Title is required' });\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttodo.validationErrors(todoErrors);\r\n\t\t\t\t\t\treturn !hasErrors;\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttodo.getAsNewEvent = function(){\r\n\t\t\t\t\t\tvar event = {\t//fullcalendar event - plain object\r\n\t\t\t\t\t\t\tid: todo.id(),\r\n\t\t\t\t\t\t\ttitle: todo.getEventTitle(),\r\n\t\t\t\t\t\t\t// start: todo.dueDate(),\r\n\t\t\t\t\t\t\t// allDay: true,\r\n\t\t\t\t\t\t\tpatientId: todo.patientId(),\r\n\t\t\t\t\t\t\tpatientName: todo.getEventPatientName(),\r\n\t\t\t\t\t\t\tassignedToName: getUsercareManagerName(),\r\n\t\t\t\t\t\t\tuserId: todo.assignedToId(),\r\n\t\t\t\t\t\t\ttypeId: 2,\r\n\t\t\t\t\t\t\tisNew: true,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( todo.startTime() && todo.duration() && todo.dueDate() ){\r\n\t\t\t\t\t\t\tevent = updateEventTimes( event, todo.startTime(), todo.duration(), todo.dueDate() );\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tevent.start = todo.dueDate();\r\n\t\t\t\t\t\t\tevent.allDay = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttodo.updateExistingEvent = function( existingEvent ){\r\n\t\t\t\t\t\texistingEvent.title(todo.getEventTitle());\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\texistingEvent.patientId(todo.patientId());\r\n\t\t\t\t\t\texistingEvent.patientName(todo.getEventPatientName());\r\n\t\t\t\t\t\texistingEvent.assignedToName( getUsercareManagerName() );\r\n\t\t\t\t\t\texistingEvent.userId(todo.assignedToId());\r\n\t\t\t\t\t\texistingEvent.entityAspect.acceptChanges();\r\n\t\t\t\t\t\tif( todo.startTime() && todo.duration() && todo.dueDate() ){\r\n\t\t\t\t\t\t\texistingEvent = updateEventTimes( existingEvent, todo.startTime(), todo.duration(), todo.dueDate() );\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\texistingEvent.start(todo.dueDate());\r\n\t\t\t\t\t\t\texistingEvent.allDay(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn existingEvent;\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttodo.getEventTitle = function(){\r\n\t\t\t\t\t\treturn (todo.patientDetails() ? todo.patientDetails().fullLastName() + ', ' + todo.patientDetails().fullFirstName() + ' - ' : '') + todo.title();\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttodo.getEventPatientName = function(){\r\n\t\t\t\t\t\treturn todo.patientDetails() ? todo.patientDetails().fullLastName() + ', ' + todo.patientDetails().fullFirstName() : '-';\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttodo.isEvent = function(){\r\n\t\t\t\t\t\t//does this todo need to be represented by a calendar event:\r\n\t\t\t\t\t\t//\t- assigned to current user\r\n\t\t\t\t\t\t// \t- not deleted\r\n\t\t\t\t\t\t//\t- open\r\n\t\t\t\t\t\treturn (todo && todo.assignedToId() && todo.assignedToId() === session.currentUser().userId()\r\n\t\t\t\t\t\t\t&& !todo.deleteFlag() && moment(todo.dueDate()).isValid()\r\n\t\t\t\t\t\t\t&& (todo.statusId() === 1 || todo.statusId() === 3));\r\n\t\t\t\t\t};\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateEventTimes( theEvent, startTime, duration, dueDate ){\r\n\t\t\tif( startTime && duration && dueDate ){\r\n\t\t\t\tvar startDateTime = dueDate;\r\n\t\t\t\tvar endDateTime = null;\r\n\t\t\t\t\r\n\t\t\t\t//calculate the start datetime by merging dueDate and startTime:\r\n\t\t\t\tvar momentStartDate = moment( startDateTime );\r\n\t\t\t\tvar momentStartTime = moment( startTime );\r\n\t\t\t\tvar momentStartDateTime = dateHelper.setTimeValue(momentStartTime.hour(), momentStartTime.minute(), momentStartDate); \r\n\t\t\t\tstartDateTime = momentStartDateTime.toDate();\r\n\t\t\t\t//calculate the end time by adding duration:\r\n\t\t\t\tendDateTime = momentStartDateTime.clone().add( duration, 'minutes' ).toDate();\r\n\r\n\t\t\t\tif( theEvent.isNew ){\r\n\t\t\t\t\t//the event is a simple object. before created the new event props are not yet observables:\r\n\t\t\t\t\ttheEvent.start = startDateTime;\r\n\t\t\t\t\ttheEvent.end = endDateTime;\r\n\t\t\t\t\ttheEvent.allDay = false;\r\n\t\t\t\t} else{\r\n\t\t\t\t\t//the event props are observables:\r\n\t\t\t\t\ttheEvent.start( startDateTime );\r\n\t\t\t\t\ttheEvent.end( endDateTime );\r\n\t\t\t\t\ttheEvent.allDay( false );\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn theEvent;\r\n\t\t}\r\n\t\t\r\n\t\tfunction checkDataContext() {\r\n\t\t\t\tif (!datacontext) {\r\n\t\t\t\t\t\tdatacontext = require('services/datacontext');\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction getSystemCareManager(){\r\n\t\t\tif( ! systemCareManager ){\r\n\t\t\t\tcheckDataContext();\r\n\t\t\t\tsystemCareManager = datacontext.getSystemCareManager();\r\n\t\t\t}\r\n\t\t\treturn systemCareManager;\r\n\t\t}\r\n\t\t\r\n\t\tfunction getUsercareManagerName(){\r\n\t\t\tif( ! userCareManagerName ){\r\n\t\t\t\tcheckDataContext();\r\n\t\t\t\tuserCareManagerName = datacontext.getUsercareManagerName();\r\n\t\t\t}\r\n\t\t\treturn userCareManagerName;\r\n\t\t}\r\n\t}); \n","// Register all of the user related models in the entity manager (initialize function) and provide other non-entity models\r\ndefine('models/observations',['services/session', 'services/validatorfactory', 'services/customvalidators', 'services/dateHelper'],\r\n\tfunction (session, validatorFactory, customValidators, dateHelper) {\r\n\r\n\t\tvar datacontext;\r\n\r\n\t\tvar DT = breeze.DataType;\r\n\r\n\t    // Validation error message to populate entity's collection\r\n\t\tfunction validationError(propName, message) {\r\n\t\t    var self = this;\r\n\t\t    self.PropName = propName;\r\n\t\t    self.Message = message;\r\n\t\t}\r\n\r\n\t\t// Expose the model module to the requiring modules\r\n\t\tvar observationModels = {\r\n\t\t\tinitialize: initialize\r\n\t\t};\r\n\t\treturn observationModels;\r\n\r\n\t\t// Initialize the entity models in the entity manager\r\n\t\tfunction initialize(metadataStore) {\r\n\r\n\t\t    // Patient Observation information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t    \tshortName: \"PatientObservation\",\r\n\t\t    \tnamespace: \"Nightingale\",\r\n\t\t    \tdataProperties: {\r\n\t\t    \t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t    \t\tobservationId: { dataType: \"String\" },\r\n\t\t    \t\tname: { dataType: \"String\" },\r\n\t\t    \t\tstandard: { dataType: \"Boolean\" },\r\n\t\t    \t\ttypeId: { dataType: \"String\" },\r\n\t\t    \t\tstateId: { dataType: \"String\" },\r\n\t\t    \t\tdisplayId: { dataType: \"String\" },\r\n\t\t    \t\tpatientId: { dataType: \"String\" },\r\n\t\t    \t\tunits: { dataType: \"String\" },\r\n\t\t    \t\tstartDate: { dataType: \"DateTime\" },\r\n\t\t    \t\tendDate: { dataType: \"DateTime\" },\r\n\t\t    \t\tgroupId: { dataType: \"String\" },\r\n\t\t    \t\tdeleteFlag: { dataType: \"Boolean\" },\r\n\t\t    \t\tsource: { dataType: \"String\" },\r\n\t\t    \t\tvalues: { complexTypeName: \"ObservationValue:#Nightingale\", isScalar: false }\r\n\t\t    \t},\r\n\t\t    \tnavigationProperties: {\r\n\t\t    \t\ttype: {\r\n\t\t    \t\t\tentityTypeName: \"ObservationType\", isScalar: true,\r\n\t\t    \t\t\tassociationName: \"Observation_Type\", foreignKeyNames: [\"typeId\"]\r\n\t\t    \t\t},\r\n\t\t    \t\tobservation: {\r\n\t\t    \t\t\tentityTypeName: \"Observation\", isScalar: true,\r\n\t\t    \t\t\tassociationName: \"PatientObservation_Observation\", foreignKeyNames: [\"observationId\"]\r\n\t\t    \t\t},\r\n\t\t    \t\tpatient: {\r\n\t\t    \t\t\tentityTypeName: \"Patient\", isScalar: true,\r\n\t\t    \t\t\tassociationName: \"Patient_Observations\", foreignKeyNames: [\"patientId\"]\r\n\t\t    \t\t},\r\n\t\t    \t\tstate: {\r\n\t\t    \t\t\tentityTypeName: \"ObservationState\", isScalar: true,\r\n\t\t    \t\t\tassociationName: \"Observation_State\", foreignKeyNames: [\"stateId\"]\r\n\t\t    \t\t},\r\n\t\t    \t\tdisplay: {\r\n\t\t    \t\t\tentityTypeName: \"ObservationDisplay\", isScalar: true,\r\n\t\t    \t\t\tassociationName: \"Observation_Display\", foreignKeyNames: [\"displayId\"]\r\n\t\t    \t\t}\r\n\t\t    \t}\r\n\t\t    });\r\n\r\n\t\t    // var patientObservationPropertyList = [\r\n                // {\r\n\t\t            // // Short name of property\r\n\t\t            // name: 'startDate',\r\n\t\t            // // Desired display name of property\r\n\t\t            // displayName: 'Start Date',\r\n\t\t            // // Collection of validators\r\n\t\t            // validatorsList: [\r\n                        // breeze.Validator.required()\r\n\t\t            // ]\r\n                // }\r\n\t\t    // ];\r\n\r\n\t\t    // validatorFactory.fixNamesAndRegisterValidators(metadataStore, 'PatientObservation', patientObservationPropertyList);\r\n\r\n\t\t    // Observations' value complex type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t    \tshortName: \"ObservationValue\",\r\n\t\t    \tnamespace: \"Nightingale\",\r\n\t\t    \tisComplexType: true,\r\n\t\t    \tdataProperties: {\r\n\t\t    \t\tid: { dataType: \"String\" },\r\n\t\t    \t\ttext: { dataType: \"String\" },\r\n\t\t    \t\tvalue: { dataType: \"String\" },\r\n\t\t    \t\tpreviousValue: { complexTypeName: \"ObservationPreviousValue:#Nightingale\", isScalar: true }\r\n\t\t    \t}\r\n\t\t    });\r\n\r\n\t\t    // Observation values' previous value complex type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t    \tshortName: \"ObservationPreviousValue\",\r\n\t\t    \tnamespace: \"Nightingale\",\r\n\t\t    \tisComplexType: true,\r\n\t\t    \tdataProperties: {\r\n\t\t    \t\tvalue: { dataType: \"String\" },\r\n\t\t    \t\tstartDate: { dataType: \"DateTime\" },\r\n\t\t    \t\tunit: { dataType: \"String\" },\r\n\t\t    \t\tsource: { dataType: \"String\" }\r\n\t\t    \t}\r\n\t\t    });\r\n\r\n\t\t    // Observation information\r\n\t\t    //  - This is a list of observations to use \r\n\t\t    //  - for typeahead adding of observations\r\n\t\t    metadataStore.addEntityType({\r\n\t\t    \tshortName: \"Observation\",\r\n\t\t    \tnamespace: \"Nightingale\",\r\n\t\t    \tdataProperties: {\r\n\t\t    \t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t    \t\tname: { dataType: \"String\" },\r\n\t\t    \t\ttypeId: { dataType: \"String\" },\r\n\t\t    \t\tstandard: { dataType: \"Boolean\" }\r\n\t\t    \t},\r\n\t\t    \tnavigationProperties: {\r\n\t\t    \t\ttype: {\r\n\t\t    \t\t\tentityTypeName: \"ObservationType\", isScalar: true,\r\n\t\t    \t\t\tassociationName: \"Observation_Type\", foreignKeyNames: [\"typeId\"]\r\n\t\t    \t\t}\r\n\t\t    \t}\r\n\t\t    });\r\n\r\n\t\t    // Observation Display property\r\n\t\t    metadataStore.addEntityType({\r\n\t\t    \tshortName: \"ObservationDisplay\",\r\n\t\t    \tnamespace: \"Nightingale\",\r\n\t\t    \tdataProperties: {\r\n\t\t    \t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t    \t\tname: { dataType: \"String\" }\r\n\t\t    \t}\r\n\t\t    });\r\n\r\n\t\t    // Observation State property\r\n\t\t    metadataStore.addEntityType({\r\n\t\t    \tshortName: \"ObservationState\",\r\n\t\t    \tnamespace: \"Nightingale\",\r\n\t\t    \tdataProperties: {\r\n\t\t    \t\tid: { dataType: \"String\", isPartOfKey: true },\r\n\t\t    \t\tname: { dataType: \"String\" },\r\n\t\t            allowedTypeIds: { complexTypeName: \"IdName:#Nightingale\", isScalar: false }\r\n\t\t    \t}\r\n\t\t    });\r\n\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t    \t'Observation', null, observationInitializer);\r\n\r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t    \t'PatientObservation', null, patientObservationInitializer);\r\n\t\t    \r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t    \t'ObservationValue', null, observationValueInitializer);\r\n\r\n\t\t\t/**\r\n\t\t\t*\r\n\t\t\t* \t@method patientObservationInitializer\r\n\t\t\t*/\t\t\t\r\n\t\t    function patientObservationInitializer(patObs) {\r\n                patObs.isNew = ko.observable(false);\r\n\t\t    \tpatObs.computedValue = ko.computed({\r\n\t\t    \t\tread: function () {\r\n\t\t    \t\t\tvar thisObservationsValues = patObs.values();\r\n\t\t    \t\t\tvar returnValue = null;\r\n\t\t    \t\t\tif (thisObservationsValues.length === 1) {\r\n\t\t    \t\t\t\treturnValue = thisObservationsValues[0];\r\n\t\t    \t\t\t}\r\n\t\t    \t\t\telse if (thisObservationsValues.length > 1) {\r\n\t\t    \t\t\t\treturnValue = thisObservationsValues;\r\n\t\t    \t\t\t}\r\n\t\t    \t\t\treturn returnValue;\r\n\t\t    \t\t},\r\n\t\t    \t\twrite: function (newValue) {\r\n\t\t                // If attribute is a multiselect,\r\n\t\t                if (patObs.controlType === 2) {\r\n\t\t                    // TODO: Do something\r\n\t                  \t}\r\n\t                  \telse {\r\n\t                  \t\tpatObs.values()[0].value(newValue);\r\n\t                \t}\r\n\t                }\r\n\t            });\r\n\t\t    \tpatObs.computedValueString = ko.computed(function () {\r\n\t\t    \t\tvar thisValue = patObs.computedValue();\r\n\t\t    \t\t// If there is a value,\r\n\t\t    \t\tif (thisValue) {\r\n\t\t    \t\t\t// Check if it is one or more values\r\n\t\t    \t\t\tif (Array.isArray(thisValue)) {\r\n\t\t    \t\t\t\t// Then if it is an array, it is a blood pressure reading\r\n\t\t    \t\t\t\tvar diastValue = ko.utils.arrayFirst(thisValue, function (val) {\r\n\t\t    \t\t\t\t\treturn val.text().indexOf('Diast') !== -1;\r\n\t\t    \t\t\t\t});\r\n\t\t    \t\t\t\t// Then if it is an array, it is a blood pressure reading\r\n\t\t    \t\t\t\tvar systValue = ko.utils.arrayFirst(thisValue, function (val) {\r\n\t\t    \t\t\t\t\treturn val.text().indexOf('Sys') !== -1;\r\n\t\t    \t\t\t\t});\r\n                    \t\tthisValue = (!!diastValue && !!systValue) ? systValue.value() + '/' + diastValue.value() + ' ' + patObs.units() : '';\r\n\t\t    \t\t\t} else {\r\n\t\t    \t\t\t\t// Else it has one value so return it plus units\r\n\t\t    \t\t\t\tthisValue = thisValue.value() + ' ' + patObs.units();\r\n\t\t    \t\t\t}\r\n\t\t    \t\t} else {\r\n\t\t    \t\t\tthisValue = '-';\r\n\t\t    \t\t}\r\n\t\t    \t\treturn thisValue;\r\n\t\t    \t});\r\n\t\t\t\tpatObs.validationErrors = ko.observableArray([]);\r\n\t\t\t\tpatObs.startDateErrors = ko.observableArray([]);\t//datetimepicker validation errors\r\n\t\t\t\t/**\r\n\t\t\t\t*\tindicate if the observation needs to be saved. note that except for problems,\r\n\t\t\t\t*\tempty observations display as valid but do not need to be saved.\r\n\t\t\t\t*\t@method needToSave\r\n\t\t\t\t*/\r\n\t\t\t\tpatObs.needToSave = function(){\r\n\t\t\t\t\tvar result = false;\r\n\t\t\t\t\tif( patObs.isNew() || patObs.entityAspect.entityState.isModified() ){\r\n\t\t\t\t\t\tif( patObs.type().name() === 'Problems' ){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tresult = patObs.isValid();\t//problems dont need values and they dont require a startDate\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\telse{\t\r\n\t\t\t\t\t\t\t//assessments, labs, risks, vitals: \r\n\t\t\t\t\t\t\t result = patObs.isValid() && patObs.hasActualValues(); \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\tpatObs.hasActualValues = ko.observable();\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t*\tcomputed. validating the patient observation and updating errors and error messages into patObs.validationErrors. \r\n\t\t\t\t*\treturns true for valid observation.\r\n\t\t\t\t*\t@method isValid \r\n\t\t\t\t*/\r\n\t\t\t    patObs.isValid = ko.computed( function() {\t\t\t\t\t\r\n\t\t\t\t\tvar values = patObs.values();\r\n\t\t\t\t\tvar startDate = patObs.startDate();\r\n\t\t\t\t\tvar startDateErrors = patObs.startDateErrors();\r\n\t\t\t\t\tvar hasErrors = patObs.entityAspect.hasValidationErrors;\r\n\t\t\t\t\tvar type = patObs.type()? patObs.type().name() : null;\r\n\t\t\t\t\tswitch( type ){\r\n\t\t\t\t\t\tcase 'Assessments':\r\n\t\t\t\t\t\t\thasErrors = validateGeneralObservation();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'Labs':\r\n\t\t\t\t\t\t\thasErrors = validateGeneralObservation();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'Problems':\r\n\t\t\t\t\t\t\thasErrors = validateProblem();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'Risks':\r\n\t\t\t\t\t\t\thasErrors = validateGeneralObservation();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'Vitals':\r\n\t\t\t\t\t\t\thasErrors = validateGeneralObservation();\r\n\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn !hasErrors;\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t*\tvalidate for these observation types: (assessments, lbs, risks, vitals)\r\n\t\t\t\t\t*\t@method\tvalidateGeneralObservation\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tfunction validateGeneralObservation(){\r\n\t\t\t\t\t\tpatObs.hasActualValues(false);\r\n\t\t\t\t\t\tvar obsErrors = [];\t\t\t\t\t\t\r\n\t\t\t\t\t\t// if( hasErrors ){\r\n\t\t\t\t\t\t\t// //breeze validation errors (not in use for now)\r\n\t\t\t\t\t\t\t// var errors = patObs.entityAspect.getValidationErrors();\r\n\t\t\t\t\t\t\t// ko.utils.arrayForEach(errors, function (error) {\r\n\t\t\t\t\t\t\t\t// obsErrors.push({ PropName: error.propertyName, Message: error.errorMessage});\r\n\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tko.utils.arrayForEach( values, function(value) {\r\n\t\t\t\t\t\t\tvar propName = 'value';\r\n\t\t\t\t\t\t\tif( value.text && value.text() && value.text().indexOf(\"Systolic\") !== -1 ){\r\n\t\t\t\t\t\t\t\tpropName = 'systolic';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if( value.text && value.text() && value.text().indexOf(\"Diastolic\") !== -1 ){\r\n\t\t\t\t\t\t\t\tpropName = 'diastolic';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( isNaN(value.value()) ){\t//note: this will change when we get alert limits high/low: numeric/decimal with prefix +/-. when no high/low its any string.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//value exist but its not a number (note: +/- sign prefixed values are going to be valid)\r\n\t\t\t\t\t\t\t\tvar name = value.name? value.name() : value.text? value.text() : 'observation ';\r\n\t\t\t\t\t\t\t\tvar msg = name + ' has invalid value' ;\r\n\t\t\t\t\t\t\t\tobsErrors.push({ PropName: propName, Message: msg });\r\n\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( startDate && !value.value() ){\r\n\t\t\t\t\t\t\t\t//start date exist therefore we must have a value/s\r\n\t\t\t\t\t\t\t\tvar name = value.name? value.name() : value.text? value.text() : 'observation ';\t//patObs.name()\r\n\t\t\t\t\t\t\t\tvar msg = name + ' must have a value';\r\n\t\t\t\t\t\t\t\tobsErrors.push({ PropName: propName, Message: msg });\r\n\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if( value.value() ){\r\n\t\t\t\t\t\t\t\tpatObs.hasActualValues(true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( !startDate && patObs.hasActualValues() ){\r\n\t\t\t\t\t\t\t//value/s exist therefore we must have a star date\r\n\t\t\t\t\t\t\tobsErrors.push({ PropName: 'startDate', Message: patObs.name() + ' must have a Date' });\r\n\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( startDateErrors.length > 0 ){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//datetimepicker validation errors:\r\n\t\t\t\t\t\t\tko.utils.arrayForEach( startDateErrors, function(error){\r\n\t\t\t\t\t\t\t\tobsErrors.push({ PropName: 'startDate', Message: patObs.name() + ' Date ' + error.Message});\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpatObs.validationErrors(obsErrors);\r\n\t\t\t\t\t\treturn hasErrors;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t*\tproblems dont need values and they dont require a startDate, however, if a start date is provided it will need to be valid.\r\n\t\t\t\t\t*\t@method validateProblem\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tfunction validateProblem(){\r\n\t\t\t\t\t\tvar obsErrors = [];\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( startDateErrors.length > 0 ){\r\n\t\t\t\t\t\t\t//datetimepicker validation errors:\r\n\t\t\t\t\t\t\tko.utils.arrayForEach( startDateErrors, function(error){\r\n\t\t\t\t\t\t\t\tobsErrors.push({ PropName: 'startDate', Message: patObs.name() + ' Date ' + error.Message});\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\thasErrors = true;\r\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpatObs.validationErrors(obsErrors);\r\n\t\t\t\t\t\treturn hasErrors;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t*\tcomputed. used to disable the save button if any observation is not valid.\r\n\t\t\t\t*\t@method canSave\r\n\t\t\t\t*/\r\n\t\t\t    patObs.canSave = ko.computed(patObs.isValid);\r\n\t\t\t    \r\n\t\t\t    // patObs.entityAspect.validationErrorsChanged.subscribe(function (validationChangeArgs) {\r\n\t\t\t        // var hasErrors = patObs.entityAspect.hasValidationErrors;\r\n\t\t\t        // var errorsList = [];\r\n\t\t\t        // if (hasErrors) {\r\n\t\t\t            // patObs.isValid(false);\r\n\t\t\t            // var errors = patObs.entityAspect.getValidationErrors();\r\n\t\t\t            // ko.utils.arrayForEach(errors, function (error) {\r\n\t\t\t                // errorsList.push(new validationError(error.propertyName, error.errorMessage));\r\n\t\t\t            // });\r\n\t\t\t            // patObs.validationErrors(errorsList);\r\n\t\t\t        // } else {\r\n\t\t\t            // patObs.validationErrors([]);\r\n\t\t\t            // patObs.isValid(true);\r\n\t\t\t        // }\r\n\t\t\t    // });\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t*\tcomputed. tracks for any validation errors and returns a list of the errored property names.\r\n\t\t\t\t*\tthis will be used in the property field css binding condition for invalid styling.\r\n\t\t\t\t*\t@method patObs.validationErrorsArray\r\n\t\t\t\t*/\r\n\t\t\t    patObs.validationErrorsArray = ko.computed(function () {\r\n\t\t\t        var thisArray = [];\r\n\t\t\t        ko.utils.arrayForEach(patObs.validationErrors(), function (error) {\r\n\t\t\t            thisArray.push(error.PropName);\r\n\t\t\t        });\r\n\t\t\t        return thisArray;\r\n\t\t\t    });\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t*\tcomputed. to allow forcing the datetimepicker control to set the start date as invalid.\r\n\t\t\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t\t\t*\t@method patObs.setInvalidStartDate\r\n\t\t\t\t*/\r\n\t\t\t\tpatObs.setInvalidStartDate = ko.computed( function(){\r\n\t\t\t\t\tvar validationErrorsArray = patObs.validationErrorsArray();\r\n\t\t\t\t\treturn (validationErrorsArray && validationErrorsArray.indexOf('startDate') !== -1);  \r\n\t\t\t\t}); \r\n\t\t    }\r\n\r\n\t\t    function observationInitializer(addtlObs) {\r\n\t\t    \taddtlObs.value = ko.computed(addtlObs.name);\r\n\t\t    }\r\n\t\t    \r\n\t\t    function observationValueInitializer(obsValue) {\r\n\t\t    \tobsValue.previousValueString = ko.computed(function () {\r\n\t\t    \t\tvar thisString = '';\r\n\t\t            // If there is a last value,\r\n\t\t            if (obsValue.previousValue()) {\r\n\t\t                // Create a string from it\r\n\t\t                var value = obsValue.previousValue().value();\r\n\t\t                var startdate = moment(obsValue.previousValue().startDate()).format('MM/DD/YYYY');\r\n\t\t                var unit = obsValue.previousValue().unit();\r\n\t\t                var source = obsValue.previousValue().source();\r\n\t\t                thisString = value ? value + ' ' + unit : '';                    \t\r\n\t\t                thisString = moment(startdate).isValid() ? (thisString ? thisString + ' on ' + startdate : startdate) : thisString;\r\n\t\t                thisString = source ? thisString + ' (' + source + ')' : thisString;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn thisString;\r\n\t            });\r\n\t\t    }\r\n\t\t  }\r\n\r\n\t\t  function checkDataContext() {\r\n\t\t  \tif (!datacontext) {\r\n\t\t  \t\tdatacontext = require('services/datacontext');\r\n\t\t  \t}\r\n\t\t  }\r\n\t\t});\n","define('services/entityserializer',[],\r\n\tfunction () {\r\n\r\n\t\t// Function to capitalize the first letter of a string\r\n\t\tfunction capitalize(s) {\r\n\t\t\t\treturn s[0].toUpperCase() + s.slice(1);\r\n\t\t}\r\n\r\n\t\t// Serialize an action to save it\r\n\t\tfunction serializeAction(action, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\r\n\t\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\t\tvar thisAction = {};\r\n\r\n\t\t\t\t// Give this object a collection of Modules\r\n\t\t\t\tthisAction.Steps = [];\r\n\r\n\t\t\t\t// Give this action a collection of Spawn Elements\r\n\t\t\t\tthisAction.SpawnElement = [];\r\n\r\n\t\t\t\tvar actionQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', action.id())\r\n\t\t\t\t\t\t.toType('Action')\r\n\t\t\t\t\t\t.select('id, archived, archiveOriginId, name, moduleId, sourceId, order, completed, enabled, status, deleteFlag, elementState, dateCompleted, next, previous, assignDate, assignById, assignToId, attrStartDate, attrEndDate, completedBy, stateUpdatedOn, description');\r\n\t\t\t\tvar results = manager.executeQueryLocally(actionQuery);\r\n\t\t\t\tvar unwrappedAction = results[0];\r\n\t\t\t\tunwrappedAction.steps = [];\r\n\t\t\t\tunwrappedAction.spawnElement = [];\r\n\r\n\t\t\t\tko.utils.arrayForEach(action.spawnElement.peek(), function (spawnelement) {\r\n\t\t\t\t\t\tvar unwrappedSpawnElement = { elementId: spawnelement.elementId.peek(), elementType: spawnelement.elementType.peek(), tag: spawnelement.tag.peek() };\r\n\t\t\t\t\t\tunwrappedAction.spawnElement.push(unwrappedSpawnElement);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// TODO: Foreach steps,\r\n\t\t\t\tko.utils.arrayForEach(action.steps.peek(), function (step) {\r\n\t\t\t\t\t\tvar stepQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t\t\t.where('id', '==', step.id())\r\n\t\t\t\t\t\t\t\t.toType('Step')\r\n\t\t\t\t\t\t\t\t.select('id, header, description, title, text, question, notes, actionId, sourceId, stepTypeId, selectedResponseId, order, completed, enabled, status');\r\n\t\t\t\t\t\tvar stepresults = manager.executeQueryLocally(stepQuery);\r\n\t\t\t\t\t\tvar unwrappedStep = stepresults[0];\r\n\t\t\t\t\t\tunwrappedStep.responses = [];\r\n\t\t\t\t\t\tunwrappedStep.spawnElement = [];\r\n\r\n\t\t\t\t\t\tko.utils.arrayForEach(step.spawnElement.peek(), function (spawnelement) {\r\n\t\t\t\t\t\t\t\tvar unwrappedSpawnElement = { elementId: spawnelement.elementId.peek(), elementType: spawnelement.elementType.peek(), tag: spawnelement.tag.peek() };\r\n\t\t\t\t\t\t\t\tunwrappedStep.spawnElement.push(unwrappedSpawnElement);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tko.utils.arrayForEach(step.responses.peek(), function (response) {\r\n\t\t\t\t\t\t\t\tvar responseQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t\t\t\t\t.where('id', '==', response.id())\r\n\t\t\t\t\t\t\t\t\t\t.toType('Response')\r\n\t\t\t\t\t\t\t\t\t\t.select('id, text, required, value, stepId, nominal, nextStepId, order');\r\n\t\t\t\t\t\t\t\tvar responseresponse = manager.executeQueryLocally(responseQuery);\r\n\t\t\t\t\t\t\t\tvar unwrappedResponse = responseresponse[0];\r\n\t\t\t\t\t\t\t\tunwrappedResponse.spawnElement = [];\r\n\r\n\t\t\t\t\t\t\t\tko.utils.arrayForEach(response.spawnElement.peek(), function (spawnelement) {\r\n\t\t\t\t\t\t\t\t\t\tvar unwrappedSpawnElement = { elementId: spawnelement.elementId.peek(), elementType: spawnelement.elementType.peek(), tag: spawnelement.tag.peek() };\r\n\t\t\t\t\t\t\t\t\t\tunwrappedResponse.spawnElement.push(unwrappedSpawnElement);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tunwrappedStep.responses.push(unwrappedResponse);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tunwrappedAction.steps.push(unwrappedStep);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Copy actions properties\r\n\t\t\t\tthisAction.Id = unwrappedAction.id;\r\n\t\t\t\tthisAction.Name = unwrappedAction.name;\r\n\t\t\t\tthisAction.ModuleId = unwrappedAction.moduleId;\r\n\t\t\t\tthisAction.SourceId = unwrappedAction.sourceId;\r\n\t\t\t\tthisAction.Order = unwrappedAction.order;\r\n\t\t\t\tthisAction.Completed = unwrappedAction.completed;\r\n\t\t\t\tthisAction.CompletedBy = unwrappedAction.completedBy;\r\n\t\t\t\tthisAction.Enabled = unwrappedAction.enabled;\r\n\t\t\t\tthisAction.Status = unwrappedAction.status;\r\n\t\tthisAction.DeleteFlag = unwrappedAction.deleteFlag;\r\n\t\t\t\tthisAction.ElementState = unwrappedAction.elementState;\r\n\t\t\t\tthisAction.StateUpdatedOn = unwrappedAction.stateUpdatedOn;\r\n\t\t\t\tthisAction.DateCompleted = unwrappedAction.dateCompleted;\r\n\t\t\t\tthisAction.Next = unwrappedAction.next;\r\n\t\t\t\tthisAction.Previous = unwrappedAction.previous;\r\n\t\t\t\tthisAction.AssignDate = unwrappedAction.assignDate;\r\n\t\t\t\tthisAction.AssignById = unwrappedAction.assignById;\r\n\t\t\t\tthisAction.AssignToId = unwrappedAction.assignToId;\r\n\t\t\t\tthisAction.Archived = unwrappedAction.archived;\r\n\t\t\t\tthisAction.ArchiveOriginId = unwrappedAction.archiveOriginId;\r\n\r\n\t\t\t\tthisAction.Description = unwrappedAction.description;\r\n\t\t\t\tthisAction.AttrStartDate = unwrappedAction.attrStartDate;\r\n\t\t\t\tthisAction.AttrEndDate = unwrappedAction.attrEndDate;\r\n\t\t\t\tthisAction.DateCompleted = unwrappedAction.dateCompleted;\r\n\r\n\t\t\t\t// Copy any spawn element's that exist on this action\r\n\t\t\t\tko.utils.arrayForEach(unwrappedAction.spawnElement, function (spawnElement) {\r\n\t\t\t\t\t\tthisAction.SpawnElement.push({ ElementId: spawnElement.elementId, ElementType: spawnElement.elementType, Tag: spawnElement.tag });\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Go through the steps,\r\n\t\t\t\tko.utils.arrayForEach(unwrappedAction.steps, function (step) {\r\n\r\n\t\t\t\t\t\tvar newStep = {};\r\n\t\t\t\t\t\tnewStep.Responses = [];\r\n\t\t\t\t\t\tnewStep.SpawnElement = [];\r\n\r\n\t\t\t\t\t\tko.utils.arrayForEach(step.spawnElement, function (spawnElement) {\r\n\t\t\t\t\t\t\t\tnewStep.SpawnElement.push({ ElementId: spawnElement.elementId, ElementType: spawnElement.elementType, Tag: spawnElement.tag });\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// Copy steps properties\r\n\t\t\t\t\t\tnewStep.Id = step.id;\r\n\t\t\t\t\t\tnewStep.Header = step.header;\r\n\t\t\t\t\t\tnewStep.Description = step.description;\r\n\t\t\t\t\t\tnewStep.Title = step.title;\r\n\t\t\t\t\t\tnewStep.Text = step.text;\r\n\t\t\t\t\t\tnewStep.Question = step.question;\r\n\t\t\t\t\t\tnewStep.Notes = step.notes;\r\n\t\t\t\t\t\tnewStep.ActionId = step.actionId;\r\n\t\t\t\t\t\tnewStep.SourceId = step.sourceId;\r\n\t\t\t\t\t\tnewStep.StepTypeId = step.stepTypeId;\r\n\t\t\t\t\t\tnewStep.SelectedResponseId = step.selectedResponseId;\r\n\t\t\t\t\t\tnewStep.Order = step.order;\r\n\t\t\t\t\t\tnewStep.Completed = step.completed;\r\n\t\t\t\t\t\tnewStep.Enabled = step.enabled;\r\n\t\t\t\t\t\tnewStep.Status = step.status;\r\n\r\n\t\t\t\t\t\t// Go through the steps,\r\n\t\t\t\t\t\tko.utils.arrayForEach(step.responses, function (response) {\r\n\r\n\t\t\t\t\t\t\t\tvar newResponse = {};\r\n\r\n\t\t\t\t\t\t\t\tnewResponse.SpawnElement = [];\r\n\r\n\t\t\t\t\t\t\t\tko.utils.arrayForEach(response.spawnElement, function (spawnElement) {\r\n\t\t\t\t\t\t\t\t\t\tnewResponse.SpawnElement.push({ ElementId: spawnElement.elementId, ElementType: spawnElement.elementType, Tag: spawnElement.tag })\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Copy responses properties\r\n\t\t\t\t\t\t\t\tnewResponse.Id = response.id;\r\n\t\t\t\t\t\t\t\tnewResponse.Text = response.text;\r\n\t\t\t\t\t\t\t\tnewResponse.Required = response.required;\r\n\t\t\t\t\t\t\t\tnewResponse.Value = response.value;\r\n\t\t\t\t\t\t\t\tnewResponse.StepId = response.stepId;\r\n\t\t\t\t\t\t\t\tnewResponse.Nominal = response.nominal;\r\n\t\t\t\t\t\t\t\tnewResponse.NextStepId = response.nextStepId;\r\n\t\t\t\t\t\t\t\tnewResponse.Order = response.order;\r\n\r\n\t\t\t\t\t\t\t\tnewStep.Responses.push(newResponse);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar incrementalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\t\t\tthisAction.Steps.push(newStep);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\r\n\t\t\t\treturn thisAction;\r\n\t\t}\r\n\r\n\t\t// Serialize a contact card to save it\r\n\t\tfunction serializeContactCard(contactCard, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\t\t\t\tvar entityName = 'ContactCard';\r\n\t\t\t\tif( contactCard.entityAspect.entity.entityType.name.startsWith('ContactSearch') ){\r\n\t\t\t\t\tentityName = 'ContactSearch';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\t\tvar thisContactCard = {};\r\n\r\n\t\t\t\t// Give this object a collection of Stuff\r\n\t\t\t\tthisContactCard.Modes = [];\r\n\t\t\t\tthisContactCard.Addresses = [];\r\n\t\t\t\tthisContactCard.Phones = [];\r\n\t\t\t\tthisContactCard.Emails = [];\r\n\t\t\t\tthisContactCard.Languages = [];\r\n\t\t\t\tthisContactCard.TimesOfDaysId = [];\r\n\t\t\t\tthisContactCard.WeekDays = [];\r\n\t\t\t\tthisContactCard.ContactSubTypes = [];\r\n\r\n\t\t\t\t// Get the values of the properties of the action\r\n\t\t\t\t//var unwrappedContactCard = ko.toJS(contactCard);\r\n\r\n\t\t\t\tvar contactCardQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', contactCard.id())\r\n\t\t\t\t\t\t.toType( entityName )\r\n\t\t\t\t\t\t.select('id, patientId, timeZoneId, isPatient, userId, isUser, firstName, middleName, lastName, preferredName,'\r\n\t\t\t\t\t\t\t+ ' gender, contactTypeId, externalRecordId, dataSource, statusId, deceasedId, prefix, suffix, createdOn, updatedOn,'\r\n\t\t\t\t\t\t\t+ ' createdById, updatedById');\r\n\t\t\t\tvar results = manager.executeQueryLocally(contactCardQuery);\r\n\t\t\t\tvar unwrappedContactCard = results[0];\r\n\r\n\t\t\t\tunwrappedContactCard.steps = [];\r\n\r\n\t\t\t\tko.utils.arrayForEach(contactCard.preferredTimesOfDayIds.peek(), function (tod) {\r\n\t\t\t\t\t\tthisContactCard.TimesOfDaysId.push(tod.id.peek());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tko.utils.arrayForEach(contactCard.preferredDaysOfWeekIds.peek(), function (dow) {\r\n\t\t\t\t\t\tthisDowId = parseInt(dow.id.peek());\r\n\t\t\t\t\t\tthisContactCard.WeekDays.push(thisDowId);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthisContactCard.PatientId = unwrappedContactCard.patientId;\r\n\t\t\t\tthisContactCard.Id = unwrappedContactCard.id;\r\n\t\t\t\tthisContactCard.TimeZoneId = unwrappedContactCard.timeZoneId;\r\n\t\t\t\tthisContactCard.IsPatient\t\t = unwrappedContactCard.isPatient;\r\n\t\t\t\tthisContactCard.UserId           = unwrappedContactCard.userId;\r\n\t\t\t\tthisContactCard.IsUser           = unwrappedContactCard.isUser;\r\n\t\t\t\tthisContactCard.FirstName        = unwrappedContactCard.firstName;\r\n\t\t\t\tthisContactCard.MiddleName       = unwrappedContactCard.middleName;\r\n\t\t\t\tthisContactCard.LastName         = unwrappedContactCard.lastName;\r\n\t\t\t\tthisContactCard.PreferredName    = unwrappedContactCard.preferredName;\r\n\t\t\t\tthisContactCard.Gender           = unwrappedContactCard.gender;\r\n\t\t\t\tthisContactCard.ContactTypeId    = unwrappedContactCard.contactTypeId;\r\n\t\t\t\tthisContactCard.ExternalRecordId = unwrappedContactCard.externalRecordId;\r\n\t\t\t\tthisContactCard.DataSource       = unwrappedContactCard.dataSource;\r\n\t\t\t\tthisContactCard.StatusId         = unwrappedContactCard.statusId;\r\n\t\t\t\tthisContactCard.DeceasedId       = unwrappedContactCard.deceasedId;\r\n\t\t\t\tthisContactCard.Prefix           = unwrappedContactCard.prefix;\r\n\t\t\t\tthisContactCard.Suffix           = unwrappedContactCard.suffix;\r\n\t\t\t\tthisContactCard.CreatedOn        = unwrappedContactCard.createdOn;\r\n\t\t\t\tthisContactCard.UpdatedOn        = unwrappedContactCard.updatedOn;\r\n\t\t\t\tthisContactCard.CreatedById      = unwrappedContactCard.createdById;\r\n\t\t\t\tthisContactCard.UpdatedById      = unwrappedContactCard.updatedById;\r\n\r\n\t\t\t\tko.utils.arrayForEach(contactCard.modes.peek(), function (mode) {\r\n\t\t\t\t\t\tvar newMode = {};\r\n\t\t\t\t\t\tnewMode.LookUpModeId = mode.lookUpModeId.peek();\r\n\t\t\t\t\t\tnewMode.OptOut = mode.optOut.peek();\r\n\t\t\t\t\t\tnewMode.Preferred = mode.preferred.peek();\r\n\t\t\t\t\t\tthisContactCard.Modes.push(newMode);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tko.utils.arrayForEach(contactCard.addresses.peek(), function (address) {\r\n\t\t\t\t\t\tvar newAddress = {};\r\n\t\t\t\t\t\tnewAddress.Id = address.id.peek();\r\n\t\t\t\t\t\tnewAddress.OptOut = address.optOut.peek();\r\n\t\t\t\t\t\tnewAddress.Preferred = address.preferred.peek();\r\n\t\t\t\t\t\tnewAddress.TypeId = address.typeId.peek();\r\n\t\t\t\t\t\tnewAddress.City = address.city.peek();\r\n\t\t\t\t\t\tnewAddress.StateId = address.stateId.peek();\r\n\t\t\t\t\t\tnewAddress.PostalCode = address.postalCode.peek();\r\n\t\t\t\t\t\tnewAddress.Line1 = address.line1.peek();\r\n\t\t\t\t\t\tnewAddress.Line2 = address.line2.peek();\r\n\t\t\t\t\t\tnewAddress.Line3 = address.line3.peek();\r\n\t\t\t\t\t\tthisContactCard.Addresses.push(newAddress);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tko.utils.arrayForEach(contactCard.emails.peek(), function (email) {\r\n\t\t\t\t\t\tvar newEmail = {};\r\n\t\t\t\t\t\tnewEmail.Id = email.id.peek();\r\n\t\t\t\t\t\tnewEmail.OptOut = email.optOut.peek();\r\n\t\t\t\t\t\tnewEmail.Preferred = email.preferred.peek();\r\n\t\t\t\t\t\tnewEmail.TypeId = email.typeId.peek();\r\n\t\t\t\t\t\tnewEmail.Text = email.text.peek();\r\n\t\t\t\t\t\tthisContactCard.Emails.push(newEmail);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tko.utils.arrayForEach(contactCard.phones.peek(), function (phone) {\r\n\t\t\t\t\t\tvar newPhone = {};\r\n\t\t\t\t\t\tnewPhone.Id = phone.id.peek();\r\n\t\t\t\t\t\tnewPhone.IsText = phone.isText.peek();\r\n\t\t\t\t\t\tnewPhone.Number = phone.number.peek().replace(/-/g, '');\t//remove separators\r\n\t\t\t\t\t\tnewPhone.OptOut = phone.optOut.peek();\r\n\t\t\t\t\t\tnewPhone.PhonePreferred = phone.phonePreferred.peek();\r\n\t\t\t\t\t\tnewPhone.TextPreferred = phone.textPreferred.peek();\r\n\t\t\t\t\t\tnewPhone.TypeId = phone.typeId.peek();\r\n\t\t\t\t\t\tnewPhone.DataSource = phone.dataSource.peek();\r\n\t\t\t\t\t\tthisContactCard.Phones.push(newPhone);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tko.utils.arrayForEach(contactCard.languages.peek(), function (language) {\r\n\t\t\t\t\t\tvar newLanguage = {};\r\n\t\t\t\t\t\tnewLanguage.LookUpLanguageId = language.lookUpLanguageId.peek();\r\n\t\t\t\t\t\tnewLanguage.Preferred = language.preferred.peek();\r\n\t\t\t\t\t\tthisContactCard.Languages.push(newLanguage);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tko.utils.arrayForEach(contactCard.contactSubTypes.peek(), function (sub) {\r\n\t\t\t\t\tvar subType = {};\r\n\t\t\t\t\tsubType.Id = sub.id() ? sub.id() : null;\r\n\t\t\t\t\tsubType.SubTypeId = sub.subTypeId();\r\n\t\t\t\t\tsubType.SpecialtyId = sub.specialtyId() ? sub.specialtyId() : null;\r\n\t\t\t\t\tsubType.SubSpecialtyIds = [];\r\n\t\t\t\t\tko.utils.arrayForEach(sub.subSpecialtyIds.peek(), function (sid) {\r\n\t\t\t\t\t\tsubType.SubSpecialtyIds.push(sid.id.peek());\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthisContactCard.ContactSubTypes.push(subType);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\r\n\t\t\t\treturn thisContactCard;\r\n\t\t}\r\n\r\n\t\t// Serialize a goal to save it\r\n\t\tfunction serializeGoal(goal, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\r\n\t\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\t\tvar thisGoal = {};\r\n\r\n\t\t\t\t// Give this object a collection of Stuff\r\n\t\t\t\t// thisGoal.Tasks = [];\r\n\t\t\t\t// thisGoal.Barriers = [];\r\n\t\t\t\t// thisGoal.Interventions = [];\r\n\t\t\t\tthisGoal.FocusAreaIds = [];\r\n\t\t\t\tthisGoal.ProgramIds = [];\r\n\t\t\t\tthisGoal.CustomAttributes = [];\r\n\r\n\t\t\t\tvar goalQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', goal.id())\r\n\t\t\t\t\t\t.toType('Goal')\r\n\t\t\t\t\t\t.select('id, name, patientId, sourceId, typeId, statusId, startDate, endDate, targetValue, targetDate, details');\r\n\t\t\t\tvar results = manager.executeQueryLocally(goalQuery);\r\n\t\t\t\tvar unwrappedGoal = results[0];\r\n\r\n\t\t\t\t// Copy any spawn element's that exist on this action\r\n\t\t\t\tko.utils.arrayForEach(goal.focusAreaIds.peek(), function (fa) {\r\n\t\t\t\t\t\tthisGoal.FocusAreaIds.push(fa.id.peek());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tko.utils.arrayForEach(goal.programIds.peek(), function (pid) {\r\n\t\t\t\t\t\tthisGoal.ProgramIds.push(pid.id.peek());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tko.utils.arrayForEach(goal.customAttributes.peek(), function (customAttribute) {\r\n\t\t\t\t\t\tvar newCustomAttribute = { Id: customAttribute.id.peek(), Name: customAttribute.name.peek(), ControlType: customAttribute.controlType.peek(), Order: customAttribute.order.peek() };\r\n\t\t\t\t\t\tnewCustomAttribute.Options = [];\r\n\t\t\t\t\t\tnewCustomAttribute.Values = [];\r\n\t\t\t\t\t\tko.utils.arrayForEach(customAttribute.options.peek(), function (option) {\r\n\t\t\t\t\t\t\t\tnewCustomAttribute.Options.push({ Value: option.value.peek(), Display: option.display.peek() });\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tko.utils.arrayForEach(customAttribute.values.peek(), function (value) {\r\n\t\t\t\t\t\t\t\tnewCustomAttribute.Values.push(value.value.peek());\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthisGoal.CustomAttributes.push(newCustomAttribute);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthisGoal.Id = unwrappedGoal.id;\r\n\t\t\t\tthisGoal.Name = unwrappedGoal.name;\r\n\t\t\t\tthisGoal.PatientId = unwrappedGoal.patientId;\r\n\t\t\t\tthisGoal.SourceId = unwrappedGoal.sourceId;\r\n\t\t\t\tthisGoal.TypeId = unwrappedGoal.typeId;\r\n\t\t\t\tthisGoal.StatusId = unwrappedGoal.statusId;\r\n\t\t\t\tthisGoal.StartDate = unwrappedGoal.startDate;\r\n\t\t\t\tthisGoal.EndDate = unwrappedGoal.endDate;\r\n\t\t\t\tthisGoal.TargetValue = unwrappedGoal.targetValue;\r\n\t\t\t\tthisGoal.TargetDate = unwrappedGoal.targetDate;\r\n\t\t\t\tthisGoal.Details = unwrappedGoal.details;\r\n\t\t\t\t// ko.utils.arrayForEach(goal.tasks.peek(), function (fulltask) {\r\n\t\t\t\t//     // Go get a projection query of this task\r\n\t\t\t\t//     var taskQuery = breeze.EntityQuery\r\n\t\t\t\t//         .from('fakePath')\r\n\t\t\t\t//         .where('id', '==', fulltask.id())\r\n\t\t\t\t//         .toType('Task')\r\n\t\t\t\t//         .select('id, description, statusId, targetValue, startDate, targetDate, patientGoalId');\r\n\t\t\t\t//     var results = manager.executeQueryLocally(taskQuery);\r\n\t\t\t\t//     var task = results[0];\r\n\r\n\t\t\t\t//     var newTask = {};\r\n\t\t\t\t//     newTask.BarrierIds = [];\r\n\t\t\t\t//     newTask.CustomAttributes = [];\r\n\t\t\t\t//     newTask.Id = task.id;\r\n\t\t\t\t//     newTask.Description = task.description;\r\n\t\t\t\t//     newTask.StatusId = task.statusId;\r\n\t\t\t\t//     newTask.TargetValue = task.targetValue;\r\n\t\t\t\t//     newTask.StartDate = task.startDate;\r\n\t\t\t\t//     newTask.TargetDate = task.targetDate;\r\n\t\t\t\t//     newTask.PatientGoalId = task.patientGoalId;\r\n\t\t\t\t//     ko.utils.arrayForEach(fulltask.barrierIds.peek(), function (barId) {\r\n\t\t\t\t//         newTask.BarrierIds.push(barId.id.peek());\r\n\t\t\t\t//     });\r\n\t\t\t\t//     ko.utils.arrayForEach(fulltask.customAttributes.peek(), function (customAttribute) {\r\n\t\t\t\t//         var newCustomAttribute = { Id: customAttribute.id.peek(), Name: customAttribute.name.peek(), ControlType: customAttribute.controlType.peek(), Order: customAttribute.order.peek() };\r\n\t\t\t\t//         newCustomAttribute.Options = [];\r\n\t\t\t\t//         newCustomAttribute.Values = [];\r\n\t\t\t\t//         ko.utils.arrayForEach(customAttribute.options.peek(), function (option) {\r\n\t\t\t\t//             newCustomAttribute.Options.push({Value: option.value.peek(), Display: option.display.peek() });\r\n\t\t\t\t//         });\r\n\t\t\t\t//         ko.utils.arrayForEach(customAttribute.values.peek(), function (value) {\r\n\t\t\t\t//             newCustomAttribute.Values.push(value.value.peek());\r\n\t\t\t\t//         });\r\n\t\t\t\t//         newTask.CustomAttributes.push(newCustomAttribute);\r\n\t\t\t\t//     });\r\n\t\t\t\t//     thisGoal.Tasks.push(newTask);\r\n\t\t\t\t// });\r\n\r\n\t\t\t\t// ko.utils.arrayForEach(goal.barriers.peek(), function (fullbarrier) {\r\n\t\t\t\t//     // Go get a projection query of this task\r\n\t\t\t\t//     var barrierQuery = breeze.EntityQuery\r\n\t\t\t\t//         .from('fakePath')\r\n\t\t\t\t//         .where('id', '==', fullbarrier.id())\r\n\t\t\t\t//         .toType('Barrier')\r\n\t\t\t\t//         .select('id, name, patientGoalId, statusId, categoryId');\r\n\t\t\t\t//     var results = manager.executeQueryLocally(barrierQuery);\r\n\t\t\t\t//     var barrier = results[0];\r\n\r\n\t\t\t\t//     var newBarrier = {};\r\n\t\t\t\t//     newBarrier.Id = barrier.id;\r\n\t\t\t\t//     newBarrier.Name = barrier.name;\r\n\t\t\t\t//     newBarrier.PatientGoalId = barrier.patientGoalId;\r\n\t\t\t\t//     newBarrier.StatusId = barrier.statusId;\r\n\t\t\t\t//     newBarrier.CategoryId = barrier.categoryId;\r\n\t\t\t\t//     thisGoal.Barriers.push(newBarrier);\r\n\t\t\t\t// });\r\n\r\n\t\t\t\t// ko.utils.arrayForEach(goal.interventions.peek(), function (fullintervention) {\r\n\t\t\t\t//     // Go get a projection query of this task\r\n\t\t\t\t//     var interventionQuery = breeze.EntityQuery\r\n\t\t\t\t//         .from('fakePath')\r\n\t\t\t\t//         .where('id', '==', fullintervention.id())\r\n\t\t\t\t//         .toType('Intervention')\r\n\t\t\t\t//         .select('id, categoryId, assignedToId, description, statusId, startDate, patientGoalId');\r\n\t\t\t\t//     var results = manager.executeQueryLocally(interventionQuery);\r\n\t\t\t\t//     var intervention = results[0];\r\n\r\n\t\t\t\t//     var newIntervention = {};\r\n\t\t\t\t//     newIntervention.BarrierIds = [];\r\n\t\t\t\t//     newIntervention.CustomAttributes = [];\r\n\t\t\t\t//     newIntervention.Id = intervention.id;\r\n\t\t\t\t//     newIntervention.CategoryId = intervention.categoryId;\r\n\t\t\t\t//     newIntervention.AssignedToId = intervention.assignedToId;\r\n\t\t\t\t//     newIntervention.Description = intervention.description;\r\n\t\t\t\t//     newIntervention.StatusId = intervention.statusId;\r\n\t\t\t\t//     newIntervention.StartDate = intervention.startDate;\r\n\t\t\t\t//     newIntervention.PatientGoalId = intervention.patientGoalId;\r\n\t\t\t\t//     ko.utils.arrayForEach(fullintervention.barrierIds.peek(), function (barId) {\r\n\t\t\t\t//         newIntervention.BarrierIds.push(barId.id.peek());\r\n\t\t\t\t//     });\r\n\t\t\t\t//     thisGoal.Interventions.push(newIntervention);\r\n\t\t\t\t// });\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\treturn thisGoal;\r\n\t\t}\r\n\r\n\t\t// Serialize an iontervention to save it\r\n\t\tfunction serializeIntervention(intervention, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\r\n\t\t\t\t// Go get a projection query of this task\r\n\t\t\t\tvar interventionQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', intervention.id())\r\n\t\t\t\t\t\t.toType('Intervention')\r\n\t\t\t\t\t\t.select('id, categoryId, assignedToId, description, statusId, startDate, dueDate, patientGoalId, patientId, closedDate, deleteFlag, details');\r\n\t\t\t\tvar results = manager.executeQueryLocally(interventionQuery);\r\n\t\t\t\tvar thisIntervention = results[0];\r\n\r\n\t\t\t\tvar newIntervention = {};\r\n\t\t\t\tnewIntervention.BarrierIds = [];\r\n\t\t\t\tnewIntervention.CustomAttributes = [];\r\n\t\t\t\tnewIntervention.Id = thisIntervention.id;\r\n\t\t\t\tnewIntervention.CategoryId = thisIntervention.categoryId;\r\n\t\t\t\tnewIntervention.AssignedToId = thisIntervention.assignedToId;\r\n\t\t\t\tnewIntervention.Description = thisIntervention.description;\r\n\t\t\t\tnewIntervention.StatusId = thisIntervention.statusId;\r\n\t\t\t\tnewIntervention.StartDate = thisIntervention.startDate;\r\n\t\t\t\tnewIntervention.DueDate = thisIntervention.dueDate;\r\n\t\t\t\tnewIntervention.ClosedDate = thisIntervention.closedDate;\r\n\t\t\t\tnewIntervention.PatientGoalId = thisIntervention.patientGoalId;\r\n\t\t\t\tnewIntervention.DeleteFlag = thisIntervention.deleteFlag;\r\n\t\t\t\tnewIntervention.Details = thisIntervention.details;\r\n\t\t\t\t// newIntervention.PatientId = thisIntervention.patientId;\r\n\t\t\t\tko.utils.arrayForEach(intervention.barrierIds.peek(), function (barId) {\r\n\t\t\t\t\t\tnewIntervention.BarrierIds.push(barId.id.peek());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\treturn newIntervention;\r\n\t\t}\r\n\r\n\t\t// Serialize a task to save it\r\n\t\tfunction serializeTask(task, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\r\n\t\t\t\t// Go get a projection query of this task\r\n\t\t\t\tvar taskQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', task.id())\r\n\t\t\t\t\t\t.toType('Task')\r\n\t\t\t\t\t\t//.select('id, categoryId, assignedToId, description, statusId, startDate, patientGoalId, patientId');\r\n\t\t\t\t\t\t.select('id, description, statusId, targetValue, startDate, targetDate, patientGoalId, patientId, closedDate, statusDate, deleteFlag, details');\r\n\t\t\t\tvar results = manager.executeQueryLocally(taskQuery);\r\n\t\t\t\tvar thisTask = results[0];\r\n\r\n\t\t\t\tvar newTask = {};\r\n\t\t\t\tnewTask.BarrierIds = [];\r\n\t\t\t\tnewTask.CustomAttributes = [];\r\n\t\t\t\tnewTask.Id = thisTask.id;\r\n\t\t\t\tnewTask.Description = thisTask.description;\r\n\t\t\t\tnewTask.StatusId = thisTask.statusId;\r\n\t\t\t\tnewTask.TargetValue = thisTask.targetValue;\r\n\t\t\t\tnewTask.StartDate = thisTask.startDate;\r\n\t\t\t\tnewTask.TargetDate = thisTask.targetDate;\r\n\t\t\t\tnewTask.ClosedDate = thisTask.closedDate;\r\n\t\t\t\tnewTask.StatusDate = thisTask.statusDate;\r\n\t\t\t\tnewTask.PatientGoalId = thisTask.patientGoalId;\r\n\t\t\t\t//newTask.PatientId = thisTask.patientId;\r\n\t\t\t\tnewTask.DeleteFlag = thisTask.deleteFlag;\r\n\t\t\t\tnewTask.Details = thisTask.details;\r\n\t\t\t\tko.utils.arrayForEach(task.barrierIds.peek(), function (barId) {\r\n\t\t\t\t\t\tnewTask.BarrierIds.push(barId.id.peek());\r\n\t\t\t\t});\r\n\t\t\t\tko.utils.arrayForEach(task.customAttributes.peek(), function (customAttribute) {\r\n\t\t\t\t\t\tvar newCustomAttribute = { Id: customAttribute.id.peek(), Name: customAttribute.name.peek(), ControlType: customAttribute.controlType.peek(), Order: customAttribute.order.peek() };\r\n\t\t\t\t\t\tnewCustomAttribute.Options = [];\r\n\t\t\t\t\t\tnewCustomAttribute.Values = [];\r\n\t\t\t\t\t\tko.utils.arrayForEach(customAttribute.options.peek(), function (option) {\r\n\t\t\t\t\t\t\t\tnewCustomAttribute.Options.push({Value: option.value.peek(), Display: option.display.peek() });\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tko.utils.arrayForEach(customAttribute.values.peek(), function (value) {\r\n\t\t\t\t\t\t\t\tnewCustomAttribute.Values.push(value.value.peek());\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tnewTask.CustomAttributes.push(newCustomAttribute);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\treturn newTask;\r\n\t\t}\r\n\r\n\t\t// Serialize a barrier to save it\r\n\t\tfunction serializeBarrier(barrier, manager) {\r\n\r\n\t\t\t\t// Go get a projection query of this task\r\n\t\t\t\tvar barrierQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', barrier.id())\r\n\t\t\t\t\t\t.toType('Barrier')\r\n\t\t\t\t\t\t.select('id, name, patientGoalId, statusId, categoryId, deleteFlag, details');\r\n\t\t\t\tvar results = manager.executeQueryLocally(barrierQuery);\r\n\t\t\t\tvar thisBarrier = results[0];\r\n\r\n\t\t\t\tvar newBarrier = {};\r\n\t\t\t\tnewBarrier.Id = thisBarrier.id;\r\n\t\t\t\tnewBarrier.Name = thisBarrier.name;\r\n\t\t\t\tnewBarrier.PatientGoalId = thisBarrier.patientGoalId;\r\n\t\t\t\tnewBarrier.StatusId = thisBarrier.statusId;\r\n\t\t\t\tnewBarrier.CategoryId = thisBarrier.categoryId;\r\n\t\t\t\tnewBarrier.DeleteFlag = thisBarrier.deleteFlag;\r\n\t\t\t\tnewBarrier.Details = thisBarrier.details;\r\n\t\t\t\treturn newBarrier;\r\n\t\t}\r\n\r\n\t\t// Serialize an action to save it\r\n\t\tfunction serializeObservation(observation, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\t\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\t\tvar thisObservation = {};\r\n\t\t\t\tthisObservation.Values = [];\r\n\r\n\t\t\t\t// Create a query to\r\n\t\t\t\t// Get the unwrapped values of the properties of the observation\r\n\t\t\t\tvar observationQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', observation.id())\r\n\t\t\t\t\t\t.toType('PatientObservation')\r\n\t\t\t\t\t\t.select('id, name, startDate, endDate, units, patientId, typeId, displayId, stateId, deleteFlag, standard, observationId, groupId, source');\r\n\t\t\t\tvar results = manager.executeQueryLocally(observationQuery);\r\n\t\t\t\tvar unwrappedObservation = results[0];\r\n\r\n\t\t\t\t// Copy actions properties\r\n\t\t\t\tthisObservation.Id = unwrappedObservation.id;\r\n\t\t\t\tthisObservation.Name = unwrappedObservation.name;\r\n\t\tvar startMoment = moment(unwrappedObservation.startDate);\r\n\t\t\t\tthisObservation.StartDate = startMoment.isValid()? startMoment.toISOString() : null;\r\n\t\tvar endMoment = moment(unwrappedObservation.endDate);\r\n\t\t\t\tthisObservation.EndDate = endMoment.isValid()? endMoment.toISOString() : null;\r\n\t\t\t\tthisObservation.GroupId = unwrappedObservation.groupId;\r\n\t\t\t\tthisObservation.Standard = unwrappedObservation.standard;\r\n\t\t\t\tthisObservation.ObservationId = unwrappedObservation.observationId;\r\n\t\t\t\tthisObservation.Source = unwrappedObservation.source;\r\n\t\t\t\tthisObservation.Units = unwrappedObservation.units;\r\n\t\t\t\tthisObservation.PatientId = unwrappedObservation.patientId;\r\n\t\t\t\tthisObservation.TypeId = unwrappedObservation.typeId;\r\n\t\t\t\tthisObservation.DisplayId = unwrappedObservation.displayId;\r\n\t\t\t\tthisObservation.StateId = unwrappedObservation.stateId;\r\n\t\t\t\tthisObservation.DeleteFlag = unwrappedObservation.deleteFlag;\r\n\r\n\t\t\t\t// Copy any spawn element's that exist on this action\r\n\t\t\t\tko.utils.arrayForEach(observation.values.peek(), function (value) {\r\n\t\t\t\t\t\tthisObservation.Values.push({ Id: value.id.peek(), Text: value.text.peek(), Value: value.value.peek() });\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\treturn thisObservation;\r\n\t\t}\r\n\r\n\t\t// Serialize a note to save it\r\n\t\tfunction serializeNote(note, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\r\n\t\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\t\tvar thisNote = {};\r\n\r\n\t\t\t\t// Give this object a collection of Stuff\r\n\t\t\t\tthisNote.ProgramIds = [];\r\n\r\n\t\t\t\t// Get the values of the properties of the action\r\n\t\t\t\t//var unwrappedNote = ko.toJS(note);\r\n\r\n\t\t\t\tvar noteQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', note.id())\r\n\t\t\t\t\t\t.toType('Note')\r\n\t\t\t\t\t\t.select('id, text, patientId, createdOn, createdById, typeId, methodId, outcomeId, whoId, sourceId, duration, contactedOn, validatedIdentity, admitDate, dischargeDate, dataSource, admitted, visitTypeId, otherType, utilizationSourceId, dispositionId, otherDisposition, locationId, otherLocation, updatedById, updatedOn');\r\n\t\t\t\tvar results = manager.executeQueryLocally(noteQuery);\r\n\t\t\t\tvar unwrappedNote = results[0];\r\n\r\n\t\t\t\t// Add the program ids\r\n\t\t\t\tko.utils.arrayForEach(note.programIds.peek(), function (pid) {\r\n\t\t\t\t\t\tthisNote.ProgramIds.push(pid.id.peek());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthisNote.Id = unwrappedNote.id;\r\n\t\t\t\tthisNote.Text = unwrappedNote.text;\r\n\t\t\t\tthisNote.PatientId = unwrappedNote.patientId;\r\n\t\t\t\tthisNote.CreatedOn = unwrappedNote.createdOn;\r\n\t\t\t\tthisNote.CreatedById = unwrappedNote.createdById;\r\n\t\t\t\tthisNote.updatedOn = unwrappedNote.updatedOn;\r\n\t\t\t\tthisNote.updatedById = unwrappedNote.updatedById;\r\n\t\t\t\tthisNote.TypeId = unwrappedNote.typeId;\r\n\t\t\t\tthisNote.MethodId = unwrappedNote.methodId;\r\n\t\t\t\tthisNote.OutcomeId = unwrappedNote.outcomeId;\r\n\t\t\t\tthisNote.WhoId = unwrappedNote.whoId;\r\n\t\t\t\tthisNote.SourceId = unwrappedNote.sourceId;\r\n\t\t\t\tthisNote.Duration = unwrappedNote.duration;\r\n\t\t\t\tthisNote.ContactedOn = unwrappedNote.contactedOn;\r\n\t\t\t\tthisNote.ValidatedIdentity = unwrappedNote.validatedIdentity;\r\n\t\t\t\t//utilization:\r\n\t\t\t\tthisNote.admitDate =           unwrappedNote.admitDate;\r\n\t\t\t\tthisNote.dischargeDate =       unwrappedNote.dischargeDate;\r\n\t\t\t\tthisNote.dataSource =        unwrappedNote.dataSource;\r\n\t\t\t\tthisNote.admitted =            unwrappedNote.admitted;\r\n\t\t\t\tthisNote.visitTypeId =         unwrappedNote.visitTypeId;\r\n\t\t\t\tthisNote.otherType =           unwrappedNote.otherType;\r\n\t\t\t\tthisNote.utilizationSourceId = unwrappedNote.utilizationSourceId;\r\n\t\t\t\tthisNote.dispositionId =       unwrappedNote.dispositionId;\r\n\t\t\t\tthisNote.otherDisposition =    unwrappedNote.otherDisposition;\r\n\t\t\t\tthisNote.locationId =          unwrappedNote.locationId;\r\n\t\t\t\tthisNote.otherLocation =       unwrappedNote.otherLocation;\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\treturn thisNote;\r\n\t\t}\r\n\r\n\t\t// Serialize a todo to save it\r\n\t\tfunction serializeToDo(todo, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\r\n\t\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\t\tvar thisToDo = {};\r\n\r\n\t\t\t\t// Give this object a collection of Stuff\r\n\t\t\t\tthisToDo.ProgramIds = [];\r\n\r\n\t\t\t\tvar todoQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', todo.id())\r\n\t\t\t\t\t\t.toType('ToDo')\r\n\t\t\t\t\t\t.select('id, title, description, patientId, createdById, assignedToId, statusId, categoryId, priorityId, dueDate, startTime, duration, createdOn, updatedOn, deleteFlag, closedDate');\r\n\t\t\t\tvar results = manager.executeQueryLocally(todoQuery);\r\n\t\t\t\tvar unwrappedToDo = results[0];\r\n\r\n\t\t\t\t// Add the program ids\r\n\t\t\t\tko.utils.arrayForEach(todo.programIds.peek(), function (pid) {\r\n\t\t\t\t\t\tthisToDo.ProgramIds.push(pid.id.peek());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthisToDo.Id = unwrappedToDo.id;\r\n\t\t\t\tthisToDo.Title = unwrappedToDo.title;\r\n\t\t\t\tthisToDo.Description = unwrappedToDo.description;\r\n\t\t\t\tthisToDo.PatientId = unwrappedToDo.patientId;\r\n\t\t\t\tthisToDo.CreatedById = unwrappedToDo.createdById;\r\n\t\t\t\tthisToDo.AssignedToId = unwrappedToDo.assignedToId;\r\n\t\t\t\tthisToDo.StatusId = unwrappedToDo.statusId;\r\n\t\t\t\tthisToDo.CategoryId = unwrappedToDo.categoryId;\r\n\t\t\t\tthisToDo.PriorityId = unwrappedToDo.priorityId;\r\n\t\t\t\tthisToDo.DueDate = unwrappedToDo.dueDate;\r\n\t\t\t\tthisToDo.StartTime = unwrappedToDo.startTime;\r\n\t\t\t\tthisToDo.Duration = unwrappedToDo.duration;\r\n\t\t\t\tthisToDo.UpdatedOn = unwrappedToDo.updatedOn;\r\n\t\t\t\tthisToDo.CreatedOn = unwrappedToDo.createdOn;\r\n\t\t\t\tthisToDo.ClosedDate = unwrappedToDo.closedDate;\r\n\t\t\t\tthisToDo.DeleteFlag = unwrappedToDo.deleteFlag;\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\treturn thisToDo;\r\n\t\t}\r\n\r\n\t\tfunction serializeCareTeam(careTeam, manager){\r\n\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\tvar thisCareTeam = {};\r\n\t\t\tvar careTeamQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', careTeam.id())\r\n\t\t\t\t\t\t.toType('CareTeam')\r\n\t\t\t\t\t\t.select('id, contactId');\r\n\t\t\tvar results = manager.executeQueryLocally(careTeamQuery);\r\n\t\t\tvar unwrappedCareTeam = results[0];\r\n\r\n\t\t\tthisCareTeam.Id = unwrappedCareTeam.id < 1 ? null : unwrappedCareTeam.id;\r\n\t\t\tthisCareTeam.ContactId = unwrappedCareTeam.contactId;\r\n\t\t\tthisCareTeam.members = [];\r\n\t\t\tko.utils.arrayForEach( careTeam.members(), function( member ){\r\n\t\t\t\tvar thisCareMember = serializeCareTeamMember( member, manager );\r\n\t\t\t\tthisCareTeam.members.push( thisCareMember )\r\n\t\t\t});\r\n\t\t\treturn thisCareTeam;\r\n\t\t}\r\n\r\n\t\tfunction serializeCareTeamMember( careMember, manager ){\r\n\t\t\t\tvar thisCareMember = {};\r\n\t\t\t\tvar careMemberQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', careMember.id())\r\n\t\t\t\t\t\t.toType('CareMember')\r\n\t\t\t\t\t\t.select('id, contactId, careTeamId, roleId, customRoleName, startDate, endDate, core, notes, frequencyId, distance,'\r\n\t\t\t\t\t\t\t\t+ 'distanceUnit, externalRecordId, dataSource, statusId, updatedOn, createdOn, updatedById, createdById');\r\n\r\n\t\t\t\tvar results = manager.executeQueryLocally(careMemberQuery);\r\n\t\t\t\tvar unwrappedCareMember = results[0];\r\n\r\n\t\t\t\tthisCareMember.Id \t\t\t\t= unwrappedCareMember.id < 1 ? null : unwrappedCareMember.id;\r\n\t\t\t\tthisCareMember.ContactId\t\t= unwrappedCareMember.contactId;\r\n\t\t\t\tif( unwrappedCareMember.roleId == -1 ){\t//Other Role - customRoleName\r\n\t\t\t\t\tthisCareMember.RoleId = null;\r\n\t\t\t\t\tthisCareMember.CustomRoleName   = unwrappedCareMember.customRoleName;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthisCareMember.RoleId = unwrappedCareMember.roleId;\r\n\t\t\t\t\tthisCareMember.CustomRoleName   = null;\r\n\t\t\t\t}\r\n\t\t\t\tthisCareMember.StartDate        = unwrappedCareMember.startDate;\r\n\t\t\t\tthisCareMember.EndDate          = unwrappedCareMember.endDate;\r\n\t\t\t\tthisCareMember.Core             = unwrappedCareMember.core;\r\n\t\t\t\tthisCareMember.Notes            = unwrappedCareMember.notes;\r\n\t\t\t\tthisCareMember.FrequencyId      = unwrappedCareMember.frequencyId;\r\n\t\t\t\tthisCareMember.Distance         = unwrappedCareMember.distance;\r\n\t\t\t\tthisCareMember.DistanceUnit     = unwrappedCareMember.distanceUnit;\r\n\t\t\t\tthisCareMember.ExternalRecordId = unwrappedCareMember.externalRecordId;\r\n\t\t\t\tthisCareMember.DataSource       = unwrappedCareMember.dataSource;\r\n\t\t\t\tthisCareMember.StatusId         = unwrappedCareMember.statusId;\r\n\t\t\t\tthisCareMember.UpdatedOn        = unwrappedCareMember.updatedOn;\r\n\t\t\t\tthisCareMember.CreatedOn        = unwrappedCareMember.createdOn;\r\n\t\t\t\tthisCareMember.UpdatedById      = unwrappedCareMember.updatedById;\r\n\t\t\t\tthisCareMember.CreatedById      = unwrappedCareMember.createdById;\r\n\t\t\t\tthisCareMember.CareTeamId \t\t= unwrappedCareMember.careTeamId ? unwrappedCareMember.careTeamId : null;\r\n\r\n\t\t\t\treturn thisCareMember;\r\n\t\t}\r\n\r\n\t\t//this will be deprecated:\r\n\t\t// Serialize a care member to save it\r\n\t\tfunction serializeCareMember(careMember, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\r\n\t\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\t\tvar thisCareMember = {};\r\n\r\n\t\t\t\t// Get the values of the properties of the action\r\n\t\t\t\t// var unwrappedCareMember = ko.toJS(careMember);\r\n\r\n\t\t\t\tvar careMemberQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', careMember.id())\r\n\t\t\t\t\t\t.toType('CareMember')\r\n\t\t\t\t\t\t.select('id, patientId, contactId, typeId, primary, preferredName');\r\n\t\t\t\tvar results = manager.executeQueryLocally(careMemberQuery);\r\n\t\t\t\tvar unwrappedCareMember = results[0];\r\n\r\n\t\t\t\tthisCareMember.Id = unwrappedCareMember.id;\r\n\t\t\t\t// Don't send gender, as we don't actually know it yet\r\n\t\t\t\t//thisCareMember.Gender = unwrappedCareMember.gender;\r\n\t\t\t\tthisCareMember.PatientId = unwrappedCareMember.patientId;\r\n\t\t\t\tthisCareMember.ContactId = unwrappedCareMember.contactId;\r\n\t\t\t\tthisCareMember.TypeId = unwrappedCareMember.typeId;\r\n\t\t\t\tthisCareMember.Primary = unwrappedCareMember.primary;\r\n\t\t\t\tthisCareMember.PreferredName = unwrappedCareMember.preferredName;\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\treturn thisCareMember;\r\n\t\t}\r\n\r\n\t\t// Serialize a care member to save it\r\n\t\tfunction serializeIndividual(patient, manager) {\r\n\t\t\t// When the serialization started\r\n\t\t\tvar startTime = new Date().getTime();\r\n\r\n\r\n\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\tvar thisIndividual = {};\r\n\r\n\t\t\t// Get the values of the properties of the action\r\n\t\t\t// var unwrappedCareMember = ko.toJS(careMember);\r\n\r\n\t\t\tvar patientQuery = breeze.EntityQuery\r\n\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t.where('id', '==', patient.id())\r\n\t\t\t\t\t.toType('Patient')\r\n\t\t\t\t\t.select('id, priority, gender, firstName, lastName, preferredName, suffix, dOB, middleName, background, clinicalBackground, fullSSN, dataSource, statusId, reasonId, statusDataSource, deceasedId, maritalStatusId, protected');\r\n\t\t\tvar results = manager.executeQueryLocally(patientQuery);\r\n\t\t\tvar unwrappedIndividual = results[0];\r\n\r\n\t\t\tthisIndividual.Id = unwrappedIndividual.id;\r\n\t\t\tthisIndividual.Priority = unwrappedIndividual.priority;\r\n\t\t\tthisIndividual.Gender = unwrappedIndividual.gender;\r\n\t\t\tthisIndividual.FirstName = unwrappedIndividual.firstName;\r\n\t\t\tthisIndividual.LastName = unwrappedIndividual.lastName;\r\n\t\t\tthisIndividual.PreferredName = unwrappedIndividual.preferredName;\r\n\t\t\tthisIndividual.Suffix = unwrappedIndividual.suffix;\r\n\t\t\tthisIndividual.DOB = unwrappedIndividual.dOB;\r\n\t\t\tthisIndividual.MiddleName = unwrappedIndividual.middleName;\r\n\t\t\tthisIndividual.Background = unwrappedIndividual.background;\r\n\t\t\tthisIndividual.ClinicalBackground = unwrappedIndividual.clinicalBackground;\r\n\t\t\tthisIndividual.DataSource = unwrappedIndividual.dataSource;\r\n\t\t\tthisIndividual.StatusId = unwrappedIndividual.statusId;\r\n\t\t\tthisIndividual.ReasonId = unwrappedIndividual.reasonId;\r\n\t\t\tthisIndividual.StatusDataSource = unwrappedIndividual.statusDataSource;\r\n\t\t\tthisIndividual.DeceasedId = unwrappedIndividual.deceasedId;\r\n\t\t\tthisIndividual.MaritalStatusId = unwrappedIndividual.maritalStatusId;\r\n\t\t\tthisIndividual.Protected = unwrappedIndividual.protected;\r\n\r\n\t\t\tif (unwrappedIndividual.fullSSN) {\r\n\t\t\t// Add it as a parameter\r\n\t\t\t\t\tthisIndividual.FullSSN = unwrappedIndividual.fullSSN;\r\n\t\t\t}\r\n\t\t\tif (patient.isDuplicate() && patient.forcedSave) {\r\n\t\t\t\t\tthisIndividual.InsertDuplicate = true;\r\n\t\t\t}\r\n\r\n\t\t\t// thisIndividual.PatientId = unwrappedIndividual.patientId;\r\n\t\t\t// thisIndividual.ContactId = unwrappedIndividual.contactId;\r\n\t\t\t// thisIndividual.TypeId = unwrappedIndividual.typeId;\r\n\t\t\t// thisIndividual.Primary = unwrappedIndividual.primary;\r\n\t\t\t// thisIndividual.PreferredName = unwrappedIndividual.preferredName;\r\n\r\n\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\treturn thisIndividual;\r\n\t\t}\r\n\r\n\t\t// Serialize a patient system to save it\r\n\t\tfunction serializePatientSystem(patientSystem, manager) {\r\n\t\t\t// When the serialization started\r\n\t\t\tvar startTime = new Date().getTime();\r\n\r\n\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\tvar thisPatSys = {};\r\n\r\n\t\t\tvar patientSystemQuery = breeze.EntityQuery\r\n\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t.where('id', '==', patientSystem.id())\r\n\t\t\t\t\t.toType('PatientSystem')\r\n\t\t\t\t\t.select('id, patientId, systemId, value, dataSource, statusId, primary, createdById, createdOn, updatedById, updatedOn');\r\n\t\t\tvar results = manager.executeQueryLocally(patientSystemQuery);\r\n\t\t\tvar unwrappedPatSys = results[0];\r\n\r\n\t\t\tif( unwrappedPatSys.id && !isNaN(unwrappedPatSys.id) && unwrappedPatSys.id < 0){\r\n\t\t\t\tthisPatSys.Id = null;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthisPatSys.Id = unwrappedPatSys.id;\r\n\t\t\t}\r\n\t\t\tthisPatSys.PatientId = unwrappedPatSys.patientId;\r\n\t\t\tthisPatSys.SystemId = unwrappedPatSys.systemId;\r\n\t\t\tthisPatSys.value = unwrappedPatSys.value.trim();\r\n\t\t\tthisPatSys.DataSource = unwrappedPatSys.dataSource;\r\n\t\t\tthisPatSys.statusId = unwrappedPatSys.statusId;\r\n\t\t\tthisPatSys.primary = unwrappedPatSys.primary;\r\n\t\t\tthisPatSys.createdById = unwrappedPatSys.createdById;\r\n\t\t\tthisPatSys.createdOn = unwrappedPatSys.createdOn;\r\n\t\t\tthisPatSys.updatedById = unwrappedPatSys.updatedById;\r\n\t\t\tthisPatSys.updatedOn = unwrappedPatSys.updatedOn;\r\n\r\n\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\treturn thisPatSys;\r\n\t\t}\r\n\r\n\t\t// Serialize an action to save it\r\n\t\tfunction serializePatientAllergy(allergy, manager) {\r\n\t\t\t// When the serialization started\r\n\t\t\tvar startTime = new Date().getTime();\r\n\r\n\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\tvar thisAllergy = {};\r\n\r\n\t\t\t// Create a query to\r\n\t\t\t// Get the unwrapped values of the properties of the allergy\r\n\t\t\tvar allergyQuery = breeze.EntityQuery\r\n\t\t\t\t.from('fakePath')\r\n\t\t\t\t.where('id', '==', allergy.id())\r\n\t\t\t\t.toType('PatientAllergy')\r\n\t\t\t\t.select('id, allergyName, startDate, endDate, patientId, statusId, deleteFlag, severityId, allergyId, sourceId, notes, systemName, code, codingSystemId, dataSource, externalRecordId');\r\n\t\t\tvar results = manager.executeQueryLocally(allergyQuery);\r\n\t\t\tvar unwrappedAllergy = results[0];\r\n\r\n\t\t\t// Copy actions properties\r\n\t\t\tthisAllergy.Id = unwrappedAllergy.id;\r\n\t\t\tthisAllergy.AllergyName = unwrappedAllergy.allergyName;\r\n\t\t\tvar startMoment = moment(unwrappedAllergy.startDate);\r\n\t\t\tthisAllergy.StartDate = startMoment.isValid()? startMoment.toISOString() : null;\r\n\t\t\tvar endMoment = moment(unwrappedAllergy.endDate);\r\n\t\t\tthisAllergy.EndDate = endMoment.isValid()? endMoment.toISOString() : null;\r\n\t\t\tthisAllergy.PatientId = unwrappedAllergy.patientId;\r\n\t\t\tthisAllergy.AllergyId = unwrappedAllergy.allergyId;\r\n\t\t\tthisAllergy.StatusId = unwrappedAllergy.statusId;\r\n\t\t\tthisAllergy.SourceId = unwrappedAllergy.sourceId;\r\n\t\t\tthisAllergy.DeleteFlag = unwrappedAllergy.deleteFlag;\r\n\t\t\tthisAllergy.SeverityId = unwrappedAllergy.severityId;\r\n            thisAllergy.Notes = unwrappedAllergy.notes;\r\n            thisAllergy.SystemName = unwrappedAllergy.systemName;\r\n            thisAllergy.Code = unwrappedAllergy.code;\r\n            thisAllergy.CodingSystemId = unwrappedAllergy.codingSystemId;\r\n            thisAllergy.DataSource = unwrappedAllergy.dataSource;\r\n            thisAllergy.ExternalRecordId = unwrappedAllergy.externalRecordId;\r\n\r\n\t\t\t// If it is a brand new allergy set an isNewAllergy property\r\n\t\t\tif (allergy.isUserCreated()) {\r\n\t\t\t\t\tthisAllergy.IsNewAllergy = true;\r\n\t\t\t}\r\n\r\n\t\t\tthisAllergy.AllergyTypeIds = [];\r\n\t\t\tko.utils.arrayForEach(allergy.allergyTypeIds.peek(), function (value) {\r\n\t\t\t\t\tthisAllergy.AllergyTypeIds.push(value.id.peek());\r\n\t\t\t});\r\n\r\n\t\t\tthisAllergy.ReactionIds = [];\r\n\t\t\tko.utils.arrayForEach(allergy.reactionIds.peek(), function (value) {\r\n\t\t\t\t\tthisAllergy.ReactionIds.push(value.id.peek());\r\n\t\t\t});\r\n\r\n\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\treturn thisAllergy;\r\n\t\t}\r\n\r\n\t\t// Serialize an action to save it\r\n\t\tfunction serializePatientMedication(medication, manager) {\r\n\t\t\t\t// When the serialization started\r\n\t\t\t\tvar startTime = new Date().getTime();\r\n\r\n\t\t\t\t// Create an object to hold the unwrapped JSON\r\n\t\t\t\tvar thisMedication = {};\r\n\r\n\t\t\t\t// Create a query to\r\n\t\t\t\t// Get the unwrapped values of the properties of the medication\r\n\t\t\t\tvar medicationQuery = breeze.EntityQuery\r\n\t\t\t\t\t\t.from('fakePath')\r\n\t\t\t\t\t\t.where('id', '==', medication.id())\r\n\t\t\t\t\t\t.toType('PatientMedication')\r\n\t\t\t\t\t\t.select('id, name, startDate, endDate, patientId, statusId, deleteFlag, sourceId, notes, systemName, dosage, strength, route, form, freqQuantity, freqHowOftenId, frequencyId, freqWhenId, customFrequency, categoryId, prescribedBy, typeId, sigCode, reason, familyId, isCreateNewMedication, dataSource, duration, durationUnitId, otherDuration, reviewId, refusalReasonId, otherRefusalReason, orderedBy, orderedDate, prescribedDate, rxNumber, rxDate, pharmacy, originalDataSource, externalRecordId');\r\n\t\t\t\tvar results = manager.executeQueryLocally(medicationQuery);\r\n\t\t\t\tvar unwrappedObservation = results[0];\r\n\r\n\t\t\t\t// Copy actions properties\r\n\t\t\t\tthisMedication.Id = unwrappedObservation.id;\r\n\t\t\t\tthisMedication.Name = unwrappedObservation.name;\r\n\t\tvar startMoment = moment(unwrappedObservation.startDate);\r\n\t\t\t\tthisMedication.StartDate = startMoment.isValid()? startMoment.toISOString() : null;\r\n\t\tvar endMoment = moment(unwrappedObservation.endDate);\r\n\t\t\t\tthisMedication.EndDate = endMoment.isValid()? endMoment.toISOString() : null;\r\n\t\t\t\tthisMedication.PatientId = unwrappedObservation.patientId;\r\n\t\t\t\tthisMedication.StatusId = unwrappedObservation.statusId;\r\n\t\t\t\tthisMedication.SourceId = unwrappedObservation.sourceId;\r\n\t\t\t\tthisMedication.DeleteFlag = unwrappedObservation.deleteFlag;\r\n\t\t\t\tthisMedication.Notes = unwrappedObservation.notes;\r\n\t\t\t\tthisMedication.SystemName = unwrappedObservation.systemName;\r\n\t\t\t\tthisMedication.Dosage = unwrappedObservation.dosage;\r\n\t\t\t\tthisMedication.Strength = unwrappedObservation.strength;\r\n\t\t\t\tthisMedication.Route = unwrappedObservation.route;\r\n\t\t\t\tthisMedication.Form = unwrappedObservation.form;\r\n\t\t\t\tthisMedication.FreqQuantity = unwrappedObservation.freqQuantity;\r\n\t\t\t\tthisMedication.FreqHowOftenId = unwrappedObservation.freqHowOftenId;\r\n\t\tthisMedication.FrequencyId = unwrappedObservation.frequencyId;\r\n\t\t\t\tthisMedication.FreqWhenId = unwrappedObservation.freqWhenId;\r\n\t\t\t\tthisMedication.CategoryId = unwrappedObservation.categoryId;\r\n\t\t\t\tthisMedication.PrescribedBy = unwrappedObservation.prescribedBy;\r\n\t\t\t\tthisMedication.TypeId = unwrappedObservation.typeId;\r\n\t\t\t\tthisMedication.SigCode = unwrappedObservation.sigCode;\r\n\t\t\t\tthisMedication.Reason = unwrappedObservation.reason;\r\n\t\t\t\tthisMedication.FamilyId = unwrappedObservation.familyId; //a new medicationMap record id\r\n\t\t\t\tthisMedication.RecalculateNDC = medication.recalculateNDC();\r\n                thisMedication.OriginalDataSource = unwrappedObservation.originalDataSource;\r\n                thisMedication.Duration = parseInt(unwrappedObservation.duration);\r\n                thisMedication.DurationUnitId = unwrappedObservation.durationUnitId;\r\n                thisMedication.OtherDuration = unwrappedObservation.otherDuration;\r\n                thisMedication.ReviewId = unwrappedObservation.reviewId;\r\n                thisMedication.RefusalReasonId = unwrappedObservation.refusalReasonId;\r\n                thisMedication.OtherRefusalReason = unwrappedObservation.otherRefusalReason;\r\n                thisMedication.OrderedBy = unwrappedObservation.orderedBy;\r\n                thisMedication.OrderedDate = unwrappedObservation.orderedDate;\r\n                thisMedication.PrescribedDate = unwrappedObservation.prescribedDate;\r\n                thisMedication.RxNumber = unwrappedObservation.rxNumber;\r\n                thisMedication.RxDate = unwrappedObservation.rxDate;\r\n                thisMedication.Pharmacy = unwrappedObservation.pharmacy;\r\n                thisMedication.DataSource = unwrappedObservation.dataSource;\r\n                thisMedication.ExternalRecordId = unwrappedObservation.externalRecordId;\r\n\r\n\t\t\t\tthisMedication.NDCs = [];\r\n\t\t\t\tko.utils.arrayForEach(medication.nDCs.peek(), function (value) {\r\n\t\t\t\t\t\tthisMedication.NDCs.push(value.id.peek());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthisMedication.PharmClasses = [];\r\n\t\t\t\tko.utils.arrayForEach(medication.pharmClasses.peek(), function (value) {\r\n\t\t\t\t\t\tthisMedication.PharmClasses.push(value.id.peek());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar totalTime = new Date().getTime() - startTime;\r\n\r\n\t\t\t\treturn thisMedication;\r\n\t\t}\r\n\r\n\t\tvar entitySerializer = {\r\n\t\t\t\tserializeAction: serializeAction,\r\n\t\t\t\tserializeContactCard: serializeContactCard,\r\n\t\t\t\tserializeGoal: serializeGoal,\r\n\t\t\t\tserializeIntervention: serializeIntervention,\r\n\t\t\t\tserializeTask: serializeTask,\r\n\t\t\t\tserializeBarrier: serializeBarrier,\r\n\t\t\t\tserializeObservation: serializeObservation,\r\n\t\t\t\tserializeNote: serializeNote,\r\n\t\t\t\tserializeToDo: serializeToDo,\r\n\t\t\t\tserializeCareMember: serializeCareMember,\r\n\t\t\t\tserializeCareTeam: serializeCareTeam,\r\n\t\t\t\tserializeCareTeamMember: serializeCareTeamMember,\r\n\t\t\t\tserializeIndividual: serializeIndividual,\r\n\t\t\t\tserializePatientSystem: serializePatientSystem,\r\n\t\t\t\tserializePatientAllergy: serializePatientAllergy,\r\n\t\t\t\tserializePatientMedication: serializePatientMedication\r\n\t\t}\r\n\r\n\t\treturn entitySerializer;\r\n\r\n});\n","define('services/local.collections',['models/base'], function (modelConfig) {\r\n\r\n  // This is a module to hold collections that are shared resources throughout the application\r\n  // We can't have a two way reference to datacontext, so it requires this module\r\n  var datacontext;\r\n  //\r\n  //   This augments the datacontext and breeze by keeping commonly used collections in one place.\r\n  //\r\n  //   Enums is a list of enums that is used around the datacontext\r\n\r\n  var enums = {};\r\n  enums.priorities = ko.observableArray();\r\n  enums.genders = ko.observableArray([\r\n    new modelConfig.Gender('m', 'M', 'Male'),\r\n    new modelConfig.Gender('f', 'F', 'Female'),\r\n    new modelConfig.Gender('n', 'N', 'Neutral')\r\n  ]);\r\n\tenums.patientStatuses = ko.observableArray();\r\n\tenums.patientStatusReasons = ko.observableArray();\r\n\t//patient multi id status\r\n\tenums.patientSystemStatus =  ko.observableArray();\r\n\tenums.systemStatus =  ko.observableArray();\r\n\tenums.systems = ko.observableArray();\r\n  enums.daysOfWeek = ko.observableArray([\r\n    new modelConfig.Day('0', 'M', 'Monday'),\r\n    new modelConfig.Day('1', 'Tu', 'Tuesday'),\r\n    new modelConfig.Day('2', 'W', 'Wednesday'),\r\n    new modelConfig.Day('3', 'Th', 'Thursday'),\r\n    new modelConfig.Day('4', 'F', 'Friday'),\r\n    new modelConfig.Day('5', 'Sat', 'Saturday'),\r\n    new modelConfig.Day('6', 'Sun', 'Sunday')\r\n  ]);\r\n\tenums.userAssociatedTypes = ko.observableArray([\r\n\t\tnew modelConfig.SomeType('0', 'Assigned to me'),\r\n\t\tnew modelConfig.SomeType('1', 'Unassigned')\r\n\t]);\r\n\tenums.maritalStatuses = ko.observableArray();\r\n\tenums.deceasedStatuses = ko.observableArray();\r\n\r\n\tenums.contactStatuses = ko.observableArray([\r\n\t\tnew modelConfig.SomeType('1', 'Active'),\r\n\t\tnew modelConfig.SomeType('2', 'Inactive'),\r\n\t\tnew modelConfig.SomeType('3', 'Archived')\r\n\t]);\r\n\tenums.careMemberStatuses = ko.observableArray();\r\n\tenums.contactLookUpGroupType = ko.observableArray([\r\n\t\tnew modelConfig.SomeType('0', 'Unknown'),\r\n\t\tnew modelConfig.SomeType('1', 'ContactType'),\r\n\t\tnew modelConfig.SomeType('2', 'CareTeam')\r\n\t]);\r\n  enums.phoneTypes = ko.observableArray();\r\n  enums.emailTypes = ko.observableArray();\r\n  enums.addressTypes = ko.observableArray();\r\n  enums.textTypes = ko.observableArray();\r\n  enums.languages = ko.observableArray();\r\n  enums.states = ko.observableArray();\r\n  enums.timeZones = ko.observableArray();\r\n  enums.timesOfDay = ko.observableArray();\r\n  enums.communicationModes = ko.observableArray();\r\n  enums.communicationTypes = ko.observableArray();\r\n  enums.focusAreas = ko.observableArray();\r\n  enums.sources = ko.observableArray();\r\n  enums.barrierCategories = ko.observableArray();\r\n  enums.toDoCategories = ko.observableArray();\r\n  enums.interventionCategories = ko.observableArray();\r\n  enums.goalTypes = ko.observableArray();\r\n  enums.goalTaskStatuses = ko.observableArray();\r\n  enums.barrierStatuses = ko.observableArray();\r\n  enums.interventionStatuses = ko.observableArray();\r\n  enums.careManagers = ko.observableArray();\r\n  enums.careMemberTypes = ko.observableArray();\r\n  enums.careMemberFrequency = ko.observableArray();\r\n  enums.observationTypes = ko.observableArray();\r\n  enums.observationStates = ko.observableArray();\r\n  enums.observationDisplays = ko.observableArray();\r\n  enums.objectives = ko.observableArray();\r\n  // Note specific lookups\r\n  enums.noteTypes = ko.observableArray();\r\n  enums.noteMethods = ko.observableArray();\r\n  enums.noteWhos = ko.observableArray();\r\n  enums.noteSources = ko.observableArray();\r\n  enums.noteOutcomes = ko.observableArray();\r\n\t// Note utilization type lookups\r\n\tenums.visitTypes = ko.observableArray();\r\n\tenums.utilizationSources = ko.observableArray();\r\n\tenums.dispositions = ko.observableArray();\r\n\tenums.utilizationLocations = ko.observableArray();\r\n  // Allergy lookups\r\n  enums.allergyTypes = ko.observableArray();\r\n  enums.severities = ko.observableArray();\r\n  enums.reactions = ko.observableArray();\r\n  enums.allergySources = ko.observableArray();\r\n  enums.allergyStatuses = ko.observableArray();\r\n  // Medication lookups\r\n  enums.medicationStatuses = ko.observableArray();\r\n  enums.medicationCategories = ko.observableArray();\r\n  enums.freqHowOftens = ko.observableArray();\r\n\tenums.frequency = ko.observableArray();\t//a new lookup to replace freqHowOftens and freqWhens (ENG 969)\r\n  enums.medSuppTypes = ko.observableArray();\r\n  enums.freqWhens = ko.observableArray();\r\n  enums.durationUnits = ko.observableArray();\r\n  enums.refusalReasons = ko.observableArray();\r\n  enums.medicationReviews = ko.observableArray();\r\n\r\n    //\r\n    //   ToDos are shared between a bunch of views so we keep a collection here as well\r\n    var todos = ko.observableArray();\r\n\r\n\tvar contacts = ko.observableArray();\r\n    //\r\n    //   Interventions are shared between a bunch of views so we keep a collection here as well\r\n    var interventions = ko.observableArray();\r\n\r\n    //\r\n    //   Tasks are shared between a bunch of views so we keep a collection here as well\r\n    var tasks = ko.observableArray();\r\n\r\n    //\r\n    //   Events are shared between a bunch of views so we keep a collection here as well\r\n    var events = ko.observableArray();\r\n\r\n    var alerts = ko.observableArray();\r\n\r\n\tvar contactTypesTree = ko.observableArray();\r\n\tvar contactTypes = ko.observableArray();\r\n    var localcollections = {\r\n        enums: enums,\r\n        todos: todos,\r\n\t\tcontacts: contacts,\r\n        tasks: tasks,\r\n        interventions: interventions,\r\n        events: events,\r\n        alerts: alerts,\r\n\t\tcontactTypesTree: contactTypesTree,\r\n\t\tcontactTypes: contactTypes,\r\n        refreshToDos: refreshToDos,\r\n        refreshInterventions: refreshInterventions\r\n    }\r\n    return localcollections;\r\n\r\n    function refreshToDos() {\r\n        checkDataContext();\r\n        datacontext.getEntityList(todos, 'ToDo', 'fakeTodoEndPoint', null, null, false);\r\n    }\r\n\r\n    function refreshInterventions() {\r\n        checkDataContext();\r\n        datacontext.getEntityList(interventions, 'Intervention', 'fakeInterventionEndPoint', null, null, false);\r\n    }\r\n\r\n    function checkDataContext() {\r\n        if (!datacontext) {\r\n            datacontext = require('services/datacontext');\r\n        }\r\n    }\r\n\r\n\r\n});\n","define('services/entityfinder',['services/session', 'config.services', 'services/local.collections'], function (session, servicesConfig, localCollections) {\r\n\r\n    var datacontext, patientsIndex;\r\n\r\n    var patientProblemEndPoint = ko.computed(function () {\r\n        var currentUser = session.currentUser();\r\n        if (!currentUser) {\r\n            return '';\r\n        }\r\n        return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'PatientObservation');\r\n    });\r\n\r\n    var entityFinder = {\r\n        searchForEntities: searchForEntities,\r\n        searchForProblems: searchForProblems,\r\n        searchForLocalCollectionEntities: searchForLocalCollectionEntities\r\n    };\r\n    return entityFinder;\r\n\r\n    function checkDataContext() {\r\n        if (!datacontext) {\r\n            datacontext = require('services/datacontext');\r\n            patientsIndex = require('viewmodels/patients/index');\r\n        }\r\n    }\r\n\r\n    // Search the data for entities, and materialize them\r\n    function searchForEntities(data) {\r\n        checkDataContext();\r\n        // If there is a result in the data returned, it is an alert,\r\n        if (data.Result) {\r\n            // So create an alert and add it to enums.alerts\r\n            var thisAlert = datacontext.createEntity('Alert', { result: data.Result.Result, reason: data.Result.Reason });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\r\n        // If there is a program in the data returned, it is an patient program,\r\n        if (data.Program || data.Programs) {\r\n            if (data.Program) {\r\n                createProgram(data.Program);\r\n            }\r\n            if (data.Programs) {\r\n                ko.utils.arrayForEach(data.Programs, function (program) {\r\n                    createProgram(program);\r\n                });\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Search the data for entities, and materialize them\r\n    // If you are wondering why this was hard-coded to only search for problems,\r\n    // Please request more information from the 1/23/2014 meeting\r\n    // with Tony D., Mel, Snehal, Tanuja, and Patrick\r\n    function searchForProblems(data) {\r\n        var patientId = data.PatientId;\r\n        checkDataContext();\r\n        // If there is a result in the data returned, it is an alert,\r\n        if (data.RelatedChanges && patientId) {\r\n            ko.utils.arrayForEach(data.RelatedChanges, function (change) {\r\n                if (change === '100') {\r\n                    // Go get a list of observations that are of type problem for the currently selected patient\r\n                    datacontext.getEntityList(null, patientProblemEndPoint().EntityType, patientProblemEndPoint().ResourcePath + patientId + '/Observation/Problems', null, null, true);\r\n                }\r\n                if (change === '200') {\r\n                    // Go refresh the list of patients todos\r\n                    patientsIndex.getPatientsToDos();\r\n                }\r\n                // if (change === '300') {\r\n                //     // Go refresh the list of patients todos\r\n                //     patientsIndex.getPatientsToDos();\r\n                // }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function searchForLocalCollectionEntities (data) {\r\n        var planElems = data[0];\r\n        // Check for tasks not in local collections yet\r\n        if (planElems && planElems.interventions) {\r\n            ko.utils.arrayForEach(planElems.interventions, function (intv) {\r\n                // Check for a matching intervention\r\n                if (localCollections.interventions.indexOf(intv) === -1) {\r\n                    // Add it to the local collection if it wasn't found\r\n                    localCollections.interventions.push(intv);\r\n                }\r\n            });\r\n        }\r\n        // Check for tasks not in local collections yet\r\n        if (planElems && planElems.tasks) {\r\n            ko.utils.arrayForEach(planElems.tasks, function (task) {\r\n                // Check for a matching intervention\r\n                if (localCollections.tasks.indexOf(task) === -1) {\r\n                    // Add it to the local collection if it wasn't found\r\n                    localCollections.tasks.push(task);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function createProgram(program) {\r\n        var thisProgram = datacontext.createEntity('Program', { id: program.Id, name: program.Name, patientId: program.PatientId, shortName: program.shortName, status: program.Status, enabled: program.Enabled, completed: program.Completed, elementState: program.ElementState });\r\n        thisProgram.entityAspect.acceptChanges();\r\n    }\r\n\r\n    function createModule(module) {\r\n        var thisModule = datacontext.createEntity('Module', { id: module.Id, name: module.Name, programId: module.ProgramId, shortName: module.shortName, status: module.Status, enabled: module.Enabled, completed: module.Completed });\r\n        thisModule.entityAspect.acceptChanges();\r\n    }\r\n\r\n    function createAction(action) {\r\n        var thisAction = datacontext.createEntity('action', { id: action.Id, name: action.Name, moduleId: action.ModuleId, shortName: action.shortName, status: action.Status, enabled: action.Enabled, completed: action.Completed });\r\n        thisAction.entityAspect.acceptChanges();\r\n    }\r\n});\n","define('services/dataservices/programsservice',['services/session', 'config.services', 'services/entityfinder'],\r\n    function (session, servicesConfig, entityFinder) {\r\n                \r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var programsService = {\r\n            saveActionPost: saveActionPost,\r\n            removeProgram: removeProgram,\r\n            cancelChangesForNonComputedPath: cancelChangesForNonComputedPath,\r\n            setCompletedSteps: setCompletedSteps,\r\n            savePlanElemAttrs: savePlanElemAttrs,\r\n            repeatAction: repeatAction,\r\n            getRepeatedAction: getRepeatedAction\r\n        };\r\n        return programsService;\r\n\r\n        function cancelChangesForNonComputedPath(action) {\r\n            var thisComputedPath = action.computedPath();\r\n            // Go through all steps in the action,\r\n            ko.utils.arrayForEach(action.steps(), function (step) {\r\n                // And if the step is not found in the computed path,\r\n                if (thisComputedPath.indexOf(step) === -1) {\r\n                    // Cancel changes to the step,\r\n                    step.entityAspect.rejectChanges();\r\n                    // And cancel changes to each response\r\n                    ko.utils.arrayForEach(step.responses(), function (response) {\r\n                        response.entityAspect.rejectChanges();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        function setCompletedSteps(action) {\r\n            var thisComputedPath = action.computedPath();\r\n            // Go through all steps in the action,\r\n            ko.utils.arrayForEach(action.steps(), function (step) {\r\n                // And if the step is found in the computed path,\r\n                if (thisComputedPath.indexOf(step) !== -1) {\r\n                    // Cancel changes to the step,\r\n                    step.completed(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function saveActionPost(manager, serializedAction, programId, patientId) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Which method should be called in the path\r\n            var postMethod = serializedAction.Completed ? 'Process' : 'Save';\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient/' + patientId + '/Program/Module/Action/' + postMethod, 'Program');\r\n\r\n            // If there is as action\r\n            if (serializedAction) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.Action = serializedAction;\r\n                payload.ProgramId = programId;\r\n                payload = JSON.stringify(payload);\r\n                \r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n\r\n                return manager.executeQuery(query).fail(saveFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                entityFinder.searchForProblems(data.httpResponse.data);\r\n                datacontext.programsSaving(false);\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function removeProgram(manager, programId, programName, patientId, reason) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient/' + patientId + '/Program/' + programId + '/Remove', 'Program');\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.Reason = reason;\r\n            payload.ProgramName = programName;\r\n            payload = JSON.stringify(payload);\r\n            \r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(endPoint.ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                });\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(saveFailed);    \r\n\r\n            function saveSucceeded(data) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        function savePlanElemAttrs(manager, planelem, programId, patientId) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient/' + patientId + '/Program/' + programId + '/Attributes/Update', 'Program');\r\n\r\n            // If there is as action\r\n            if (planelem) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.PlanElement = planelem;\r\n                payload = JSON.stringify(payload);\r\n                \r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(saveFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        function saveFailed(error) {\r\n            checkDataContext();\r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Save failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n            datacontext.programsSaving(false);\r\n            throw new Error('Unable to save');\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function repeatAction(manager, serializedAction, programId, patientId) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient/' + patientId + '/Program/Module/Action/Repeat', 'Action');\r\n\r\n            // If there is as action\r\n            if (serializedAction) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.Action = serializedAction;\r\n                payload.ProgramId = programId;\r\n                payload = JSON.stringify(payload);\r\n                \r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n\r\n                return manager.executeQuery(query).fail(saveFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                entityFinder.searchForProblems(data.httpResponse.data);\r\n                datacontext.programsSaving(false);\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        function getRepeatedAction(manager, action) {\r\n            var query = breeze.EntityQuery.from('Action')\r\n                .where('archiveOriginId', '==', action.id())\r\n                .toType('Action');\r\n            var results = manager.executeQueryLocally(query);\r\n            if (results.length > 0) {\r\n                return results[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    });\n","// Register all of the models in the entity manager (initialize function) and provide other non-entity models\r\ndefine('models/programs',['config.services', 'services/session', 'services/entityserializer', 'services/dataservices/programsservice'],\r\n\tfunction (servicesConfig, session, entitySerializer, programsService) {\r\n\r\n\t    var datacontext;\r\n\r\n\t    var responseEndPoint = ko.computed({\r\n\t        read: function () {\r\n\t            var currentUser = session.currentUser();\r\n\t            if (!currentUser) {\r\n\t                return '';\r\n\t            }\r\n\t            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'response', 'Response');\r\n\t        },\r\n\t        deferEvaluation: true\r\n\t    });\r\n        \r\n\t    var alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n\r\n\t\tvar DT = breeze.DataType;\r\n\r\n\t\t// Expose the model module to the requiring modules\r\n\t\tvar stepmodels = {\r\n\t\t    initialize: initialize,\r\n\t\t    extSaveAction: extSaveAction\r\n\t\t};\r\n\t\treturn stepmodels;\r\n\r\n\t\t// Initialize the entity models in the entity manager\r\n\t\tfunction initialize(metadataStore) {\r\n\r\n\t\t    // ContractProgram information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"ContractProgram\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            shortName: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Program information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Program\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            patientId: { dataType: \"String\" },\r\n\t\t            shortName: { dataType: \"String\" },\r\n\t\t            status: { dataType: \"String\" },\r\n\t\t            description: { dataType: \"String\" },\r\n\t\t            eligibilityRequirements: { dataType: \"String\" },\r\n\t\t            eligibilityStartDate: { dataType: \"DateTime\" },\r\n\t\t            eligibilityEndDate: { dataType: \"DateTime\" },\r\n\t\t            enabled: { dataType: \"Boolean\" },\r\n\t\t            sourceId: { dataType: \"String\" },\r\n\t\t            programState: { dataType: \"Int64\" },\r\n\t\t            startDate: { dataType: \"DateTime\" },\r\n\t\t            endDate: { dataType: \"DateTime\" },\r\n\t\t            version: { dataType: \"String\" },\r\n\t\t            templateName: { dataType: \"String\" },\r\n\t\t            authoredBy: { dataType: \"String\" },\r\n\t\t            programVersion: { dataType: \"String\" },\r\n\t\t            templateVersion: { dataType: \"String\" },\r\n\t\t            programVersionUpdatedOn: { dataType: \"DateTime\" },\r\n\t\t            elementState: { dataType: \"Int64\" },\r\n\t\t            stateUpdatedOn: { dataType: \"DateTime\" },\r\n                    assignDate: { dataType: \"DateTime\" },\r\n                    assignById: { dataType: \"String\" },\r\n                    assignToId: { dataType: \"String\" },\r\n\t\t            attrStartDate: { dataType: \"DateTime\" },\r\n\t\t            attrEndDate: { dataType: \"DateTime\" },\r\n\t\t            objectives: { complexTypeName: \"Objective:#Nightingale\", isScalar: false },\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            modules: {\r\n\t\t                entityTypeName: \"Module\", isScalar: false,\r\n\t\t                associationName: \"Program_Modules\"\r\n\t\t            },\r\n\t\t            patient: {\r\n\t\t                entityTypeName: \"Patient\", isScalar: true,\r\n\t\t                associationName: \"Patient_Programs\", foreignKeyNames: [\"patientId\"]\r\n\t\t            },\r\n\t\t            attributes: {\r\n\t\t                entityTypeName: \"Attributes\", isScalar: true,\r\n\t\t                associationName: \"Program_Attributes\"\r\n\t\t            },\r\n\t\t            elementStateModel: { \r\n\t\t                entityTypeName: \"ElementState\", isScalar: true,\r\n\t\t                associationName: \"Program_ElementState\", foreignKeyNames: [\"elementState\"]\r\n\t\t            },\r\n\t\t            assignBy: {\r\n\t\t                entityTypeName: \"CareManager\", isScalar: true,\r\n\t\t                associationName: \"Program_AssignedBy\", foreignKeyNames: [\"assignById\"]\r\n\t\t            },\r\n\t\t            assignTo: {\r\n\t\t                entityTypeName: \"CareManager\", isScalar: true,\r\n\t\t                associationName: \"Program_AssignedTo\", foreignKeyNames: [\"assignToId\"]\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Module information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Module\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            description: { dataType: \"String\" },\r\n\t\t            programId: { dataType: \"String\" },\r\n\t\t            sourceId: { dataType: \"String\" },\r\n\t\t            order: { dataType: \"Int64\" },\r\n\t\t            completed: { dataType: \"Boolean\" },\r\n\t\t            enabled: { dataType: \"Boolean\" },\r\n\t\t            status: { dataType: \"Int64\" },\r\n\t\t            dateCompleted: { dataType: \"DateTime\" },\r\n\t\t            next: { dataType: \"String\" },\r\n\t\t            previous: { dataType: \"String\" },\r\n\t\t            spawnElement: { complexTypeName: \"SpawnElement:#Nightingale\", isScalar: false },\r\n\t\t            elementState: { dataType: \"Int64\" },\r\n\t\t            objectives: { complexTypeName: \"Objective:#Nightingale\", isScalar: false },\r\n                    assignDate: { dataType: \"DateTime\" },\r\n                    assignById: { dataType: \"String\" },\r\n                    assignToId: { dataType: \"String\" },\r\n\t\t            attrStartDate: { dataType: \"DateTime\" },\r\n\t\t            attrEndDate: { dataType: \"DateTime\" },\r\n                    startDate: { dataType: \"DateTime\" },\r\n                    endDate: { dataType: \"DateTime\" },\r\n                    stateUpdatedOn: { dataType: \"DateTime\" },\r\n                    authoredBy: { dataType: \"String\" },\r\n                    moduleVersion: { dataType: \"String\" },\r\n                    moduleVersionUpdatedOn: { dataType: \"DateTime\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            program: {\r\n\t\t                entityTypeName: \"Program\", isScalar: true,\r\n\t\t                associationName: \"Program_Modules\", foreignKeyNames: [\"programId\"]\r\n\t\t            },\r\n\t\t            elementStateModel: {\r\n\t\t                entityTypeName: \"ElementState\", isScalar: true,\r\n\t\t                associationName: \"Module_ElementState\", foreignKeyNames: [\"elementState\"]\r\n\t\t            },\r\n\t\t            actions: {\r\n\t\t                entityTypeName: \"Action\", isScalar: false,\r\n\t\t                associationName: \"Module_Actions\"\r\n\t\t            },\r\n\t\t            assignBy: {\r\n\t\t                entityTypeName: \"CareManager\", isScalar: true,\r\n\t\t                associationName: \"Module_AssignedBy\", foreignKeyNames: [\"assignById\"]\r\n\t\t            },\r\n\t\t            assignTo: {\r\n\t\t                entityTypeName: \"CareManager\", isScalar: true,\r\n\t\t                associationName: \"Module_AssignedTo\", foreignKeyNames: [\"assignToId\"]\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Action information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Action\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            description: { dataType: \"String\" },\r\n\t\t            moduleId: { dataType: \"String\" },\r\n\t\t            sourceId: { dataType: \"String\" },\r\n\t\t            order: { dataType: \"Int64\" },\r\n\t\t            completed: { dataType: \"Boolean\" },\r\n\t\t            archived: { dataType: \"Boolean\" },\r\n                    archivedDate: { dataType: \"DateTime\" },\r\n\t\t            archiveOriginId: { dataType: \"String\" },\r\n\t\t            completedBy: { dataType: \"String\" },\r\n                    enabled: { dataType: \"Boolean\" },\r\n                    status: { dataType: \"Int64\" },\r\n\t\t\t\t\tdeleteFlag: { dataType: \"Boolean\" },\r\n                    elementState: { dataType: \"Int64\" },\r\n\t\t            stateUpdatedOn: { dataType: \"DateTime\" },\r\n                    dateCompleted: { dataType: \"DateTime\" },\r\n                    next: { dataType: \"String\" },\r\n                    previous: { dataType: \"String\" },\r\n                    assignDate: { dataType: \"DateTime\" },\r\n                    assignById: { dataType: \"String\" },\r\n                    assignToId: { dataType: \"String\" },\r\n                    actionVersion: { dataType: \"String\" },\r\n                    actionVersionUpdatedOn: { dataType: \"DateTime\" },\r\n                    authoredBy: { dataType: \"String\" },\r\n\t\t            attrStartDate: { dataType: \"DateTime\" },\r\n\t\t            attrEndDate: { dataType: \"DateTime\" },\r\n                    spawnElement: { complexTypeName: \"SpawnElement:#Nightingale\", isScalar: false },\r\n\t\t            objectives: { complexTypeName: \"Objective:#Nightingale\", isScalar: false }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            module: {\r\n\t\t                entityTypeName: \"Module\", isScalar: true,\r\n\t\t                associationName: \"Module_Actions\", foreignKeyNames: [\"moduleId\"]\r\n\t\t            },\r\n\t\t            steps: {\r\n\t\t                entityTypeName: \"Step\", isScalar: false,\r\n\t\t                associationName: \"Action_Steps\"\r\n\t\t            },\r\n\t\t            elementStateModel: {\r\n\t\t                entityTypeName: \"ElementState\", isScalar: true,\r\n\t\t                associationName: \"Action_ElementState\", foreignKeyNames: [\"elementState\"]\r\n\t\t            },\r\n\t\t            assignBy: {\r\n\t\t                entityTypeName: \"CareManager\", isScalar: true,\r\n\t\t                associationName: \"Action_AssignedBy\", foreignKeyNames: [\"assignById\"]\r\n\t\t            },\r\n\t\t            assignTo: {\r\n\t\t                entityTypeName: \"CareManager\", isScalar: true,\r\n\t\t                associationName: \"Action_AssignedTo\", foreignKeyNames: [\"assignToId\"]\r\n\t\t            },\r\n\t\t            historicalAction: {\r\n\t\t                entityTypeName: \"Action\", isScalar: true,\r\n\t\t                associationName: \"Action_HistoricalAction\", foreignKeyNames: [\"archiveOriginId\"]\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Step information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Step\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            header: { dataType: \"String\" },\r\n\t\t            description: { dataType: \"String\" },\r\n\t\t            title: { dataType: \"String\" },\r\n\t\t            text: { dataType: \"String\" },\r\n\t\t            question: { dataType: \"String\" },\r\n\t\t            notes: { dataType: \"String\" },\r\n\t\t            actionId: { dataType: \"String\" },\r\n\t\t            sourceId: { dataType: \"String\" },\r\n\t\t            stepTypeId: { dataType: \"String\" },\r\n\t\t            selectedResponseId: { dataType: \"String\" },\r\n\t\t            order: { dataType: \"Int64\" },\r\n\t\t            controlType: { dataType: \"Int64\" },\r\n\t\t            selectType: { dataType: \"Int64\" },\r\n\t\t            completed: { dataType: \"Boolean\" },\r\n\t\t            enabled: { dataType: \"Boolean\" },\r\n\t\t            spawnElement: { complexTypeName: \"SpawnElement:#Nightingale\", isScalar: false },\r\n                    status: { dataType: \"Int64\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            action: {\r\n\t\t                entityTypeName: \"Action\", isScalar: true,\r\n\t\t                associationName: \"Action_Steps\", foreignKeyNames: [\"actionId\"]\r\n\t\t            },\r\n\t\t            stepType: {\r\n\t\t                entityTypeName: \"StepType\", isScalar: true,\r\n\t\t                associationName: \"Step_StepType\", foreignKeyNames: [\"stepTypeId\"]\r\n\t\t            },\r\n\t\t            responses: {\r\n\t\t                entityTypeName: \"Response\", isScalar: false,\r\n\t\t                associationName: \"Step_Responses\"\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Response entity\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Response\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            text: { dataType: \"String\" },\r\n\t\t            required: { dataType: \"Boolean\" },\r\n\t\t            value: { dataType: \"String\" },\r\n\t\t            stepId: { dataType: \"String\" },\r\n\t\t            nominal: { dataType: \"Boolean\" },\r\n\t\t            order: { dataType: \"Int64\" },\r\n\t\t            spawnElement: { complexTypeName: \"SpawnElement:#Nightingale\", isScalar: false },\r\n\t\t            nextStepId: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            step: {\r\n\t\t                entityTypeName: \"Step\", isScalar: true,\r\n\t\t                associationName: \"Step_Responses\", foreignKeyNames: [\"stepId\"]\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Step Type entity\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"StepType\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"Int64\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            path: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\r\n\t\t            steps: {\r\n\t\t                entityTypeName: \"Step\", isScalar: false,\r\n\t\t                associationName: \"Step_StepType\"\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Spawn Element complex type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"SpawnElement\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            elementId: { dataType: \"String\" },\r\n\t\t            elementType: { dataType: \"String\" },\r\n                    tag: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Attributes complex type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Attributes\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            planElementId: { dataType: \"String\" },\r\n                    authoredBy: { dataType: \"String\" },\r\n                    ineligibleReason: { dataType: \"String\" },\r\n                    eligibility: { dataType: \"String\" },\r\n                    enrollment: { dataType: \"String\" },\r\n                    graduatedFlag: { dataType: \"String\" },\r\n                    population: { dataType: \"String\" },\r\n                    removedReason: { dataType: \"String\" },\r\n                    didNotEnrollReason: { dataType: \"String\" },\r\n                    overrideReason: { dataType: \"String\" },\r\n                    removedReason: { dataType: \"String\" },\r\n                    completedBy: { dataType: \"String\" },\r\n                    completed: { dataType: \"Int64\" },\r\n                    dateCompleted: { dataType: \"DateTime\" },\r\n                    market: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t        navigationProperties: {\t\t \r\n\t\t            // module: {\r\n\t\t            //     entityTypeName: \"Module\", isScalar: true,\r\n\t\t            //     associationName: \"Module_Attributes\", foreignKeyNames: [\"planElementId\"]\r\n\t\t            // },\r\n\t\t            program: {\r\n\t\t                entityTypeName: \"Program\", isScalar: true,\r\n\t\t                associationName: \"Program_Attributes\", foreignKeyNames: [\"planElementId\"]\r\n\t\t            },\r\n\t\t            eligibilityModel: {\r\n\t\t                entityTypeName: \"EligibilityStatus\", isScalar: true,\r\n\t\t                associationName: \"Attributes_Eligibility\", foreignKeyNames: [\"eligibility\"]\r\n\t\t            },\r\n\t\t            enrollmentModel: {\r\n\t\t                entityTypeName: \"EnrollmentStatus\", isScalar: true,\r\n\t\t                associationName: \"Attributes_Enrollment\", foreignKeyNames: [\"enrollment\"]\r\n\t\t            },\r\n\t\t            graduatedFlagModel: {\r\n\t\t                entityTypeName: \"YesOrNo\", isScalar: true,\r\n\t\t                associationName: \"Attributes_GraduatedFlag\", foreignKeyNames: [\"graduatedFlag\"]\r\n\t\t            },\r\n\t\t            completedModel: {\r\n\t\t                entityTypeName: \"YesOrNo\", isScalar: true,\r\n\t\t                associationName: \"Attributes_Completed\", foreignKeyNames: [\"completed\"]\r\n\t\t            }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Objective complex type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Objective\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\" },\r\n\t\t            value: { dataType: \"String\" },\r\n\t\t            unit: { dataType: \"String\" },\r\n\t\t            status: { dataType: \"Int64\" },\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Objective cate complex type\r\n\t\t    //\r\n\t\t    // This is a look up that unfortunately\r\n\t\t    // matched the objective from above\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"ObjectiveLookup\",\r\n\t\t        namespace: \"Nightingale\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            categories: { complexTypeName: \"IdName:#Nightingale\", isScalar: false }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    metadataStore.registerEntityTypeCtor('Program', null, programInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor('Module', null, moduleInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor('Objective', null, objectiveInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor('Action', null, actionInitializer);\r\n\t\t    metadataStore.registerEntityTypeCtor('Step', null, stepInitializer);\r\n\r\n\t\t    function programInitializer(program) {\r\n\t\t        if (!program.elementState()) {\r\n\t\t            program.elementState(1);\r\n\t\t        }\r\n\t\t        program.eligibilityDatesStatement = ko.computed(function () {\r\n\t\t        \tvar startdate = program.eligibilityStartDate();\r\n\t\t        \tvar enddate = program.eligibilityEndDate();\r\n\t\t        \tif (!startdate && !enddate) { \r\n\t\t        \t\treturn '';\r\n\t\t        \t}\r\n\t\t        \tvar thistext = 'Eligibility ';\r\n\t\t        \tif (startdate) {\r\n                \t\tstartdate = moment(startdate).format('MM/DD/YYYY');\r\n\t\t        \t\tthistext += ' begins on ' + startdate;\r\n\t\t        \t}\r\n\t\t        \tif (enddate) {\r\n\t\t        \t\tenddate = moment(enddate).format('MM/DD/YYYY');\r\n\t\t        \t\tif (startdate) {\r\n\t\t        \t\t\tthistext += ' and ends on ' + enddate;\r\n\t\t        \t\t} else {\r\n\t\t        \t\t\tthistext += ' ends on ' + enddate;\t\t        \t\t\t\r\n\t\t        \t\t}\r\n\t\t        \t}\r\n\t\t        \treturn thistext;\r\n\t\t        });\r\n\t\t        program.duration = ko.computed(function () {\r\n\t                var startDate = moment(program.attrStartDate());\r\n\t                var today = moment();\r\n\t                var dateDiff = today.diff(startDate, 'days');\r\n\t                return dateDiff;\r\n\t\t        });\r\n\t\t        program.allModulesOpen = ko.computed(function () {\r\n\t                // Check if any modules aren't opened yet,\r\n\t                var firstClosed = ko.utils.arrayFirst(program.modules(), function (module) {\r\n\t                    return !module.isOpen();\r\n\t                });\r\n\t                return !firstClosed;\r\n\t\t        });\r\n\t\t\t\t\r\n\t\t\t\t/**\r\n\t\t\t\t*\tconcatenating the end date if it is populated to the program name.\r\n\t\t\t\t*\t@method displayName\r\n\t\t\t\t*/\r\n\t\t\t\tprogram.displayName = ko.computed( function(){\t\t\t\t\t\r\n\t\t\t\t\tvar name = program.name();\r\n\t\t\t\t\tvar endDate = program.attrEndDate();\r\n\t\t\t\t\tvar elementState = program.elementState();\r\n\t\t\t\t\tif ( endDate && elementState == 5 || elementState == 6){\r\n\t\t\t\t\t\tvar theMoment = moment( endDate );\r\n\t\t\t\t\t\tif( theMoment.isValid() ){\r\n\t\t\t\t\t\t\tname = name +' - ' + theMoment.format('MM/DD/YYYY');\t\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn name;\r\n\t\t\t\t});\r\n\t\t    };\r\n\r\n\t\t    function moduleInitializer(module) {\r\n\t\t    \tmodule.isOpen = ko.observable();\r\n\t\t    \t// Set it to false either way for now\r\n\t\t    \tif (module.elementState() !== 4 || module.completed()) {\r\n\t\t    \t\tmodule.isOpen(false);\r\n\t\t    \t} else {\r\n\t\t    \t\tmodule.isOpen(false);\r\n\t\t    \t}\r\n\t\t        module.completeActionsCount = ko.computed(function () {\r\n\t                var theseActions = module.actions();\r\n\t                var count = ko.utils.arrayFilter(theseActions, function (act) {\r\n\t                \treturn act.elementState() === 5 && act.enabled();\r\n\t                });\r\n\t                return count.length > 0 ? count.length : '-';\r\n\t\t        });\r\n\t\t        module.openActionsCount = ko.computed(function () {\r\n\t                var theseActions = module.actions();\r\n\t                var count = ko.utils.arrayFilter(theseActions, function (act) {\r\n\t                \treturn act.elementState() === 4 && act.enabled();\r\n\t                });\r\n\t                return count.length > 0 ? count.length : '-';\r\n\t\t        });\r\n\t\t        module.notStartedActionsCount = ko.computed(function () {\r\n\t                var theseActions = module.actions();\r\n\t                var count = ko.utils.arrayFilter(theseActions, function (act) {\r\n\t                \treturn act.elementState() === 2 && act.enabled();\r\n\t                });\r\n\t                return count.length > 0 ? count.length : '-';\r\n\t\t        });\r\n\t\t    };\r\n\r\n\t\t    function objectiveInitializer(objective) {\r\n\t\t    \tcheckDataContext();\r\n\t\t\t\tobjective.objective = ko.computed(function () {\r\n\t\t\t\t\tvar thisObjective;\r\n\t\t\t\t\tif (objective.id()) {\r\n\t\t\t\t\t\tthisObjective = ko.utils.arrayFirst(datacontext.enums.objectives(), function (obj) {\r\n\t\t\t\t\t\t\treturn obj.id() === objective.id();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn thisObjective;\r\n\t\t\t\t});\r\n\t\t\t\tobjective.categoriesString = ko.computed(function () {\r\n\t\t\t\t\tvar thisObjective;\r\n\t\t\t\t\tvar thisString = '';\r\n\t\t\t\t\tif (objective.id()) {\r\n\t\t\t\t\t\t// Find the matching objective lookup\r\n\t\t\t\t\t\tthisObjective = ko.utils.arrayFirst(datacontext.enums.objectives(), function (obj) {\r\n\t\t\t\t\t\t\treturn obj.id() === objective.id();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// If there is an objective found and it has categories,\r\n\t\t\t\t\t\tif (thisObjective && thisObjective.categories()) {\r\n\t\t\t\t\t\t\t// Create a category string with it's categories\r\n\t\t\t\t\t\t\tko.utils.arrayForEach(thisObjective.categories(), function (cat) {\r\n\t\t\t\t\t\t\t\tthisString += cat.name() + ', ';\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthisString = thisString.substring(0, thisString.length - 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn thisString;\r\n\t\t\t\t});\r\n\t\t    };\r\n\r\n\t\t    function actionInitializer(action) {\r\n\t\t        action.computedPath = ko.computed({\r\n\t\t            read: function () {\r\n\t\t            \t// Make sure the datacontext is set up\r\n\t\t        \t\tcheckDataContext();\r\n\t\t            \t// At the beginning, set a variable to hold whether an inactive step is found yet\r\n\t\t            \tvar inactiveStepFound = false;\r\n\t\t                var theseSteps = action.steps().sort(alphabeticalOrderSort);\r\n\t\t                var computedSteps = [];\r\n\t\t                if (theseSteps.length === 0) { return theseSteps; }\r\n\t\t                // Get the first step, and halt the loop when you reach 'Complete'\r\n\t\t                var isFirstStep = true;\r\n\t\t                for (var step = theseSteps[0]; !!step;) {\r\n\t\t                    // If it's the first step,\r\n\t\t                    if (isFirstStep) {\r\n\t\t                        // Set it to active\r\n\t\t                        step.activeStep(true);\r\n\t\t                    }\r\n\t\t                    // Push this step into these steps\r\n\t\t                    computedSteps.push(step);\r\n\t\t                    var theNextStep = findNextStep(step, inactiveStepFound);\r\n\t\t                    // If the next step was returned as inactive,\r\n\t\t                    if (theNextStep && !theNextStep.activeStep()) {\r\n\t\t                    \t// Then an inactive step has been found\r\n\t\t                    \tinactiveStepFound = true;\r\n\t\t                    }\r\n\t\t                    // If no next step is returned, break out of the loop\r\n\t\t                    if (!theNextStep) { break; }\r\n\t\t                    step = theNextStep;\r\n\t\t                    isFirstStep = false;\r\n\t\t                }\r\n\t\t                return computedSteps;\r\n\t\t            },\r\n\t\t            deferEvaluation: true\r\n\t\t        }).extend({ throttle: 50});\r\n\t\t        action.hasChanges = ko.computed(function () {\r\n\t\t            return action.elementState() === 4;\r\n\t\t        });\r\n\t\t        action.isSaving = ko.observable(false);\r\n\t\t\t\taction.isLoading = ko.observable(false);\r\n\t\t        action.saveAction = function () {\r\n\t\t            setTimeout(function () {\r\n\t\t                action.isSaving(true);\r\n\t\t                saveAction(action);\r\n\t\t            }, 0);\r\n\t\t        };\r\n\t\t        action.formattedCompletedDate = ko.computed(function () {\r\n\t                var date = moment(action.dateCompleted());\r\n\t                var strDate = date.format('MM/DD/YYYY');\r\n\t                return strDate;\r\n\t\t        });\r\n\t\t        // Get all of this actions' history\r\n\t\t        action.history = ko.computed(function () {\r\n\t\t        \t// Subscribe to the historical action\r\n\t\t        \tvar firstHistoricalAction = action.historicalAction();\r\n\t\t        \t// Temporary array containing actions history\r\n\t\t        \tvar tempArray = [];\r\n\t\t        \t// Recursively check for historical actions\r\n\t\t        \tcheckForHistory(action, tempArray);\r\n\t\t        \t// Return the list of actions\r\n\t\t        \treturn tempArray;\r\n\t\t        });\r\n\r\n\t\t        function checkForHistory(action, array) {\r\n\t\t        \t// Subscribe to the archive origin id property\r\n\t\t        \tvar subscription = action.archiveOriginId();\r\n\t\t        \tif (action.historicalAction()) {\r\n\t\t        \t\tarray.push(action.historicalAction());\r\n\t\t        \t\tcheckForHistory(action.historicalAction(), array);\r\n\t\t        \t}\r\n\t\t        }\r\n\t\t    };\r\n\r\n\t\t    function stepInitializer(step) {\r\n\t\t        checkDataContext();\r\n\t\t        step.activeStep = ko.observable(false);\r\n\t\t        step.selectedResponse = ko.observable();\r\n\t\t        step.computedResponse = ko.computed({   // function () {\r\n\t\t            read: function () {\r\n                        // If there is no selectedResponseId then return null\r\n\t\t                if (step.selectedResponseId() === 0 || !step.selectedResponseId()) {\r\n\t\t                    return null;\r\n\t\t                }\r\n                        // If not then go get it (have to require datacontext here due to a circular dependency)\r\n\t\t                datacontext.getEntityById(step.selectedResponse, step.selectedResponseId(), 'Response', 'fakePath1', false);\r\n\t\t                return step.selectedResponse();\r\n\t\t            },\r\n\t\t            write: function (newValue) {\r\n\t\t            \tif (newValue !== undefined) {\r\n\t\t            \t\tif (step.action().elementState() !== 4) {\r\n\t\t            \t\t\tstep.action().stateUpdatedOn(new moment().toISOString());\r\n\t\t\t                \tstep.action().elementState(4);\r\n\t\t            \t\t}\r\n\t\t\t                step.selectedResponse(newValue);\r\n\t\t\t                if (newValue) {\r\n\t\t\t                \tstep.selectedResponseId(newValue.id());\t\t                \t\r\n\t\t\t                }\t\t            \t\t\r\n\t\t            \t}\r\n\t\t            },\r\n\t\t            deferEvaluation: true\r\n\t\t        });\r\n\t\t        step.hasNoTrueAnswers = ko.computed(function () {\r\n                    // If it has a type and that type is Checkbox,\r\n\t\t            if (step.stepType() && step.stepType().name() === 'Checkbox') {\r\n                        // Try to find a response with value set to true\r\n\t\t                var thisAnswer = ko.utils.arrayFirst(step.responses(), function (rspnse) {\r\n\t\t                    return rspnse.value() === 'true';\r\n\t\t                });\r\n                        // If an answer is found,\r\n\t\t                if (thisAnswer) {\r\n                            // Return false\r\n\t\t                    return false;\r\n\t\t                }\r\n                        // Else return true, meaning it has no true answers\r\n\t\t                return true;\r\n\t\t            }\r\n\t\t            // If we reach here return false\r\n\t\t            return false;\r\n\t\t        }).extend({ throttle: 25 });\r\n\t\t    };\r\n\r\n\t\t    function findNextStep(step, inactiveStepFound) {\r\n\r\n\t\t    \t// Anonymous function\r\n\t\t        function getNextStep(stepId, setActive) {\r\n\t\t            // Create an observable to catch the result of getEntityById\r\n\t\t            var nextStepObservable = ko.observable();\r\n                    // Go get the next step\r\n\t\t            datacontext.getEntityById(nextStepObservable, stepId, 'Step', 'fakePath2', false);\r\n                    // If nextStepObservable has a value\r\n\t\t            if (nextStepObservable()) {\r\n                        // Set the step as the value of activestepFound\r\n\t\t                nextStepObservable().activeStep(setActive);\r\n\t\t            }\r\n\t\t            return nextStepObservable();\r\n\t\t        }\r\n\r\n\t\t        var nextStep = null;\r\n\t\t        var isCompleteStep = step.stepType().name() === 'Complete';\r\n\t\t        // Set a var equal to the response is not required or it is required and has a value\r\n\t\t        var ifRequiredHasValue = (!!step.computedResponse() && (!step.computedResponse().required() || (!!step.computedResponse().required() && !!step.computedResponse().value())));\r\n\t\t        var ifIsSingleSelectAndRequiredHasValue = (!!step.computedResponse() && (!step.computedResponse().required() || (!!step.computedResponse().required() && (step.stepType().name() === 'SingleSelect' || step.stepType().name() === 'Radio' ))));\r\n\t\t        // If a Response has been selected and it has a next step and it's not required and it's not a complete step,\t\t        \r\n\t\t        if (step.computedResponse() && step.computedResponse().nextStepId() && ifRequiredHasValue && !isCompleteStep) {\r\n\t\t            // Return the next step as the next step \r\n\t\t            nextStep = getNextStep(step.computedResponse().nextStepId(), !inactiveStepFound);\r\n\t\t        }\r\n\t\t        else if (step.computedResponse() && step.computedResponse().nextStepId() && ifIsSingleSelectAndRequiredHasValue && !isCompleteStep) {\r\n\t\t        \tnextStep = getNextStep(step.computedResponse().nextStepId(), !inactiveStepFound);\t\r\n\t\t        }\r\n\t\t        // If not and the step.Responses does not have a length of zero and it's not a complete step,\r\n\t\t        else if (step.responses().length !== 0 && !isCompleteStep) {\r\n\t\t            // Iterate through the responses to look for a nominal answer\r\n\t\t            ko.utils.arrayForEach(step.responses(), function (response) {\r\n\t\t                if (response.nominal() === true) {\r\n\t\t                    // If the step's response is required and there is a value,\r\n\t\t                    if (response.required() === true && !response.value()) {\r\n\t\t                    \tinactiveStepFound = true;\r\n\t\t                    }\r\n\t\t                    // Set the nominal response as the next step\r\n\t\t                    nextStep = getNextStep(response.nextStepId(), !inactiveStepFound);\r\n\t\t                }\r\n\t\t            });\r\n\t\t        }\r\n\t\t        else {\r\n\t\t            nextStep = null;\r\n\t\t        }\r\n                // If it is a complete step,\r\n\t\t        if (isCompleteStep) {\r\n\t\t            // Tack on a completeAction property, if it doesn't already have one\r\n\t\t            if (!step.completeAction) {\r\n\t\t                step.completeAction = function () {\r\n\t\t                    var action = step.action();\r\n\t\t                    setTimeout(function () {\r\n\t\t                        action.dateCompleted(new moment().toISOString());\r\n\t\t                        action.completed(true);\r\n\t\t                        action.isSaving(true);\r\n\t\t                        saveAction(action);\r\n\t\t                    }, 0);\r\n\t\t                };\r\n\t\t            }\r\n\t\t        }\r\n\t\t        return nextStep;\r\n\t\t    };\r\n\r\n\t\t    function saveAction(action) {\r\n\t\t        checkDataContext();\r\n\t\t        setTimeout(function () {\r\n\t\t            // Cancel changes for everything not in the computed path\r\n\t\t            programsService.cancelChangesForNonComputedPath(action);\r\n\r\n\t\t            // If the action is set to completed,\r\n\t\t            if (action.completed()) {\r\n\t\t            \t// Set the completed steps to true\r\n\t\t            \tprogramsService.setCompletedSteps(action);\r\n\t\t            }\r\n\r\n\t\t            var serializedAction = entitySerializer.serializeAction(action, datacontext.manager);\r\n\r\n\t\t            // Get the id of the patient that this action is for\r\n\t\t            var patientId = action.module().program().patientId();\r\n\r\n\t\t            // Get the id of the patient that this action is for\r\n\t\t            var programId = action.module().program().id();\r\n\r\n\t\t            return datacontext.saveAction(action, serializedAction, programId, patientId);\r\n\t\t        }, 50);\r\n\r\n\t\t        function saveCompleted() {\r\n\t\t        }\r\n\t\t    };\r\n\t\t}\r\n\r\n\t\t// Need to refactor all save action stuff to a service and \r\n\t\t// have datacontext implement it\r\n\t\tfunction extSaveAction(action) {\r\n\t        checkDataContext();\r\n\t        setTimeout(function () {\r\n\t            // Cancel changes for everything not in the computed path\r\n\t            programsService.cancelChangesForNonComputedPath(action);\r\n\r\n\t            // If the action is set to completed,\r\n\t            if (action.completed()) {\r\n\t            \t// Set the completed steps to true\r\n\t            \tprogramsService.setCompletedSteps(action);\r\n\t            }\r\n\r\n\t            var serializedAction = entitySerializer.serializeAction(action, datacontext.manager);\r\n\r\n\t            // Get the id of the patient that this action is for\r\n\t            var patientId = action.module().program().patientId();\r\n\r\n\t            // Get the id of the patient that this action is for\r\n\t            var programId = action.module().program().id();\r\n\t            action.entityAspect.acceptChanges();\r\n\r\n\t            return datacontext.saveAction(action, serializedAction, programId, patientId).then(saveCompleted);\r\n\t        }, 50);\r\n\r\n\t        function saveCompleted() {\r\n\t            // If the action has been completed,\r\n\t            if (action.completed()) {\r\n\t                // Make sure the state is set to 2\r\n\t                action.elementState(5);\r\n\t            }\r\n\t            // Else if the element state is 4 (in progress) when saved,\r\n\t            else if (action.elementState() === 4) {\r\n\t                // Display an alert that progress was saved\r\n\t                var thisAlert = datacontext.createEntity('Alert', { result: 'warning', reason: 'Progress saved' });\r\n\t                thisAlert.entityAspect.acceptChanges();\r\n\t                datacontext.alerts.push(thisAlert);\r\n\t            }\r\n\t            // Save the action and all of it's steps and responses\r\n\t            action.entityAspect.acceptChanges();\r\n\r\n                // Save changes to all of the steps and responses\r\n\t            ko.utils.arrayForEach(action.steps(), function (step) {\r\n\t                step.entityAspect.acceptChanges();\r\n\t                ko.utils.arrayForEach(step.responses(), function (response) {\r\n\t                    response.entityAspect.acceptChanges();\r\n\t                });\r\n\t            });\r\n\t            // Save the action's module\r\n\t            action.module().entityAspect.acceptChanges();\r\n\t            action.isSaving(false);\r\n\t        }\r\n\r\n\t\t}\r\n\r\n\t\tfunction checkDataContext() {\r\n\t\t    if (!datacontext) {\r\n\t\t        datacontext = require('services/datacontext');\r\n\t\t    }\r\n\t\t}\r\n\t});\n","// Register all of the user related models in the entity manager (initialize function) and provide other non-entity models\r\ndefine('models/users',['config.services', 'services/session'],\r\n\tfunction (servicesConfig, session) {\r\n\r\n\t    var datacontext;\r\n\r\n\t\tvar DT = breeze.DataType;\r\n\r\n\t\t// Expose the model module to the requiring modules\r\n\t\tvar usermodels = {\r\n\t\t    initialize: initialize,\r\n\t\t    createCalendarMocks: createCalendarMocks,\r\n\t\t    initializeEnums: initializeEnums\r\n\t\t};\r\n\t\treturn usermodels;\r\n\r\n\t\t// Initialize the entity models in the entity manager\r\n\t\tfunction initialize(metadataStore) {\r\n\r\n\t\t    // User information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"User\",\r\n\t\t        namespace: \"NightingaleUser\",\r\n\t\t        dataProperties: {\r\n\t\t            userId: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            firstName: { dataType: \"String\" },\r\n\t\t            lastName: { dataType: \"String\" },\r\n\t\t            userName: { dataType: \"String\" },\r\n\t\t            aPIToken: { dataType: \"String\" },\r\n\t\t            contracts: { complexTypeName: \"Contract:#NightingaleUser\", isScalar: false }\r\n\t\t        }\r\n\t\t    });\r\n\r\n            // Contract complex type\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Contract\",\r\n\t\t        namespace: \"NightingaleUser\",\r\n\t\t        isComplexType: true,\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"Int64\" },\r\n\t\t            name: { dataType: \"String\" },\r\n\t\t            number: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n\r\n\t\t    // Calendar Event information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"Event\",\r\n\t\t        namespace: \"NightingaleUser\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            userId: { dataType: \"String\" },\r\n\t\t            title: { dataType: \"String\" },\r\n\t\t            start: { dataType: \"DateTime\" },\r\n\t\t            end: { dataType: \"DateTime\" },\r\n                    allDay: { dataType: \"Boolean\" },\r\n\t\t            url: { dataType: \"String\" },\r\n\t\t            patientId: { dataType: \"String\" },\r\n\t\t            typeId: { dataType: \"String\" },\r\n\t\t            patientName: { dataType: \"String\" },\r\n\t\t            assignedToName: { dataType: \"String\" }\r\n\t\t        },\r\n\t\t\t\tnavigationProperties: {\r\n\t\t\t\t\ttype: {\r\n\t\t\t\t\t\tentityTypeName: \"EventType\", isScalar: true,\r\n\t\t\t\t\t\tassociationName: \"Event_Type\", foreignKeyNames: [\"typeId\"]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t    });\r\n\r\n\t\t    // Event type information\r\n\t\t    metadataStore.addEntityType({\r\n\t\t        shortName: \"EventType\",\r\n\t\t        namespace: \"NightingaleUser\",\r\n\t\t        dataProperties: {\r\n\t\t            id: { dataType: \"String\", isPartOfKey: true },\r\n\t\t            name: { dataType: \"String\" }\r\n\t\t        }\r\n\t\t    });\r\n            \r\n\t\t    metadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'User', null, userInitializer);\r\n\t\t\tmetadataStore.registerEntityTypeCtor(\r\n\t\t\t\t'Event', null, eventInitializer);\r\n\t\t\t\t\r\n\t\t    function userInitializer(user) {\r\n\t\t        user.settings = ko.observable();//ko.observableArray();\r\n\t\t        user.recentIndividuals = ko.observableArray();\r\n\t\t        user.computedRecentIndividuals = ko.computed(function () {\r\n\t\t        \tvar theseIndividuals = user.recentIndividuals().slice(0, 5);\r\n\t\t        \treturn theseIndividuals;\r\n\t\t        }).extend({ throttle: 25 });\r\n\t\t    }\r\n\t\t\t\r\n\t\t\tfunction eventInitializer(event){\r\n\t\t\t\tevent.hasTimes = ko.computed( function(){\r\n\t\t\t\t\treturn moment( event.end() ).isValid() && moment( event.start() ).isValid();\r\n\t\t\t\t});\r\n\t\t\t\tevent.timeString = function(){\t\t\t\t\r\n\t\t\t\t\tvar start = moment( event.start() );\r\n\t\t\t\t\tvar strDate = start.isValid ? start.format(\"MM/DD/YYYY\") : '-';\r\n\t\t\t\t\tif( event.end() ){\t\t\t\t\t\r\n\t\t\t\t\t\tvar end = moment( event.end() );\t\t\t\t\t\r\n\t\t\t\t\t\tif( end.isValid() && start.isValid() ){\r\n\t\t\t\t\t\t\tvar strDate = start.format(\"MM/DD/YYYY h:mm A\");\r\n\t\t\t\t\t\t\tif( start.isSame( end, 'day') ){\r\n\t\t\t\t\t\t\t\tvar endTime = end.format(\"h:mm A\");\r\n\t\t\t\t\t\t\t\tstrDate += ' - ' + endTime;\r\n\t\t\t\t\t\t\t} else{\r\n\t\t\t\t\t\t\t\tvar endTime = end.format(\"MM/DD/YYYY h:mm A\");\r\n\t\t\t\t\t\t\t\tstrDate += ' - ' + endTime;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn strDate;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t    // Initialize the entity models in the entity manager\r\n\t\tfunction initializeEnums(manager) {\r\n\r\n\t\t    // Create the enums to use for element states so that they can be shared throughout the application\r\n\t\t    manager.createEntity('EventType', { id: 1, name: 'Intervention' }).entityAspect.acceptChanges();\r\n\t\t    manager.createEntity('EventType', { id: 2, name: 'To Do' }).entityAspect.acceptChanges();\r\n\r\n\t\t}\r\n\r\n\t\tfunction createCalendarMocks(manager, userId) {\r\n\r\n            // Grab todays date\r\n\t\t    var date = new Date();\r\n\t\t    var d = date.getDate();\r\n\t\t    var m = date.getMonth();\r\n\t\t    var y = date.getFullYear();\r\n\r\n            // Mock up some fake calendar events\r\n\t\t    var eventOne = manager.createEntity('Event', { id: 'eventone', title: 'Diabetes Appointment', userId: userId, start: new Date(y, m, d+4),end: new Date(y, m, d+4), allDay: true });\r\n\t\t    var eventTwo = manager.createEntity('Event', { id: 'eventtwo', title: 'Phone call', userId: userId, start: new Date(y, m, d - 5), end: new Date(y, m, d - 2) });\r\n\t\t    var eventThree = manager.createEntity('Event', { id: 'eventthree', title: 'Something else', userId: userId, start: new Date(y, m, d - 5), end: new Date(y, m, d - 2) });\r\n\t\t    var eventFour = manager.createEntity('Event', { id: 'eventfour', title: 'Goto google.com', userId: userId, start: new Date(y, m, 1), allDay: true, url: 'http://www.google.com' });\r\n\t\t}\r\n\r\n\t\tfunction checkDataContext() {\r\n\t\t    if (!datacontext) {\r\n\t\t        datacontext = require('services/datacontext');\r\n\t\t    }\r\n\t\t}\r\n\t});\n","\r\ndefine('services/analytics',[], function(){\t\r\n\t\r\n\tvar initialize = function(gaId, contractId, userName){\t\t\t\t\t\t\t\t\r\n\t\tif(window.ga){\r\n\t\t\t//window.ga('create', gaId, 'auto'); //'UA-XXXX-Y' //the 3'rd can be 'auto' or exact serverDomain \r\n\t\t\twindow.ga('set', \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//need to set in the google analytics account the custom dimensions to track contractId / userName \r\n\t\t\t\t\t\t//and use their indexes (1 / 2 respectively):\r\n\t\t\t\t\t\t'dimension1': contractId, \r\n\t\t\t\t\t    'dimension2': userName\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\tconsole.log('analytics initialized : gaId=' + gaId + ', contractId= ' + contractId + ', ' + 'userName= ' + userName);\r\n\t\t}\t\t\t\t\r\n\t\t\r\n\t}\r\n\t\t\r\n\tvar sendPageView = function(path){\r\n\t\tconsole.log('analytics sendPageView : path=' + path);\r\n\t\t\tif(window.ga){\t\t\t\t\t\t\r\n\t\t\t\twindow.ga('send', 'pageview',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'page': path\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t);\t\t\t\r\n\t\t\t}\t\t\r\n\t}\r\n\t\r\n\treturn{\r\n\t\tinitialize: initialize,\r\n\t\tsendPageView: sendPageView\t\t\r\n\t}\r\n});\r\n\n","/**\r\n*\tcustom bindings definitions\r\n*\r\n*\t@module bindings\r\n*/\r\n\r\ndefine('services/bindings',['services/formatter', 'services/dateHelper'],\r\n    function (formatter, dateHelper) {\r\n\r\n        var datacontext;\r\n\r\n        // Convert any date to a MM-DD-YYYY format with moment.js\r\n        ko.bindingHandlers.Date = {\r\n            update: function (element, valueAccessor) {\r\n                var value = valueAccessor();\r\n                var date = moment(value());\r\n                var strDate = date.format('MM/DD/YYYY');\r\n                $(element).text(strDate);\r\n            }\r\n        };\r\n\r\n        // Convert any date to a MM-DD-YYYY format with moment.js\r\n        ko.bindingHandlers.DateTime = {\r\n            update: function (element, valueAccessor) {\r\n                var value = valueAccessor();\r\n                var date = moment(value());\r\n                var strDate = date.format(\"MM/DD/YYYY h:mm A\");\r\n                $(element).text(strDate);\r\n            }\r\n        };\r\n\r\n        // Convert any date to a MM-DD-YYYY format with moment.js or string empty\r\n        ko.bindingHandlers.DateOrNothing = {\r\n            update: function (element, valueAccessor) {\r\n                var value = valueAccessor();\r\n                var date = moment(value());\r\n                var strDate = date.format('MM/DD/YYYY');\r\n                strDate = strDate == 'Invalid date' ? '' : strDate;\r\n                $(element).text(strDate);\r\n            }\r\n        };\r\n\r\n        // Convert any date to a MM-DD-YYYY format with moment.js or a dash\r\n        ko.bindingHandlers.DateOrDash = {\r\n            update: function (element, valueAccessor) {\r\n                var value = valueAccessor();\r\n                var strDate = '-';\r\n                if (value && value()) {\r\n                    var date = moment(value());\r\n                    strDate = date.format('MM/DD/YYYY');\r\n                    strDate = strDate == 'Invalid date' ? '-' : strDate;\r\n                }\r\n\r\n                $(element).text(strDate);\r\n            }\r\n        };\r\n\r\n        // Convert any empty value to dash\r\n        ko.bindingHandlers.StringOrDash = {\r\n            update: function (element, valueAccessor) {\r\n                var value = valueAccessor();\r\n                var str = '-';\r\n                if (value && value()) {\r\n                    str = !(value().trim()) ? '-' : value();\r\n                }\r\n                $(element).text(str);\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.Time = {\r\n            update: function (element, valueAccessor) {\r\n                var value = valueAccessor();\r\n                var date = moment(value());\r\n                var strDate = date.format('HH:mm');\r\n                $(element).text(strDate);\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.LongTime = {\r\n            update: function (element, valueAccessor) {\r\n                var value = valueAccessor();\r\n                var date = moment(value());\r\n                var strDate = date.format('hh:mm A');\r\n                $(element).text(strDate);\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.clickRadio = {\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                var observable = valueAccessor();\r\n\r\n                //initialize this binding with some optional options\r\n                var setValue = allBindingsAccessor().setValue || null;\r\n\r\n                // Register a handler to run on click\r\n                $(element).on('click', function () {\r\n                    // If setValue is equal to 'null',\r\n                    if (setValue === 'null') {\r\n                        // Clear the observable's value\r\n                        observable(null);\r\n                    }\r\n                        // If there is a special value to set,\r\n                    else if (setValue) {\r\n                        // Set it\r\n                        observable(setValue);\r\n                    }\r\n                        // Else set it equal to the context\r\n                    else {\r\n                        observable(bindingContext);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // Add an object to an array of objects\r\n        ko.bindingHandlers.clickToggleInArray = {\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n\r\n                checkDataContext();\r\n\r\n                var observable = valueAccessor();\r\n\r\n                //initialize this binding with some optional options\r\n                var setValue = allBindingsAccessor().setValue || null;\r\n\r\n                // Need to either get the current matching entity, or create a new one to use\r\n                var thisComplexType = ko.utils.arrayFirst(observable(), function (obs) {\r\n                    return obs.id() === setValue;\r\n                });\r\n\r\n                // If none was found,\r\n                if (!thisComplexType) {\r\n                    // Inverse the number so you have a negative id\r\n                    //setValue = setValue * -1;\r\n                    // Create a complex type to use when toggling\r\n                    var theseParameters = { id: setValue };\r\n                    // Create one to use\r\n                    thisComplexType = datacontext.createComplexType('Identifier', theseParameters);\r\n                }\r\n\r\n                // Register a handler to run on click\r\n                $(element).on('click', function () {\r\n                    // If setValue is not already in the array,\r\n                    var theIndex = observable().indexOf(thisComplexType);\r\n                    if (theIndex === -1) {\r\n                        // Create a new complex type of identifier\r\n                        // And add it to the array\r\n                        observable.push(thisComplexType);\r\n                    }\r\n                        // Else remove it from the array\r\n                    else {\r\n                        observable.remove(thisComplexType);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // This binding is very specific and only exists for use with Language and Contact Mode in the contact modal\r\n        ko.bindingHandlers.clickToggleInLanguageArray = {\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                // Make sure the datacontext exists in the current module\r\n                checkDataContext();\r\n\r\n                // Observable array which the option should be added to / removed from\r\n                var thisObservableArray = valueAccessor();\r\n\r\n                // The value that will be set\r\n                var setValue = allBindingsAccessor().setValue || null;\r\n                var nameValue = allBindingsAccessor().nameValue || null;\r\n                var lookupPropertyName = allBindingsAccessor().lookupPropertyName || null;\r\n\r\n                // Need to either get the current matching entity, or create a new one to use\r\n                var thisComplexType = ko.utils.arrayFirst(thisObservableArray(), function (obs) {\r\n                    return obs[lookupPropertyName]() === setValue;\r\n                });\r\n\r\n                // If none was found,\r\n                if (!thisComplexType) {\r\n                    // Inverse the number so you have a negative id\r\n                    //setValue = setValue * -1;\r\n                    // Create a complex type to use when toggling\r\n                    var theseParameters = {};   //id: 'id' + nameValue\r\n                    theseParameters[lookupPropertyName] = setValue;\r\n                    // Create one to use\r\n                    thisComplexType = datacontext.createComplexType('ContactMode', theseParameters);\r\n                }\r\n\r\n                // Register a handler to run on click\r\n                $(element).on('click', function () {\r\n                    // If setValue is not already in the array,\r\n                    var theIndex = thisObservableArray().indexOf(thisComplexType);\r\n                    if (theIndex === -1) {\r\n                        // Create a new complex type of identifier\r\n                        // And add it to the array\r\n                        thisObservableArray.push(thisComplexType);\r\n                    }\r\n                        // Else remove it from the array\r\n                    else {\r\n                        thisObservableArray.remove(thisComplexType);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.clickTrue = {\r\n            update: function (element, valueAccessor, allBindingsAccessor) {\r\n                var observable = valueAccessor();\r\n                $(element).on('click', function () {\r\n                    observable('true');\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.clickFalse = {\r\n            update: function (element, valueAccessor, allBindingsAccessor) {\r\n                var observable = valueAccessor();\r\n                $(element).on('click', function () {\r\n                    observable('false');\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.hoverToggle = {\r\n            update: function (element, valueAccessor) {\r\n                var css = valueAccessor();\r\n\r\n                ko.utils.registerEventHandler(element, \"mouseover\", function () {\r\n                    ko.utils.toggleDomNodeCssClass(element, ko.utils.unwrapObservable(css), true);\r\n                });\r\n\r\n                ko.utils.registerEventHandler(element, \"mouseout\", function () {\r\n                    ko.utils.toggleDomNodeCssClass(element, ko.utils.unwrapObservable(css), false);\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.clickToggle = {\r\n            init: function (element, valueAccessor, allBindingsAccessor) {\r\n                var value = valueAccessor();\r\n                var canToggle = allBindingsAccessor().canToggle || null;\r\n                ko.utils.registerEventHandler(element, \"click\", function (event) {\r\n                    if (canToggle) {\r\n                        var thisCanToggle = ko.unwrap(canToggle);\r\n                        if (thisCanToggle) {\r\n                            event.preventDefault();\r\n                            value(!value());\r\n                        }\r\n                    }\r\n                    else {\r\n                        event.preventDefault();\r\n                        value(!value());\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.setActiveTab = {\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                var value = valueAccessor();\r\n                ko.utils.registerEventHandler(element, \"click\", function (event) {\r\n                    event.preventDefault();\r\n                    bindingContext.activeTab(value);\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.updateActionElementState = {\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                var observable = valueAccessor();\r\n                // Register to any changes in the observable value so we can set the element state of the action\r\n                var thisToken = observable.subscribe(function () {\r\n                    if (bindingContext.step().action().elementState() !== 4) {\r\n                        bindingContext.step().action().stateUpdatedOn(new moment().toISOString());\r\n                        bindingContext.step().action().elementState(4);\r\n                    }\r\n                });\r\n                // Handle disposal\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    thisToken.dispose();\r\n                });\r\n            }\r\n        };\r\n\r\n\t\tko.bindingHandlers.numericDecimal = {\r\n\t\t\t/**\r\n\t\t\t*\t@param valueAccessor expecting an observable that holds/binds to the number.\r\n\t\t\t*\t@method numericDecimal.init allows digits only with a decimal point\r\n\t\t\t*/\r\n\t\t\tinit: function(element, valueAccessor){\r\n\t\t\t\tvar observableNumber = valueAccessor();\r\n\t\t\t\tblockNonNumeric(element);\r\n\t\t\t\tblockExtraDecimal(element);\r\n\t\t\t\t$(element).on('keydown paste change', function(e){\r\n\t\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\t\tif( e.type == 'paste' ){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// key 190 is the decimal point\r\n\r\n\t\t\t\t\tvar position = element.selectionStart;\r\n\t\t\t\t\tvar type = e.type;\r\n\t\t\t\t\tsetTimeout( function(){\r\n\t\t\t\t\t    var number = $(element).val();\r\n\t\t\t\t\t    var newNumber = number;\t\t\t\t\t    \r\n\t\t\t\t\t    if (number == \".\") {\r\n\t\t\t\t\t        newNumber = \"0.\";\r\n\t\t\t\t\t        if (observableNumber) {\r\n\t\t\t\t\t            $(element).val(newNumber);\r\n\t\t\t\t\t            observableNumber(newNumber);\r\n\t\t\t\t\t        }\r\n\t\t\t\t\t    }\t\t\t\t\t    \r\n\t\t\t\t\t\telse if( isNaN(+number) || ( number.match(/\\D/) && !number.match(/\\./) ) ){\t//dont remove if its the decimal point \".\"\r\n\t\t\t\t\t\t\t//clean out non numeric\tchars:\r\n\t\t\t\t\t\t\tnewNumber = number.replace(/\\D/,'');\r\n\t\t\t\t\t\t\tif( observableNumber ){\r\n\t\t\t\t\t\t\t\t$(element).val(newNumber);\r\n\t\t\t\t\t\t\t\tobservableNumber( newNumber );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//fix cursor position as the observable binding update changes it:\r\n\t\t\t\t\t\tif( key === 46 || (key === 8 && position-1 < newNumber.length)){\t//46=delete or 8=bkspc not on last char: return the cursor to its original position\r\n\t\t\t\t\t\t\tif( key == 8 ){\r\n\t\t\t\t\t\t\t\tposition = position > 0? position -1 : position;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telement.setSelectionRange(position, position);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if( key >= 48 && key <= 57  && position < newNumber.length ){\t//digit added in the middle\r\n\t\t\t\t\t\t\telement.setSelectionRange(position +1, position +1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 5);\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tko.bindingHandlers.numeric = {\r\n\t\t\t/**\r\n\t\t\t*\t@param valueAccessor expecting an observable that holds/binds to the number.\r\n\t\t\t*\t@method numeric.init\r\n\t\t\t*/\r\n\t\t\tinit: function(element, valueAccessor){\r\n\t\t\t\tvar observableNumber = valueAccessor();\r\n\t\t\t\tblockNonNumeric(element);\r\n\t\t\t\t$(element).on('keydown paste change', function(e){\r\n\t\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\t\tif( e.type == 'paste' ){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( e.type == 'keydown' && key == 190 ){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar position = element.selectionStart;\r\n\t\t\t\t\tvar type = e.type;\r\n\t\t\t\t\tsetTimeout( function(){\r\n\t\t\t\t\t\tvar number = $(element).val();\r\n\t\t\t\t\t\tvar newNumber = number;\r\n\t\t\t\t\t\tif( isNaN(+number) || number.match(/\\D/) ){\r\n\t\t\t\t\t\t\t//clean out non numeric\tchars:\r\n\t\t\t\t\t\t\tnewNumber = number.replace(/\\D/,'');\r\n\t\t\t\t\t\t\tif( observableNumber ){\r\n\t\t\t\t\t\t\t\t$(element).val(newNumber);\r\n\t\t\t\t\t\t\t\tobservableNumber( newNumber );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//fix cursor position as the observable binding update changes it:\r\n\t\t\t\t\t\tif( key === 46 || (key === 8 && position-1 < newNumber.length)){\t//46=delete or 8=bkspc not on last char: return the cursor to its original position\r\n\t\t\t\t\t\t\tif( key == 8 ){\r\n\t\t\t\t\t\t\t\tposition = position > 0? position -1 : position;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telement.setSelectionRange(position, position);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if( key >= 48 && key <= 57  && position < newNumber.length ){\t//digit added in the middle\r\n\t\t\t\t\t\t\telement.setSelectionRange(position +1, position +1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 5);\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t*\tmasking and validating a social security number (SSN).\r\n\t\t*\t@class ssn social security number\r\n\t\t*/\r\n\t\tko.bindingHandlers.ssn = {\r\n\t\t\t/**\r\n\t\t\t*\t@param valueAccessor expecting an observable that holds/binds to the ssn number.\r\n\t\t\t*\t@method ssn.init\r\n\t\t\t*/\r\n\t\t\tinit: function(element, valueAccessor, allBindingsAccessor, bindingContext){\r\n\t\t\t\t$(element).attr('maxlength', 11);\r\n\t\t\t\t$(element).attr('placeholder', \"XXX-XX-XXXX\");\r\n\t\t\t\t$(element).attr('title', \"XXX-XX-XXXX\");\r\n\r\n\t\t\t\t//format initial value\r\n\t\t\t\tvar ssn = valueAccessor();\r\n\t\t\t\tvar number = ssn();\r\n\t\t\t\tif(number && number.length > 0){\r\n\t\t\t\t\tnumber = formatter.formatSeparators(number, 'XXX-XX-XXXX', '-');\r\n\t\t\t\t\tssn(number);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tblockNonNumeric(element);\r\n\r\n\t\t\t\t//mask ssn number to : XXX-XX-XXXX\r\n\t\t\t\t$(element).on('keydown paste', function(e){\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\t\t\tvar number = $(element).val();\r\n\t\t\t\t\t\tvar position = element.selectionStart;\r\n\t\t\t\t\t\tif( number && key !== 37 && key !== 39 && key !== 9){ //exclude <- , ->, Tab\r\n\t\t\t\t\t\t\tif( position === number.length && key === 8 ){\r\n\t\t\t\t\t\t\t\treturn;\t//bkspc on the last char - dont rearrange and dont add dash.\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar newNumber = formatter.formatSeparators(number.replace( /\\D/g, ''), 'XXX-XX-XXXX', '-');\r\n\t\t\t\t\t\t\tssn(newNumber);\r\n\t\t\t\t\t\t\tif( key === 46 || (key === 8 && position < newNumber.length)){\t//46=delete or 8=bkspc not on last char: return the cursor to its original position\r\n\t\t\t\t\t\t\t\telement.setSelectionRange(position, position);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if( key >= 48 && key <= 57  && position < number.length ){\t//digit added in the middle\r\n\t\t\t\t\t\t\t\telement.setSelectionRange(position, position);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 5);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t*\tmasking and validating phone number fields\r\n\t\t*\t@class phone\r\n\t\t*\r\n\t\t*/\r\n\t\tko.bindingHandlers.phone = {\r\n\t\t\t/**\r\n\t\t\t*\t@method phone.init\r\n\t\t\t*\t@param valueAccessor expecting an object (complex value) with a validate function.\r\n\t\t\t*\t@example in models\\contacts.js \"Phone\" entity instance is sent for each of the contactCard - phones tab (views\\templates\\contactcard.html, views\\templates\\phone.edit.html).\r\n\t\t\t*/\r\n\t\t\tinit: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n\t\t\t\tvar phone = valueAccessor();\r\n\t\t\t\t$(element).on('blur', function(){\r\n\t\t\t\t\tif( !phone.validate() ){\r\n\t\t\t\t\t\t$(element).addClass(\"invalid\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t$(element).removeClass(\"invalid\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t$(element).attr('maxlength', 12);\r\n\t\t\t\t$(element).attr('placeholder', \"XXX-XXX-XXXX\");\r\n\t\t\t\t$(element).attr('title', \"XXX-XXX-XXXX\");\r\n\r\n\t\t\t\tvar number = phone.number();\r\n\t\t\t\tif(number && number.length > 0){\r\n\t\t\t\t\tnumber = formatter.formatSeparators(number, 'XXX-XXX-XXXX', '-');\r\n\t\t\t\t\tphone.number(number);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//prevent typing non numerics:\r\n\t\t\t\t$(element).on('keypress', function(e){\r\n\t\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\t\tif( (key < 48 || key > 57) && key !== 116 && key !== 8 && key !== 9 && key !== 37 && key !== 39 && key !== 46 && !(key == 118 && e.ctrlKey) ){\t//exclude 116 (=F5), 8(=bkspc), 9(=tab) , 37,39 (<-, ->), 46(=del), ctrl+V (118) on firefox!\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//mask phone number to : XXX-XXX-XXXX\r\n\t\t\t\t$(element).on('keydown paste', function(e){\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\t\t\tvar number = $(element).val();\r\n\t\t\t\t\t\tvar position = element.selectionStart;\r\n\t\t\t\t\t\tif( number && key !== 37 && key !== 39 && key !== 9){ //exclude <- , ->, Tab\r\n\t\t\t\t\t\t\tif( position === number.length && key === 8 ){\r\n\t\t\t\t\t\t\t\treturn;\t//bkspc on the last char - dont rearrange and dont add dash.\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar newNumber = formatter.formatSeparators(number.replace( /\\D/g, ''), 'XXX-XXX-XXXX', '-');\r\n\t\t\t\t\t\t\tphone.number(newNumber);\r\n\t\t\t\t\t\t\tif( key === 46 || (key === 8 && position < newNumber.length)){\t//46=delete or 8=bkspc not on last char: return the cursor to its original position\r\n\t\t\t\t\t\t\t\telement.setSelectionRange(position, position);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if( key >= 48 && key <= 57  && position < number.length ){\t//digit added in the middle\r\n\t\t\t\t\t\t\t\telement.setSelectionRange(position, position);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 5);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t*\tadds keyboard masking for date fields. used for editable non datepicker date field (like DOB) or datepickerEditable\r\n\t\t*\t@method bindEditableDate\r\n\t\t*/\r\n\t\tfunction bindEditableDate( element, observable ){\r\n\t\t\t$(element).attr('maxlength', 10);\r\n\t\t\t$(element).attr('placeholder', \"MM/DD/YYYY\");\r\n\t\t\t$(element).attr('title', \"MM/DD/YYYY\");\r\n\r\n\t\t\t//masking: start: prevent typing non numerics:\r\n\t\t\t$(element).on('keypress', function(e){\r\n\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\tif( (key < 48 || key > 57) && key !== 47 && key !== 116 && key !== 8 && key !== 9 && key !== 37 && key !== 39 && key !== 46 && !(key == 118 && e.ctrlKey) ){\t//exclude 47(/), 116 (=F5), 9(=tab) , 37,39 (<-, ->)\t\\\\&& key !== 8, 8(=bkspc)\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//mask: optimize / auto complete year YYYY\r\n\t\t\t$(element).on('blur', function(){\r\n\t\t\t\tvar date = $(element).val();\r\n\t\t\t\tif(date){\r\n\t\t\t\t\tdate = formatter.date.optimizeDate( date );\r\n\t\t\t\t\tdate = formatter.date.optimizeYear( date );\r\n\t\t\t\t\tif( date !== $(element).val() ){\r\n\t\t\t\t\t\t$(element).val(date);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( observable() !== date ){\r\n\t\t\t\t\t\tobservable(date);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//mask: MM/DD/....\r\n\t\t\t$(element).on('keydown paste', function(e){\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\t\tvar date = $(element).val();\r\n\t\t\t\t\t//hide the datepicker if binded: while typing we may have fields movements due to validation errors going on and off.\r\n\t\t\t\t\t//\tthe picker is not needed when typing and its position is fixed.\r\n\t\t\t\t\tif( $(element).datepicker ){\r\n\t\t\t\t\t\t$(element).datepicker( \"hide\" ); //TODO: show/hide on arrow down/ up / enter\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( e.shiftKey || e.ctrlKey || key == 37 || key == 39 || key == 9 || key == 35 || key == 36 || key === 46 || key == 8 ){ //exclude <- , ->, Tab, home, end //|| key == 8 (bkspc)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar position = element.selectionStart;\r\n\t\t\t\t\tif( date ){\r\n\t\t\t\t\t\t//do the mask:\r\n\t\t\t\t\t\tif( e.type === 'paste'){\r\n\t\t\t\t\t\t\tdate = date.replace( /\\D/g, '');\t//clean any separators before re-formatting\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar newDate = date;\r\n\t\t\t\t\t\tif( position == date.length || e.type === 'paste' || date.replace( /\\D/g, '').length >= 8 ){\r\n\t\t\t\t\t\t\tnewDate = formatter.date.optimizeDate(date);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( newDate && newDate !== date || e.type === 'paste'){\r\n\t\t\t\t\t\t\t$(element).val(newDate);\r\n\t\t\t\t\t\t\tobservable(newDate);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 5);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t*\tinput date field that allows keyboard entry with masking. intended for observable string only.\r\n\t\t*\tnote this binding is to be used for non datepicker editable date (patient DOB).\r\n\t\t*\t@class date\r\n\t\t*\t@param valueAccessor() {String} observable\r\n\t\t*/\r\n\t\tko.bindingHandlers.date = {\r\n\t\t\tinit: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n\t\t\t\tvar observable = valueAccessor();\t//made for an observable string date !\r\n\t\t\t\tbindEditableDate( element, observable );\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t*\r\n\t\t*\t@class datepicker\r\n\t\t*/\r\n        ko.bindingHandlers.datepicker = {\r\n\t\t\t/**\r\n\t\t\t*\r\n\t\t\t* \t@method datepicker.init\r\n\t\t\t*/\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                var observable = valueAccessor();\r\n                var $el = $(element);\r\n\t\t\t\t$(element).attr('maxlength', 10);\r\n\r\n                //initialize datepicker with some optional options\r\n                var options = allBindingsAccessor().datepickerOptions || {};\r\n                // Track dynamic options if available\r\n                var dynoptions = allBindingsAccessor().datepickerDynamicOptions || {};\r\n                $el.datepicker(options);\r\n\r\n\t\t\t\tvar observableMoment = moment.utc(observable());\r\n\t\t\t\tif( observableMoment.isValid() ){\r\n\t\t\t\t\t//set the initial date to the datepicker\r\n\t\t\t\t\tobservableMoment.local(); //move from utc to local time\r\n\t\t\t\t\tvar strDate = observableMoment.format('MM/DD/YYYY');\r\n\t\t\t\t\t$el.datepicker(\"setDate\", strDate);\r\n\t\t\t\t}\r\n                //handle the field changing\r\n                ko.utils.registerEventHandler(element, \"change\", function () {\r\n                    // Get the new date\r\n                    var newValue = $el.datepicker(\"getDate\");\r\n                    var datepickerMoment = moment.utc(newValue);//.toISOString();\r\n                    if (!datepickerMoment.isValid()) {\r\n                        observable('');\r\n                        return null;\r\n                    }\r\n                    if (bindingContext.step) {\t//TBD program logic that should not be here\r\n                        if (bindingContext.step().action().elementState() !== 4) {\r\n                            bindingContext.step().action().stateUpdatedOn(new moment().toISOString());\r\n                            bindingContext.step().action().elementState(4);\r\n                        }\r\n                    }\r\n\t\t\t\t\t//set the datepicker date value on to the observable date (only! without changing its time)\r\n\t\t\t\t\tvar observableMoment = moment(observable());\r\n\t\t\t\t\tif( observableMoment.isValid() ){\r\n\t\t\t\t\t\tif( !dateHelper.isSameDate(datepickerMoment, observableMoment) ){\r\n\t\t\t\t\t\t\tobservableMoment = dateHelper.setDateValue( datepickerMoment, observableMoment );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tobservableMoment = datepickerMoment;\r\n\t\t\t\t\t}\r\n                    observable(observableMoment.toISOString());\r\n                });\r\n\r\n                // If there is a datepicker options with a mindate that is an observable,\r\n                if (dynoptions && dynoptions.minDate && ko.isObservable(dynoptions.minDate)) {\r\n                    if (dynoptions.minDate()) {\r\n                        // Set it on initialization\r\n                        var initMinDate = new Date(dynoptions.minDate().getTime());\r\n                        $el.datepicker(\"option\", \"minDate\", initMinDate);\r\n                    }\r\n                    // Subscribe to the value\r\n                    dynoptions.minDate.subscribe(function (newValue) {\r\n                        var newMinDate = new Date(newValue.getTime());\r\n                        newMinDate.setDate(newMinDate.getDate());\r\n                        $el.datepicker(\"option\", \"minDate\", newMinDate);\r\n                        if (observable() && observable() < newMinDate) {\r\n                            observable(newMinDate);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // If there is a datepicker dynoptions with a mindate that is an observable,\r\n                if (dynoptions && dynoptions.maxDate && ko.isObservable(dynoptions.maxDate)) {\r\n                    if (maxDate.maxDate()) {\r\n                        // Set it on initialization\r\n                        var initMaxDate = new Date(dynoptions.maxDate().getTime());\r\n                        $el.datepicker(\"option\", \"maxDate\", initMaxDate);\r\n                    }\r\n                    // Subscribe to the value\r\n                    dynoptions.maxDate.subscribe(function (newValue) {\r\n                        var newMaxDate = new Date(newValue.getTime());\r\n                        newMaxDate.setDate(newMaxDate.getDate() - 1);\r\n                        $el.datepicker(\"option\", \"maxDate\", newMaxDate);\r\n                        if (observable() && observable() > newMaxDate) {\r\n                            observable(newMaxDate);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                //handle disposal (if KO removes by the template binding)\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $el.datepicker(\"destroy\");\r\n                });\r\n            },\r\n\t\t\t/**\r\n\t\t\t*\r\n\t\t\t* \t@method datepicker.update\r\n\t\t\t*/\r\n            update: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                var observable = valueAccessor();\t//ko.utils.unwrapObservable(valueAccessor()),\r\n                    $el = $(element),\r\n                    datepickerMoment = moment.utc($el.datepicker(\"getDate\"));\r\n\t\t\t\tvar observableMoment = moment.utc(observable());\r\n               if ( observableMoment.isValid() && datepickerMoment.isValid() && !dateHelper.isSameDate(observableMoment, datepickerMoment) ) {\r\n\t\t\t\t\t\t//the observable date has changed - update the datepicker with the date parts only:\r\n\t\t\t\t\tobservableMoment.local(); //move from utc to local time\r\n\t\t\t\t\tvar strDate = observableMoment.format('MM/DD/YYYY');\r\n\t\t\t\t\t$el.datepicker(\"setDate\", strDate);\r\n\t\t\t\t\t$el.blur().change();\t//note: this is part of an IE fix for datepicker re-opens itself after a selection is made.\r\n                }\r\n\r\n                // jQuery Datepicker doesn't allow clearing dates\r\n                // so this is a hack - set the value to clear to\r\n                // let the binding clear the value\r\n                // If the value was set to clear,\r\n                if (observable === 'clear' || !observableMoment.isValid()) {\r\n                    // Clear the control\r\n                    var observable = valueAccessor();\r\n                    observable(null);\r\n                    $.datepicker._clearDate($el);\r\n                }\r\n                //initialized = true;\r\n            }\r\n        };\r\n\r\n\t\t/**\r\n\t\t*\tnew datepicker binding that adds editability and keyboard entry masking.\r\n\t\t*\tworks together with value binding to the same observable, the observable is expected to be a string (and not a Date).\r\n\t\t*\tthis binding will (gradually) replace the datepicker binding.\r\n\t\t*\t@class datepickerEditable\r\n\t\t*/\r\n        ko.bindingHandlers.datepickerEditable = {\r\n\t\t\t/**\r\n\t\t\t*\r\n\t\t\t* \t@method datepickerEditable.init\r\n\t\t\t*\t@param \tvalueAccessor {string} observable string to hold the date value.\r\n\t\t\t*/\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                var observable = valueAccessor();\r\n                var $el = $(element);\r\n\t\t\t\tbindEditableDate( element, observable );\r\n\r\n\t\t\t\t//initialize datepicker with some optional options\r\n                var options = allBindingsAccessor().datepickerOptions || {};\r\n                // Track dynamic options if available\r\n                var dynoptions = allBindingsAccessor().datepickerDynamicOptions || {};\r\n                $el.datepicker(options);\r\n\r\n\t\t\t\tif( observable()  && moment( observable() ).isValid() ){\r\n\t\t\t\t\tif( typeof(observable()) === 'string' && observable().length > 9 || typeof(observable()) !== 'string'){ //accept iso string from back end\r\n\t\t\t\t\t\tvar observableMoment = moment.utc(observable());\r\n\t\t\t\t\t\t//set the initial date to the datepicker\r\n\t\t\t\t\t\tobservableMoment.local(); //move from utc to local time\r\n\t\t\t\t\t\tvar strDate = observableMoment.format('MM/DD/YYYY');\r\n\t\t\t\t\t\t$el.datepicker(\"setDate\", strDate);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                // If there is a datepicker options with a mindate that is an observable,\r\n                if (dynoptions && dynoptions.minDate && ko.isObservable(dynoptions.minDate)) {\r\n                    if (dynoptions.minDate()) {\r\n                        // Set it on initialization\r\n                        var initMinDate = moment(dynoptions.minDate());\r\n\t\t\t\t\t\tif( initMinDate.isValid() ){\r\n\t\t\t\t\t\t\t$el.datepicker(\"option\", \"minDate\", initMinDate.toDate() );\r\n\t\t\t\t\t\t}\r\n                    }\r\n                    // Subscribe to the value\r\n                   dynoptions.minDate.subscribe(function (newValue) {\r\n\t\t\t\t\t\tif( newValue && dateHelper.isValidDate(newValue, true) ){\r\n\t\t\t\t\t\t\tvar newMinDate = moment(newValue);\r\n\t\t\t\t\t\t\tvar date = $el.val();\r\n\t\t\t\t\t\t\tif( !date || dateHelper.isValidDate(date) && !moment(date).isBefore(newValue) ){\t//dont set mindate if current value is out of range, since datepicker will also update the current date to the new minDate.\r\n\t\t\t\t\t\t\t\t$el.datepicker(\"option\", \"minDate\", newMinDate.toDate() );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// if (observable() && dateHelper.isValidDate(observable()) && moment(observable()).isBefore(newMinDate)) {\r\n\t\t\t\t\t\t\t\t// observable( newMinDate.format(\"MM/DD/YYYY\") );\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t}\r\n                    });\r\n                }\r\n\r\n                // If there is a datepicker dynoptions with a mindate that is an observable,\r\n               if (dynoptions && dynoptions.maxDate && ko.isObservable(dynoptions.maxDate)) {\r\n                    if (dynoptions.maxDate()) {\r\n                        // Set it on initialization\r\n                        var initMaxDate = moment( dynoptions.maxDate() );\r\n\t\t\t\t\t\tif( initMaxDate.isValid() ){\r\n\t\t\t\t\t\t\t$el.datepicker(\"option\", \"maxDate\", initMaxDate.toDate() );\r\n\t\t\t\t\t\t}\r\n                    }\r\n                 // Subscribe to the value\r\n                    dynoptions.maxDate.subscribe(function (newValue) {\r\n\t\t\t\t\t\tif( newValue && dateHelper.isValidDate(newValue, true) ){\r\n\t\t\t\t\t\t\tvar newMaxDate = moment(newValue);\r\n\t\t\t\t\t\t\tvar date = $el.val();\r\n\t\t\t\t\t\t\tif( !date || dateHelper.isValidDate(date) && !moment(date).isAfter(newValue) ){\t//dont set maxdate if current value is out of range, since datepicker will also update the current date to the new minDate.\r\n\t\t\t\t\t\t\t\t$el.datepicker(\"option\", \"maxDate\", newMaxDate.toDate() );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// if (observable() && dateHelper.isValidDate(observable()) && moment(observable()).isAfter(newMaxDate) ) {\r\n\t\t\t\t\t\t\t\t// observable( newMaxDate.format(\"MM/DD/YYYY\") );\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t}\r\n                    });\r\n                }\r\n\r\n                //handle disposal (if KO removes by the template binding)\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $el.datepicker(\"destroy\");\r\n                });\r\n            },\r\n\t\t\t/**\r\n\t\t\t*\r\n\t\t\t* \t@method datepickerEditable.update\r\n\t\t\t*/\r\n            update: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                var observable = valueAccessor(), $el = $(element);\r\n\t\t\t\tvar selectedDate = $el.datepicker(\"getDate\");\r\n\t\t\t\tselectedDate = selectedDate? selectedDate.toString() : null;\r\n                var datepickerMoment = moment.utc(selectedDate);\r\n\t\t\t\tif( dateHelper.isValidDate(observable(), true) ){\r\n\t\t\t\t\tvar observableMoment = moment.utc(observable());\r\n\t\t\t\t\tif ( observableMoment.isValid() && datepickerMoment.isValid() && !dateHelper.isSameDate(observableMoment, datepickerMoment) ) {\r\n\t\t\t\t\t\t\t//the observable date has changed - update the datepicker with the date parts only:\r\n\t\t\t\t\t\tobservableMoment.local(); //move from utc to local time\r\n\t\t\t\t\t\tvar strDate = observableMoment.format('MM/DD/YYYY');\r\n\t\t\t\t\t\t$el.datepicker(\"setDate\", strDate);\r\n\t\t\t\t\t\t$el.blur().change();\t//note: this is part of an IE fix for datepicker re-opens itself after a selection is made.\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bindingContext.step) {\t//TODO: TBD program logic that should not be here\r\n                        if (bindingContext.step().action().elementState() !== 4) {\r\n                            bindingContext.step().action().stateUpdatedOn(new moment().toISOString());\r\n                            bindingContext.step().action().elementState(4);\r\n                        }\r\n                    }\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\r\n\t\t\t\t}\r\n                // jQuery Datepicker doesn't allow clearing dates\r\n                // so this is a hack - set the value to clear to\r\n                // let the binding clear the value\r\n                // If the value was set to clear,\r\n                if (observable === 'clear') {\r\n                    // Clear the control\r\n                    observable(null);\r\n                    $.datepicker._clearDate($el);\r\n                }\r\n            }\r\n        };\r\n\r\n\t\t/**\r\n\t\t*\t\t\tthis binding wraps jquery.timepicker plugin (jQuery Timepicker - v1.3.2 - 2014-09-13 http://timepicker.co)\r\n\t\t*\t\t\tit should be applied within: <!-- ko ifnot: Modernizr.inputtypes.time -->\r\n\t\t*\t\t\tnote: for html5 supporting input type=time use the other binding: timepicker.\r\n\t\t* \t@class jqtimepicker\r\n\t\t*/\r\n        ko.bindingHandlers.jqtimepicker = {\r\n\t\t\t/**\r\n\t\t\t* \t@method jqtimepicker.init\r\n\t\t\t*\r\n\t\t\t*\t@param valueAccessor expecting a date observable that the timepicker manipulates its time fields only.\r\n\t\t\t*\t@example data-bind=\"timepicker: contactedOn\"\r\n\t\t\t*/\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                // Get the value of the observable binding\r\n                var observable = valueAccessor().observableDateTime;\r\n\t\t\t\tvar showDate = valueAccessor().showDate;\r\n\t\t\t\tvar initialized = false;\r\n\t\t\t\t//instantiate the timepicker\r\n                var thisElement = $(element);\r\n\t\t\t\tthisElement.timepicker({\r\n\t\t\t\t\tzindex:'999', \t//the drop is invisible if not set!\r\n\t\t\t\t\tinterval: 15,\r\n\t\t\t\t\tscrollbar: true,\r\n\t\t\t\t\tstartTime: new Date(0,0,0,8,0,0),\r\n\t\t\t\t\tdynamic: false,\r\n\t\t\t\t\tchange: onTimeChange});\r\n\r\n\t\t\t\tif( observable && observable() && moment( observable() ).isValid() ){\r\n\t\t\t\t\tvar observableMoment = moment( observable() );\r\n\t\t\t\t\tobservableMoment.local(); //move from utc to local time\r\n\r\n\t\t\t\t\t//set then initial timepicker to the observable time:\r\n\t\t\t\t\tvar initHour = formatter.padZeroLeft(observableMoment.hours(), 2);\r\n\t\t\t\t\tvar initMinute = formatter.padZeroLeft(observableMoment.minutes(), 2);\r\n\t\t\t\t\tthisElement.timepicker('setTime', initHour + ':' + initMinute);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tinitialized = true;\r\n\t\t\t\t}\r\n\t\t\t\tif( observable ){\r\n\t\t\t\t\tobservable.extend({ notify: 'always' });\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//mask time keyboard entry:\r\n\t\t\t\t$(element).attr('maxlength', 8);\r\n\t\t\t\t$(element).attr('placeholder', \"HH:mm AM/PM\");\r\n\t\t\t\t$(element).attr('title', \"HH:mm AM/PM\");\r\n\r\n\t\t\t\t//masking: prevent typing non numerics:\r\n\t\t\t\t$(element).on('keypress', function(e){\r\n\t\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\t\tif( (key < 48 || key > 57) && key !== 47 && key !== 8 && key !== 9 && key !== 37 && key !== 39 && key !== 46 && !(key == 118 && e.ctrlKey) && key !== 97 && key !== 65 && key !== 109 && key !== 77 && key !== 112 && key !== 80 && key !== 58){\t//exclude 47(/), 116 (=F5), 9(=tab) , 37,39 (<-, ->)\t\\\\&& key !== 8, 8(=bkspc) and also AMamPMpm (97,65,109,77,112,80), ':' (58)\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//masking:\r\n\t\t\t\t$(element).on('keydown paste', function(e){\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\t\t\tvar timeStr = $(element).val();\r\n\t\t\t\t\t\tif( e.shiftKey || e.ctrlKey || key == 37 || key == 39 || key == 9 || key == 35 || key == 36 || key === 46 || key == 8 ){ //exclude <- , ->, Tab, home, end //|| key == 8 (bkspc)\r\n\t\t\t\t\t\t\tif( timeStr ){\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar position = element.selectionStart;\r\n\t\t\t\t\t\tif( timeStr ){\r\n\t\t\t\t\t\t\t//do the mask:\r\n\t\t\t\t\t\t\tif( e.type === 'paste'){\r\n\t\t\t\t\t\t\t\ttimeStr = timeStr.replace( /\\D/g, '');\t//clean any separators before re-formatting\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar newTime = timeStr;\r\n\t\t\t\t\t\t\tif( position == timeStr.length || e.type === 'paste' || timeStr.replace( /\\D/g, '').length >= 8 ){\r\n\t\t\t\t\t\t\t\tnewTime = formatter.date.optimizeTime(timeStr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( newTime && newTime !== timeStr || e.type === 'paste'){\r\n\t\t\t\t\t\t\t\t$(element).val(newTime);\r\n\t\t\t\t\t\t\t\t//observable(newTime);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t//content cleared or deleted\r\n\t\t\t\t\t\t\tif( showDate ){\r\n\t\t\t\t\t\t\t\t// the time field was emptied. we will set zero time (00:00/ 12:00 AM will be the time on the observable!)\r\n\t\t\t\t\t\t\t\t//\tnote: at this point - we do not invalidate when empty.\r\n\t\t\t\t\t\t\t\tobservableMoment = moment(observable());\r\n\t\t\t\t\t\t\t\tif( observableMoment.isValid() && observableMoment.hour() !== 0 || observableMoment.minute() !== 0 ){\r\n\t\t\t\t\t\t\t\t\tobservableMoment.hour(0);\r\n\t\t\t\t\t\t\t\t\tobservableMoment.minute(0);\r\n\t\t\t\t\t\t\t\t\tobservable( observableMoment.toISOString() )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\t//time control only without date, when cleared:\r\n\t\t\t\t\t\t\t\tobservable(null);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 5);\r\n\t\t\t\t});\r\n\t\t\t\t/**\r\n\t\t\t\t*\t\t\tdefines a subscription callback to timepicker changes, in order to sync the timepicker time\r\n\t\t\t\t*\t\t\tonto the given data-binded observable\r\n\t\t\t\t*\t@method onTimeChange\r\n\t\t\t\t*/\r\n\t\t\t\tfunction onTimeChange(time){\r\n\t\t\t\t\tvar element = $(this);\r\n\t\t\t\t\tif( !initialized ){\r\n\t\t\t\t\t\t//ignore the first time change that is set by init:\r\n\t\t\t\t\t\tinitialized = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar newHour = 0;\r\n\t\t\t\t\tvar newMinutes = 0;\r\n\t\t\t\t\tif(time){\r\n\t\t\t\t\t\tvar timepickerMoment = moment.utc( time );\r\n\t\t\t\t\t\tif( timepickerMoment.isValid() ){\r\n\t\t\t\t\t\t\ttimeMoment = moment().hours( time.getHours() ).minutes( time.getMinutes() );\t//timepicker is not DST aware !\r\n\t\t\t\t\t\t\t//timeMoment.utc();\t// !!!! issue if the conversion flips a date, we need to know that\r\n\t\t\t\t\t\t\tnewHour = timeMoment.hours();\r\n\t\t\t\t\t\t\tnewMinutes = timeMoment.minutes();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//copy the timepicker time(only) on to the observable datetime value:\r\n\t\t\t\t\t\t//note: if the time field has been cleared (time = false) the observable gets a time of 00:00\r\n\t\t\t\t\t\tsetTimeValue(observable, newHour, newMinutes);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( !showDate ){\r\n\t\t\t\t\t\t//time control only without date, when cleared:\r\n\t\t\t\t\t\tobservable(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction setTimeValue(dateObservable, hour, minute){\r\n\t\t\t\t\tif( !dateObservable() ){\r\n\t\t\t\t\t\tdateObservable(moment('1/1/1970').toISOString());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar observableLocalMoment = moment(dateObservable());\r\n\t\t\t\t\tobservableLocalMoment.local();\r\n\t\t\t\t\tif(observableLocalMoment.isValid()){\r\n\t\t\t\t\t\tif(observableLocalMoment.hours() !== hour || observableLocalMoment.minutes() !== minute){\r\n\t\t\t\t\t\t\tobservableLocalMoment.hours(hour).minutes(minute).seconds(0);\r\n\t\t\t\t\t\t\tobservableLocalMoment.utc();\r\n\t\t\t\t\t\t\tdateObservable(observableLocalMoment.toISOString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t*\ttimepicker - bind on HTML5 input type=time and behind if Modernizr.inputtypes.time to verify browser support.\r\n\t\t*\r\n\t\t*/\r\n        ko.bindingHandlers.timepicker = {\r\n            init: function (element, valueAccessor, allBindingsAccessor, bindingContext) {\r\n                // Get the value of the value binding\r\n                var value = valueAccessor();\r\n                // The current element\r\n                var thisElement = $(element);\r\n\r\n                //handle the field changing\r\n                ko.utils.registerEventHandler(element, \"change\", function () {\r\n                    var observable = valueAccessor();\r\n                    var thisMoment = new Date(moment(observable()).toString());\r\n                    var dstOffset = (moment(thisMoment).isDST() ? 60 : 0);\r\n\t\t\t\t\tif( moment($(element)[0].valueAsDate).isValid() ){\r\n\t\t\t\t\t\tvar adjustedTime = new Date($(element)[0].valueAsDate.getTime() + ((thisMoment.getTimezoneOffset() + dstOffset) * 60 * 1000)); //\r\n\t\t\t\t\t\tvar adjustedDate = thisMoment;\r\n\t\t\t\t\t\tadjustedDate.setHours(adjustedTime.getHours(), adjustedTime.getMinutes(), adjustedTime.getSeconds());\r\n\t\t\t\t\t\tif (bindingContext.step && bindingContext.step() && bindingContext.step().action().elementState() !== 4) {\r\n\t\t\t\t\t\t\tbindingContext.step().action().stateUpdatedOn(new moment().toISOString());\r\n\t\t\t\t\t\t\tbindingContext.step().action().elementState(4);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tobservable(adjustedDate.toISOString());\r\n\t\t\t\t\t}\r\n                });\r\n            },\r\n            update: function (element, valueAccessor, allBindingsAccessor) {\r\n                var value = ko.utils.unwrapObservable(valueAccessor());\r\n                var thisElement = $(element);\r\n                var thisMoment = new moment(value);\r\n\t\t\t\tif( thisMoment.isValid() ){\r\n\t\t\t\t\tthisElement[0].value = thisMoment.format('HH:mm');\r\n\t\t\t\t}\r\n            }\r\n        };\r\n\r\n        // Timeout binding for hiding alert after x number of seconds\r\n        ko.bindingHandlers.timeOut = {\r\n            init: function (element, valueAccessor, allBindingsAccessor) {\r\n                // Get the other options\r\n                var options = allBindingsAccessor().timeOutOptions || {};\r\n                var value = valueAccessor();\r\n\r\n                // If there are options and a delay property exists,\r\n                if (options && options.delay) {\r\n                    // After n number of seconds, toggle the visible value\r\n                    setTimeout(function () { value(!value); }, options.delay);\r\n                }\r\n\r\n                //handle disposal (if KO removes by the template binding)\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    // $el.datepicker(\"destroy\");\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.fullCalendar = {\r\n            // This method is called to initialize the node, and will also be called again if you change what the grid is bound to\r\n            update: function (element, valueAccessor) {\r\n                var viewModel = valueAccessor();\r\n                element.innerHTML = \"\";\r\n\r\n                $(element).fullCalendar({\r\n                    defaultView: viewModel.defaultView,\r\n\t\t\t\t\tallDayText: 'All day',\r\n                    events: ko.utils.unwrapObservable(viewModel.events),\r\n                    header: viewModel.header,\r\n                    editable: viewModel.editable,\r\n                    contentHeight: 999999,\r\n                    eventClick: viewModel.eventClick\r\n                });\r\n                $(element).fullCalendar('gotoDate', ko.utils.unwrapObservable(viewModel.viewDate));\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.typeahead = {\r\n            init: function (element, valueAccessor, allBindingsAccessor) {\r\n                // The options to use when initializing the typeahead\r\n                var options = ko.unwrap(allBindingsAccessor().initOptions) || {};\r\n                // the data set to use\r\n                var dataset = ko.unwrap(valueAccessor()) || {},\r\n                    // A local instance of the element using jQuery\r\n                    $el = $(element),\r\n                    // The default callback when triggering change\r\n                    triggerChange = function () {\r\n                        $el.change();\r\n                    },\r\n                    // The default callback when updating\r\n                    triggerUpdate = function () {\r\n                        var selectedValue = allBindingsAccessor().value();\r\n                        // If no value is selected,\r\n                        if (!selectedValue) {\r\n                            // Clear the value of the type ahead\r\n                            $el.typeahead('val', '');\r\n                        } else {\r\n                            // If the value changed but wasn't cleared, notify of changes\r\n                            triggerChange();\r\n                        }\r\n                    }\r\n\r\n                // What is the property name to use?\r\n                var displayKey = dataset.displayKey;\r\n                // Returns the value of the property listed above on the item\r\n                dataset.displayKey = function (item) {\r\n                    return ko.unwrap(item[displayKey]);\r\n                };\r\n                // Function to detect duplicates (we return false for now)\r\n                dataset.dupDetector = function (remoteMatch, localMatch) {\r\n                    return false;\r\n                };\r\n                // Use the callback override or the default callback if not\r\n                var valueChangedEvent = options.overrideSelected ? options.overrideSelected : triggerChange;\r\n                // The dataset's source (in this case it is a typeahead adapter from bloodhound)\r\n                dataset.source = dataset.taOptions.ttAdapter();\r\n                var thisTypeAhead = $el.typeahead(options, dataset)\r\n                    .on(\"typeahead:selected\", valueChangedEvent)\r\n                    .on(\"typeahead:autocompleted\", valueChangedEvent)\r\n                    .on(\"typeahead:closed\", triggerUpdate);\r\n\r\n                // When the node is removed from the DOM, destroy it and clear the local references\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $el.typeahead(\"destroy\");\r\n                    $el = null;\r\n                });\r\n            },\r\n            update: function (element, valueAccessor) {\r\n                var value = valueAccessor();\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.autoHeight = {\r\n            update: function (element, valueAccessor) {\r\n                // Subscribe to changes\r\n                var value = valueAccessor();\r\n                $(element).height($(element)[0].scrollHeight);\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.chosen = {\r\n            init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\r\n                ko.bindingHandlers.options.init(element);\r\n                var allBindings = ko.unwrap(allBindingsAccessor())\r\n                var caption = allBindings.chosenOptions ? allBindings.chosenOptions.caption : 'NO CAPTION SET YET NOT GOOD!!!!';\r\n                var isSearch = allBindings.chosenOptions ? allBindings.chosenOptions.isSearch : false;\r\n                var isCancel = allBindings.chosenOptions ? allBindings.chosenOptions.isCancel : false;\r\n                var title = null;\r\n                if (allBindings.chosenOptions && allBindings.chosenOptions.title) {\r\n                    title = allBindings.chosenOptions.title;  //title is not mandatory\r\n                }\r\n\r\n                var options = {\r\n                    disable_search: !isSearch,\r\n                    allow_single_deselect: isCancel,\r\n                    search_contains: true,\r\n                    display_selected_options: true,\r\n                    inherit_select_classes: true,\r\n                    placeholder_text_multiple: ' ',\r\n                    placeholder_text_single: caption,\r\n                    width: 'auto'\r\n                };\r\n                $(element).prepend('<option></option>');  //workaround for allow_single_deselect to work in ko binded.\r\n                $(element).chosen(options);\r\n            },\r\n            update: function (element, valueAccessor, allBindingsAccessor, viewModel) {\r\n                ko.bindingHandlers.options.update(element, valueAccessor, allBindingsAccessor);\r\n                $(element).trigger('chosen:updated');\r\n\r\n                if (viewModel.title) {\r\n                    //chosen select wont show a title if its set directly on it. workaround: targeting the chosen-single:\r\n                    element.parentElement.children[1].children[0].title = viewModel.title;\r\n                }\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.chosenUpdater = {\r\n            update: function (element, valueAccessor, allBindingsAccessor) {\r\n                var value = ko.unwrap(valueAccessor());\r\n                var disabled = ko.unwrap(allBindingsAccessor().disable);\r\n                if (disabled) {\r\n                    $(element).attr(\"disabled\", \"disabled\");\r\n                } else {\r\n                    $(element).removeAttr(\"disabled\");\r\n                }\r\n                $(element).trigger('chosen:updated');\r\n            }\r\n        };\r\n\r\n        // Moves the arrow on the plan view to the right area on the page\r\n        ko.bindingHandlers.arrowMover = {\r\n            init: function (element, valueAccessor, allBindingsAccessor) {\r\n\r\n                var value = ko.unwrap(valueAccessor());\r\n                // $('.arrow').remove();\r\n                $(element).on('click', function () {\r\n                    positionArrow(element);\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.setHeightFromPrev = {\r\n            update: function (element, valueAccessor, allBindingsAccessor) {\r\n                var thisValue = ko.unwrap(valueAccessor());\r\n                var $el = $(element);\r\n                var height = $el.parent().height() - $el.prev('.fixed').outerHeight();\r\n                $el.css('height', (height + \"px\"));\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.pieChart = {\r\n            update: function (element, valueAccessor, allBindingsAccessor) {\r\n                var chartItems = ko.utils.unwrapObservable(valueAccessor());\r\n                var chartOptions = allBindingsAccessor().chartOptions;\r\n\r\n                $(element).highcharts({\r\n                    chart: {\r\n                        plotBackgroundColor: null,\r\n                        plotShadow: false\r\n                    },\r\n                    title: {\r\n                        text: null\r\n                    },\r\n                    tooltip: {\r\n                        pointFormat: '<b>{point.percentage:.1f}%</b>'\r\n                    },\r\n                    plotOptions: {\r\n                        pie: {\r\n                            animation: false,\r\n                            allowPointSelect: true,\r\n                            cursor: 'pointer',\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                format: '{point.name}',\r\n                                style: {\r\n                                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    colors: ['#d73027', '#fc8d59', '#fee090', '#e0f3f8', '#91bfdb', '#4575b4', '#ffffbf'],\r\n                    credits: { enabled: false },\r\n                    series: [{\r\n                        type: 'pie',\r\n                        name: chartOptions.title,\r\n                        data: chartItems\r\n                    }]\r\n                });\r\n            }\r\n        };\r\n\r\n        ko.bindingHandlers.showResultsCount = {\r\n            update: function (element, valueAccessor, allBindingsAccessor) {\r\n                var value = ko.unwrap(valueAccessor());\r\n                setTimeout(function () {\r\n                    var typeaheadOpts = $('.tt-dataset-' + ko.unwrap(allBindingsAccessor().typeahead).name + ' .tt-suggestions')[0];\r\n                    var firstchild = $('.tt-dataset-' + ko.unwrap(allBindingsAccessor().typeahead).name + ' .tt-suggestions > .tt-suggestion')[0];\r\n                    if (typeaheadOpts && value) {\r\n                        var p = document.createElement(\"div\");\r\n                        p.innerHTML = '(' + value + ')';\r\n                        typeaheadOpts.insertBefore(p, firstchild);\r\n                    }\r\n                }, 150);\r\n            }\r\n        };\r\n\r\n\t\t/**\r\n\t\t*\tcolumnSizer is a binding fix for firefox and ie (< 11) for the \"widget\" elements in engage.\r\n\t\t*\tthis is a hack that sets the heights of the .content's and .body elements inside the widget's structure.\r\n\t\t*\tin these browsers/versions the widgets dont show. the hack also deals with expand-collaps-fullscreen /resize behaviors.\r\n\t\t*\tthese are set as triggers in the binding that are subscribed for updates.\r\n\t\t* \tthe binding should be applied on\r\n\t\t*\r\n\t\t*\t\t<div class=\"widget\"\r\n\t\t*\r\n\t\t*\t@example \"columnSizer: true\" - when the widget does not have any expand-collaps-fullscreen.\r\n\t\t*\t@example \"columnSizer: {triggers: myToDoListOpen}\" - widget have expand-collaps-fullscreen and myToDoListOpen is the observable.\r\n\t\t*\t@example \"columnSizer: {triggers: {a: isOpen, b: selectedPatient()}}\" - in addition to expand-collapse we subscribe to patient selection changes.\r\n\t\t*\t@example \"columnSizer: {triggers: {a: selectedView, b: filtersHeaderOpen(), c: filtersOpen()}}\" - this widget (home-todos) needs to trigger a re-set heights\r\n\t\t*\t\t\t\ton these changes:\r\n\t\t*\t\t\t\t\t1. when the filter toggles shows/hides - filtersHeaderOpen.\r\n\t\t*\t\t\t\t\t2. the expanded filter content toggles show/hide - filtersOpen.\r\n\t\t*\t\t\t\t\t3. a specific todo filter value changes in: selectedView\r\n\t\t* \t@class columnSizer\r\n\t\t*/\r\n        ko.bindingHandlers.columnSizer = {\r\n\t\t\t/**\r\n\t\t\t*\t@method columnSizer.init\r\n\t\t\t*/\r\n            init: function (element, valueAccessor, allBindingsAccessor) {\r\n                if (isIe11()) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar $el = $(element);\r\n                    $(document).ready(function () {\r\n                        setTimeout(function () {\r\n\t\t\t\t\t\t\tvar nobody = valueAccessor() === 'nobody' ? true : false;\r\n                            setHeights($el, nobody);\r\n                        }, 1)\r\n                    })\r\n                    $(window).on('resize', function (event) {\r\n                        setHeights($el);\r\n                    });\r\n                }\r\n            },\r\n\t\t\t/**\r\n\t\t\t*\t@method columnSizer.update\r\n\t\t\t*/\r\n\t\t\tupdate: function (element, valueAccessor, allBindingsAccessor){\r\n\t\t\t\tvar triggers = ko.unwrap(allBindingsAccessor().columnSizer.triggers); //track/subscribe to any widget hight altering parameter/s. the widgets may have the expand-collaps toggle observable (isOpen) and/or filters show/hide toggle and/or filter content.\r\n\r\n\t\t\t\tif (isIe11()){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar $el = $(element);\r\n                    setTimeout(function () {\r\n\t\t\t\t\t\t\tvar nobody = valueAccessor() === 'nobody' ? true : false;\r\n                            setHeights($el, nobody);\r\n\t\t\t\t\t}, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        };\r\n\r\n\t\t/**\r\n\t\t* \tfor columnSizer binding fix for firefox and ie < 11\r\n\t\t*\t@method setHeights\r\n\t\t*\t@for columnSizer\r\n\t\t*/\r\n\t\tfunction setHeights($el, nobody) {\r\n\t\t\tvar $contents, $widgets;\r\n\r\n\t\t\t//find all widget class elements on the current column:\r\n\t\t\t$widgets = $el.parent().find('.widget');\r\n\t\t\tvar fullscreen = false;\r\n\t\t\tif($el.parent()){\r\n\t\t\t\tfullscreen = !!$el.parent().find('.widget.fullscreen').length;\t//do we have a fullscreeen widget in this column?\r\n\t\t\t}\r\n\r\n\t\t\t//find body class elements of this column:\r\n\t\t\t$bodys = $widgets.find('.content > .table-row > .table-cell > .body');\r\n\t\t\tvar fullScreenHeight;\r\n\t\t\tif( fullscreen ){\r\n\t\t\t\t//one of the widgets in the column is in fullscreen.\r\n\t\t\t\tif( !$el.hasClass('fullscreen') ){\r\n\t\t\t\t\treturn;\t//the current widget is not visible so dont set heights.\r\n\t\t\t\t}\r\n\t\t\t\t$widgets.find('.content').css('height', '');\r\n\t\t\t\t$bodys.css('height', '');\r\n\t\t\t\t//calc fullscreen height: take the widget's parent column height:\r\n\t\t\t\tfullScreenHeight = $el.closest('.column').height() + \"px\";\r\n\t\t\t\t//set the heights only on the one fullscreen widget:\r\n\t\t\t\t$widgets = $el.parent().find('.widget.fullscreen');\r\n\t\t\t\t$bodys = $widgets.find('.content > .table-row > .table-cell > .body');\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//clear all heights:\r\n\t\t\t\t//clear the current height on all content class elements in the current column:\r\n\t\t\t\t//\tnote - it is critical to re calculate and set these heights for all content's of the entire column.\r\n\t\t\t\t$widgets.find('.content').css('height', '');\r\n\t\t\t\t$bodys.css('height', '');\t//remove heights from all body 's in the widgets of this column.\r\n\t\t\t}\r\n\r\n\t\t\tvar height;\r\n\t\t\t$widgets.each(function (index, widget) {\r\n\t\t\t\tvar $content, $widget;\r\n\t\t\t\t$widget = $(this);\r\n\t\t\t\tif( !fullscreen ){\r\n\t\t\t\t\t//if none of the widgets is in fullscreeen: take the widget height:\r\n\t\t\t\t\theight = this.offsetHeight + \"px\";\t//note using native for speed\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\theight = fullScreenHeight;\r\n\t\t\t\t}\r\n\t\t\t\t$contents = $widget.children('.content');\r\n\t\t\t\t$contents.css('height', height);\r\n\t\t\t\t$contents.find('.wrapper > .content').css('height', height);\r\n\t\t\t});\r\n\t\t\tif( !nobody ){\r\n\t\t\t\t//set heights for the body elements of this column\r\n\t\t\t\t//\t'nobody' is set to skip this for patients.list.flyout as there is another logic there for that case (setHeightFromPrev)\r\n\t\t\t\t$bodys.each(function (index, body) {\r\n\t\t\t\t\tvar parentHeight = this.parentElement.offsetHeight ? this.parentElement.offsetHeight : 0;\t//note using native for speed\r\n\t\t\t\t\theight = fullscreen? parentHeight - 10 : parentHeight;\r\n\t\t\t\t\theight += \"px\";\r\n\t\t\t\t\t$(body).css('height', height );\r\n\t\t\t\t});\r\n\t\t\t}\r\n        }\r\n\r\n\t\tfunction isIe11() {\r\n\t\t\treturn !(window.ActiveXObject) && \"ActiveXObject\" in window;\r\n\t\t}\r\n\r\n        function positionArrow(element) {\r\n            var el = $(element);\r\n            var top = el.offset().top;\r\n            top -= el.parents('.widget').offset().top;\r\n            top += el.outerHeight() / 2;\r\n            $('.arrow').css('top', top);\r\n        }\r\n\r\n\t\t/**\r\n\t\t*\tprevent typing non numerics\r\n\t\t*\t@method\tblockNonNumeric\r\n\t\t*/\r\n\t\tfunction blockNonNumeric(element){\r\n\t\t\t$(element).on('keypress', function(e){\r\n\t\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\t\tif ((key < 48 || key > 57) && key !== 116 && key !== 8 && key !== 9 && key !== 37 && key !== 39 && key !== 46 && !(key == 118 && e.ctrlKey)) {\t//exclude 116 (=F5), 8(=bkspc), 9(=tab) , 37,39 (<-, ->), 46(=del), ctrl+V (118) on firefox!\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction blockExtraDecimal(element) {\r\n\t\t    $(element).off('keypress.extraDecimal').on('keypress.extraDecimal', function (e) {\r\n\t\t        var key = e.which || e.keyCode;\r\n\t\t        if (key == 46 && $(element).val().indexOf(\".\") > -1){\r\n\t\t            e.preventDefault();\r\n\t\t        }\r\n\t\t    });\r\n\t\t}\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n    });\n\n","define('services/branding',[],\r\n    function () {\r\n\r\n        var currentBrand = ko.observable(new brand('Phytel', '/NightingaleUI/Content/images/IBM_White_Logo_34.png'));\r\n\r\n        var branding = {\r\n            currentBrand: currentBrand\r\n        };\r\n        return branding;\r\n\r\n        function brand(name, logoPath) {\r\n            var self = this;\r\n            self.brandName = ko.observable(name);\r\n            self.imageSource = ko.observable(logoPath);\r\n        }\r\n    });\n","\r\n/**\r\n*\t\t\tjsonResultsAdapter parses api result data into entities\r\n*\t\t\tengage api returned results are ususally enclosed in a wrapper object.\r\n*\t\t\tthe requested result object array is within. for breeze to read it and materialize entities, \r\n*\t\t\twe need the data.results to contain the array. => every get endpoint type should be added to the extractResults.\r\n*\t@module\tjsonResultsAdapter\r\n*\t@class jsonResultsAdapter\t\t\t\r\n*/\r\ndefine('services/jsonResultsAdapter',[], new breeze.JsonResultsAdapter({\r\n\r\n    name: \"Nightingale\",\r\n\r\n    extractResults: function (data) {\r\n        var results = data.results;\r\n        if (!results) throw new Error(\"Unable to resolve 'results' property\");\r\n        return results && (results.Problems || results.PatientProblem || results.PatientProblems || results.Patient || results.Cohorts || results.Patients || results.Program || results.Programs || results.PlanElems || results.Languages || results.States || results.Reason || results.CommModes || results.TimesOfDays || results.TimeZones || results.CommTypes || results.Contact || results.Contacts || results.LookUps || results.LookUpDetails || results.Goals || results.Goal || results.Note || results.Notes || results.PatientNote || results.Utilization || results.Library || results.CareMembers || results.CareTeam || results.CareTeamMember || results.Observations || results.Observation ||results.PatientObservations || results.PatientObservation || results.Action || results.Actions || results.Attributes || results.Objectives || results.ToDo || results.ToDos || results.PatientDetails || results.Intervention || results.Interventions || results.Task || results.Tasks || results.Systems || results.PatientSystems || results.Allergy || results.Allergies || results.PatientAllergy || results.PatientAllergies || results.PatientMedSupp || results.PatientMedSupps || results.PatientMedFrequencies || results.ContactTypeLookUps);\r\n    },\r\n\r\n    visitNode: function (node, mappingContext, nodeContext) {\r\n        if (!node) { return false; }\r\n        if (node.PatientProblemID) {\r\n            return { entityType: \"PatientProblem\" };\r\n        }\r\n        if (node.ConditionID && node.DisplayName) {\r\n            return { entityType: \"Condition\" };\r\n        }\r\n        if (node.Id && node.DOB || node.Id && node.Flagged && node.Priority) {\r\n            return { entityType: \"Patient\" };\r\n        }\r\n        if (node.ProgramId && node.Actions) {\r\n            var thisDateCompleted = node.DateCompleted\r\n            // Grab a piece of the date,\r\n            if (!thisDateCompleted) { return { entityType: \"Module\" } }\r\n            var dateString = thisDateCompleted.substr(0, 6);\r\n            // to check for the word 'Date', if is found,\r\n            if (dateString.indexOf('Date') !== -1) {\r\n                // Get only the milliseconds\r\n                var thisSomethingThing = thisDateCompleted.substr(6, 13);\r\n                // Create a new holder for a date\r\n                var thisNewDate = new Date();\r\n                // Set the time using milliseconds\r\n                thisNewDate.setTime(thisSomethingThing);\r\n                // Set the value equal to the ISO string\r\n                node.DateCompleted = thisNewDate.toISOString();\r\n            }\r\n            return { entityType: \"Module\" };\r\n        }\r\n        if (node.PatientId && node.ContractProgramId) {\r\n            return { entityType: \"Program\" };\r\n        }\r\n        if (node.Enrollment && node.PlanElementId) {\r\n            return { entityType: \"Attributes\" };\r\n        }\r\n        if (node.ModuleId && node.Steps) {\r\n            return { entityType: \"Action\" };\r\n        }\r\n        if (node.StepTypeId) {\r\n            return { entityType: \"Step\" };\r\n        }\r\n        if (node.StepId) {\r\n            return { entityType: \"Response\" };\r\n        }\r\n        if (node.ElementId) {\r\n            return { entityType: \"SpawnElement\" };\r\n        }\r\n        if (node.CommModes && node.Id) {\r\n            node.CommModeIds = [];\r\n            $.each(node.CommModes, function (index, item) {\r\n                node.CommModeIds.push({ Id: item });\r\n            });\r\n            return { entityType: \"CommunicationType\" }\r\n        }\r\n\t\tif(node.ContactSubTypes) {\r\n\t\t\tvar subTypes = []\r\n\t\t\t$.each(node.ContactSubTypes, function(index, sub){\r\n\t\t\t\tvar theseIds = [];\r\n\t\t\t\tif( sub.SubSpecialtyIds ){\r\n\t\t\t\t\t$.each(sub.SubSpecialtyIds, function (index, item) {\r\n\t\t\t\t\t\t// if the item is not null\r\n\t\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\t\ttheseIds.push({ Id: item });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tsub.SubSpecialtyIds = theseIds; \r\n\t\t\t\t//TBD - may need to rewrite the node.ContactSubTypes (1,2)\r\n\t\t\t\t//1. subTypes.push(sub);\t\r\n\t\t\t});\r\n\t\t\t//2. node.ContactSubTypes = subTypes;\r\n\t\t}\r\n        if (mappingContext.query.fromEntityType && mappingContext.query.fromEntityType.shortName === 'Note') {\r\n            // If you were mapping to a note, we need to map the program ids\r\n            if (node.ProgramIds) {\r\n                var theseProgramIds = [];\r\n                $.each(node.ProgramIds, function (index, item) {\r\n                    // if the item is not null\r\n                    if (item) {\r\n                        theseProgramIds.push({ Id: item });\r\n                    }\r\n                });\r\n                node.ProgramIds = theseProgramIds;\r\n            }\r\n        }\r\n        if (node.TimeZoneId) {\r\n            // All of the contact code arrays are coming back in different formats\r\n            // So we have to map them to some whay\r\n            node.PreferredTimesOfDayIds = [];\r\n            node.PreferredDaysOfWeekIds = [];\r\n            if (node.TimesOfDaysId) {\r\n                $.each(node.TimesOfDaysId, function (index, item) {\r\n                    node.PreferredTimesOfDayIds.push({ Id: item });\r\n                });\r\n            }\r\n            if (node.WeekDays) {\r\n                $.each(node.WeekDays, function (index, item) {\r\n                    node.PreferredDaysOfWeekIds.push({ Id: item });\r\n                });\r\n            }\r\n            return { entityType: \"ContactCard\" }\r\n        }\r\n        if (mappingContext.query.fromEntityType && mappingContext.query.fromEntityType.shortName === 'ToDo') {\r\n            if (node.ProgramIds) {\r\n                var theseProgramIds = [];\r\n                $.each(node.ProgramIds, function (index, item) {\r\n                    // if the item is not null\r\n                    if (item) {\r\n                        theseProgramIds.push({ Id: item });\r\n                    }\r\n                });\r\n                node.ProgramIds = theseProgramIds;\r\n            }\r\n            if (nodeContext.navigationProperty) {\r\n                if (nodeContext.navigationProperty.name === 'patientDetails') {\r\n                    return { entityType: \"ToDoPatient\" };\r\n                }\r\n            }\r\n            return { entityType: \"ToDo\" };\r\n        }\r\n        if (mappingContext.query.fromEntityType && mappingContext.query.fromEntityType.shortName === 'Intervention'|| (nodeContext.propertyName && nodeContext.propertyName === 'interventions')) {\r\n            if (node.BarrierIds) {\r\n                var theseIds = [];\r\n                $.each(node.BarrierIds, function (index, item) {\r\n                    // if the item is not null\r\n                    if (item) {\r\n                        theseIds.push({ Id: item });\r\n                    }\r\n                });\r\n                node.BarrierIds = theseIds;\r\n            }\r\n            if (nodeContext.navigationProperty) {\r\n                if (nodeContext.navigationProperty.name === 'patientDetails') {\r\n                    return { entityType: \"ToDoPatient\" };\r\n                }\r\n            }\r\n            return { entityType: \"Intervention\" };\r\n        }\r\n        if (mappingContext.query.fromEntityType && mappingContext.query.fromEntityType.shortName === 'Task'|| (nodeContext.propertyName && nodeContext.propertyName === 'tasks')) {\r\n            if (node.BarrierIds) {\r\n                var theseIds = [];\r\n                $.each(node.BarrierIds, function (index, item) {\r\n                    // if the item is not null\r\n                    if (item) {\r\n                        theseIds.push({ Id: item });\r\n                    }\r\n                });\r\n                node.BarrierIds = theseIds;\r\n            }\r\n            if (nodeContext.navigationProperty) {\r\n                if (nodeContext.navigationProperty.name === 'patientDetails') {\r\n                    return { entityType: \"ToDoPatient\" };\r\n                }\r\n            }\r\n            if (node.CustomAttributes) {\r\n                $.each(node.CustomAttributes, function (index, item) {\r\n                    var theseValues = [];\r\n                    if (item && item.Values) {\r\n                        $.each(item.Values, function (index, item) {\r\n                            // if the item is not null\r\n                            if (item) {\r\n                                theseValues.push({ Value: item });\r\n                            }\r\n                        });\r\n                        item.Values = theseValues;\r\n                    }\r\n                });\r\n                return { entityType: \"Task\" };\r\n            }\r\n        }\r\n\t\t\r\n\t\tif ((mappingContext.query.fromEntityType && mappingContext.query.fromEntityType.shortName === 'CareTeam') \r\n\t\t\t|| (nodeContext.propertyName && nodeContext.propertyName === 'careTeam') \r\n\t\t\t|| (nodeContext.propertyName && nodeContext.propertyName === 'members') ) {\r\n\t\t\t\t\t\r\n\t\t\t//help breeze identify the entities in the associated relations CareTeam_CareMembers (both ways)\r\n\t\t\t//( this is also done in goals for the sub entities Barriers and Interventions )\r\n\t\t\tif (nodeContext.nodeType === 'root' || (nodeContext.propertyName && nodeContext.propertyName === 'careTeam')) {\r\n\t\t\t\tif( node.Members && node.Id ){\r\n\t\t\t\t\t$.each(node.Members, function(index, member) {\r\n\t\t\t\t\t\tmember.CareTeamId = node.Id;\t//populate the team id\r\n\t\t\t\t\t\tif( !member.RoleId && member.CustomRoleName ){\r\n\t\t\t\t\t\t\tmember.RoleId = -1;\t//custom role (customeRoleName)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn { entityType: \"CareTeam\" };\r\n\t\t\t}\r\n\t\t\tif (nodeContext.navigationProperty) {\r\n                if (nodeContext.navigationProperty.name === 'members') {\r\n\t\t\t\t\t//node.CareTeamId is now set to point to the team id\r\n\t\t\t\t\treturn { entityType: \"CareMember\" };\r\n                }\r\n                //fix mapping to resolve navigation entities we need under caremember\r\n\t\t\t\tif (nodeContext.navigationProperty.name === 'contact') {\t\t\t\t\t\r\n\t\t\t\t\treturn { entityType: \"ContactCard\" };\r\n\t\t\t\t}\r\n\t\t\t\tif (nodeContext.navigationProperty.name === 'roleType') {\t\t\t\t\t\r\n\t\t\t\t\treturn { entityType: \"ContactTypeLookup\" };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\t\t\r\n\t\t\r\n        if ((mappingContext.query.fromEntityType && mappingContext.query.fromEntityType.shortName === 'Goal') || (nodeContext.propertyName && nodeContext.propertyName === 'goals')) {\r\n            if (nodeContext.nodeType === 'root' || (nodeContext.propertyName && nodeContext.propertyName === 'goals')) {\r\n                if (node.FocusAreaIds) {\r\n                    var theseIds = [];\r\n                    $.each(node.FocusAreaIds, function (index, item) {\r\n                        // if the item is not null\r\n                        if (item) {\r\n                            theseIds.push({ Id: item });\r\n                        }\r\n                    });\r\n                    node.FocusAreaIds = theseIds;\r\n                }\r\n                if (node.ProgramIds) {\r\n                    var theseProgramIds = [];\r\n                    $.each(node.ProgramIds, function (index, item) {\r\n                        // if the item is not null\r\n                        if (item) {\r\n                            theseProgramIds.push({ Id: item });\r\n                        }\r\n                    });\r\n                    node.ProgramIds = theseProgramIds;\r\n                }\r\n                if (node.CustomAttributes) {\r\n                    $.each(node.CustomAttributes, function (index, item) {\r\n                        var theseValues = [];\r\n                        if (item.Values) {\r\n                            $.each(item.Values, function (index, item) {\r\n                                // if the item is not null\r\n                                if (item) {\r\n                                    theseValues.push({ Value: item });\r\n                                }\r\n                            });\r\n                            item.Values = theseValues;\r\n                        }\r\n                    });\r\n                }\r\n                return { entityType: \"Goal\" };\r\n            }\r\n            if (nodeContext.navigationProperty) {\r\n                if (nodeContext.navigationProperty.name === 'tasks') {\r\n                    if (node.BarrierIds) {\r\n                        var theseIds = [];\r\n                        $.each(node.BarrierIds, function (index, item) {\r\n                            // if the item is not null\r\n                            if (item) {\r\n                                theseIds.push({ Id: item });\r\n                            }\r\n                        });\r\n                        node.BarrierIds = theseIds;\r\n                    }\r\n                    if (node.CustomAttributes) {\r\n                        $.each(node.CustomAttributes, function (index, item) {\r\n                            var theseValues = [];\r\n                            $.each(item.Values, function (index, item) {\r\n                                // if the item is not null\r\n                                if (item) {\r\n                                    theseValues.push({ Value: item });\r\n                                }\r\n                            });\r\n                            item.Values = theseValues;\r\n                        });\r\n                    }\r\n                    return { entityType: \"Task\" };\r\n                }\r\n                else if (nodeContext.navigationProperty.name === 'barriers') {\r\n                    return { entityType: \"Barrier\" };\r\n                }\r\n                else if (nodeContext.navigationProperty.name === 'interventions') {\r\n                    if (node.BarrierIds) {\r\n                        var theseIds = [];\r\n                        $.each(node.BarrierIds, function (index, item) {\r\n                            // if the item is not null\r\n                            if (item) {\r\n                                theseIds.push({ Id: item });\r\n                            }\r\n                        });\r\n                        node.BarrierIds = theseIds;\r\n                    }\r\n                    return { entityType: \"Intervention\" };\r\n                }\r\n            }\r\n        }\r\n        if (node.Id && node.Name && node.Categories) {\r\n            return { entityType: \"ObjectiveLookup\" };\r\n        }\r\n        // if (node.SystemId && node.value) {\r\n            // return { entityType: \"PatientSystem\" };\r\n        // }\r\n        if (node.ObservationId && node.TypeId) {\r\n            return { entityType: \"PatientObservation\" };\r\n        }\r\n        if (node.Title && node.StatusId && node.AssignedToId) {\r\n            if (node.ProgramIds) {\r\n                var theseProgramIds = [];\r\n                $.each(node.ProgramIds, function (index, item) {\r\n                    // if the item is not null\r\n                    if (item) {\r\n                        theseProgramIds.push({ Id: item });\r\n                    }\r\n                });\r\n                node.ProgramIds = theseProgramIds;\r\n            }\r\n            return { entityType: \"ToDo\" };\r\n        }\r\n        if (mappingContext.query.fromEntityType && mappingContext.query.fromEntityType.shortName === 'ObservationState') {\r\n            node.AllowedTypeIds = [];\r\n            $.each(node.TypeIds, function (index, item) {\r\n                node.AllowedTypeIds.push({ Id: item });\r\n            });\r\n            // return { entityType: \"CommunicationType\" }\r\n        }\r\n        if (node.AllergyId && node.AllergyTypeIds) {\r\n            var tempAllergyTypeIds = [];\r\n            var tempReactionIds = [];\r\n            $.each(node.AllergyTypeIds, function (index, item) {\r\n                tempAllergyTypeIds.push({ Id: item });\r\n            });\r\n            node.AllergyTypeIds = tempAllergyTypeIds;\r\n            $.each(node.ReactionIds, function (index, item) {\r\n                tempReactionIds.push({ Id: item });\r\n            });\r\n            node.ReactionIds = tempReactionIds;\r\n            return { entityType: \"PatientAllergy\" }\r\n        }\r\n        if (mappingContext.query.fromEntityType && mappingContext.query.fromEntityType.shortName === 'PatientMedication') {\r\n            var tempNDCs = [];\r\n            var tempPharmClasses = [];\r\n            $.each(node.NDCs, function (index, item) {\r\n                tempNDCs.push({ Id: item });\r\n            });\r\n            $.each(node.PharmClasses, function (index, item) {\r\n                tempPharmClasses.push({ Id: item });\r\n            });\r\n            node.NDCs = tempNDCs;\r\n            node.PharmClasses = tempPharmClasses;\r\n            if (nodeContext.nodeType === 'root' || (nodeContext.propertyName && nodeContext.propertyName === 'patientMedSupps')) {\r\n                return { entityType: \"PatientMedication\" };\r\n            }\r\n        }\r\n    }\r\n}));\n","define('services/dataservices/getentityservice',['services/session'],\r\n    function (session) {\r\n\r\n        var datacontext;\r\n\r\n        var getEntityList = function (manager, message, entityObservable, entityType, endpoint, parentPropertyName, parentPropertyId, forceRemote, params, orderBy, skipMerge) {\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // If it is not forceRemote, then try to get this from the local cache\r\n            if (!forceRemote) {\r\n                var p = getLocalList(manager, endpoint, entityType, parentPropertyName, parentPropertyId, orderBy);  //Go check and see if we have this locally already\r\n                if (p.length > 0) {\r\n                    entityObservable(p);\r\n                    return Q.resolve(message);\r\n                }\r\n            }\r\n\r\n            // If there is a parentPropertyId but not a name then just tack the ID onto the end of the resource path\r\n            if (parentPropertyId && !parentPropertyName) {\r\n                endpoint = endpoint + parentPropertyId;\r\n            }\r\n\r\n            // Create a parameters object and assign a dynamic string query onto it, if those were passed in\r\n            var parameters = {};\r\n            if (params) {\r\n                parameters = params;\r\n            } else {\r\n                var parameters = {\r\n                };\r\n            }\r\n\r\n            if (parentPropertyId && parentPropertyName) {\r\n                parameters[parentPropertyName] = parentPropertyId;\r\n            }\r\n\r\n            var finalQuery;\r\n            var query = breeze.EntityQuery\r\n                .from(endpoint)\r\n                .withParameters(parameters)\r\n                .toType(entityType);\r\n            \r\n            if (skipMerge) {\r\n                var queryOptions = manager.queryOptions.using(breeze.MergeStrategy.SkipMerge);\r\n                finalQuery = query.using(queryOptions);\r\n            } else {\r\n                finalQuery = query;\r\n            }\r\n\r\n            return manager.executeQuery(finalQuery).then(querySucceeded).fail(queryFailed);\r\n\r\n            function querySucceeded(data) {\r\n                var s = data.results;\r\n                if (entityObservable) {\r\n                    entityObservable(s)\r\n                }\r\n                if (orderBy) {\r\n                    orderResults(entityObservable, orderBy);\r\n                }\r\n                return message;\r\n            }\r\n\r\n            function queryFailed(error) {\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                console.log(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return message;\r\n            }\r\n        };\r\n\r\n        var getEntityById = function (manager, message, entityObservable, id, entityType, endpoint, forceRemote) {\r\n\r\n            checkDataContext();\r\n\r\n            var fullEndPoint = endpoint + id;\r\n                        \r\n            // Create a parameters object and assign a dynamic string query onto it, if those were passed in\r\n            var parameters = {\r\n            };\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // If it is not forceRemote, then try to get this from the local cache\r\n            if (!forceRemote) {\r\n                // entityType + - removed that from the iD parameter\r\n                var p = getLocalById(manager, fullEndPoint, entityType, 'id', id);  //Go check and see if we have this locally already\r\n                if (p.length > 0) {\r\n                    if (entityObservable) {\r\n                        entityObservable(p[0]);\r\n                    }\r\n                    return Q.resolve(message);  //Resolve any promises that are waiting on a resolution\r\n                }\r\n            }\r\n\r\n            var query = breeze.EntityQuery\r\n                .from(fullEndPoint)\r\n                .withParameters(parameters)\r\n                .toType(entityType);\r\n\r\n            return manager.executeQuery(query).then(querySucceeded).fail(queryFailed);\r\n\r\n            function querySucceeded(data) {\r\n                var s = data.results[0];\r\n                if (entityObservable) {\r\n                    entityObservable(s);\r\n                }\r\n                return message;\r\n            }\r\n\r\n            function queryFailed(error) {\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                console.log(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return message;\r\n            }\r\n        };\r\n\r\n        var getMelsEntityById = function (manager, message, entityObservable, id, entityType, endpoint, forceRemote, params) {\r\n\r\n            checkDataContext();\r\n\r\n            var fullEndPoint = endpoint;\r\n\r\n            if (id) {\r\n                fullEndPoint = fullEndPoint + id;\r\n            }\r\n\r\n            // Create a parameters object and assign a dynamic string query onto it, if those were passed in\r\n            var parameters = {};\r\n            if (params) {\r\n                parameters = params;\r\n            } else {\r\n                var parameters = {\r\n                };\r\n            }\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // If it is not forceRemote, then try to get this from the local cache\r\n            if (!forceRemote) {\r\n                // entityType + - removed that from the iD parameter\r\n                var p = getLocalById(manager, fullEndPoint, entityType, 'id', id);  //Go check and see if we have this locally already\r\n                if (p.length > 0) {\r\n                    entityObservable(p[0]);\r\n                    return Q.resolve(message);  //Resolve any promises that are waiting on a resolution\r\n                }\r\n            }\r\n\r\n            var query = breeze.EntityQuery\r\n                .from(fullEndPoint)\r\n                .withParameters(parameters)\r\n                .toType(entityType);\r\n\r\n            return manager.executeQuery(query).then(querySucceeded).fail(queryFailed);\r\n\r\n            function querySucceeded(data) {\r\n                var s = data.results[0];\r\n                if (entityObservable) {\r\n                    entityObservable(s);\r\n                }\r\n                return message;\r\n            }\r\n\r\n            function queryFailed(error) {\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                console.log(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return message;\r\n            }\r\n        };\r\n\r\n        var service = {\r\n            getEntityList: getEntityList,\r\n            getEntityById: getEntityById,\r\n\t\t\tgetLocalById: getLocalById,\r\n            getMelsEntityById: getMelsEntityById\r\n        };\r\n        return service;\r\n\r\n        function getLocalList(manager, resource, entityType, parentPropertyName, parentPropertyId, orderby) {\r\n            var query = breeze.EntityQuery.from(resource)\r\n                .toType(entityType);\r\n\r\n            if (orderby) {\r\n                query = query.orderBy(orderby);\r\n            }\r\n\r\n            if (parentPropertyName && parentPropertyId) {                \r\n                query = query.where(parentPropertyName, '==', parentPropertyId);\r\n            }\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n        function getLocalById(manager, resource, entityType, idPropertyName, id) {\r\n            var query = breeze.EntityQuery.from(resource)\r\n                .where(idPropertyName, '==', id)\r\n                .toType(entityType);\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n        function orderResults(data, orderBy) {\r\n            data.sort(function (l, r) { return l[orderBy]() > r[orderBy]() ? 1 : -1 })\r\n        }\r\n        \r\n        function checkForFourOhOne(error) {\r\n            // Check if the error status code is a 401\r\n            if (error.status && error.status === 401) {\r\n                // Log the user out\r\n                session.logOff();\r\n            }\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n    });\n","define('services/dataservices/usersservice',['models/base', 'config.services', 'services/session'],\r\n    function (modelConfig, serviceConfig, session) {\r\n\r\n        var datacontext;\r\n\r\n        var getSessionUser = function (manager, resource, userObservable, tokenId, forceRemote) {\r\n            \r\n            // Create a payload to post\r\n            var payload = { Token: tokenId, APIKey: serviceConfig.apiAppKey, Context: 'NG' }\r\n\r\n            // If there is a token id passed in from the URL string, get user that way\r\n            if (tokenId) {\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(resource)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    })\r\n                    .toType('User');\r\n\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(loginFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                var user = data.results[0];\r\n                // Make sure the user has been materialized\r\n                return userObservable(user);\r\n\r\n            }\r\n        }\r\n\r\n        var deleteSessionToken = function (token, resource) {\r\n\r\n            var fullUrl;\r\n\r\n            fullUrl = serviceConfig.securityServiceName + resource;\r\n\r\n            // If there is a token id passed in from the URL string, get user that way\r\n            if (token) {\r\n                return $.ajax({\r\n                    url: fullUrl,\r\n                    cache: false,\r\n                    headers: {\r\n                        token: token\r\n                    },\r\n                    dataType: 'json',\r\n                    type: \"POST\",\r\n                    data: { Context: 'NG' },\r\n                    success: function (data) {\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        var getUserSettings = function (resource, userObservable, apiToken) {\r\n\r\n            // Go out and get a user's settings settings to load into the application\r\n\r\n            var fullUrl;\r\n\r\n            // If no resource is passed in, create a path to user settings for the end point\r\n            if (!resource) {\r\n                resource = 'usersettings';\r\n            }\r\n\r\n            fullUrl = serviceConfig.remoteServiceName + resource;\r\n            \r\n            // Make an ajax call to go get the user - create the users' settings on success\r\n            $.ajax({\r\n                url: fullUrl,\r\n                cache: false,\r\n                headers: {\r\n                    Token: apiToken\r\n                },\r\n                dataType: 'json',\r\n                type: \"GET\",\r\n                success: function (data) {\r\n                    // Push all of the settings that are returned into a settings object\r\n\t\t\t\t\tuserObservable().settings(data.Settings);\r\n                    return true;\r\n                }\r\n            }).fail(loginFailed);\r\n        }\r\n\r\n        var createUserFromSessionUser = function (manager, userData) {\r\n            // Create a user to use as the current user\r\n            var parameters = {};\r\n            \r\n            parameters.firstName = userData.firstName || '';\r\n            parameters.lastName = userData.lastName || '';\r\n            parameters.aPIToken = userData.aPIToken || '';\r\n            parameters.userId = userData.userId || '';\r\n            parameters.userName = userData.userName || '';\r\n            parameters.contracts = userData.contracts || [];\r\n\r\n            // Create and save the user\r\n            var thisUser = manager.createEntity('User', parameters);\r\n            thisUser.entityAspect.acceptChanges();\r\n            return thisUser;\r\n        }\r\n\r\n        var userservice = {\r\n            getSessionUser: getSessionUser,\r\n            deleteSessionToken: deleteSessionToken,\r\n            getUserSettings: getUserSettings,\r\n            createUserFromSessionUser: createUserFromSessionUser\r\n        };\r\n\r\n        return userservice;\r\n\r\n        function loginFailed(error) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);\r\n\r\n            // Check if the error status code is a 401\r\n            if (error.status && error.status === 401) {\r\n                // Log the user out\r\n                session.logOff();\r\n            }\r\n\r\n            var thisAlert = datacontext.createEntity('Alert', { result: 'error', reason: 'Log-in failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n    });\n","define('services/dataservices/calendarservice',['models/users', 'config.services', 'services/local.collections'],\r\n    function (userModelsConfig, serviceConfig, localCollections) {\r\n\r\n        var getEventsByUserId = function (manager, resource, eventsObservable, userId, forceRemote) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // If it is not forceRemote, then try to get this from the local cache\r\n            if (!forceRemote) {\r\n                var p = getLocalList(manager, resource, 'Event', 'userId', userId);  //Go check and see if we have this locally already\r\n                if (p.length > 0) {\r\n                    eventsObservable(p);\r\n                    return Q.resolve();\r\n                }\r\n            }\r\n\r\n            //     // Query to post the results\r\n            // var query = breeze.EntityQuery\r\n            //     .from(resource)\r\n            //     .toType('Event');\r\n\r\n            // return manager.executeQuery(query).then(querySuccess).fail(queryFailed);\r\n\r\n            function querySuccess(data) {\r\n                var events = data.results;\r\n                // Make sure the user has been materialized\r\n                return eventsObservable(events);\r\n            }\r\n        }\r\n\r\n        // Create a calendar event\r\n        var createCalendarEvent = function (manager, event) {                                  \r\n            var thisEvent = manager.createEntity('Event', event);\r\n            thisEvent.entityAspect.acceptChanges();\r\n            localCollections.events.push(thisEvent);\r\n            return thisEvent;\r\n        }\r\n\r\n        var getEventById = function (manager, eventId) {\r\n            //If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            //from the local cache            \r\n\t\t\tvar p = getLocalById(manager, 'Event', 'Event', 'id', eventId);  //Go check and see if we have this locally already\r\n\t\t\tif (p.length > 0) {\r\n\t\t\t\treturn p[0];\r\n\t\t\t}\t\t\r\n        };\r\n\t\t\r\n        var userservice = {\r\n            getEventsByUserId: getEventsByUserId,\r\n            createCalendarEvent: createCalendarEvent,\r\n\t\t\tremoveCalendarEventById: removeCalendarEventById,\r\n            getEventById: getEventById\r\n        };\r\n\r\n        return userservice;\r\n\r\n        // Remove a calendar event\r\n        function removeCalendarEvent (event) {\r\n            localCollections.events.remove(event);\r\n\t\t\tevent.entityAspect.setDeleted();\r\n\t\t\tevent.entityAspect.acceptChanges();\r\n        }\r\n\t\t\r\n\t\tfunction removeCalendarEventById (eventId){\t\t\t\r\n\t\t\tvar matchedEvent = ko.utils.arrayFirst(localCollections.events(), function (evt) {\r\n                return evt.id() === eventId;\r\n            });\r\n\t\t\tif(matchedEvent){\r\n\t\t\t\tremoveCalendarEvent(matchedEvent);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        function queryFailed(error) {\r\n            console.log('Error - ', error);\r\n        }\r\n\r\n        function getLocalList(manager, resource, entityType, parentPropertyName, parentPropertyId, orderby) {\r\n            var query = breeze.EntityQuery.from(resource)\r\n                .select('id, title, start, end, allDay, url')\r\n                .toType(entityType);\r\n            \r\n            if (parentPropertyName && parentPropertyId) {\r\n                query = query.where(parentPropertyName, '==', parentPropertyId);\r\n            }\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n        function getLocalById(manager, resource, entityType, idPropertyName, id) {\r\n            var query = breeze.EntityQuery.from(resource)\r\n                .where(idPropertyName, '==', id)\r\n                .toType(entityType);\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n    });\n","define('services/usercontext',['services/session', 'models/base', 'config.services', 'models/users', 'services/dataservices/usersservice', 'services/dataservices/calendarservice'],\r\n    function (session, modelConfig, servicesConfig, userModelConfig, userService, calendarService) {\r\n        \r\n        // API Token to include in the post / get calls\r\n        // May have to leave this one for the log out service\r\n        var apiToken = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return 'null';\r\n            }\r\n            return session.currentUser().aPIToken();\r\n        });\r\n\r\n        // Current user id\r\n        var currentUserId = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return 'nothing';\r\n            }\r\n            return session.currentUser().userId();\r\n        });\r\n\r\n        // The data service is responsible for telling the queries where to query from\r\n        // This is different from the datacontext because it is hitting the security domain\r\n        var ds = new breeze.DataService({\r\n            serviceName: servicesConfig.securityServiceName,\r\n            hasServerMetadata: false\r\n        });\r\n\r\n        // The manager is where all of the entities are stored\r\n        var manager = configureBreezeManager();\r\n        var metadataStore = manager.metadataStore;\r\n        \r\n        var getUserByUserToken = function (userObservable, tokenId, forceRemote) { return Q(userService.getSessionUser(manager, '1.0/login', userObservable, tokenId, forceRemote)); };\r\n        var logOutUserByToken = function (endpoint) { return Q(userService.deleteSessionToken(apiToken(), endpoint)); };\r\n        var getUserSettings = function (userObservable, endpoint, apiToken) { return Q(userService.getUserSettings(endpoint, userObservable, apiToken)); };\r\n        var createUserFromSessionUser = function (userData) { return userService.createUserFromSessionUser(manager, userData); };\r\n\r\n        var createCalendarMocks = function () { return userModelConfig.createCalendarMocks(manager, currentUserId()); };\r\n        var initializeEnums = function () { return userModelConfig.initializeEnums(manager); };\r\n\r\n        // Go get calendar events for the user id specified\r\n        var getEventsByUserId = function (eventsObservable, userId, forceRemote) {\r\n            // Need to create the resource here\r\n            // createResource(Endpoint)\r\n            var resource = 'events';\r\n\r\n            return calendarService.getEventsByUserId(manager, resource, eventsObservable, userId, forceRemote);\r\n        };\r\n\r\n        // Get calendar event by event id\r\n        var getEventById = function (eventId) {\r\n            return calendarService.getEventById(manager, eventId);\r\n        }\r\n\r\n        // Go create calendar event for this user\r\n        var createCalendarEvent = function (event) {\r\n            return calendarService.createCalendarEvent(manager, event);\r\n        };\r\n\t\t\r\n\t\tvar removeCalendarEventById = function (eventId){\r\n\t\t\tcalendarService.removeCalendarEventById(eventId);\t\t\t\r\n\t\t};\r\n\t\t\r\n        // Create Entity\r\n        //\r\n        // Pass in a JSON object with the new entities constructor properties\r\n        var createEntity = function (entityType, constructorProperties) {\r\n            return manager.createEntity(entityType, constructorProperties);\r\n        }\r\n\r\n        var usercontext = {\r\n            createEntity: createEntity,\r\n            getUserByUserToken: getUserByUserToken,\r\n            logOutUserByToken: logOutUserByToken,\r\n            getUserSettings: getUserSettings,\r\n            createUserFromSessionUser: createUserFromSessionUser,\r\n            getEventsByUserId: getEventsByUserId,\r\n            createCalendarMocks: createCalendarMocks,\r\n            createCalendarEvent: createCalendarEvent,\r\n\t\t\tremoveCalendarEventById: removeCalendarEventById,\r\n            getEventById: getEventById,\r\n            initializeEnums: initializeEnums\r\n        };\r\n\r\n        return usercontext;\r\n        \r\n        // Configure the Breeze entity manager to always pass an api key\r\n        function configureBreezeManager() {\r\n            breeze.NamingConvention.camelCase.setAsDefault();\r\n            var mgr = new breeze.EntityManager({ dataService: ds });\r\n            // Register the model types in models in the entity manager\r\n            userModelConfig.initialize(mgr.metadataStore);\r\n            return mgr;\r\n        }\r\n        \r\n        // If a query fails, show why\r\n        function queryFailed(error) {\r\n            console.log('An error occurred - ', error);\r\n        }\r\n\r\n    });\n","define('services/dataservices/contactservice',['services/session', 'config.services', 'services/entityfinder'],\r\n    function (session, servicesConfig, entityFinder) {\r\n\r\n        var contactCardEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'ContactCard');\r\n        });\r\n\r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var contactService = {\r\n            saveContactCard: saveContactCard,\r\n\t\t\tgetContacts: getContacts,\r\n\t\t\tgetLocalContacts: getLocalContacts,\r\n            cancelAllChangesToContactCard: cancelAllChangesToContactCard\r\n        };\r\n        return contactService;\r\n\r\n        // POST to the server, check the results for entities\r\n        function saveContactCard(manager, serializedContactCard, isInsert) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n            \r\n            // If there is a contact card,\r\n            if (serializedContactCard) {\r\n\t\t\t\t// Create an end point to use\r\n\t\t\t\tvar endPoint;\r\n\t\t\t\tvar method;\r\n\t\t\t\tif( isInsert ){\r\n\t\t\t\t\t//insert new\r\n\t\t\t\t\tmethod = 'POST';\r\n\t\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Contacts', 'ContactCard');\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\t//update\r\n\t\t\t\t\tmethod = 'PUT';\r\n\t\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Contacts/' + serializedContactCard.Id, 'ContactCard');\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.Contact = serializedContactCard;\r\n                payload = JSON.stringify(payload);\r\n                \r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: method,\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(saveFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n\t\t//assign values into complex type collection arrays\r\n\t\tfunction copyArray(source, dest){\r\n\t\t\tdest.removeAll();\r\n\t\t\tvar copy = dest();\t\t\t\t\r\n\t\t\tif( source().length > 0){\r\n\t\t\t\tko.utils.arrayPushAll(copy, source());\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n        function cancelAllChangesToContactCard(contactCard) {\r\n            checkDataContext();\r\n            //Cancel all changes to all levels of a contact card\t\t\t\r\n\t\t\tif( contactCard.entityAspect.entityState.isAddedModifiedOrDeleted() ){\r\n\t\t\t\tcontactCard.entityAspect.rejectChanges();\r\n\r\n\t\t\t\tif( !contactCard.isNew() ){\r\n\t\t\t\t\t//revert to the original complex type collections as rejectChanges wont do complex type rollback:\r\n\t\t\t\t\t\r\n\t\t\t\t\t// contactCard.contactSubTypes.removeAll();\r\n\t\t\t\t\t// var subTypes = contactCard.contactSubTypes();\t\t\t\t\r\n\t\t\t\t\t// if( contactCard.originalContactSubTypes().length > 0){\r\n\t\t\t\t\t\t// ko.utils.arrayPushAll(subTypes, contactCard.originalContactSubTypes());\t\t\t\t\t\r\n\t\t\t\t\t// }\r\n\t\t\t\t\tcopyArray( contactCard.originalContactSubTypes, contactCard.contactSubTypes );\r\n\t\t\t\t\tcopyArray( contactCard.originalPreferredTimesOfDayIds, contactCard.preferredTimesOfDayIds );\r\n\t\t\t\t\tcopyArray( contactCard.originalPreferredDaysOfWeekIds, contactCard.preferredDaysOfWeekIds );\r\n\t\t\t\t\tcopyArray( contactCard.originalLanguages, contactCard.languages );\r\n\t\t\t\t\tcopyArray( contactCard.originalModes, contactCard.modes );\r\n\t\t\t\t\tcopyArray( contactCard.originalEmails, contactCard.emails );\r\n\t\t\t\t\tcopyArray( contactCard.originalPhones, contactCard.phones );\r\n\t\t\t\t\tcopyArray( contactCard.originalAddresses, contactCard.addresses );\r\n\t\t\t\t\t//clear the entityAspect.entityState back to Unchanged state - to hide the complex type correction (original values):\r\n\t\t\t\t\tcontactCard.entityAspect.setUnchanged();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//this is not needed anymore:\r\n            // if( !contactCard.isNew() && contactCard.patientId() ){\t\t\t\t\t\t\t\t\r\n\t\t\t\t// //contactCard.entityAspect.setDetached();\t\t\t\t\r\n\t\t\t\t// var patientId = contactCard.patientId();            \r\n\t\t\t\r\n\t\t\t\t// // Go get a list of contact cards for the currently selected patient\r\n\t\t\t\t// datacontext.getEntityList(contactCard, contactCardEndPoint().EntityType, contactCardEndPoint().ResourcePath + patientId + '/Contact', null, null, true);\t\t\t\r\n\t\t\t// }\r\n        }\r\n\r\n\t\tfunction getLocalContacts( manager, contactEntity, params ){\r\n\t\t\t// Make sure the datacontext has been loaded\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n\t\t\tif( !contactEntity ){\r\n\t\t\t\tcontactEntity = 'ContactCard';\r\n\t\t\t}\r\n            // Create a base query\r\n            var query = breeze.EntityQuery.from(contactEntity)\r\n                .toType(contactEntity);\r\n\r\n\t\t\tif( params ){\t\r\n\t\t\t\t// Create a predicate array\r\n\t\t\t\tvar preds = [];\r\n\r\n\t\t\t\t// For each of the params,\r\n\t\t\t\tko.utils.arrayForEach(params, function (param) {\r\n\t\t\t\t\t// Create a predicate\r\n\t\t\t\t\tvar thispred = breeze.Predicate.create(param.Property, param.Operator, param.Value);\r\n\t\t\t\t\t// Add the predicate to the array of predicates\r\n\t\t\t\t\tpreds.push(thispred);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// If there are predicates in the array,\r\n\t\t\t\tif (preds) {\r\n\t\t\t\t\t// Create a list of them\r\n\t\t\t\t\tvar pred = breeze.Predicate.and(preds);\r\n\t\t\t\t\tquery = query.where(pred);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n            return manager.executeQueryLocally(query);\r\n\t\t}\r\n\t\t\r\n\t\tfunction getContacts(manager, observable, params, observableTotalCount, entityName) {\r\n\r\n\t\t    // If there is no manager, we can't query using breeze\r\n\t\t    if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n\t\t    // Check if the datacontext is available, if so require it\r\n\t\t    checkDataContext();\r\n\r\n\t\t    var payload = {\r\n\t\t        ContactTypeIds: params.contactTypeIds,\r\n\t\t        ContactSubTypeIds: params.contactSubTypeIds,\r\n\t\t        ContactStatuses: params.contactStatuses,\r\n\t\t        FirstName: params.firstName,\r\n\t\t        LastName: params.lastName,\r\n\t\t        FilterType: params.filterType ? params.filterType : null,\t//'ExactMatch' / 'StartsWith' \r\n\t\t        Take: params.take,\r\n\t\t        Skip: params.skip\r\n\t\t    };\r\n\r\n\t\t    if (!entityName) {\r\n\t\t        entityName = 'ContactCard';\r\n\t\t    }\r\n\r\n\t\t    endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'SearchContacts', entityName);\r\n\t\t    payload = JSON.stringify(payload);\r\n\r\n\t\t    // Query to post the results\r\n\t\t    var query = breeze.EntityQuery\r\n\t\t\t\t.from(endPoint.ResourcePath)\r\n\t\t\t\t.withParameters({\r\n\t\t\t\t    $method: 'POST',\r\n\t\t\t\t    $encoding: 'JSON',\r\n\t\t\t\t    $data: payload\r\n\t\t\t\t}).toType(entityName);\r\n\r\n\t\t    function searchSucceeded(data) {\r\n\t\t        var s = data.results;\r\n\t\t        if (observableTotalCount) {\r\n\t\t            var count = data.httpResponse.data.TotalCount;\r\n\t\t            if (count != undefined) {\r\n\t\t                observableTotalCount(count);\r\n\t\t            }\r\n\t\t        }\r\n\t\t        if (observable) {\r\n\t\t            observable(s);\r\n\t\t        } else {\r\n\t\t            return s;\r\n\t\t        }\r\n\t\t    }\r\n\t\t\t\r\n\t\t    return manager.executeQuery(query).then(searchSucceeded).fail(saveFailed);\r\n\t\t}\r\n\r\n\t    function saveFailed(error) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);\r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Save failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n\t\t}\r\n\r\n\t\tfunction checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n\t\t    }\r\n\t\t}\r\n\r\n    });\n","define('services/dataservices/lookupsservice',['models/base', 'config.services', 'services/session'],\r\n    function (modelConfig, servicesConfig, session) {\r\n        \r\n        var datacontext;\r\n\r\n        function getLookup (manager, type, observable, forceRemote) {\r\n            \r\n            var resource;\r\n\r\n            if (session && session.currentUser) {\r\n                resource = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Lookup/' + type, type);\r\n            }\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(resource.ResourcePath)\r\n                .toType(resource.EntityType);\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(loginFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                var s = data.results;\r\n                // Make sure the user has been materialized\r\n                return observable(s);\r\n            }\r\n        }\r\n\r\n        // Get note lookups\r\n        // TODO: Rename this method\r\n        function getNoteLookup (manager, type, observable, forceRemote) {\r\n            \r\n            var resource;\r\n\r\n            if (session && session.currentUser) {\r\n                resource = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Lookup/Details/' + type, type);\r\n            }\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(resource.ResourcePath)\r\n                .toType(resource.EntityType);\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(loginFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                var s = data.results;\r\n                // Make sure the user has been materialized\r\n                return observable(s);\r\n            }\r\n        }\r\n\r\n        var userservice = {\r\n            getLookup: getLookup,\r\n            getNoteLookup: getNoteLookup\r\n        };\r\n\r\n        return userservice;\r\n\r\n        function loginFailed(error) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);\r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Load lookups failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n    });\n","define('services/dataservices/goalsservice',['services/session', 'config.services', 'services/entityfinder'],\r\n    function (session, servicesConfig, entityFinder) {\r\n        \r\n        // The end point to use when getting cohorts\r\n        var myInterventionsEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Goal/Interventions', 'Intervention', null);\r\n        });\r\n\r\n        // The end point to use when getting cohorts\r\n        var myTasksEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Goal/Tasks', 'Task', null);\r\n        });\r\n\r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var contactService = {\r\n            initializeEntity: initializeEntity,\r\n            saveGoal: saveGoal,\r\n            saveIntervention: saveIntervention,\r\n            saveTask: saveTask,\r\n            saveBarrier: saveBarrier,\r\n            deleteGoal: deleteGoal,\r\n            getInterventions: getInterventions,\r\n            getInterventionsQuery: getInterventionsQuery,\r\n            getTasks: getTasks,\r\n            getTasksQuery: getTasksQuery\r\n        };\r\n        return contactService;\r\n        \r\n        function initializeEntity(manager, observable, type, patientId, goalId) {\r\n            checkDataContext();\r\n            var path = 'Patient/' + patientId + '/Goal';\r\n\r\n            // If a goalId was passed in, \r\n            if (goalId) {\r\n                // Add it and the type\r\n                path += '/' + goalId + '/' + type\r\n            }\r\n            // Add initialize onto the end of everything\r\n            path += '/Initialize';\r\n\r\n            var resource = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), path, type);\r\n            \r\n            var payload = { };\r\n            ///{Version}/{ContractNumber}/Patient/{PatientId}/Goal/{PatientGoalId}/Barrier/Initialize\r\n            ///{Version}/{ContractNumber}/Patient/{PatientId}/Goal/Initialize\r\n\r\n            var query = breeze.EntityQuery\r\n                .from(resource.ResourcePath)\r\n                .toType(type)\r\n                .withParameters(payload);\r\n\r\n            return manager.executeQuery(query).fail(postFailed);\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function saveGoal(manager, serializedGoal) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + serializedGoal.PatientId + '/Goal/' + serializedGoal.Id + '/Update', 'Goal');\r\n\r\n            // If there is a contact card,\r\n            if (serializedGoal) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.Goal = serializedGoal;\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    })\r\n                    .toType('Goal');\r\n\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function saveIntervention(manager, serializedIntervention, patientId) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patientId + '/Goal/' + serializedIntervention.PatientGoalId + '/Intervention/' + serializedIntervention.Id + '/Update', 'Goal');\r\n\r\n            // If there is a contact card,\r\n            if (serializedIntervention) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.Intervention = serializedIntervention;\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    })\r\n                    .toType('Intervention');\r\n\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                var results = data.results[0];\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function saveTask(manager, serializedTask, patientId) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patientId + '/Goal/' + serializedTask.PatientGoalId + '/Task/' + serializedTask.Id + '/Update', 'Goal');\r\n\r\n            // If there is a contact card,\r\n            if (serializedTask) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.Task = serializedTask;\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    })\r\n                    .toType('Task');\r\n\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                var results = data.results[0];\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function saveBarrier(manager, serializedBarrier, patientId) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patientId + '/Goal/' + serializedBarrier.PatientGoalId + '/Barrier/' + serializedBarrier.Id + '/Update', 'Goal');\r\n\r\n            // If there is a contact card,\r\n            if (serializedBarrier) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.Barrier = serializedBarrier;\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    })\r\n                    .toType('Barrier');\r\n\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                var results = data.results[0];\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function deleteGoal(manager, goal) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + goal.patientId() + '/Goal/' + goal.id() + '/Delete', 'Goal');\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(endPoint.ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                });\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function postFailed(message) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);            \r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Save failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\r\n        function getInterventions (manager, observable, params) {\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.PatientId = params.PatientId;\r\n            payload.AssignedToId = params.AssignedToId;\r\n            payload.CreatedById = params.CreatedById;\r\n            payload.FromDate = params.FromDate;\r\n            payload.StatusIds = params.StatusIds;\r\n            payload.InterventionFilterType = params.InterventionFilterType\r\n            payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(myInterventionsEndPoint().ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                })\r\n                .toType('Intervention');\r\n            \r\n            return manager.executeQuery(query).then(querySucceeded).fail(queryFailed);\r\n\r\n            function querySucceeded(data) {\r\n                var s = data.results;\r\n                if (observable) {\r\n                    return observable(s);\r\n                } else {\r\n                    return s;\r\n                }\r\n            }\r\n\r\n            function queryFailed(error) {\r\n                console.log(error);\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function getInterventionsQuery (manager, params, orderString) {\r\n            // Make sure the datacontext has been loaded\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a base query\r\n            var query = breeze.EntityQuery.from('Interventions')\r\n                .toType('Intervention');\r\n\r\n            // If there is an orderBy\r\n            if (orderString) {\r\n                // Add it                \r\n                query = query.orderBy(orderString);\r\n            }\r\n\r\n            // Create a predicate array\r\n            var preds = [];\r\n\r\n            // For each of the params,\r\n            ko.utils.arrayForEach(params, function (param) {\r\n                // Create a predicate\r\n                var thispred = breeze.Predicate.create(param.Property, param.Operator, param.Value);\r\n                // Add the predicate to the array of predicates\r\n                preds.push(thispred);\r\n            });\r\n\r\n            // If there are predicates in the array,\r\n            if (preds) {\r\n                // Create a list of them\r\n                var pred = breeze.Predicate.and(preds);\r\n                query = query.where(pred);\r\n            }\r\n\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n        function getTasks (manager, observable, params) {\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a parameters object and assign a dynamic string query onto it, if those were passed in\r\n            var parameters = {};\r\n            if (params) {\r\n                parameters = params;\r\n            } else {\r\n                var parameters = {\r\n                };\r\n            }\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.PatientId = params.PatientId;\r\n            payload.AssignedToId = params.AssignedToId;\r\n            payload.CreatedById = params.CreatedById;\r\n            payload.FromDate = params.FromDate;\r\n            payload.StatusIds = params.StatusIds;\r\n            payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(myTasksEndPoint().ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                })\r\n                .toType('Task');\r\n\r\n            return manager.executeQuery(query).then(querySucceeded).fail(queryFailed);\r\n\r\n            function querySucceeded(data) {\r\n                var s = data.results;\r\n                if (observable) {\r\n                    return observable(s);\r\n                } else {\r\n                    return s;\r\n                }\r\n            }\r\n\r\n            function queryFailed(error) {\r\n                console.log(error);\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function getTasksQuery (manager, params, orderString) {\r\n            // Make sure the datacontext has been loaded\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a base query\r\n            var query = breeze.EntityQuery.from('Tasks')\r\n                .toType('Task');\r\n\r\n            // If there is an orderBy\r\n            if (orderString) {\r\n                // Add it                \r\n                query = query.orderBy(orderString);\r\n            }\r\n\r\n            // Create a predicate array\r\n            var preds = [];\r\n\r\n            // For each of the params,\r\n            ko.utils.arrayForEach(params, function (param) {\r\n                // Create a predicate\r\n                var thispred = breeze.Predicate.create(param.Property, param.Operator, param.Value);\r\n                // Add the predicate to the array of predicates\r\n                preds.push(thispred);\r\n            });\r\n\r\n            // If there are predicates in the array,\r\n            if (preds) {\r\n                // Create a list of them\r\n                var pred = breeze.Predicate.and(preds);\r\n                query = query.where(pred);\r\n            }\r\n\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n    });\n","define('services/dataservices/notesservice',['services/session', 'config.services'],\r\n    function (session, servicesConfig) {\r\n\r\n        // The end point to use when getting cohorts\r\n        var myToDosEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Scheduling/ToDos', 'ToDo', null);\r\n        });\r\n\r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var contactService = {\r\n            saveNote: saveNote,\r\n\t\t\t\t\t\tgetNote: getNote,\r\n            deleteNote: deleteNote,\r\n            saveToDo: saveToDo,\r\n            getToDos: getToDos,\r\n            getToDosQuery: getToDosQuery\r\n        };\r\n        return contactService;\r\n\r\n        // POST to the server, check the results for entities\r\n        function saveNote(manager, serializedNote, type) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\t\t\tvar receivingEntityType = '';\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n\t\t\tvar endPoint;\r\n\t\t\tvar method = 'POST'\r\n\t\t\tvar isInsert = false;\r\n\t\t\tif( !isNaN(serializedNote.Id) && Number(serializedNote.Id) < 1 ){\r\n\t\t\t\tisInsert = true;\r\n\t\t\t\tif( type && type.toLowerCase() === 'utilization' ){\r\n\t\t\t\t\tserializedNote.Id = null;\r\n\t\t\t\t\t//different endpoint for utilization note type\r\n\t\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + serializedNote.PatientId + '/Notes/Utilizations', 'Utilization');\r\n\t\t\t\t\treceivingEntityType = 'Note';\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + serializedNote.PatientId + '/Note/Insert', 'Note');\r\n\t\t\t\t\treceivingEntityType = 'Note';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//update:\r\n\t\t\t\tif( type && type.toLowerCase() === 'utilization' ){\r\n\t\t\t\t\t//different endpoint for utilization note type\r\n\t\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + serializedNote.PatientId + '/Notes/Utilizations/' + String(serializedNote.Id) , 'Utilization');\r\n\t\t\t\t\treceivingEntityType = 'Note';\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + serializedNote.PatientId + '/Note/' + String(serializedNote.Id) , 'PatientNote');\r\n\t\t\t\t\treceivingEntityType = 'Note';\r\n\t\t\t\t}\r\n\t\t\t\tmethod = 'PUT';\r\n\t\t\t}\r\n            \r\n\t\t\tfunction saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n\r\n            // If there is a contact card,\r\n            if (serializedNote) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload[endPoint.EntityType] = serializedNote;\t//insert Note: \"Note\" ; update Note: \"PatientNote\" ; Utilization- insert/update: \"Utilization\"\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath).toType('Note')\r\n                    .withParameters({\r\n                        $method: method,\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n\r\n\t\t\t\t//\tbreeze comment: this call is done for 'Utilization, 'Note' and 'PatientNote' endpoints.\r\n\t\t\t\t//\t'Note' and 'PatientNote' endpoints are not returning the whole object. only the id.\r\n\t\t\t\t//\tthis is Y in this case we do not delete the observable used to hold the new \"note\" entity\r\n\t\t\t\t//\tand replace it by the returned (.toType).\r\n\r\n                //return query.execute().then(saveSucceeded).fail(postFailed);\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n        }\r\n\r\n        function deleteNote(manager, note) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n\t\t\tvar method = 'POST';\r\n\t\t\tvar endPoint = null;\r\n            // Create an end point to use\r\n\t\t\tif( note.type() && note.type().name().toLowerCase() === 'utilization' ){\r\n\t\t\t\t//different endpoint for utilization note type\r\n\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + note.PatientId + '/Notes/Utilizations/' + note.id(), 'Note');\r\n\t\t\t\tmethod = 'DELETE';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + note.patientId() + '/Note/' + note.id() + '/Delete', 'Note');\r\n\t\t\t}\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(endPoint.ResourcePath)\r\n                .withParameters({\r\n                    $method: method,\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                });\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\t\t/**\r\n\t\t*\tget note by id. initialy intended to load the full object of utilization type note only.\r\n\t\t*\tas notes list in history are retrieved through the note endpoint, they are retrieving only some of the utilization props.\r\n\t\t*\t@method getNote\r\n\t\t*\t@param manager datacontext manager\r\n\t\t*\t@param id {string}\r\n\t\t*\t@param type {string} the note type name (examples: utilization, general touchpoint etc. )\r\n\t\t*\t@param observable optional. to keep the result\r\n\t\t*/\r\n\t\tfunction getNote( manager, id, patientId, type, observable ){\r\n\t\t\tif( type && type.toLowerCase() === 'utilization' ){\r\n\t\t\t\tcheckDataContext();\r\n\t\t\t\t// If there is no manager, we can't query using breeze\r\n\t\t\t\tif (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(),\r\n\t\t\t\t\t\t\t\t\t'Patient/' + patientId + '/Notes/Utilizations/' + id, 'Note');\r\n\r\n\t\t\t\t// Query to post the results\r\n\t\t\t\tvar query = breeze.EntityQuery\r\n\t\t\t\t\t.from(endPoint.ResourcePath)\r\n\t\t\t\t\t.withParameters({\r\n\t\t\t\t\t\t$method: 'GET',\r\n\t\t\t\t\t\t$encoding: 'JSON'\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toType('Note');\r\n\r\n\t\t\t\treturn manager.executeQuery(query).then(querySucceeded).fail(queryFailed);\r\n\t\t\t}\r\n\r\n\t\t\tfunction querySucceeded(data) {\r\n\t\t\t\tvar s = data.results;\r\n\t\t\t\tif (observable) {\r\n\t\t\t\t\treturn observable(s);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn s;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction queryFailed(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tcheckDataContext();\r\n\t\t\t\tcheckForFourOhOne(error);\r\n\t\t\t\tvar messager = 'Failed to load ' + entityType + ' from server.';\r\n\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n\t\t\t\tthisAlert.entityAspect.acceptChanges();\r\n\t\t\t\tdatacontext.alerts.push(thisAlert);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n        // POST to the server, check the results for entities\r\n        function saveToDo(manager, serializedToDo, verb) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Scheduling/ToDo/' + verb, 'ToDo');\r\n\r\n            // If there is a contact card,\r\n            if (serializedToDo) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.ToDo = serializedToDo;\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .toType('ToDo')\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n\r\n                //return query.execute().then(saveSucceeded).fail(postFailed);\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                if (data.results && data.results.length > 0) {\r\n                    return data.results[0];\r\n                } else {\r\n                    return data.httpResponse.data;\r\n                }\r\n            }\r\n        }\r\n\r\n        function postFailed(error) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);\r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Save failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\t\t\r\n        function getToDos (manager, observable, params, observableTotalCount) {\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a parameters object and assign a dynamic string query onto it, if those were passed in\r\n            var parameters = {};\r\n            if (params) {\r\n                parameters = params;\r\n            } else {\r\n                var parameters = {\r\n                };\r\n            }\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.PatientId = params.PatientId;\r\n            payload.AssignedToId = params.AssignedToId;\r\n\t\t\tpayload.NotAssignedToId = params.NotAssignedToId;\t//=> where AssignedToId != value && AssignedToId != null\r\n            payload.CreatedById = params.CreatedById;\r\n            payload.FromDate = params.FromDate;\r\n            payload.StatusIds = params.StatusIds;\r\n\t\t\tpayload.CategoryIds = params.CategoryIds;\r\n\t\t\tpayload.PriorityIds = params.PriorityIds;\r\n\t\t\tpayload.Skip = params.Skip;\r\n\t\t\tpayload.Take = params.Take;\r\n\t\t\tpayload.Sort = params.Sort;\r\n            payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(myToDosEndPoint().ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                })\r\n                .toType('ToDo');\r\n\r\n            return manager.executeQuery(query).then(querySucceeded).fail(queryFailed);\r\n\r\n            function querySucceeded(data) {\r\n                var s = data.results;\r\n\t\t\t\tif(observableTotalCount){\t\t\t\t\t\r\n\t\t\t\t\tvar count = data.httpResponse.data.TotalCount;\t\t\t\t\t\r\n\t\t\t\t\tif( count != undefined ){\r\n\t\t\t\t\t\tobservableTotalCount(count);\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n                if (observable) {\r\n                    return observable(s);\r\n                } else {\r\n                    return s;\r\n                }\r\n            }\r\n\r\n            function queryFailed(error) {\r\n                console.log(error);\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function getToDosQuery (manager, params, orderString) {\r\n            // Make sure the datacontext has been loaded\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a base query\r\n            var query = breeze.EntityQuery.from('ToDo')\r\n                .toType('ToDo');\r\n\r\n            // If there is an orderBy\r\n            if (orderString) {\r\n                // Add it\r\n                query = query.orderBy(orderString);\r\n            }\r\n\t\t\t\r\n            // Create a predicate array\r\n            var preds = [];\r\n\r\n            // For each of the params,\r\n            ko.utils.arrayForEach(params, function (param) {\r\n                // Create a predicate\r\n                var thispred = breeze.Predicate.create(param.Property, param.Operator, param.Value);\r\n                // Add the predicate to the array of predicates\r\n                preds.push(thispred);\r\n            });\r\n\r\n            // If there are predicates in the array,\r\n            if (preds) {\r\n                // Create a list of them\r\n                var pred = breeze.Predicate.and(preds);\r\n                query = query.where(pred);\r\n            }\r\n\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n    });\n","define('services/dataservices/observationsservice',['services/session', 'config.services'],\r\n    function (session, servicesConfig) {\r\n\r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var observationsService = {\r\n            getObservations: getObservations,\r\n            getObservationsByTypeId: getObservationsByTypeId,\r\n            saveObservations: saveObservations,\r\n            initializeObservation: initializeObservation\r\n        };\r\n        return observationsService;\r\n        \r\n        // WARNING : Code smell!  Proceed with caution\r\n        // -------------------------------------------\r\n        // This is a bad way to go get all of the observations\r\n        // that need to be used when searching for observations to create\r\n        // but is necessary because the service was set up to pull the\r\n        // options by type instead of just including the type in each option\r\n        // for filtering purposes\r\n\r\n        function getObservations(manager) {\r\n            checkDataContext();\r\n            var theseOptions = ko.observableArray();\r\n            \r\n            // If it is a type that is equal to a problem, append nothign, else append false\r\n            // \r\n            // Clearly a hack but we are only supposed to send false if it does NOT match\r\n            // the hardcoded type id of problem...\r\n            //ar falseOrNot = typeId !== '533d8278d433231deccaa62d' ? \"/MatchLibrary/false\" : '/MatchLibrary/';\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), '/Observations', 'Observation');\r\n\r\n            return datacontext.getEntityList(theseOptions, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n            //.then(observationsReturned);\r\n\r\n            // function observationsReturned() {\r\n            //     // Go through each option,\r\n            //     ko.utils.arrayForEach(theseOptions(), function (option) {\r\n            //         // And set the type id of the observation, since it comes back null\r\n            //         option.typeId(typeId);\r\n            //     });\r\n            //     // Return\r\n            //     return true;\r\n            // }\r\n        }\r\n        function getObservationsByTypeId(manager, typeId) {\r\n            checkDataContext();\r\n            var theseOptions = ko.observableArray();\r\n            \r\n            // If it is a type that is equal to a problem, append nothign, else append false\r\n            // \r\n            // Clearly a hack but we are only supposed to send false if it does NOT match\r\n            // the hardcoded type id of problem...\r\n            var falseOrNot = typeId !== '533d8278d433231deccaa62d' ? \"/MatchLibrary/false\" : '/MatchLibrary/';\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), '/Observation/Type/' + typeId + falseOrNot, 'Observation');\r\n\r\n            return datacontext.getEntityList(theseOptions, endPoint.EntityType, endPoint.ResourcePath, null, null, true).then(observationsReturned);\r\n\r\n            function observationsReturned() {\r\n                // Go through each option,\r\n                ko.utils.arrayForEach(theseOptions(), function (option) {\r\n                    // And set the type id of the observation, since it comes back null\r\n                    option.typeId(typeId);\r\n                });\r\n                // Return\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function saveObservations(manager, serializedObservations) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + serializedObservations.PatientId + '/Observation/Update', 'PatientObservation');\r\n\r\n            // If there is a contact card,\r\n            if (serializedObservations) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.PatientObservations = serializedObservations;\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        // Initialize a new observation\r\n        function initializeObservation(manager, observable, type, typeId, patientId, observationId) {\r\n            checkDataContext();\r\n            datacontext.observationsSaving(true);\r\n            var path = 'Patient/' + patientId + '/Observation/' + observationId;\r\n            // If it is a type that is equal to a problem, append nothing, else append false\r\n            // \r\n            // Clearly a hack but we are only supposed to send the problem thing if it matches\r\n            // the hardcoded type id of problem...\r\n            path += typeId !== '533d8278d433231deccaa62d' ? '' : '/Problem/Initialize';\r\n\r\n            // Add initialize onto the end of everything\r\n            //path += '/Initialize';\r\n\r\n            var resource = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), path, type);\r\n\r\n            var query = breeze.EntityQuery\r\n                .from(resource.ResourcePath)\r\n                .toType(type);\r\n\r\n            return manager.executeQuery(query).then(dataReturned).fail(postFailed);\r\n\r\n            function dataReturned(data) {\r\n                datacontext.observationsSaving(false);\r\n                observable(data.results[0]);\r\n                return data;\r\n            }\r\n        }\r\n\r\n        function postFailed(error) {\r\n            datacontext.observationsSaving(false);\r\n            console.log(error);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\r\n    });\n","define('services/dataservices/caremembersservice',['services/session', 'config.services'],\r\n    function (session, servicesConfig) {\r\n        \r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var careMemberService = {\r\n\t\t\tgetCareTeam: getCareTeam,\r\n\t\t\tsaveCareTeam: saveCareTeam,\r\n\t\t\tsaveCareTeamMember: saveCareTeamMember,\r\n\t\t\tdeleteCareTeamMember: deleteCareTeamMember,\r\n            saveCareMemberOld: saveCareMemberOld,\r\n            deleteNote: deleteNote\r\n        };\r\n        return careMemberService;\r\n\r\n\t\tfunction saveCareTeam( manager, serializedCareTeam ){\t\t\t\t\t\t\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n            checkDataContext();\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Contacts/' + serializedCareTeam.ContactId + '/CareTeams' , 'CareTeam');\r\n\t\t\tvar method = 'POST';\t\t\t\r\n            if (serializedCareTeam) {\r\n                var payload = {};\r\n                payload.CareTeam = serializedCareTeam;\r\n                payload = JSON.stringify(payload);\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    }).toType('CareTeam');                                \r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\tfunction saveCareTeamMember( manager, serializedCareMember, teamId, patientContactId ){\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n            checkDataContext();\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), \r\n\t\t\t\t\t\t\t'Contacts/' + patientContactId + '/CareTeams/' + teamId +  '/CareTeamMembers' , 'CareMember');\t\t\t\r\n\t\t\tvar method = 'PUT';\r\n\t\t\tif( !teamId ){\r\n\t\t\t\tthrow new Error(\"saveCareTeamMember must have [teamId]\");\r\n\t\t\t}\r\n\t\t\tif( serializedCareMember.Id < 0 ){\r\n\t\t\t\tmethod = 'POST';\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse{\t\t\r\n\t\t\t\t//UpdateCareTeamMemberRequest\r\n\t\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), \r\n\t\t\t\t\t\t\t'Contacts/' + patientContactId + '/CareTeams/' + teamId +  '/CareTeamMembers/' + serializedCareMember.Id , 'CareMember');\r\n\t\t\t}\r\n\r\n            if (serializedCareMember) {\r\n                var payload = {};\r\n                payload.CareTeamMember = serializedCareMember;\r\n                payload = JSON.stringify(payload);\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: method,\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    })\r\n\t\t\t\t\t.toType('CareMember');\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\tfunction deleteCareTeamMember( manager, member ){\r\n\t\t\tif (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n            checkDataContext();\r\n\t\t\t\r\n            endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), \r\n\t\t\t\t\t\t\t'Contacts/' + member.careTeam().contactId() + '/CareTeams/' + member.careTeamId() +  '/CareTeamMembers/' + member.id() , 'CareMember');\r\n\r\n            var query = breeze.EntityQuery\r\n                .from(endPoint.ResourcePath)\r\n                .withParameters({\r\n                    $method: 'DELETE',\r\n                    $encoding: 'JSON'\r\n                });\r\n\r\n            return manager.executeQuery(query).then(deleteSucceeded).fail(postFailed);\r\n\r\n            function deleteSucceeded(data) {\t\t\t\t\r\n                return data.httpResponse.data;\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\tfunction getCareTeam( manager, observable, patientContactId ){\r\n\t\t\t// If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n\t\t    //Contacts/{ContactId}/CareTeams\r\n\t\t\tendPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Contacts/' + patientContactId + '/CareTeams', 'CareTeam');\t\t\t\r\n                \r\n\t\t\t// Query to post the results\r\n\t\t\tvar query = breeze.EntityQuery\r\n\t\t\t\t.from(endPoint.ResourcePath)\r\n\t\t\t\t.withParameters({\r\n\t\t\t\t\t$method: 'GET',\r\n\t\t\t\t\t$encoding: 'JSON'\t\t\t\t\t\r\n\t\t\t\t}).toType('CareTeam');\r\n\r\n            return manager.executeQuery(query).then(getCareTeamSucceeded).fail(getCareTeamFailed);\t\r\n\t\t\t\r\n\t\t\tfunction getCareTeamSucceeded(data) {                \r\n\t\t\t\tif( data.results && data.results.length > 0 ){\r\n\t\t\t\t\tvar s = data.results[0];\r\n\t\t\t\t\tif (observable) {\r\n\t\t\t\t\t\treturn observable(s);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn s;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            }\r\n\t\t}\r\n\t\t\r\n        function getCareTeamFailed(error) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);            \r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Get Care Team failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\t\t\r\n\t\t//this will be deprecated:\r\n        // POST to the server, check the results for entities\r\n        function saveCareMemberOld(manager, serializedCareMember, saveType) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + serializedCareMember.PatientId + '/CareMember/' + saveType, 'CareMember');\r\n\r\n            // If there is a contact card,\r\n            if (serializedCareMember) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.CareMember = serializedCareMember;\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n                \r\n                //return query.execute().then(saveSucceeded).fail(postFailed);\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function deleteNote(manager, note) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + note.patientId() + '/Note/' + note.id() + '/Delete', 'Note');\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(endPoint.ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                });\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function postFailed(error) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);            \r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Save failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\r\n    });\n","define('services/dataservices/patientsservice',['services/session', 'config.services'],\r\n    function (session, servicesConfig) {\r\n\r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var patientsService = {\r\n            //saveBackground: saveBackground,\r\n            saveIndividual: saveIndividual,\r\n            getFullSSN: getFullSSN,\r\n            deleteIndividual: deleteIndividual,\r\n            addPatientToRecentList: addPatientToRecentList,\r\n            initializeIndividual: initializeIndividual,\r\n            savePatientSystems: savePatientSystems,\r\n\t\t\tdeletePatientSystems: deletePatientSystems\r\n        };\r\n        return patientsService;\r\n        \r\n        /**obsolete: use saveIndividual** POST to the server, check the results for entities\r\n        function saveBackground(manager, patientId, background) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patientId + '/Background', 'Background');\r\n\r\n            // If there is a patient id,\r\n            if (patientId) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.PatientId = patientId;\r\n                payload.Background = background;\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n                \r\n                //return query.execute().then(saveSucceeded).fail(postFailed);\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }*/\r\n\t\t\r\n        // POST to the server, check the results for entities\r\n        function saveIndividual(manager, serializedPatient, insert) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            var patientId = serializedPatient.Id;\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/Update', 'Patient');\r\n\r\n            // If there is a patient id,\r\n            if (patientId) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.Patient = serializedPatient;\r\n                payload.Insert = insert;\r\n                if (serializedPatient.InsertDuplicate) {\r\n                    payload.InsertDuplicate = true;\r\n                }\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n                \r\n                //return query.execute().then(saveSucceeded).fail(postFailed);\r\n                return manager.executeQuery(query).fail(postFailed);\r\n            }\r\n\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function deleteIndividual(manager, patient) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            var patientId = patient.id();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patientId + '/Delete', 'Patient');\r\n\r\n            // If there is a patient id,\r\n            if (patientId) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n                \r\n                return manager.executeQuery(query).then(saveSucceeded);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 1, reason: 'Individual deleted!' });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function initializeIndividual (manager, observable) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/Initialize');\r\n\r\n\r\n            // Create a payload from the JS object\r\n            // var payload = {};\r\n\r\n            // payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(endPoint.ResourcePath)\r\n                .toType('Patient');\r\n            \r\n            //return query.execute().then(saveSucceeded).fail(postFailed);\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                observable(data.results[0]);\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\t\t\r\n\t\tfunction deletePatientSystems(manager, deleteIds, patientId){\r\n\t\t\t// If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\t\t\tif (deleteIds) {\r\n                 var IdsString = deleteIds.join();\t//string - comma separated id's. no payLoad.\t\t\t\t                \r\n\r\n\t\t\t\t// Create an end point to use\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patientId + '/PatientSystems/' + IdsString, 'PatientSystem');\r\n\r\n                // Query\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'DELETE',\r\n                        $encoding: 'JSON'\r\n                        //$data: payload\r\n                    });\r\n\r\n                return manager.executeQuery(query).then(deleteSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function deleteSucceeded(data) {\r\n                return data.httpResponse.data;\t\t\t\t\r\n            }\r\n\t\t}\r\n\t\t\r\n        // POST(insert)/PUT(update) to the server, check the results for entities\r\n        function savePatientSystems(manager, serializedPatientSystems, isInsert) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n            \r\n            // If there is a contact card,\r\n            if (serializedPatientSystems && serializedPatientSystems.length) {\r\n\t\t\t\t\r\n\t\t\t\tvar patientId = serializedPatientSystems[0].PatientId;\r\n\t\t\t\t// Create an end point to use\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patientId + '/PatientSystems', 'PatientSystem');\r\n\t\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.PatientSystems = serializedPatientSystems;\r\n\t\t\t\tvar method = 'PUT'\r\n                if (isInsert) {\r\n                    method = 'POST';\r\n                }\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: method,\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n\t\t\t\tif( isInsert ){\r\n\t\t\t\t\tquery = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath).toType('PatientSystem')\r\n                    .withParameters({\r\n                        $method: method,\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\t\t\t\t\t\r\n\t\t\t\t}\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function getFullSSN(manager, patientId) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patientId + '/SSN');\r\n\r\n            // If there is a patient id,\r\n            if (patientId) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload = JSON.stringify(payload);\r\n\r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'GET',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    });\r\n                \r\n                //return query.execute().then(saveSucceeded).fail(postFailed);\r\n                return manager.executeQuery(query).then(saveSucceeded).fail(postFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        function postFailed(error) {\r\n            checkDataContext();\r\n            console.log('[PatientService] Error - ', error);\r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Save failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n            return error;\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\r\n        function addPatientToRecentList(patient) {\r\n            var thisUser = session.currentUser();\r\n            var theseRecentIndividuals = thisUser.recentIndividuals();\r\n            // Check if the individual is already in the list\r\n            if (theseRecentIndividuals.indexOf(patient) !== -1) {\r\n                // Move them to the top and shift everyone else down\r\n                thisUser.recentIndividuals.remove(patient);\r\n                thisUser.recentIndividuals.unshift(patient);\r\n            } else {\r\n                // Insert them at the top and shift everyone else down\r\n                thisUser.recentIndividuals.unshift(patient);\r\n            }\r\n        }\r\n\r\n    });\n","/**\r\n*\t@module allergiesservice\r\n*\t@class allergiesservice\r\n*/\r\ndefine('services/dataservices/allergiesservice',['services/session', 'config.services', 'services/entityfinder'],\r\n    function (session, servicesConfig, entityFinder) {\r\n\r\n        var allergySearchEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'ContactCard');\r\n        });\r\n\r\n        // The end point to use when getting cohorts\r\n        var myPatientAllergiesEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'PatientAllergy', 'PatientAllergy', null);\r\n        });\r\n\r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var allergiesService = {\r\n            getRemoteAllergies: getRemoteAllergies,\r\n            saveAllergies: saveAllergies,\r\n            initializeAllergy: initializeAllergy,\r\n            initializeNewAllergy: initializeNewAllergy,\r\n            getPatientAllergies: getPatientAllergies,\r\n            getPatientAllergiesQuery: getPatientAllergiesQuery,\r\n\t\t\tdeletePatientAllergy: deletePatientAllergy\r\n        };\r\n        return allergiesService;\r\n\r\n        // POST to the server, check the results for entities\r\n        function getRemoteAllergies(manager, searchString) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n            \r\n            // Create an end point to use\r\n            var endpoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Search/allergy', 'IdName');\r\n            \r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.SearchTerm = searchString;\r\n            payload.Take = 15;\r\n            payload = JSON.stringify(payload);\r\n            \r\n            var query = breeze.EntityQuery\r\n                .from(endpoint.ResourcePath)\r\n                .withParameters(payload)\r\n                .toType('AllergySearch');\r\n\r\n            // Query to post the results\r\n            // var query = breeze.EntityQuery\r\n            //     .from(endPoint.ResourcePath)\r\n            //     .withParameters({\r\n            //         $method: 'GET',\r\n            //         $encoding: 'JSON',\r\n            //         $data: payload\r\n            //     });\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(saveFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                return data.results;\r\n            }\r\n        }\r\n\r\n        // Initialize a new observation\r\n        function initializeAllergy(manager, observable, type, patientId, allergyId) {\r\n            checkDataContext();\r\n            datacontext.allergySaving(true);\r\n            var path = 'PatientAllergy/Initialize';\r\n\r\n            // Add initialize onto the end of everything\r\n            //path += '/Initialize';\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.PatientId = patientId;\r\n            payload.AllergyId = allergyId;\r\n\r\n            var resource = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), path, type);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(resource.ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                })\r\n                .toType('PatientAllergy');\r\n\r\n            // var query = breeze.EntityQuery\r\n            //     .from(resource.ResourcePath)\r\n                // .toType(type);\r\n\r\n            return manager.executeQuery(query).then(dataReturned).fail(saveFailed);\r\n\r\n            function dataReturned(data) {\r\n                datacontext.allergySaving(false);\r\n                observable(data.results[0]);\r\n                return observable;\r\n            }\r\n        }\r\n\r\n        function initializeNewAllergy(manager, allergyName) {\r\n            checkDataContext();\r\n            var path = 'Allergy/Initialize';\r\n\r\n            // Add initialize onto the end of everything\r\n            //path += '/Initialize';\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.AllergyName = allergyName;\r\n\r\n            var resource = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), path, 'AllergySearch');\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(resource.ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                })\r\n                .toType('AllergySearch');\r\n\r\n            // var query = breeze.EntityQuery\r\n            //     .from(resource.ResourcePath)\r\n                // .toType(type);\r\n\r\n            return manager.executeQuery(query).fail(saveFailed);\r\n\r\n            function dataReturned(data) {\r\n                return data.results[0];\r\n            }\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function saveAllergies(manager, serializedAllergies) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'PatientAllergy/Update');\r\n\r\n            // If there is as action\r\n            if (serializedAllergies) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.PatientAllergies = serializedAllergies;\r\n                payload = JSON.stringify(payload);\r\n                \r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    })\r\n                    .toType('PatientAllergy');\r\n\r\n                return manager.executeQuery(query).fail(saveFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                //entityFinder.searchForProblems(data.httpResponse.data);\r\n                //datacontext.allergySaving(false);\r\n                return data.results;\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n\t\t*\t@method deletePatientAllergy\r\n\t\t*\t\r\n\t\t*/\r\n\t\tfunction deletePatientAllergy(manager, allergy){\r\n\t\t\t// If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\t\t\t\r\n\t\t\tvar patientAllergyId  = allergy.id();\r\n\t\t\tif(patientAllergyId){\r\n\t\t\t\t//REST delete endpoint:\r\n\t\t\t\tvar endpoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient');\r\n\t\t\t\tendpoint.ResourcePath += allergy.patientId() + '/PatientAllergy/' + patientAllergyId;\r\n\t\t\t\t\r\n\t\t\t\tvar query = breeze.EntityQuery\r\n\t\t\t\t\t.from(endpoint.ResourcePath)\r\n\t\t\t\t\t.withParameters({\r\n                        $method: 'DELETE',\r\n                        $encoding: 'JSON'                        \r\n                    });\r\n\t\t\t\treturn manager.executeQuery(query).then(deleted);\t\r\n\t\t\t}\r\n            \r\n\t\t\tfunction deleted(data){\r\n\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: 1, reason: 'Allergy deleted!' });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return data.httpResponse.data;\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t\r\n        function saveFailed(error) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);            \r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Save failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\r\n        function getPatientAllergies (manager, observable, params, patientId) {\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a parameters object and assign a dynamic string query onto it, if those were passed in\r\n            var parameters = {};\r\n            if (params) {\r\n                parameters = params;\r\n            } else {\r\n                var parameters = {\r\n                };\r\n            }\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n            payload.StatusIds = params.StatusIds;\r\n            payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(myPatientAllergiesEndPoint().ResourcePath + patientId)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                })\r\n                .toType('PatientAllergy');\r\n\r\n            return manager.executeQuery(query).then(querySucceeded).fail(queryFailed);\r\n\r\n            function querySucceeded(data) {\r\n                var s = data.results;\r\n                if (observable) {\r\n                    return observable(s);\r\n                } else {\r\n                    return s;\r\n                }\r\n            }\r\n\r\n            function queryFailed(error) {\r\n                console.log(error);\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function getPatientAllergiesQuery (manager, params, orderString) {\r\n            // Make sure the datacontext has been loaded\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a base query\r\n            var query = breeze.EntityQuery.from('PatientAllergy')\r\n                .toType('PatientAllergy');\r\n\r\n            // If there is an orderBy\r\n            if (orderString) {\r\n                // Add it\r\n                query = query.orderBy(orderString);\r\n            }\r\n\r\n            // Create a predicate array\r\n            var preds = [];\r\n\r\n            // For each of the params,\r\n            ko.utils.arrayForEach(params, function (param) {\r\n                // Create a predicate\r\n                var thispred = breeze.Predicate.create(param.Property, param.Operator, param.Value);\r\n                // Add the predicate to the array of predicates\r\n                preds.push(thispred);\r\n            });\r\n\r\n            // If there are predicates in the array,\r\n            if (preds) {\r\n                // Create a list of them\r\n                var pred = breeze.Predicate.and(preds);\r\n                query = query.where(pred);\r\n            }\r\n\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n    });\n","/**\r\n*\t@module medicationservice\r\n*\t@class medicationservice\r\n*/\r\ndefine('services/dataservices/medicationsservice',['services/session', 'config.services', 'services/entityfinder', 'services/dataservices/getentityservice'],\r\n    function (session, servicesConfig, entityFinder, getEntityService) {\r\n\r\n        var medicationSearchEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'ContactCard');\r\n        });\r\n\r\n        // The end point to use when getting cohorts\r\n        var myPatientMedicationsEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'PatientMedSupp', 'PatientMedication', null);\r\n        });\r\n\r\n\t\tvar medicationFrequencyEndpoint  = ko.computed(function () {\r\n\t\t\tvar currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n\t\t\treturn new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'PatientMedSupp/Frequency', 'PatientMedicationFrequency');\r\n\t\t});\r\n        // Create an object to act as the datacontext\r\n        var datacontext;\r\n\r\n        // Create an object to use to reveal functions from this module\r\n        var medicationsService = {\r\n            getRemoteMedications: getRemoteMedications,\r\n            saveMedication: saveMedication,\r\n            initializeMedication: initializeMedication,\r\n            initializeNewMedication: initializeNewMedication,\r\n            getPatientMedications: getPatientMedications,\r\n\t\t\tgetPatientFrequencies: getPatientFrequencies,\r\n\t\t\tsaveCustomFrequency: saveCustomFrequency,\r\n            getRemoteMedicationFields: getRemoteMedicationFields,\r\n            getPatientMedicationsQuery: getPatientMedicationsQuery,\r\n\t\t\tdeletePatientMedication: deletePatientMedication\r\n        };\r\n        return medicationsService;\r\n\r\n        // POST to the server, check the results for entities\r\n        function getRemoteMedications(manager, searchString) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n            \r\n            // Create an end point to use\r\n            var endpoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Search/meds', 'IdName');\r\n            \r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.SearchTerm = searchString;\r\n            payload.Take = 15;\r\n            payload = JSON.stringify(payload);\r\n            \r\n            var query = breeze.EntityQuery\r\n                .from(endpoint.ResourcePath)\r\n                .withParameters(payload)\r\n                .toType('MedicationSearch');\r\n\r\n            // Query to post the results\r\n            // var query = breeze.EntityQuery\r\n            //     .from(endPoint.ResourcePath)\r\n            //     .withParameters({\r\n            //         $method: 'GET',\r\n            //         $encoding: 'JSON',\r\n            //         $data: payload\r\n            //     });\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(saveFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                return data.results;\r\n            }\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function getRemoteMedicationFields(manager, medicationName, route, form, strength) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n            \r\n            // Create an end point to use\r\n            var endpoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Search/meds/fields', 'MedicationSearch');\r\n            \r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.Name = medicationName;\r\n            // if (medication.type()) {\r\n            //     payload.Type = medication.type().name();\r\n            // }\r\n            if (route) {\r\n                payload.Route = route;\r\n            }\r\n            if (form) {\r\n                payload.Form = form;\r\n            }\r\n            if (strength) {\r\n                // Try to only get the value and strip out units\r\n                // Per discussion with Mel and Snehal that there\r\n                // will absolutely only be a value followed by a space\r\n                payload.Strength = strength.split(' ')[0];\r\n            }\r\n            \r\n            var query = breeze.EntityQuery\r\n                .from(endpoint.ResourcePath)\r\n                .withParameters(payload)\r\n                .toType('MedicationSearch');\r\n\r\n            // Query to post the results\r\n            // var query = breeze.EntityQuery\r\n            //     .from(endPoint.ResourcePath)\r\n            //     .withParameters({\r\n            //         $method: 'GET',\r\n            //         $encoding: 'JSON',\r\n            //         $data: payload\r\n            //     });\r\n\r\n            return manager.executeQuery(query).then(saveSucceeded).fail(saveFailed);\r\n\r\n            function saveSucceeded(data) {\r\n                return data.httpResponse.data;\r\n            }\r\n        }\r\n\r\n        // Initialize a new observation\r\n        function initializeMedication(manager, observable, type, patientId, medicationId) {\r\n            checkDataContext();\r\n            datacontext.medicationSaving(true);\r\n            var path = 'PatientMedication/Initialize';\r\n\r\n            // Add initialize onto the end of everything\r\n            //path += '/Initialize';\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n\r\n            payload.PatientId = patientId;\r\n            payload.MedicationId = medicationId;\r\n\r\n            var resource = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), path, type);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(resource.ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                })\r\n                .toType('PatientMedication');\r\n\r\n            // var query = breeze.EntityQuery\r\n            //     .from(resource.ResourcePath)\r\n                // .toType(type);\r\n\r\n            return manager.executeQuery(query).then(dataReturned).fail(saveFailed);\r\n\r\n            function dataReturned(data) {\r\n                datacontext.medicationSaving(false);\r\n                observable(data.results[0]);\r\n                return observable;\r\n            }\r\n        }\r\n\r\n        function initializeNewMedication(manager, medicationName) {\r\n            checkDataContext();\r\n            var path = 'MedicationMap/Initialize';\r\n\r\n            // Create a payload from the JS object\r\n            var payload = {\r\n                MedicationMap: {\r\n                    FullName: medicationName    \r\n                }\r\n            };\r\n            \r\n            var resource = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), path);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(resource.ResourcePath)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                });\r\n\r\n            return manager.executeQuery(query).then(dataReturned).fail(saveFailed);\r\n\r\n            function dataReturned(data) {\r\n                return data.httpResponse.data;                \r\n            }\r\n        }\r\n\r\n        // POST to the server, check the results for entities\r\n        function saveMedication(manager, serializedMedication, isInsert) {\r\n\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\r\n            // Create an end point to use\r\n            var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'PatientMedSupp/Save');\r\n\r\n            // If there is as action\r\n            if (serializedMedication) {\r\n\r\n                // Create a payload from the JS object\r\n                var payload = {};\r\n\r\n                payload.PatientMedSupp = serializedMedication;\r\n\r\n                if (isInsert) {\r\n                    payload.Insert = true;\r\n                }\r\n\r\n                if (serializedMedication.RecalculateNDC && !isInsert) {\r\n                    payload.RecalculateNDC = true;\r\n                }\r\n                \r\n                payload = JSON.stringify(payload);\r\n                \r\n                // Query to post the results\r\n                var query = breeze.EntityQuery\r\n                    .from(endPoint.ResourcePath)\r\n                    .withParameters({\r\n                        $method: 'POST',\r\n                        $encoding: 'JSON',\r\n                        $data: payload\r\n                    })\r\n                    .toType('PatientMedication');\r\n\r\n                return manager.executeQuery(query).fail(saveFailed);\r\n            }\r\n\r\n            function saveSucceeded(data) {\r\n                //entityFinder.searchForProblems(data.httpResponse.data);\r\n                //datacontext.allergySaving(false);\r\n                return data.results;\r\n            }\r\n        }\r\n        \r\n        /**\r\n\t\t*\t@method deletePatientMedication\r\n\t\t*\t\r\n\t\t*/\r\n\t\tfunction deletePatientMedication(manager, medication){\r\n\t\t\t// If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Check if the datacontext is available, if so require it\r\n            checkDataContext();\r\n\t\t\t\t\t\t\r\n\t\t\tvar medicationId  = medication.id();\r\n\t\t\tif(medicationId){\t\t\t\t\r\n\t\t\t\t//a REST delete endpoint\r\n\t\t\t\tvar endpoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient');\r\n\t\t\t\tendpoint.ResourcePath += medication.patientId() + '/PatientMedSupp/' + medicationId;\r\n\t\t\t\t\r\n\t\t\t\tvar query = breeze.EntityQuery\r\n\t\t\t\t\t.from(endpoint.ResourcePath)\r\n\t\t\t\t\t.withParameters({\r\n                        $method: 'DELETE',\r\n                        $encoding: 'JSON'                        \r\n                    });\r\n\t\t\t\treturn manager.executeQuery(query).then(deleted);\t\r\n\t\t\t}\r\n            \r\n\t\t\tfunction deleted(data){\r\n\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: 1, reason: 'Medication deleted!' });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return data.httpResponse.data;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n        function saveFailed(error) {\r\n            checkDataContext();\r\n            console.log('Error - ', error);\r\n            var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Save failed!' });\r\n            thisAlert.entityAspect.acceptChanges();\r\n            datacontext.alerts.push(thisAlert);\r\n        }\r\n\r\n        function checkDataContext() {\r\n            if (!datacontext) {\r\n                datacontext = require('services/datacontext');\r\n            }\r\n        }\r\n\t\t\r\n\t\t/**\r\n\t\t*\t@method getLocalFrequencyById\r\n\t\t*\r\n\t\t*/\r\n\t\tfunction getLocalFrequencyById(manager, id){\r\n\t\t\treturn getEntityService.getLocalById(manager, medicationFrequencyEndpoint().ResourcePath + id, 'PatientMedicationFrequency', 'id', id);\r\n\t\t}\r\n\t\t/**\r\n\t\t*\tsaving a frequency lookup for a specific patient.\r\n\t\t*\t@method saveCustomFrequency\r\n\t\t*\t@param\tcustomFrequency - string mandatory\r\n\t\t*\t@param\tpatientId - string mandatory\r\n\t\t*/\r\n\t\tfunction saveCustomFrequency(manager, customFrequency, patientId){\r\n\t\t\tif(customFrequency && patientId){\r\n\t\t\t\tcheckDataContext();\r\n\t\t\t\t// If there is no manager, we can't query using breeze\r\n\t\t\t\tif (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\t\t\t\t\r\n\t\t\t\t// Create a payload from the JS object\r\n\t\t\t\tvar payload = {\r\n\t\t\t\t\tPatientMedFrequency: {\r\n\t\t\t\t\t\tPatientId: patientId,\r\n\t\t\t\t\t\tName: customFrequency\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tpayload = JSON.stringify(payload);\r\n\r\n\t\t\t\t// Query to post the results\r\n\t\t\t\tvar query = breeze.EntityQuery\r\n\t\t\t\t\t.from(medicationFrequencyEndpoint().ResourcePath + 'Insert')\t//PatientMedSupp/Frequency/Insert\r\n\t\t\t\t\t.withParameters({\r\n\t\t\t\t\t\t$method: 'POST',\r\n\t\t\t\t\t\t$encoding: 'JSON',\r\n\t\t\t\t\t\t$data: payload\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.toType('PatientMedicationFrequency');\r\n\t\t\t\t\r\n\t\t\t\treturn manager.executeQuery(query).then(saveSucceeded).fail(saveFailed);\r\n\r\n\t\t\t\tfunction saveSucceeded(data) {\r\n\t\t\t\t\tif(data && data.httpResponse && data.httpResponse.data){\r\n\t\t\t\t\t\tvar result = data.httpResponse.data\r\n\t\t\t\t\t\tif(result.Id){\r\n\t\t\t\t\t\t\t//in case the user tries to create a duplicate(case is insensitive!), backend will return existing frequency id:\r\n\t\t\t\t\t\t\tvar existingFrequency = getLocalFrequencyById(manager, result.Id);\r\n\t\t\t\t\t\t\tif(existingFrequency.length === 0){\r\n\t\t\t\t\t\t\t\tmanager.createEntity('PatientMedicationFrequency', {id: result.Id, name: customFrequency, patientId: patientId, sortOrder: 0}, breeze.EntityState.Unchanged);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;                \r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t*\t\t\tget patient specific medication frequencies.\r\n\t\t*\t\t\tthe frequency lookup dropdown will need to show general frequency values and these patient specific values (if any)\r\n\t\t*\t\t\tthe dropdown needs to show a merged list of the lookup values (Frequency entity/lookup) and patient frequencies from PatientMedSupp/Frequency/<patientId>.\r\n\t\t*\t\t\tthe entity: PatientMedicationFrequency is on the client cache only and it represent that list, with added patientId property.\r\n\t\t*\t\t\tthe global frequencies taken from the lookup \"Frequency\" are pushed into this collection with patientId null.\t\t\r\n\t\t*\t@method getPatientFrequencies \r\n\t\t*/\r\n\t\tfunction getPatientFrequencies(manager, observable, patientId, forceRemote){\r\n\t\t\tcheckDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\t\t\t\r\n\t\t\tif(forceRemote){\r\n\t\t\t\t//query remotely: get patient medication frequencies for this patient only:\r\n\t\t\t\tvar query = breeze.EntityQuery\r\n\t\t\t\t\t.from(medicationFrequencyEndpoint().ResourcePath + patientId)\t//PatientMedSupp/Frequency/<patientId>                \r\n\t\t\t\t\t.toType('PatientMedicationFrequency');//Frequency\r\n\t\t\t\t\t\r\n\t\t\t\treturn manager.executeQuery(query).then(remoteQuerySucceeded).fail(queryFailed);\r\n\t\t\t}\r\n\t\t\telse return getLocalFrequencies(observable, patientId);\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t*\tonce we got this specific patient frequencies or we assume we have it in the cache (forceRemote=null or undefined), \r\n\t\t\t*\t\tquery locally to get a merged frequency list of this patient + the static part of the frequencies list (patientId=null or empty)\r\n\t\t\t*\tnote: to query by patientId it must be in the properties of the metadata of the entity.\t\t\t\r\n\t\t\t*\t@method getLocalFrequencies\r\n\t\t\t*\r\n\t\t\t*/\r\n\t\t\tfunction getLocalFrequencies(observable, patientId){\r\n\t\t\t\tvar pred = breeze.Predicate.create(\"patientId\", breeze.FilterQueryOp.Equals, null)\r\n\t\t\t\t\t\t\t.or(\"patientId\", breeze.FilterQueryOp.Equals, '')\r\n\t\t\t\t\t\t\t.or(\"patientId\", breeze.FilterQueryOp.Equals, patientId)\r\n\t\t\t\t\t\t\t.or(\"patientId\", breeze.FilterQueryOp.Equals, \"-1\");\r\n\t\t\t\tvar localQuery = breeze.EntityQuery\r\n\t\t\t\t\t.from(medicationFrequencyEndpoint().ResourcePath + patientId)\t//PatientMedSupp/Frequency/<patientId>                \r\n\t\t\t\t\t.toType('PatientMedicationFrequency')\r\n\t\t\t\t\t.where(pred)\r\n\t\t\t\t\t.orderBy('sortOrder, name');\r\n\t\t\t\tlocalQuery = localQuery.using(breeze.FetchStrategy.FromLocalCache);\r\n\t\t\t\treturn manager.executeQuery(localQuery).then(localQuerySucceeded).fail(queryFailed);\t//async local query\r\n\t\t\t\t\t\r\n\t\t\t\tfunction localQuerySucceeded(data){\r\n\t\t\t\t\tvar list = data.results;\r\n\t\t\t\t\tif (observable) {\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn observable(list);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn list;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n            function remoteQuerySucceeded(data) {\r\n\t\t\t\tif(patientId){\t\t\t\t\t\r\n\t\t\t\t\t//note the server return only the patient specific frequencies (if any) and this is only part of the list required in the dropdown,\r\n\t\t\t\t\t//\tsince we also need to merge the global (patientId=null, patientId=-1) frequencies\r\n\t\t\t\t\tko.utils.arrayForEach(data.results ,function(frequency){\t\r\n\t\t\t\t\t\t//add the patientId as the server does not return it, but we maintain this property:\r\n\t\t\t\t\t\tfrequency.patientId(patientId);\r\n\t\t\t\t\t\tfrequency.sortOrder(0);\r\n\t\t\t\t\t\tfrequency.entityAspect.acceptChanges();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t//query locally: in order to get the full list of frequencies of this patient including the global frequencies:\r\n\t\t\t\treturn getLocalFrequencies(observable, patientId);\r\n            }\r\n\t\t\tfunction queryFailed(error) {\r\n                console.log(error);\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return false;\r\n            }\r\n\t\t}\r\n\t\t\r\n        function getPatientMedications (manager, observable, params, patientId) {\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a parameters object and assign a dynamic string query onto it, if those were passed in\r\n            var parameters = {};\r\n            if (params) {\r\n                parameters = params;\r\n            } else {\r\n                var parameters = {\r\n                };\r\n            }\r\n            // Create a payload from the JS object\r\n            var payload = {};\r\n            payload.StatusIds = params.StatusIds;\r\n            payload.CategoryIds = params.CategoryIds;\r\n            payload = JSON.stringify(payload);\r\n\r\n            // Query to post the results\r\n            var query = breeze.EntityQuery\r\n                .from(myPatientMedicationsEndPoint().ResourcePath + patientId)\r\n                .withParameters({\r\n                    $method: 'POST',\r\n                    $encoding: 'JSON',\r\n                    $data: payload\r\n                })\r\n                .toType('PatientMedication');\r\n\r\n            return manager.executeQuery(query).then(querySucceeded).fail(queryFailed);\r\n\r\n            function querySucceeded(data) {\r\n                var s = data.results;\r\n                if (observable) {\r\n                    return observable(s);\r\n                } else {\r\n                    return s;\r\n                }\r\n            }\r\n\r\n            function queryFailed(error) {\r\n                console.log(error);\r\n                checkDataContext();\r\n                checkForFourOhOne(error);\r\n                var messager = 'Failed to load ' + entityType + ' from server.';\r\n                var thisAlert = datacontext.createEntity('Alert', { result: 0, reason: messager });\r\n                thisAlert.entityAspect.acceptChanges();\r\n                datacontext.alerts.push(thisAlert);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function getPatientMedicationsQuery (manager, params, orderString) {\r\n            // Make sure the datacontext has been loaded\r\n            checkDataContext();\r\n            // If there is no manager, we can't query using breeze\r\n            if (!manager) { throw new Error(\"[manager] cannot be a null parameter\"); }\r\n\r\n            // Create a base query\r\n            var query = breeze.EntityQuery.from('PatientMedication')\r\n                .toType('PatientMedication');\r\n\r\n            // If there is an orderBy\r\n            if (orderString) {\r\n                // Add it\r\n                query = query.orderBy(orderString);\r\n            }\r\n\r\n            // Create a predicate array\r\n            var preds = [];\r\n\r\n            // For each of the params,\r\n            ko.utils.arrayForEach(params, function (param) {\r\n                // Create a predicate\r\n                var thispred = breeze.Predicate.create(param.Property, param.Operator, param.Value);\r\n                // Add the predicate to the array of predicates\r\n                preds.push(thispred);\r\n            });\r\n\r\n            // If there are predicates in the array,\r\n            if (preds) {\r\n                // Create a list of them\r\n                var pred = breeze.Predicate.and(preds);\r\n                query = query.where(pred);\r\n            }\r\n\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n\r\n    });\n","/** Data context is going to be registered in the global namespace\r\n * to provide a service for grabbing data.\r\n *\r\n * Since the view models are loaded up more or less independent of each other\r\n * it reduces the dependencies on well-defined services.  Instead each method\r\n * in the DataContext provides a service and the end-point definition and\r\n * The unit of work uses a factory-type pattern to provide methods to getting\r\n * the data.\r\n *\r\n * @module datacontext\r\n */\r\n\r\n /**\r\n *\t@class datacontext\r\n *\r\n */\r\n define('services/datacontext',['services/session', 'services/jsonResultsAdapter', 'models/base', 'config.services', 'services/dataservices/getentityservice', 'models/programs', 'models/lookups', 'models/contacts', 'models/goals', 'models/notes', 'models/observations', 'models/allergies', 'models/medications', 'services/dataservices/programsservice', 'services/entityfinder', 'services/usercontext', 'services/dataservices/contactservice', 'services/entityserializer', 'services/dataservices/lookupsservice', 'services/dataservices/goalsservice', 'services/dataservices/notesservice', 'services/dataservices/observationsservice', 'services/dataservices/caremembersservice', 'services/dataservices/patientsservice', 'services/dataservices/allergiesservice', 'services/dataservices/medicationsservice', 'services/local.collections', 'services/dateHelper'],\r\n \tfunction (session, jsonResultsAdapter, modelConfig, servicesConfig, getEntityService, stepModelConfig, lookupModelConfig, contactModelConfig, goalModelConfig, notesModelConfig, observationsModelConfig, allergyModelConfig, medicationModelConfig, programsService, entityFinder, usercontext, contactService, entitySerializer, lookupsService, goalsService, notesService, observationsService, careMembersService, patientsService, allergiesService, medicationsService, localCollections, dateHelper) {\r\n\r\n\t\t// Object to use for the loading messages\r\n\t\tfunction loadingMessage(message, showing) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.Message = ko.observable(message);\r\n\t\t\tself.Showing = ko.observable(showing);\r\n\t\t}\r\n\r\n\t\t// Keep track of whether there are changes inside this manager\r\n\t\tvar hasChanges = ko.observable(false);\r\n\r\n\t\tvar observationsLoaded = false;\r\n\r\n\t\t// Monitors whether programs are currently saving to lock functionality\r\n\t\tvar programsSaving = ko.observable(false);\r\n\t\t// Monitors whether observations are currently saving to lock functionality\r\n\t\tvar observationsSaving = ko.observable(false);\r\n\t\tvar patientSystemsSaving = ko.observable(false);\r\n\t\t// Monitors whether todos are currently saving to lock functionality\r\n\t\tvar todosSaving = ko.observable(false);\r\n\t\t// Monitors whether interventions are currently saving to lock functionality\r\n\t\tvar interventionsSaving = ko.observable(false);\r\n\t\t// Monitors whether tasks are currently saving to lock functionality\r\n\t\tvar tasksSaving = ko.observable(false);\r\n\t\t// Monitors whether tasks are currently saving to lock functionality\r\n\t\tvar allergySaving = ko.observable(false);\r\n\t\t// Monitors whether tasks are currently saving to lock functionality\r\n\t\tvar medicationSaving = ko.observable(false);\r\n\r\n\r\n\t\t// API Token to include in the post / get calls\r\n\t\tvar apiToken = ko.computed(function () {\r\n\t\t\tif (!session.currentUser()) {\r\n\t\t\t\treturn '527bbc43231e250c4cb93eb6';\r\n\t\t\t}\r\n\t\t\treturn session.currentUser().aPIToken();\r\n\t\t});\r\n\r\n\t\t// Array of messages showing what is loading\r\n\t\tvar loadingMessages = ko.observableArray();\r\n\t\t// Object determining whether there are loading messages that are showing\r\n\t\tvar loadingMessagesShowing = ko.computed(function () {\r\n\t\t\tvar showing = false;\r\n\t\t\tko.utils.arrayForEach(loadingMessages(), function (message) {\r\n\t\t\t\tif (message().Showing()) {\r\n\t\t\t\t\tshowing = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn showing;\r\n\t\t});\r\n\r\n\t\tvar commModesFiltered = false;\r\n\r\n\t\tfunction configureCustomHeaders() {\r\n\t\t\tvar ajaxAdapter = breeze.config.getAdapterInstance(\"ajax\", \"jQuery\");\r\n\t\t\tajaxAdapter.defaultSettings = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t// any headers that you want to specify.\r\n\t\t\t\t\t\t\t\t\"Token\": apiToken()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvar otehrAdapter = breeze.config.initializeAdapterInstance(\"dataService\", \"webApi\", true);\r\n\t\t\t\t\t\totehrAdapter.defaultSettings = {\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t// any headers that you want to specify.\r\n\t\t\t\t\t\t\t\t\"Token\": apiToken()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreeze.ajaxpost();\r\n\t\t\t\t//breeze.ajaxpost.configAjaxAdapter(ajaxAdapter);\r\n\t\t\t}\r\n\r\n\t\t\tvar EntityQuery = breeze.EntityQuery;\r\n\t\t// The data service is responsible for telling the queries where to query from\r\n\t\tvar ds = new breeze.DataService({\r\n\t\t\tadapterName: 'webApi',\r\n\t\t\tserviceName: servicesConfig.remoteServiceName,\r\n\t\t\thasServerMetadata: false,\r\n\t\t\tjsonResultsAdapter: jsonResultsAdapter\r\n\t\t});\r\n\r\n\t\t// The manager is where all of the entities are stored\r\n\t\tvar manager = configureBreezeManager();\r\n\t\tvar metadataStore = manager.metadataStore;\r\n\t\tmetadataStore.setEntityTypeForResourceName('ProgramsTest', 'Program');\r\n\r\n\t\tvar getUserByUserToken = usercontext.getUserByUserToken;\r\n\t\tvar logOutUserByToken = usercontext.logOutUserByToken;\r\n\t\tvar getUserSettings = usercontext.getUserSettings;\r\n\t\tvar createUserFromSessionUser = usercontext.createUserFromSessionUser;\r\n\t\tvar getEventsByUserId = usercontext.getEventsByUserId;\r\n\t\tvar getEventById = usercontext.getEventById;\r\n\t\tvar createCalendarMocks = usercontext.createCalendarMocks;\r\n\t\tvar createCalendarEvent = usercontext.createCalendarEvent;\r\n\t\tvar removeCalendarEventById = usercontext.removeCalendarEventById;\r\n\r\n\t\t// Get Entity by ID\r\n\t\t//\r\n\t\t// Pass in an end-point and an entity type to get data from that end-point\r\n\t\t// and create an entity in the manager of that type.\r\n\t\tvar getEntityById = function (entityObservable, id, entityType, endpoint, forceRemote) {\r\n\t\t\t// If it is a patient, call it an individual in the message\r\n\t\t\tentityTypeName = (entityType && entityType === 'Patient') ? 'Individual' : entityType\r\n\t\t\tvar message = queryStarted(entityTypeName, forceRemote);\r\n\t\t\treturn getEntityService.getEntityById(manager, message, entityObservable, id, entityType, endpoint, forceRemote)\r\n\t\t\t.then(queryCompleted);\r\n\t\t};\r\n\r\n\t\t// Check to see if we have this entity locally yet\r\n\t\tvar checkForEntityLocally = function (entityObservable, id, entityType) {\r\n\t\t\tvar query = breeze.EntityQuery.from(entityType)// + 's'\r\n\t\t\t.where('id', '==', id)\r\n\t\t\t.toType(entityType);\r\n\t\t\tvar p = manager.executeQueryLocally(query);\r\n\t\t\tif (p.length > 0) {\r\n\t\t\t\tentityObservable(p[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get Entity by ID - The way Mel is currently doing it\r\n\t\t//\r\n\t\t// Pass in an end-point and an entity type to get data from that end-point\r\n\t\t// and create an entity in the manager of that type.\r\n\t\tvar getMelsEntityById = function (entityObservable, id, entityType, endpoint, forceRemote, params) {\r\n\t\t\t\t// If it is a patient, call it an individual in the message\r\n\t\t\t\tentityTypeName = (entityType && entityType === 'Patient') ? 'Individual' : entityType\r\n\t\t\t\tvar message = queryStarted(entityTypeName, forceRemote);\r\n\t\t\t\treturn getEntityService.getMelsEntityById(manager, message, entityObservable, id, entityType, endpoint, forceRemote, params)\r\n\t\t\t\t.then(queryCompleted);\r\n\t\t\t};\r\n\r\n\t\t// Get List of Entities\r\n\t\t//\r\n\t\t// Pass in an end-point and an entity type to get data from that end-point\r\n\t\t// and create a list of entities in the manager of that type.  Optional parameters\r\n\t\t// are parentPropertyName and parentPropertyId.  Parent Property Name is the name\r\n\t\t// of the property and id is the corresponding id.  These are used to find entities\r\n\t\t// from cache by their parent.\r\n\t\tvar getEntityList = function (entityObservable, entityType, endpoint, parentPropertyName, parentPropertyId, forceRemote, params, orderBy, skipMerge) {\r\n\t\t\t\t// If it is a patient, call it an individual in the message\r\n\t\t\t\tentityTypeName = (entityType && entityType === 'Patient') ? 'Individual' : entityType\r\n\t\t\t\tvar message = queryStarted(entityTypeName, forceRemote);\r\n\t\t\t\treturn getEntityService.getEntityList(manager, message, entityObservable, entityType, endpoint, parentPropertyName, parentPropertyId, forceRemote, params, orderBy, skipMerge)\r\n\t\t\t\t.then(queryCompleted);\r\n\t\t\t};\r\n\r\n\t\t// Create Entity\r\n\t\t//\r\n\t\t// Pass in a JSON object with the new entities constructor properties\r\n\t\tfunction createEntity (entityType, constructorProperties) {\r\n\t\t\treturn manager.createEntity(entityType, constructorProperties);\r\n\t\t}\r\n\r\n\t\t// Create Entity\r\n\t\t//\r\n\t\t// Pass in a JSON object with the new entities constructor properties\r\n\t\tfunction initializeEntity(observable, entityType, patientId, goalId) {\r\n\t\t\treturn goalsService.initializeEntity(manager, observable, entityType, patientId, goalId);\r\n\t\t}\r\n\r\n\t\t// Create Entity\r\n\t\t//\r\n\t\t// Pass in a JSON object with the new entities constructor properties\r\n\t\tfunction createComplexType(entityType, constructorProperties) {\r\n\t\t\tvar thisEntityType = manager.metadataStore.getEntityType(entityType);\r\n\t\t\tvar thisEntity = thisEntityType.createInstance(constructorProperties);\r\n\t\t\treturn thisEntity;\r\n\t\t}\r\n\r\n\t\t// Search for entities should be equal to this object\r\n\t\tvar searchForEntities = entityFinder.searchForEntities;\r\n\r\n\t\t// Subscribe to changes to our entity manager\r\n\t\tmanager.hasChangesChanged.subscribe(function (eventArgs) {\r\n\t\t\thasChanges(eventArgs.hasChanges);\r\n\t\t});\r\n\r\n\t\tfunction getSettingsParam( key ){\r\n\t\t\tvar user = session.currentUser();\r\n\t\t\tvar settings = user && session.currentUser().settings? session.currentUser().settings(): null;\r\n\t\t\tvar result;\r\n\t\t\tif( settings && settings.hasOwnProperty( key ) ){\r\n\t\t\t\tresult = settings[key];\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tvar datacontext = {\r\n\t\t\tmanager: manager,\r\n\t\t\tloadingMessages: loadingMessages,\r\n\t\t\tloadingMessagesShowing: loadingMessagesShowing,\r\n\t\t\tcheckForEntityLocally: checkForEntityLocally,\r\n\t\t\tgetEntityById: getEntityById,\r\n\t\t\tgetMelsEntityById: getMelsEntityById,\r\n\t\t\tgetEntityList: getEntityList,\r\n\t\t\tcreateEntity: createEntity,\r\n\t\t\tinitializeEntity: initializeEntity,\r\n\t\t\tcreateComplexType: createComplexType,\r\n\t\t\tgetUserByUserToken: getUserByUserToken,\r\n\t\t\tgetSystemCareManager: getSystemCareManager,\r\n\t\t\tgetUsercareManagerName: getUsercareManagerName,\r\n\t\t\tgetUserCareManager: getUserCareManager,\r\n\t\t\tgetUserFullName: getUserFullName,\r\n\t\t\tlogOutUserByToken: logOutUserByToken,\r\n\t\t\tcreateUserFromSessionUser: createUserFromSessionUser,\r\n\t\t\tgetEventsByUserId: getEventsByUserId,\r\n\t\t\tcreateCalendarMocks: createCalendarMocks,\r\n\t\t\tcreateCalendarEvent: createCalendarEvent,\r\n\t\t\tsyncCalendarEvents: syncCalendarEvents,\r\n\t\t\tgetEventById: getEventById,\r\n\t\t\tgetCalendarEvents: getCalendarEvents,\r\n\t\t\tprimeData: primeData,\r\n\t\t\tsaveChangesToPatientProperty: saveChangesToPatientProperty,\r\n\t\t\tdeleteIndividual: deleteIndividual,\r\n\t\t\tsaveIndividual: saveIndividual,\r\n\t\t\tinitializePatient: initializePatient,\r\n\t\t\tsaveAction: saveAction,\r\n\t\t\trepeatAction: repeatAction,\r\n\t\t\tgetRepeatedAction: getRepeatedAction,\r\n\t\t\tremoveProgram: removeProgram,\r\n\t\t\tsavePlanElemAttr: savePlanElemAttr,\r\n\t\t\tsaveGoal: saveGoal,\r\n\t\t\tsaveIntervention: saveIntervention,\r\n\t\t\tsaveTask: saveTask,\r\n\t\t\tsaveBarrier: saveBarrier,\r\n\t\t\tdeleteGoal: deleteGoal,\r\n\t\t\tsaveNote: saveNote,\r\n\t\t\tdeleteNote: deleteNote,\r\n\t\t\tgetNote: getNote,\r\n\t\t\tsaveCareMember: saveCareMemberOld,\t//old - will be deprecated\r\n\t\t\tsaveCareTeamMember: saveCareTeamMember,\r\n\t\t\tdeleteCareTeamMember: deleteCareTeamMember,\r\n\t\t\tsaveCareTeam: saveCareTeam,\r\n\t\t\tgetCareTeam: getCareTeam,\r\n\t\t\tenums: localCollections.enums,\r\n\t\t\talerts: localCollections.alerts,\r\n\t\t\tgetContactTypes: getContactTypes,\r\n\t\t\tgetContactTypeLookupById: getContactTypeLookupById,\r\n\t\t\tsaveContactCard: saveContactCard,\r\n\t\t\tcancelAllChangesToContactCard: cancelAllChangesToContactCard,\r\n\t\t\tgetContacts: getContacts,\r\n\t\t\tgetLocalContacts: getLocalContacts,\r\n\t\t\tcancelEntityChanges: cancelEntityChanges,\r\n\t\t\tgetAllChanges: getAllChanges,\r\n\t\t\tsearchForEntities: searchForEntities,\r\n\t\t\tcheckIfAllObservationsAreLoadedYet: checkIfAllObservationsAreLoadedYet,\r\n\t\t\tinitializeObservation: initializeObservation,\r\n\t\t\tsaveObservations: saveObservations,\r\n\t\t\tsavePatientSystems: savePatientSystems,\r\n\t\t\tdeletePatientSystems: deletePatientSystems,\r\n\t\t\t//saveBackground: saveBackground,\r\n\t\t\tgetFullSSN: getFullSSN,\r\n\t\t\taddPatientToRecentList: addPatientToRecentList,\r\n\t\t\thasChanges: hasChanges,\r\n\t\t\tprogramsSaving: programsSaving,\r\n\t\t\tobservationsSaving: observationsSaving,\r\n\t\t\tpatientSystemsSaving: patientSystemsSaving,\r\n\t\t\ttodosSaving: todosSaving,\r\n\t\t\tinterventionsSaving: interventionsSaving,\r\n\t\t\ttasksSaving: tasksSaving,\r\n\t\t\tallergySaving: allergySaving,\r\n\t\t\tmedicationSaving: medicationSaving,\r\n\t\t\tcreateAlert: createAlert,\r\n\t\t\tgetToDos: getToDos,\r\n\t\t\tgetToDosQuery: getToDosQuery,\r\n\t\t\tgetToDosRemoteOpenAssignedToMe: getToDosRemoteOpenAssignedToMe,\r\n\t\t\tgetLocalTodos: getLocalTodos,\r\n\t\t\tgetInterventions: getInterventions,\r\n\t\t\tgetInterventionsQuery: getInterventionsQuery,\r\n\t\t\tgetTasks: getTasks,\r\n\t\t\tgetTasksQuery: getTasksQuery,\r\n\t\t\tsaveToDo: saveToDo,\r\n\t\t\tdetachEntity: detachEntity,\r\n\t\t\tinitializeNewMedication: initializeNewMedication,\r\n\t\t\tinitializeNewPatientMedication: initializeNewPatientMedication,\r\n\t\t\tgetPatientMedications: getPatientMedications,\r\n\t\t\tgetPatientFrequencies: getPatientFrequencies,\r\n\t\t\tgetRemoteMedicationFields: getRemoteMedicationFields,\r\n\t\t\tgetPatientMedicationsQuery: getPatientMedicationsQuery,\r\n\t\t\tsaveMedication: saveMedication,\r\n\t\t\tdeletePatientMedication: deletePatientMedication,\r\n\t\t\tinitializeAllergy: initializeAllergy,\r\n\t\t\tinitializeNewAllergy: initializeNewAllergy,\r\n\t\t\tgetRemoteAllergies: getRemoteAllergies,\r\n\t\t\tsaveAllergies: saveAllergies,\r\n\t\t\tgetPatientAllergies: getPatientAllergies,\r\n\t\t\tdeletePatientAllergy: deletePatientAllergy,\r\n\t\t\tgetPatientAllergiesQuery: getPatientAllergiesQuery,\r\n\t\t\tgetSettingsParam: getSettingsParam,\r\n\t\t\tsingleSort: singleSort\r\n\t\t};\r\n\r\n\t\treturn datacontext;\r\n\r\n\t\t// Go prime the data that will be shared throughout the application\r\n\t\tfunction primeData() {\r\n\t\t\tconfigureCustomHeaders();\r\n\t\t\tvar promise = Q.all([\r\n\t\t\t\tloadUpEnums(),\r\n\t\t\t\tgetUserSettings(session.currentUser, '/1.0/' + session.currentUser().contracts()[0].number() + '/settings', apiToken()),\r\n\t\t\t\tgetSystems(),\r\n\t\t\t\tgetPatientLookup(),\r\n\t\t\t\tgetProblemsLookup(),\r\n\t\t\t\tgetCohortsLookup(),\r\n\t\t\t\tgetContractProgramsLookup(),\r\n\t\t\t\tgetTimesOfDayLookup(),\r\n\t\t\t\tgetPatientStatusReasonLookup(),\r\n\t\t\t\tgetTimeZonesLookup(),\r\n\t\t\t\tgetAllStatesLookup(),\r\n\t\t\t\tgetAllLanguagesLookup(),\r\n\t\t\t\tgetAllCommModesLookup(),\r\n\t\t\t\tgetAllCommTypesLookup(),\r\n\t\t\t\tgetNoteLookups(),\r\n\t\t\t\tgetGoalLookups(),\r\n\t\t\t\tgetMedicationLookups(),\r\n\t\t\t\tgetObjectivesLookup(),\r\n\t\t\t\tgetObservationTypeLookups(),\r\n\t\t\t\tgetCareMemberTypeLookups(),\r\n\t\t\t\tgetAllergyLookups(),\r\n\t\t\t\tgetAllCareManagers(),\r\n\t\t\t\tgetRecentIndividuals(),\r\n\t\t\t\tloadUpMocks(),\r\n\t\t\t\tgetContactTypesTree(),\r\n\t\t\t\t]).then(processLookpus);\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\tfunction getSystems(){\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'System', 'System');\r\n\t\t\t\treturn getEntityList(datacontext.enums.systems, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getContactTypesTree(){\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'ContactTypeLookups', 'ContactTypeLookup');\r\n\t\t\t\treturn getEntityList( localCollections.contactTypesTree, endPoint.EntityType, endPoint.ResourcePath, null, null, true)\r\n\t\t\t\t.then( function(){\r\n\t\t\t\t\tvar stop = 0;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Get a list of problems lookups\r\n\t\tfunction getProblemsLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/problems', 'Problem');\r\n\t\t\t\treturn getEntityList(null, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of patient lookups\r\n\t\tfunction getPatientLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Lookup/Details/MaritalStatus', 'MaritalStatus');\r\n\t\t\t\treturn getEntityList(datacontext.enums.maritalStatuses, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        // Get a list of cohorts lookups\r\n        function getCohortsLookup() {\r\n            if (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n                var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohorts', 'Cohort');\r\n                return getEntityList(null, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n            }\r\n        }\r\n\r\n\t\t// Get a list of active contract programs (programs for this contract)\r\n\t\tfunction getContractProgramsLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'programs/active', 'ContractProgram');\r\n\t\t\t\treturn getEntityList(null, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of times of day\r\n\t\tfunction getTimesOfDayLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/timesofdays', 'TimeOfDay');\r\n\t\t\t\treturn getEntityList(datacontext.enums.timesOfDay, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getPatientStatusReasonLookup() {\r\n\t\t\tif( session.currentUser() && session.currentUser().contracts().length !== 0 ) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/Reason', 'PatientStatusReason');\r\n\t\t\t\treturn getEntityList(datacontext.enums.patientStatusReasons, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of time zones\r\n\t\tfunction getTimeZonesLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/timezones', 'TimeZone');\r\n\t\t\t\treturn getEntityList(datacontext.enums.timeZones, endPoint.EntityType, endPoint.ResourcePath, null, null, true, null, 'name');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of time zones\r\n\t\tfunction getObjectivesLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/objectives', 'ObjectiveLookup');\r\n\t\t\t\treturn getEntityList(datacontext.enums.objectives, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of states\r\n\t\tfunction getAllStatesLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/states', 'State');\r\n\t\t\t\treturn getEntityList(datacontext.enums.states, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of languages\r\n\t\tfunction getAllLanguagesLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/languages', 'Language');\r\n\t\t\t\treturn getEntityList(datacontext.enums.languages, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of communication modes\r\n\t\tfunction getAllCommModesLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/commmodes', 'CommunicationMode');\r\n\t\t\t\treturn getEntityList(datacontext.enums.communicationModes, endPoint.EntityType, endPoint.ResourcePath, null, null, true).then(filterCommModes);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of communication types\r\n\t\tfunction getAllCommTypesLookup() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'lookup/commtypes', 'CommunicationType');\r\n\t\t\t\treturn getEntityList(datacontext.enums.communicationTypes, endPoint.EntityType, endPoint.ResourcePath, null, null, true).then(filterCommModes);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of communication types\r\n\t\tfunction getAllCareManagers() {\r\n\t\t\tif (session.currentUser() && session.currentUser().contracts().length !== 0) {\r\n\t\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Contact/CareManagers', 'CareManager');\r\n\t\t\t\treturn getEntityList(datacontext.enums.careManagers, endPoint.EntityType, endPoint.ResourcePath, null, null, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of note lookups\r\n\t\tfunction getNoteLookups() {\r\n\t\t\tif (session.currentUser()) {\r\n\t\t\t\tlookupsService.getNoteLookup(manager, 'NoteMethod', datacontext.enums.noteMethods, true);\r\n\t\t\t\tlookupsService.getNoteLookup(manager, 'NoteOutcome', datacontext.enums.noteOutcomes, true);\r\n\t\t\t\tlookupsService.getNoteLookup(manager, 'NoteWho', datacontext.enums.noteWhos, true);\r\n\t\t\t\tlookupsService.getNoteLookup(manager, 'NoteSource', datacontext.enums.noteSources, true);\r\n\t\t\t\tlookupsService.getLookup(manager, 'NoteType', datacontext.enums.noteTypes, true);\r\n\t\t\t\t//utilization note lookups:\r\n\t\t\t\tlookupsService.getNoteLookup(manager, 'VisitType', datacontext.enums.visitTypes, true);\r\n\t\t\t\tlookupsService.getNoteLookup(manager, 'UtilizationSource', datacontext.enums.utilizationSources, true);\r\n\t\t\t\tlookupsService.getNoteLookup(manager, 'Disposition', datacontext.enums.dispositions, true);\r\n\t\t\t\treturn lookupsService.getNoteLookup(manager, 'UtilizationLocation', datacontext.enums.utilizationLocations, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of goal lookups\r\n\t\tfunction getGoalLookups() {\r\n\t\t\tif (session.currentUser()) {\r\n\t\t\t\tlookupsService.getLookup(manager, 'FocusArea', datacontext.enums.focusAreas, true);\r\n\t\t\t\tlookupsService.getLookup(manager, 'Source', datacontext.enums.sources, true);\r\n\t\t\t\tlookupsService.getLookup(manager, 'BarrierCategory', datacontext.enums.barrierCategories, true);\r\n\t\t\t\tlookupsService.getLookup(manager, 'ToDoCategory', datacontext.enums.toDoCategories, true);\r\n\t\t\t\treturn lookupsService.getLookup(manager, 'InterventionCategory', datacontext.enums.interventionCategories, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of medication lookups\r\n\t\tfunction getMedicationLookups() {\r\n\t\t\tif (session.currentUser()) {\r\n\t\t\t\tlookupsService.getLookup(manager, 'MedSuppType', datacontext.enums.medSuppTypes, true);\r\n\t\t\t\tlookupsService.getLookup(manager, 'FreqHowOften', datacontext.enums.freqHowOftens, true);\r\n\t\t\t\tlookupsService.getLookup(manager, 'Frequency', datacontext.enums.frequency, true);\r\n\t\t\t\tlookupsService.getLookup(manager, 'FreqWhen', datacontext.enums.freqWhens, true);\r\n                lookupsService.getLookup(manager, 'DurationUnit', datacontext.enums.durationUnits, true);\r\n                lookupsService.getNoteLookup(manager, 'RefusalReason', datacontext.enums.refusalReasons, true);\r\n                lookupsService.getNoteLookup(manager, 'MedicationReview', datacontext.enums.medicationReviews, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/**\r\n\t\t*\tperform operations after lookups are loaded.\r\n\t\t*\t@method processLookpus\r\n\t\t*\r\n\t\t*/\r\n\t\tfunction processLookpus(){\r\n\t\t\tvar promise = Q.all([\r\n\t\t\t\tprocessFrequencyLookup(),\r\n\t\t\t\tprocessNoteLookups(),\r\n\t\t\t\t]);\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t*\trearrange sorting of note lookups\r\n\t\t*\t@method processNoteLookups\r\n\t\t*/\r\n\t\tfunction processNoteLookups(){\r\n\t\t\tdatacontext.enums.visitTypes( sortLookupAlphabetic( datacontext.enums.visitTypes, true ));\r\n\t\t\tdatacontext.enums.utilizationSources( sortLookupAlphabetic( datacontext.enums.utilizationSources, true ));\r\n\t\t\t// var nullOption = manager.createEntity('UtilizationSource', {id: -1, name: 'None', isDefault: null}, breeze.EntityState.Unchanged);\r\n\t\t\t// datacontext.enums.utilizationSources.push( nullOption );\r\n\r\n\t\t\tdatacontext.enums.dispositions( sortLookupAlphabetic( datacontext.enums.dispositions, true ));\r\n\t\t\t// nullOption = manager.createEntity('Disposition', {id: -1, name: 'None', isDefault: null}, breeze.EntityState.Unchanged);\r\n\t\t\t// datacontext.enums.dispositions.push( nullOption );\r\n\r\n\t\t\tdatacontext.enums.utilizationLocations( sortLookupAlphabetic( datacontext.enums.utilizationLocations, true ));\r\n\t\t\t// nullOption = manager.createEntity('UtilizationLocation', {id: -1, name: 'None', isDefault: null}, breeze.EntityState.Unchanged);\r\n\t\t\t// datacontext.enums.utilizationLocations.push( nullOption );\r\n\t\t\t/**\r\n\t\t\t*\tsort a lookup alphbetically. if requested, set \"other\" option as last.\r\n\t\t\t*\t@method sortLookupAlphabetic\r\n\t\t\t*\t@param setOtherOptionLast {Boolean} if true: an option with name='Other' will be positioned last.\r\n\t\t\t*/\r\n\t\t\tfunction sortLookupAlphabetic( lookupArray, setOtherOptionLast ){\r\n\t\t\t\treturn lookupArray.sort( sortFunc );\r\n\t\t\t\tfunction sortFunc(a,b){\r\n\t\t\t\t\tif( setOtherOptionLast && a.name().toLowerCase() === 'other' ) return 1;\r\n\t\t\t\t\tif( a.name() > b.name() ) return 1;\r\n\t\t\t\t\tif( b.name() >  a.name()) return -1;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t*\t\t\tconsolidate frequency lookups (\"Frequency\") into PatientMedicationFrequency entities.\r\n\t\t*\t\t\tthe Frequency lookups will be the global part of the list, common to all patients.\r\n\t\t*\t\t\teach patient may have their own specific PatientMedicationFrequency entities - we will read them when selecting a patient (getPatientFrequencies).\r\n\t\t*\r\n\t\t*\t@method processFrequencyLookup\r\n\t\t*/\r\n\t\tfunction processFrequencyLookup(){\r\n\t\t\t//consolidate frequency lookups into PatientMedicationFrequency entities:\r\n\t\t\tko.utils.arrayForEach(datacontext.enums.frequency(), function(frequency){\r\n\t\t\t\tmanager.createEntity('PatientMedicationFrequency', {id: frequency.id(), name: frequency.name() , sortOrder: 0}, breeze.EntityState.Unchanged);\r\n\t\t\t});\r\n\t\t\t//add a nullo frequency option that will be the \"add new\" option: make sure it will be sorted last\r\n\t\t\tmanager.createEntity('PatientMedicationFrequency', {id: -1, name: '-Add New-', sortOrder: 1}, breeze.EntityState.Unchanged);\r\n\t\t}\r\n\r\n\t\tfunction getRecentIndividuals () {\r\n\t\t\tvar theseRecentIndividuals = ko.observableArray();\r\n\t\t\tvar recentIndividualsEndPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Contact/' + session.currentUser().userId() + '/RecentPatients', 'Patient');\r\n\t\t\tdatacontext.getEntityList(theseRecentIndividuals, recentIndividualsEndPoint.EntityType, recentIndividualsEndPoint.ResourcePath, null, null, false).then(querySucceeded);\r\n\r\n\t\t\tfunction querySucceeded () {\r\n\t\t\t\tsession.currentUser().recentIndividuals([]);\r\n\t\t\t\tko.utils.arrayForEach(theseRecentIndividuals(), function (individual) {\r\n\t\t\t\t\tsession.currentUser().recentIndividuals.push(individual);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of goal lookups\r\n\t\tfunction getObservationTypeLookups() {\r\n\t\t\tif (session.currentUser()) {\r\n\t\t\t\treturn lookupsService.getLookup(manager, 'ObservationType', localCollections.enums.observationTypes, true).then(function () {\r\n\t\t\t\t\t\t\t\t// Load up the observations\r\n\t\t\t\t\t\t\t\tcheckIfAllObservationsAreLoadedYet();\r\n\t\t\t\t\t\t\t\t// Get observation states from the server\r\n\t\t\t\t\t\t\t\tvar thisEndPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Observation/States', 'ObservationState');\r\n\t\t\t\t\t\t\t\treturn getEntityList(localCollections.enums.observationStates, thisEndPoint.EntityType, thisEndPoint.ResourcePath, null, null, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction checkIfAllObservationsAreLoadedYet() {\r\n\t\t\tif (!observationsLoaded) {\r\n\t\t\t\tgetAllObservations();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Have to get these by patient and by type even though they are not specific to the patient\r\n\t\tfunction getAllObservations() {\r\n\t\t\tobservationsService.getObservations(manager);\r\n\t\t\t\t// ko.utils.arrayForEach(enums.observationTypes(), function (type) {\r\n\t\t\t\t//     observationsService.getObservationsByTypeId(manager, type.id());\r\n\t\t\t\t// });\r\n\t\t\tobservationsLoaded = true;\r\n\t\t}\r\n\r\n\t\t// Get a list of care member lookups\r\n\t\tfunction getCareMemberTypeLookups() {\r\n\t\t\tif (session.currentUser()) {\r\n\t\t\t\tlookupsService.getLookup(manager, 'CareTeamFrequency', localCollections.enums.careMemberFrequency, true);\r\n\t\t\t\treturn lookupsService.getLookup(manager, 'CareMemberType', localCollections.enums.careMemberTypes, true);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a list of goal lookups\r\n\t\t// TODO: Remove the False\r\n\t\tfunction getAllergyLookups() {\r\n\t\t\tif (session.currentUser()) {\r\n\t\t\t\tlookupsService.getLookup(manager, 'AllergyType', localCollections.enums.allergyTypes, true);\r\n\t\t\t\tlookupsService.getLookup(manager, 'Severity', localCollections.enums.severities, true);\r\n\t\t\t\tlookupsService.getNoteLookup(manager, 'AllergySource', localCollections.enums.allergySources, true);\r\n\t\t\t\treturn lookupsService.getLookup(manager, 'Reaction', localCollections.enums.reactions, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Filter the communication modes into types\r\n\t\tfunction filterCommModes() {\r\n\t\t\t\t// We need both comm types and comm modes, check for them first\r\n\t\t\t\tif (localCollections.enums.communicationModes().length !== 0 && localCollections.enums.communicationTypes().length !== 0 && !commModesFiltered) {\r\n\t\t\t\t\t\t// Create place holders for the id's\r\n\t\t\t\t\t\tvar phoneId = '', emailId = '', addressId = '', textId = '';\r\n\t\t\t\t\t\t// Go through each communication modes,\r\n\t\t\t\t\t\tko.utils.arrayForEach(localCollections.enums.communicationModes(), function (mode) {\r\n\t\t\t\t\t\t\t\t// And if the mode's name is phone,\r\n\t\t\t\t\t\t\t\tif (mode.name() === 'Phone') {\r\n\t\t\t\t\t\t\t\t\t\t// Set the id to the current mode's id\r\n\t\t\t\t\t\t\t\t\t\tphoneId = mode.id();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (mode.name() === 'Email') {\r\n\t\t\t\t\t\t\t\t\t\temailId = mode.id();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (mode.name() === 'Text') {\r\n\t\t\t\t\t\t\t\t\t\ttextId = mode.id();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (mode.name() === 'Mail') {\r\n\t\t\t\t\t\t\t\t\t\taddressId = mode.id();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// Go through each communication types,\r\n\t\t\t\t\t\tko.utils.arrayForEach(localCollections.enums.communicationTypes(), function (type) {\r\n\t\t\t\t\t\t\t\t// Check for phones\r\n\t\t\t\t\t\t\t\tvar thisMode = ko.utils.arrayFirst(type.commModeIds(), function (mode) {\r\n\t\t\t\t\t\t\t\t\treturn mode.id() === phoneId;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t// If there is a mode returned,\r\n\t\t\t\t\t\t\t\tif (thisMode) {\r\n\t\t\t\t\t\t\t\t\t\t// Add it to the phoneTypes\r\n\t\t\t\t\t\t\t\t\t\tlocalCollections.enums.phoneTypes.push(type);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Check for emails\r\n\t\t\t\t\t\t\t\tvar thisMode = ko.utils.arrayFirst(type.commModeIds(), function (mode) {\r\n\t\t\t\t\t\t\t\t\treturn mode.id() === emailId;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif (thisMode) {\r\n\t\t\t\t\t\t\t\t\tlocalCollections.enums.emailTypes.push(type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Check for texts\r\n\t\t\t\t\t\t\t\tvar thisMode = ko.utils.arrayFirst(type.commModeIds(), function (mode) {\r\n\t\t\t\t\t\t\t\t\treturn mode.id() === textId;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif (thisMode) {\r\n\t\t\t\t\t\t\t\t\tlocalCollections.enums.textTypes.push(type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Check for addresses\r\n\t\t\t\t\t\t\t\tvar thisMode = ko.utils.arrayFirst(type.commModeIds(), function (mode) {\r\n\t\t\t\t\t\t\t\t\treturn mode.id() === addressId;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tif (thisMode) {\r\n\t\t\t\t\t\t\t\t\tlocalCollections.enums.addressTypes.push(type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// Set commmodes filtered to true so we don't filter them again\r\n\t\t\t\t\t\tcommModesFiltered = true;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { return false; }\r\n\t\t\t\t};\r\n\r\n\t\t// Go create some mock data for the step model stuff\r\n\t\tfunction loadUpMocks() {\r\n\t\t\tgoalModelConfig.createMocks(manager);\r\n\t\t\tvar allChangedEntities = getAllChanges();\r\n\t\t\tsaveAllChangesToEntities(allChangedEntities);\r\n\t\t}\r\n\r\n\t\t// Go create the enums we will use\r\n\t\tfunction loadUpEnums() {\r\n\t\t\tlookupModelConfig.initializeEnums(manager);\r\n\t\t\tusercontext.initializeEnums(manager);\r\n\t\t\t// Set the collections into the enums namespace\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.priorities, 'Priority', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.patientStatuses, 'PatientStatus', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.systemStatus, 'SystemStatus', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.patientSystemStatus, 'PatientSystemStatus', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.goalTypes, 'GoalType', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.goalTaskStatuses, 'GoalTaskStatus', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.barrierStatuses, 'BarrierStatus', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.interventionStatuses, 'InterventionStatus', 'fakeEndPoint', null, null, false);\r\n\t\t\t// Observation stuff (first one is temporary)\r\n\t\t\t//datacontext.getEntityList(enums.observationStates, 'ObservationState', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(localCollections.enums.observationDisplays, 'ObservationDisplay', 'fakeEndPoint', null, null, false);\r\n\t\t\t// datacontext.getEntityList(localCollections.enums.noteTypes, 'NoteType', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.allergyStatuses, 'AllergyStatus', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.medicationStatuses, 'MedicationStatus', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.medicationCategories, 'MedicationCategory', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.deceasedStatuses, 'Deceased', 'fakeEndPoint', null, null, false);\r\n\t\t\tdatacontext.getEntityList(datacontext.enums.careMemberStatuses, 'CareMemberStatus', 'fakeEndPoint', null, null, false);\r\n\t\t}\r\n\r\n\t\t// Configure the Breeze entity manager to always pass an api key\r\n\t\tfunction configureBreezeManager() {\r\n\t\t\tbreeze.NamingConvention.camelCase.setAsDefault();\r\n\t\t\tbreeze.config.initializeAdapterInstance(\"ajax\", \"jQuery\", true);\r\n\t\t\tvar mgr = new breeze.EntityManager({ dataService: ds });\r\n\t\t\t// Register the model types in models in the entity manager\r\n\t\t\tmodelConfig.initialize(mgr.metadataStore);\r\n\t\t\tlookupModelConfig.initialize(mgr.metadataStore);\r\n\t\t\tstepModelConfig.initialize(mgr.metadataStore);\r\n\t\t\tcontactModelConfig.initialize(mgr.metadataStore);\r\n\t\t\tgoalModelConfig.initialize(mgr.metadataStore);\r\n\t\t\tnotesModelConfig.initialize(mgr.metadataStore);\r\n\t\t\tobservationsModelConfig.initialize(mgr.metadataStore);\r\n\t\t\tallergyModelConfig.initialize(mgr.metadataStore);\r\n\t\t\tmedicationModelConfig.initialize(mgr.metadataStore);\r\n\t\t\treturn mgr;\r\n\t\t}\r\n\r\n\t\t// If a query completes, clear the isLoading flag\r\n\t\tfunction queryStarted(object, forceRemote, action) {\r\n\t\t\tvar message;\r\n\t\t\t\t// If there is an action, use that as the action, or else default to loading\r\n\t\t\t\tvar thisAction = action ? action : 'Loading';\r\n\t\t\t\t// If it is hitting the server,\r\n\t\t\t\tif (forceRemote) {\r\n\t\t\t\t\t\t// Show a message\r\n\t\t\t\t\t\tmessage = ko.observable(new loadingMessage(thisAction + ' ' + object + '...', forceRemote));\r\n\t\t\t\t\t\taddLoadingMessage(message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn message;\r\n\t\t\t\t}\r\n\r\n\t\t// If a query completes, clear the isLoading flag\r\n\t\tfunction queryCompleted(message, programFlag) {\r\n\t\t\tif (programFlag) {\r\n\t\t\t\tprogramsSaving(false);\r\n\t\t\t}\r\n\t\t\tremoveLoadingMessage(message);\r\n\t\t}\r\n\r\n\t\t// If a query fails, show why\r\n\t\tfunction queryFailed(error) {\r\n\r\n\t\t\tcheckForFourOhOne(error);\r\n\t\t\t\t// TODO : Show an alert here\r\n\t\t\t\tthrow new Error('Could not complete query');\r\n\t\t\t}\r\n\r\n\t\t// Add a message to the loading message queue\r\n\t\tfunction addLoadingMessage(message) {\r\n\t\t\tloadingMessages.push(message);\r\n\t\t}\r\n\r\n\t\t// Remove a message from the loading message queue, if it exists in the message queue\r\n\t\tfunction removeLoadingMessage(message) {\r\n\t\t\tif (loadingMessages.indexOf(message) !== -1) {\r\n\t\t\t\tsetTimeout(function () { loadingMessages.remove(message); }, 500);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save a single properties new value\r\n\t\tfunction saveChangesToPatientProperty(entity, propertyName, propertyValue, parameters) {\r\n\t\t\tvar message = queryStarted('Individual', true, 'Saving');\r\n\r\n\t\t\t// Create an end point to use\r\n\t\t\tvar endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient');\r\n\r\n\t\t\t// Unwrap the entity\r\n\t\t\tvar unwrappedPatient = ko.unwrap(entity);\r\n\r\n\t\t\t// Get the patient's Id\r\n\t\t\tvar patientId = unwrappedPatient.id();\r\n\t\t\t// Create a full url to use\r\n\t\t\tvar fullUrl = servicesConfig.remoteServiceName + '/' + endPoint.ResourcePath + patientId + '/' + propertyName;\r\n\r\n\t\t\t// If there is a propertyValue to append, add it (can be zero also)\r\n\t\t\tif (propertyValue || propertyValue === 0) {\r\n\t\t\t\t// Add a property on to the full url, if there is a value\r\n\t\t\t\tfullUrl = fullUrl + '/' + propertyValue;\r\n\t\t\t}\r\n\r\n\t\t\tvar params = { };\r\n\r\n\t\t\t$.each(parameters, function (index, item) {\r\n\t\t\t\tparams[item.Property] = item.Value;\r\n\t\t\t});\r\n\r\n\t\t\treturn $.ajax({\r\n\t\t\t\turl: fullUrl,\r\n\t\t\t\tcache: false,\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tToken: apiToken()\r\n\t\t\t\t},\r\n\t\t\t\tdata: params,\r\n\t\t\t\tsuccess: function (data) {\r\n\t\t\t\t\tunwrappedPatient.entityAspect.acceptChanges();\r\n\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t\treturn entityFinder.searchForEntities(data);\r\n\t\t\t\t}\r\n\t\t\t}).fail(saveFailed);\r\n\r\n\t\t\tfunction saveFailed(error) {\r\n\t\t\t\tcheckForFourOhOne(error);\r\n\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: '0', reason: 'Save failed!' });\r\n\t\t\t\tthisAlert.entityAspect.acceptChanges();\r\n\t\t\t\tlocalCollections.alerts.push(thisAlert);\r\n\t\t\t\tremoveLoadingMessage(message);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction deleteIndividual (entity) {\r\n\t\t\tvar message = queryStarted('Individual', true, 'Deleting');\r\n\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t// Remove the person from cache completely\r\n\t\t\t\t//entity.entityAspect.setDetached();\r\n\t\t\t\tmanager.detachEntity(entity);\r\n\t\t\t\t//entity.entityAspect.acceptChanges();\r\n\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tsetTimeout(function () { location.reload(); }, 2000);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfunction saveFailed(error) {\r\n\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Delete failed!' });\r\n\t\t\t\tthisAlert.entityAspect.acceptChanges();\r\n\t\t\t\tlocalCollections.alerts.push(thisAlert);\r\n\t\t\t\tcheckForFourOhOne(error);\r\n\t\t\t\tremoveLoadingMessage(message);\r\n\t\t\t\tthrow new Error('Delete failed');\r\n\t\t\t}\r\n\r\n\t\t\tpatientsService.deleteIndividual(manager, entity).then(saveCompleted).fail(saveFailed);\r\n\t\t}\r\n\r\n\t\t// Save a single entity\r\n\t\tfunction saveIndividual(patient) {\r\n\t\t\t// Display a message while saving\r\n\t\t\t// var message = queryStarted(entity.entityType.shortName, true, 'Saving');\r\n\r\n\t\t\t// // Create an end point to use\r\n\t\t\t// var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient', 'Update');\r\n\t\t\t//var patientId = entity().id(); 0\r\n\t\t\t//var fullUrl = servicesConfig.remoteServiceName + '/' + endPoint.ResourcePath + 'Update';\r\n\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Individual', true, 'Saving');\r\n\t\t\tif( patient.isNew() && !patient.dataSource() ){\r\n\t\t\t\tpatient.dataSource(\"Engage\");\r\n\t\t\t}\r\n\t\t\t// Should the individual be inserted or just updated?\r\n\t\t\tvar insert = patient.isNew();\r\n\r\n\t\t\tvar serializedIndividual;\r\n\t\t\tserializedIndividual = entitySerializer.serializeIndividual(patient, manager);\r\n\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t// If there is an outcome returned and it equals zero,\r\n\t\t\t\tif (data.httpResponse.data.Outcome && data.httpResponse.data.Outcome.Result == 0) {\r\n\t\t\t\t\t\t// Set patient as a possible duplicate\r\n\t\t\t\t\t\tpatient.isDuplicate(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpatient.isDuplicate(false);\r\n\t\t\t\t\t// Else save it all\r\n\t\t\t\t\tpatient.isNew(false);\r\n\t\t\t\t\t// Save all of the levels of everything related to a patient\r\n\t\t\t\t\tif (patient.fullSSN()) {\r\n\t\t\t\t\t\t// Set the last four SSN value\r\n\t\t\t\t\t\tpatient.lastFourSSN(patient.fullSSN().substr(patient.fullSSN().length - 4));\r\n\t\t\t\t\t\t// Clear the full SSN value\r\n\t\t\t\t\t\tpatient.fullSSN(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatient.entityAspect.acceptChanges();\r\n\t\t\t\t\tupdateTodoPatient(patient);\r\n\t\t\t\t\tupdateContact(patient, 'ContactCard');  \t//update all cached patient contacts and home/contacts/search results\t\t\t\t\t\r\n\t\t\t\t\tupdateContact(patient, 'ContactSearch');\t//update all cached contact search results\r\n\t\t\t\t\tupdateContact(patient, 'ContactCarememberSearch');  //update all cached care member contact search results\r\n\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t}\r\n\r\n\t\t\tfunction saveFailed(error) {\r\n\t\t\t\tpatient.entityAspect.rejectChanges();\r\n\t\t\t\tcheckForFourOhOne(error);\r\n\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: '0', reason: 'Save failed!' });\r\n\t\t\t\tthisAlert.entityAspect.acceptChanges();\r\n\t\t\t\tlocalCollections.alerts.push(thisAlert);\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tremoveLoadingMessage(message);\r\n\t\t\t}\r\n\r\n\t\t\treturn patientsService.saveIndividual(manager, serializedIndividual, insert).then(saveCompleted).fail(saveFailed);\r\n\t\t}\r\n\r\n\t\tfunction initializePatient(observable) {\r\n\t\t\treturn patientsService.initializeIndividual(manager, observable).then(initialized);\r\n\t\t\tfunction initialized(data) {\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction removeProgram(program, reason) {\r\n\t\t\tvar message = queryStarted('Program', true, 'Removing');\r\n\r\n\t\t\treturn programsService.removeProgram(manager, program.id(), program.name(), program.patientId(), reason).then(queryCompleted(message)).fail(queryFailed);\r\n\t\t}\r\n\r\n\t\t// Save a single action\r\n\t\tfunction saveAction(action, serializedAction, programId, patientId) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Action', true, 'Saving');\r\n\t\t\tprogramsSaving(true);\r\n\t\t\taction.entityAspect.acceptChanges();\r\n\t\t\treturn programsService.saveActionPost(manager, serializedAction, programId, patientId).then(saveActionCompleted);\r\n\r\n\t\t\tfunction saveActionCompleted(data) {\r\n\t\t\t\t// Find the action and make sure completedBy didn't change\r\n\t\t\t\tif (data.httpResponse.data && data.httpResponse.data.PlanElems && data.httpResponse.data.PlanElems.Actions) {\r\n\t\t\t\t\tvar thisAction = ko.utils.arrayFirst(data.httpResponse.data.PlanElems.Actions, function (act) {\r\n\t\t\t\t\t\treturn act.Id === action.id();\r\n\t\t\t\t\t});\r\n\t\t\t\t\taction.completedBy(thisAction.CompletedBy);\r\n\t\t\t\t}\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tentityFinder.searchForProblems(data.httpResponse.data);\r\n\t\t\t\t// entityFinder.searchForAnything(data.httpResponse.data);\r\n\t\t\t\tif (data.results) {\r\n\t\t\t\t\tentityFinder.searchForLocalCollectionEntities(data.results);\r\n\t\t\t\t}\r\n\t\t\t\tprogramsSaving(false);\r\n\r\n\t\t\t\t// Save the action and all of it's steps and responses\r\n\t\t\t\taction.entityAspect.acceptChanges();\r\n\t\t\t\t// If the action has been completed,\r\n\t\t\t\tif (action.completed() && action.elementState() !== 5) {\r\n\t\t\t\t\t\t// Make sure the state is set to 5\r\n\t\t\t\t\t\taction.elementState(5);\r\n\t\t\t\t\t}\r\n\t\t\t\t// Else if the element state is 4 (in progress) when saved,\r\n\t\t\t\telse if (action.elementState() === 4) {\r\n\t\t\t\t\t\t// Display an alert that progress was saved\r\n\t\t\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: 'warning', reason: 'Progress saved' });\r\n\t\t\t\t\t\tthisAlert.entityAspect.acceptChanges();\r\n\t\t\t\t\t\tlocalCollections.alerts.push(thisAlert);\r\n\t\t\t\t\t}\r\n\t\t\t\t// Save changes to all of the steps and responses\r\n\t\t\t\tko.utils.arrayForEach(action.steps(), function (step) {\r\n\t\t\t\t\tstep.entityAspect.acceptChanges();\r\n\t\t\t\t\tko.utils.arrayForEach(step.responses(), function (response) {\r\n\t\t\t\t\t\tresponse.entityAspect.acceptChanges();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t// Save the action's module\r\n\t\t\t\taction.module().entityAspect.acceptChanges();\r\n\t\t\t\taction.isSaving(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save a single action\r\n\t\tfunction repeatAction(action) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Action', true, 'Saving');\r\n\t\t\tprogramsSaving(true);\r\n\r\n\t\t\tvar serializedAction = entitySerializer.serializeAction(action, datacontext.manager);\r\n\r\n\t\t\t\t\t// Get the id of the patient that this action is for\r\n\t\t\t\t\tvar patientId = action.module().program().patientId();\r\n\r\n\t\t\t// Get the id of the patient that this action is for\r\n\t\t\tvar programId = action.module().program().id();\r\n\r\n\t\t\treturn programsService.repeatAction(manager, serializedAction, programId, patientId).then(repeatActionCompleted);\r\n\r\n\t\t\tfunction repeatActionCompleted(data) {\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tprogramsSaving(false);\r\n\t\t\t\tcreateAlert('warning', 'Action has been repeated!');\r\n\t\t\t\taction.isSaving(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get an action by which it was repeated from\r\n\t\tfunction getRepeatedAction(action) {\r\n\t\t\tvar repeatedAction = programsService.getRepeatedAction(manager, action);\r\n\t\t\treturn repeatedAction;\r\n\t\t}\r\n\r\n\t\tfunction savePlanElemAttr(planElement, programId, patientId) {\r\n\t\t\tvar message = queryStarted('Assignment', true, 'Saving');\r\n\r\n\t\t\tvar planElem = { Id: planElement.id(), AssignToId: planElement.assignToId() }\r\n\t\t\treturn programsService.savePlanElemAttrs(manager, planElem, programId, patientId).then(queryCompleted(message));\r\n\t\t}\r\n\r\n\t\tfunction getContactTypes( group, isRoot){\r\n\t\t\tvar types = [];\r\n\t\t\tko.utils.arrayForEach(localCollections.contactTypesTree(), function(node){\r\n\t\t\t\tif( ( group && ( node.group() == group )) || !group ) {\r\n\t\t\t\t\tif( ( isRoot && !node.parentId() ) || ( isRoot == false && node.parentId() ) || !isRoot ){\r\n\t\t\t\t\t\ttypes.push(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn types;\r\n\t\t}\r\n\r\n\t\tfunction getContactTypeLookupById( id ){\r\n\t\t\tvar contactType = ko.utils.arrayFilter( localCollections.contactTypesTree(), function(node){\r\n\t\t\t\treturn node.id() == id;\r\n\t\t\t});\r\n\t\t\treturn contactType;\r\n\t\t}\r\n\t\t\r\n\t\t//assign values into complex type collection arrays\r\n\t\tfunction copyArray(source, dest){\r\n\t\t\tdest.removeAll();\r\n\t\t\tvar copy = dest();\t\t\t\t\r\n\t\t\tif( source().length > 0){\r\n\t\t\t\tko.utils.arrayPushAll(copy, source());\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Save changes to a single contact card\r\n\t\tfunction saveContactCard(contactCard) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Contact', true, 'Saving');\r\n\t\t\tvar isInsert = contactCard.isNew();\r\n\t\t\tvar serializedContactCard;\r\n\t\t\t//setTimeout(function () {\r\n\t\t\t\tserializedContactCard = entitySerializer.serializeContactCard(contactCard, manager);\r\n\t\t\t//}, 50);\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfunction saveCompleted (data) {\r\n\t\t\t\t// If data was returned and has a property called success that is true,\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tif( isInsert && data.Id ){\r\n\t\t\t\t\t\tcontactCard.id( data.Id );\r\n\t\t\t\t\t\tcontactCard.isNew(false);\r\n\t\t\t\t\t\tcontactCard.createdById( session.currentUser().userId() );//data.CreatedById is not returned\r\n\t\t\t\t\t\tcontactCard.createdOn( new Date() ); //data.CreatedOn is not returned\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tcontactCard.updatedById( session.currentUser().userId() );\r\n\t\t\t\t\t\tcontactCard.updatedOn( new Date() );\r\n\t\t\t\t\t\tif(contactCard.patient()){\r\n\t\t\t\t\t\t\tvar contactPatient = contactCard.patient();\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//sync the overlapping properties:\r\n\t\t\t\t\t\t\tcontactPatient.firstName(contactCard.firstName());\r\n\t\t\t\t\t\t\tcontactPatient.lastName(contactCard.lastName());\r\n\t\t\t\t\t\t\tcontactPatient.middleName(contactCard.middleName());\r\n\t\t\t\t\t\t\tcontactPatient.suffix(contactCard.suffix());\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontactPatient.gender(contactCard.gender());\r\n\t\t\t\t\t\t\tcontactPatient.preferredName(contactCard.preferredName());\r\n\t\t\t\t\t\t\tcontactPatient.deceasedId(contactCard.deceasedId());\r\n\t\t\t\t\t\t\tcontactPatient.entityAspect.acceptChanges();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t// Go through the data, find any entities that need to have their Id's cleaned up\r\n\t\t\t\t\tvar updatedPhones = data.UpdatedPhone;\r\n\t\t\t\t\tvar updatedEmails = data.UpdatedEmail;\r\n\t\t\t\t\tvar updatedAddresses = data.UpdatedAddress;\r\n\t\t\t\t\t// Iterate through the updated phones,\r\n\t\t\t\t\tif (updatedPhones) {\r\n\t\t\t\t\t\tko.utils.arrayForEach(updatedPhones, function (newPhone) {\r\n\t\t\t\t\t\t\t// Find the first matching phone,\r\n\t\t\t\t\t\t\tvar phoneToUpdate = ko.utils.arrayFirst(contactCard.phones(), function (oldPhone) {\r\n\t\t\t\t\t\t\t\t// Where the id equals the id of the 'newPhone' returned from the server\r\n\t\t\t\t\t\t\t\treturn oldPhone.id() === newPhone.OldId;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// If a phone is found,\r\n\t\t\t\t\t\t\tif (phoneToUpdate) {\r\n\t\t\t\t\t\t\t\t// Update it's id property\r\n\t\t\t\t\t\t\t\tphoneToUpdate.id(newPhone.NewId);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (updatedEmails) {\r\n\t\t\t\t\t\tko.utils.arrayForEach(updatedEmails, function (newEmail) {\r\n\t\t\t\t\t\t\t// Find the first matching phone,\r\n\t\t\t\t\t\t\tvar emailToUpdate = ko.utils.arrayFirst(contactCard.emails(), function (oldEmail) {\r\n\t\t\t\t\t\t\t\t// Where the id equals the id of the 'newPhone' returned from the server\r\n\t\t\t\t\t\t\t\treturn oldEmail.id() === newEmail.OldId;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// If a phone is found,\r\n\t\t\t\t\t\t\tif (emailToUpdate) {\r\n\t\t\t\t\t\t\t\t\t// Update it's id property\r\n\t\t\t\t\t\t\t\t\temailToUpdate.id(newEmail.NewId);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (updatedAddresses) {\r\n\t\t\t\t\t\tko.utils.arrayForEach(updatedAddresses, function (newAddress) {\r\n\t\t\t\t\t\t\t// Find the first matching phone,\r\n\t\t\t\t\t\t\tvar addressToUpdate = ko.utils.arrayFirst(contactCard.addresses(), function (oldAddress) {\r\n\t\t\t\t\t\t\t\t// Where the id equals the id of the 'newPhone' returned from the server\r\n\t\t\t\t\t\t\t\treturn oldAddress.id() === newAddress.OldId;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// If a phone is found,\r\n\t\t\t\t\t\t\tif (addressToUpdate) {\r\n\t\t\t\t\t\t\t\t// Update it's id property\r\n\t\t\t\t\t\t\t\taddressToUpdate.id(newAddress.NewId);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//record the complex types as original values: \r\n\t\t\t\t\t// contactCard.originalContactSubTypes.removeAll();\r\n\t\t\t\t\t// var originalSubTypes = contactCard.originalContactSubTypes();\t\t\t\t\r\n\t\t\t\t\t// if( contactCard.contactSubTypes().length > 0){\r\n\t\t\t\t\t\t// ko.utils.arrayPushAll(originalSubTypes, contactCard.contactSubTypes());\t\t\t\t\t\r\n\t\t\t\t\t// }\r\n\t\t\t\t\tcopyArray( contactCard.contactSubTypes, contactCard.originalContactSubTypes );\r\n\t\t\t\t\tcopyArray( contactCard.preferredTimesOfDayIds, contactCard.originalPreferredTimesOfDayIds );\r\n\t\t\t\t\tcopyArray( contactCard.preferredDaysOfWeekIds, contactCard.originalPreferredDaysOfWeekIds );\r\n\t\t\t\t\tcopyArray( contactCard.languages, contactCard.originalLanguages );\r\n\t\t\t\t\tcopyArray( contactCard.modes, contactCard.originalModes );\r\n\t\t\t\t\tcopyArray( contactCard.emails, contactCard.originalEmails );\r\n\t\t\t\t\tcopyArray( contactCard.phones, contactCard.originalPhones );\r\n\t\t\t\t\tcopyArray( contactCard.addresses, contactCard.originalAddresses );\r\n\t\t\t\t\t\r\n\t\t\t\t\t// end complex types\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Save all of the levels of everything related to a contact card\r\n\t\t\t\t\tcontactCard.entityAspect.acceptChanges();\r\n\r\n\t\t\t\t\t// Finally, clear out the message\r\n\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//setTimeout(function () {\r\n\t\t\t\treturn contactService.saveContactCard(manager, serializedContactCard, isInsert).then(saveCompleted);\r\n\t\t\t//}, 50);\r\n\t\t}\r\n\r\n\t\tfunction getLocalContactById( contactEntity, id ){\r\n\t\t\tvar param = new modelConfig.Parameter('id', id, '==');\r\n\t\t\treturn getLocalContacts( contactEntity, param );\r\n\t\t}\r\n\t\t\r\n\t\tfunction getLocalContacts( contactEntity, params ){\r\n\t\t\treturn contactService.getLocalContacts( manager, contactEntity, params );\r\n\t\t}\r\n\r\n\t\tfunction getContacts( observable, params, observableTotalCount, entityName ){\r\n\t\t\tvar message = queryStarted('Contacts', true, 'Loading');\r\n\t\t\t\t\t\t\r\n\t\t\tfunction contactsReturned(contacts) {\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\treturn contacts;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn contactService.getContacts(manager, observable, params, observableTotalCount, entityName).then(contactsReturned);\r\n\t\t}\r\n\r\n\t\t// Save changes to a single contact card\r\n\t\tfunction saveGoal(goal) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Goal', true, 'Saving');\r\n\r\n\t\t\tgoal.checkAppend();\r\n\r\n\t\t\tgoal.entityAspect.acceptChanges();\r\n\t\t\tvar serializedGoal;\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tserializedGoal = entitySerializer.serializeGoal(goal, manager);\r\n\t\t\t}, 50);\r\n\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\tgoal.isNew(false);\r\n\t\t\t\tgoal.entityAspect.acceptChanges();\r\n\t\t\t\t// Accept the changes to everything related to a goal\r\n\t\t\t\tko.utils.arrayForEach(goal.tasks(), function (task) {\r\n\t\t\t\t\ttask.entityAspect.acceptChanges();\r\n\t\t\t\t});\r\n\t\t\t\tko.utils.arrayForEach(goal.interventions(), function (intervention) {\r\n\t\t\t\t\tintervention.entityAspect.acceptChanges();\r\n\t\t\t\t});\r\n\t\t\t\tko.utils.arrayForEach(goal.barriers(), function (barrier) {\r\n\t\t\t\t\tbarrier.isNew(false);\r\n\t\t\t\t\tbarrier.entityAspect.acceptChanges();\r\n\t\t\t\t});\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\treturn goalsService.saveGoal(manager, serializedGoal).then(saveCompleted);\r\n\t\t\t}, 50);\r\n\t\t}\r\n\r\n\t\t// Save a type of intervention\r\n\t\tfunction saveIntervention(intervention) {\r\n\t\t\t\t// Display a message while saving\r\n\t\t\t\tvar message = queryStarted('Intervention', true, 'Saving');\r\n\r\n\t\t\t\tintervention.checkAppend();\r\n\r\n\t\t\t\t// Save intervention changes so new ones returned are accepted\r\n\t\t\t\tintervention.entityAspect.acceptChanges();\r\n\t\t\t\tvar serializedIntervention;\r\n\t\t\t\tserializedIntervention = entitySerializer.serializeIntervention(intervention, manager);\r\n\t\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t\t// Check if we have already added the intervention to the local collection\r\n\t\t\t\t\tif (localCollections.interventions.indexOf(intervention) === -1) {\r\n\t\t\t\t\t\t\t// If not, add it in\r\n\t\t\t\t\t\t\tlocalCollections.interventions.push(intervention);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t// Save all of the levels of everything related to a contact card\r\n\t\t\t\t\tintervention.entityAspect.acceptChanges();\r\n\t\t\t\t\t// Finally, clear out the message\r\n\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t}\r\n\t\t\t\treturn goalsService.saveIntervention(manager, serializedIntervention, intervention.goal().patientId()).then(saveCompleted);\r\n\t\t}\r\n\r\n\t\t// Save a type of intervention\r\n\t\tfunction saveTask(task) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Task', true, 'Saving');\r\n\t\t\ttask.checkAppend();\r\n\r\n\t\t\t// Get the patient id from the goal\r\n\t\t\tvar patientId = task.goal().patientId();\r\n\t\t\t// Save all of the levels of everything related to a contact card\r\n\t\t\ttask.entityAspect.acceptChanges();\r\n\t\t\tvar serializedTask;\r\n\t\t\tserializedTask = entitySerializer.serializeTask(task, manager);\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t// Check if we have already added the intervention to the local collection\r\n\t\t\t\tif (localCollections.tasks.indexOf(task) === -1) {\r\n\t\t\t\t\t\t// If not, add it in\r\n\t\t\t\t\t\tlocalCollections.tasks.push(task);\r\n\t\t\t\t\t}\r\n\t\t\t\t// Save all of the levels of everything related to a contact card\r\n\t\t\t\t//task.entityAspect.acceptChanges();\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t}\r\n\t\t\treturn goalsService.saveTask(manager, serializedTask, patientId).then(saveCompleted);\r\n\t\t}\r\n\r\n\r\n\t\t// Save a type of barrier\r\n\t\tfunction saveBarrier(barrier) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Barrier', true, 'Saving');\r\n\t\t\tbarrier.checkAppend();\r\n\r\n\t\t\t// Get the patient id from the goal\r\n\t\t\tvar patientId = barrier.goal().patientId();\r\n\r\n\t\t\t// Save barrier changes so new ones returned are accepted\r\n\t\t\tbarrier.entityAspect.acceptChanges();\r\n\t\t\tvar serializedBarrier;\r\n\t\t\tserializedBarrier = entitySerializer.serializeBarrier(barrier, manager);\r\n\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t// Save all of the levels of everything related to a contact card\r\n\t\t\t\tbarrier.entityAspect.acceptChanges();\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t}\r\n\t\t\treturn goalsService.saveBarrier(manager, serializedBarrier, patientId).then(saveCompleted);\r\n\t\t}\r\n\r\n\t\t// Save changes to a single contact card\r\n\t\tfunction deleteGoal(goal) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Goal', true, 'Deleting');\r\n\r\n\t\t\treturn goalsService.deleteGoal(manager, goal).then(deleteCompleted);\r\n\r\n\t\t\tfunction deleteCompleted(data) {\r\n\t\t\t\t// If data was returned and has a property called success that is true,\r\n\t\t\t\tgoal.entityAspect.rejectChanges();\r\n\t\t\t\t// Save all of the levels of everything related to a contact card\r\n\t\t\t\tgoal.patientId(null);\r\n\t\t\t\t// Clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tmanager.detachEntity(goal);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save changes to a single contact card\r\n\t\tfunction saveNote(note) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Note', true, 'Saving');\r\n\t\t\tvar isInsert = false;\r\n\t\t\tfunction saveUtilizationCompleted( data ){\r\n\t\t\t\tif( isInsert ){\r\n\t\t\t\t\t//the returned data from Utilization endpoint is the complete Utilization Note object\r\n\t\t\t\t\t//\tand will be added to the cache (breeze .toType 'Note'). the new entity is not needed anymore:\r\n\t\t\t\t\tmanager.detachEntity(note);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnote.entityAspect.acceptChanges();\r\n\t\t\t\t\tsyncUpdateProps( data.Utilization );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfunction saveNoteCompleted( data ) {\r\n\t\t\t\tif( isInsert ){\r\n\t\t\t\t\t// 'Note' endpoint does not return the whole object. only the created id.\r\n\t\t\t\t\t// we will keep the new note object in cache:\r\n\t\t\t\t\t// Replace the id of the note since we had a negative number there\r\n\t\t\t\t\tnote.id( data.Id );\t//the insert end point (Note) returns the result obj directly (not inside a property).\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tsyncUpdateProps( data.PatientNote );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Accept changes\r\n\t\t\t\tnote.entityAspect.acceptChanges();\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif( note.id() < 1 ){\r\n\t\t\t\tisInsert = true;\r\n\t\t\t\tnote.createdById(session.currentUser().userId());\r\n\t\t\t\tnote.createdOn( new Date() );\r\n\t\t\t\tnote.dataSource( 'Engage' );\r\n\t\t\t}else{\r\n\t\t\t\tnote.updatedById( session.currentUser().userId() );\r\n\t\t\t\tnote.updatedOn( new Date() );\r\n\t\t\t}\r\n\t\t\tvar serializedNote = entitySerializer.serializeNote(note, manager);\r\n\t\t\tvar noteType = note.type().name().toLowerCase();\r\n\t\t\tswitch( noteType ){\r\n\t\t\t\tcase 'utilization':\r\n\t\t\t\t{\r\n\t\t\t\t\treturn notesService.saveNote(manager, serializedNote, noteType).then(saveUtilizationCompleted);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t{\r\n\t\t\t\t\treturn notesService.saveNote(manager, serializedNote, noteType).then(saveNoteCompleted);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction syncUpdateProps( returnedNote ){\r\n\t\t\t\t// Update (PatientNote endpoint)\r\n\t\t\t\t// 'PatientNote' endpoint does not return the whole object. only the created id. under data.PatientNote prop\r\n\t\t\t\tif( returnedNote.UpdatedOn ){\r\n\t\t\t\t\tnote.updatedOn(returnedNote.UpdatedOn);\r\n\t\t\t\t}\r\n\t\t\t\tif( returnedNote.UpdatedById ){\r\n\t\t\t\t\tnote.updatedById(returnedNote.UpdatedById);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Save changes to a single contact card\r\n\t\tfunction deleteNote(note) {\r\n\t\t\tfunction deleteCompleted(data) {\r\n\t\t\t\tnote.entityAspect.rejectChanges();\r\n\t\t\t\tnote.patientId(null);\r\n\t\t\t\tmanager.detachEntity(note);\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t}\r\n\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Note', true, 'Deleting');\r\n\t\t\treturn notesService.deleteNote(manager, note).then(deleteCompleted);\r\n\t\t}\r\n\t\t/**\r\n\t\t*\tget note by id. initialy intended to load the full object of utilization type note.\r\n\t\t*\tas notes list in history are retrieved through the note endpoint, they are retrieving only some of the utilization props.\r\n\t\t*\t@method getNote\r\n\t\t*\t@param id {string}\r\n\t\t*/\r\n\t\tfunction getNote( id, patientId, type, observable ){\r\n\t\t\tif( type && type.toLowerCase() === 'utilization' ){\r\n\t\t\t\t//var message = queryStarted('Note', true, 'Loading');\r\n\t\t\t\treturn notesService.getNote( manager, id, patientId, type, observable );\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn Q();\t//return a resolved promise.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getCareTeam( observable, patientContactId ){\r\n\t\t\tvar message = queryStarted('CareTeam', true, 'Loading');\t\t\t\r\n\t\t\treturn careMembersService.getCareTeam( manager, observable, patientContactId ).then( careTeamReturned );\t\t\t\r\n\r\n\t\t\tfunction careTeamReturned(team) {\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\treturn team;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction saveCareTeam( careTeam ){\r\n\t\t\tvar message = queryStarted('CareTeam', true, 'Saving');\r\n\t\t\tko.utils.arrayForEach( careTeam.members(), function( member ){\r\n\t\t\t\tmember.checkAppend(); //notes\r\n\t\t\t\tif( member.entityAspect.entityState.isAddedModifiedOrDeleted() ){\r\n\t\t\t\t\tmember.entityAspect.acceptChanges();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif( careTeam.entityAspect.entityState.isAddedModifiedOrDeleted() ){\r\n\t\t\t\tcareTeam.entityAspect.acceptChanges();\r\n\t\t\t}\r\n\t\t\tvar serializedCareTeam = entitySerializer.serializeCareTeam(careTeam, manager);\r\n\t\t\treturn careMembersService.saveCareTeam(manager, serializedCareTeam).then(saveCompleted);\t\t\t\r\n\t\t\t\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t\r\n\t\t\t    //cleanup the cache from the new ents that are not needed anymore:\r\n\t\t\t    //since the returned entity/ies are in breeze already (toType)\r\n\t\t\t\tvar arrayRemove = [];\r\n\t\t\t\tif( careTeam && careTeam.members().length > 0 ){\r\n\t\t\t\t\tko.utils.arrayForEach( careTeam.members(), function(member){\r\n\t\t\t\t\t\tif( member.id() < 0 ){\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tarrayRemove.push(member);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tif (careTeam && careTeam.id() < 0) {\t\t\t\t\t\r\n\t\t\t\t\tarrayRemove.push(careTeam);\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\tko.utils.arrayForEach( arrayRemove, function(ent){\r\n\t\t\t\t\tmanager.detachEntity(ent);\r\n\t\t\t\t});\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif( data.CareTeam && data.CareTeam.Id ){\r\n\t\t\t\t\t//take the care team from breeze as the entity created with the result returned (all props including members and ids are updated)\r\n\t\t\t\t\t// note: the members contact object is also expected to be returned by the api. \r\n\t\t\t\t\t//\tthis is needed in order to have the contact nav entity as a ContactCard entity and not ContactSearch entity.\r\n\t\t\t\t\tvar query = breeze.EntityQuery\r\n\t\t\t\t\t.from('CareTeam')\r\n\t\t\t\t\t.toType('CareTeam')\r\n\t\t\t\t\t.where('id', '==', data.CareTeam.Id)\r\n\t\t\t\t\t.take(1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcareTeam = manager.executeQueryLocally(query);\r\n\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t\treturn careTeam[0];\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction saveCareTeamMember( careMember ){\t\t\t\r\n\t\t\tvar message = queryStarted('CareMember', true, 'Saving');\r\n\t\t\tif( !careMember.careTeamId() ){\r\n\t\t\t\tthrow new Error('saveCareTeamMember the member must have a careTeamId set');\r\n\t\t\t}\r\n\t\t\tif( !careMember.careTeam().contactId() ){\r\n\t\t\t\tthrow new Error('saveCareTeamMember the member must have a careTeam().contactId() set');\r\n\t\t\t}\r\n\t\t\tcareMember.checkAppend(); //notes\t\t\t\r\n\t\t\tvar serializedCareMember = entitySerializer.serializeCareTeamMember( careMember, manager );\r\n\t\t\treturn careMembersService.saveCareTeamMember( manager, serializedCareMember, careMember.careTeamId(), careMember.careTeam().contactId() ).then(saveCompleted);\r\n\r\n\t\t\tfunction saveCompleted(data) {\t\t\t\t\r\n\t\t\t\tif ( data && data.Id && careMember.id() < 0 ) {\r\n\t\t\t\t\tcareMember.id(data.Id);\r\n\t\t\t\t\tcareMember.createdOn( new Date() );\r\n\t\t\t\t\tcareMember.createdById( session.currentUser().userId() );\r\n\t\t\t\t\t//the care member contact is a 'ContactSearch' entity. we need to make sure it exists in 'ContactCard' entity cache:\r\n\t\t\t\t\tvar contact = getLocalContactById( careMember.contactId(), 'ContactCard' );\r\n\t\t\t\t\tif( !contact ){\r\n\t\t\t\t\t\t//copy that entity to ContactCard cache so it wont get deleted (by the search clearing its cache)\r\n\t\t\t\t\t\tcreateEntity('ContactCard', careMember.contact() );\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar contacts = datacontext.getLocalContacts('ContactSearch');\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tcareMember.updatedOn( new Date() );\r\n\t\t\t\t\tcareMember.updatedById( session.currentUser().userId() );\r\n\t\t\t\t}\r\n\t\t\t\tcareMember.entityAspect.acceptChanges();\t\t\t\t\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\r\n\t\tfunction deleteCareTeamMember( careMember ){\r\n\t\t\tfunction deleteCompleted(data) {\r\n\t\t\t\tcareMember.entityAspect.rejectChanges();\t\t\t\t\r\n\t\t\t\tmanager.detachEntity(careMember);\r\n\t\t\t\t\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t}\r\n\r\n\t\t\tvar message = queryStarted('CareMember', true, 'Deleting');\r\n\t\t\treturn careMembersService.deleteCareTeamMember(manager, careMember).then(deleteCompleted);\r\n\t\t}\r\n\t\t\r\n\t\t//this func will be deprecated:\r\n\t\t// Save changes to a single contact card\r\n\t\tfunction saveCareMemberOld(careMember, saveType) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('CareMember', true, 'Saving');\r\n\r\n\t\t\tcareMember.checkAppend(); //notes\r\n\t\t\t\r\n\t\t\tvar serializedCareMember = entitySerializer.serializeCareMember(careMember, manager);\r\n\t\t\treturn careMembersService.saveCareMemberOld(manager, serializedCareMember, saveType).then(saveCompleted);\r\n\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t// If data was returned and has a property called success that is true,\r\n\t\t\t\t// Save all of the levels of everything related to a contact card\r\n\t\t\t\tif (data.Id) {\r\n\t\t\t\t\tcareMember.id(data.Id);\r\n\t\t\t\t}\r\n\t\t\t\tcareMember.entityAspect.acceptChanges();\r\n\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction initializeObservation(observable, type, observationId, typeId, patientId) {\r\n\t\t\treturn observationsService.initializeObservation(manager, observable, type, typeId, patientId, observationId).then(initialized);\r\n\t\t\tfunction initialized(data) {\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Save changes to a single contact card\r\n\t\tfunction saveObservations(patientId) {\r\n\t\t\tvar theseObservations = ko.observableArray();\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('Observations', true, 'Saving');\r\n\t\t\t// Get all observations by patient id\r\n\t\t\tgetEntityList(theseObservations, 'PatientObservation', 'local', 'patientId', patientId, false);\r\n\t\t\tvar serializedObservations = [];\r\n\t\t\tserializedObservations.PatientId = patientId;\r\n\t\t\t// Go through the observations,\r\n\t\t\tko.utils.arrayForEach(theseObservations(), function (observation) {\r\n\t\t\t\tif (observation.needToSave()) {\r\n\t\t\t\t\t// Accept it's changes (if modified)\r\n\t\t\t\t\tobservation.entityAspect.acceptChanges();\r\n\t\t\t\t\t// Serialize it\r\n\t\t\t\t\tvar serializedObservation = entitySerializer.serializeObservation(observation, manager);\r\n\t\t\t\t\tserializedObservations.push(serializedObservation);\r\n\t\t\t\t} else{\r\n\t\t\t\t\tobservation.entityAspect.rejectChanges();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (serializedObservations.length > 0) {\r\n\t\t\t\tobservationsSaving(true);\r\n\r\n\t\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t\tobservationsSaving(false);\r\n\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn observationsService.saveObservations(manager, serializedObservations).then(saveCompleted);\r\n\t\t\t} else {\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tobservationsSaving(false);\r\n\t\t\t\treturn Q();\t//return a resolved promise.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction savePatientSystems(patientSystems) {\r\n\t\t\tvar message = queryStarted('System Ids', true, 'Saving');\r\n\t\t\tvar serializedPatientSystems = [];\r\n\t\t\tvar isInsert = false;\r\n\t\t\tko.utils.arrayForEach(patientSystems, function (patSys) {\r\n\t\t\t\tif( patSys.isValid() ){\r\n\t\t\t\t\tvar trimmedValue = patSys.value().trim();\r\n\t\t\t\t\tpatSys.value(trimmedValue);\r\n\t\t\t\t\tpatSys.entityAspect.acceptChanges();\r\n\t\t\t\t\tvar serializedPatientSystem = entitySerializer.serializePatientSystem(patSys, manager);\r\n\t\t\t\t\tserializedPatientSystems.push(serializedPatientSystem);\r\n\t\t\t\t\tif( patSys.isNew() ){\r\n\t\t\t\t\t\tisInsert = true;\t//assuming ALL items are for insert or all are for update (not mixed)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (serializedPatientSystems.length > 0) {\r\n\t\t\t\tpatientSystemsSaving(true);\r\n\t\t\t\treturn patientsService.savePatientSystems(manager, serializedPatientSystems, isInsert).then(saveCompleted);\r\n\t\t\t}else {\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tpatientSystemsSaving(false);\r\n\t\t\t\treturn Q();\t//return a resolved promise.\r\n\t\t\t}\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tpatientSystemsSaving(false);\r\n\t\t\t\tvar thisPatient = patientSystems[0].patient();\r\n\r\n\t\t\t\tif (isInsert) {\r\n\t\t\t\t\t//clean up the temporary new ents as the response got new ones into the cache. (.toType)\r\n\t\t\t\t\tko.utils.arrayForEach( patientSystems, function (patSys) {\r\n\t\t\t\t\t\t\t// Set to the returned id\r\n\t\t\t\t\t\t\tif (patSys.id() < 0) {\r\n\t\t\t\t\t\t\t\tpatSys.entityAspect.setDeleted();\r\n\t\t\t\t\t\t\t\tpatSys.entityAspect.acceptChanges();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// Trigger a refresh on anything watching the state of the system id\r\n\t\t\t\tthisPatient.patientSystems.valueHasMutated();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction deletePatientSystems(patientSystems) {\r\n\t\t\tvar message = queryStarted('System Ids', true, 'Deleting');\r\n\t\t\tvar thisPatient = null;\r\n\t\t\tvar deleteIds = [];\r\n\t\t\tif( patientSystems && patientSystems.length > 0){\r\n\t\t\t\tthisPatient = patientSystems[0].patient();\r\n\t\t\t\tko.utils.arrayForEach(patientSystems, function (patSys) {\r\n\t\t\t\t\tdeleteIds.push( patSys.id() );\r\n\t\t\t\t});\r\n\t\t\t\tpatientSystemsSaving(true);\r\n\t\t\t\treturn patientsService.deletePatientSystems(manager, deleteIds, thisPatient.id()).then(deleteCompleted);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tpatientSystemsSaving(false);\r\n\t\t\t\treturn Q();\t//return a resolved promise.\r\n\t\t\t}\r\n\t\t\tfunction deleteCompleted(data) {\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tpatientSystemsSaving(false);\r\n\t\t\t\tko.utils.arrayForEach( patientSystems, function(patSys){\r\n\t\t\t\t\t//remove the deleted ents from cache\r\n\t\t\t\t\tdatacontext.detachEntity(patSys);\r\n\t\t\t\t});\r\n\t\t\t\t// Trigger a refresh on anything watching the state of the system id\r\n\t\t\t\tthisPatient.patientSystems.valueHasMutated();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get a patients full SSN for display only\r\n\t\tfunction getFullSSN(patientId) {\r\n\t\t\treturn patientsService.getFullSSN(manager, patientId).then(dataReturned);\r\n\r\n\t\t\tfunction dataReturned(data) {\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cancel changes to a contact card\r\n\t\tfunction cancelAllChangesToContactCard(contactCard) {\r\n\t\t\treturn contactService.cancelAllChangesToContactCard(contactCard);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t*\t\tnote: breeze rejectChanges has a known issue with array of complex type:\r\n\t\t*\t\t\tregardless of the entityState, all items of the array will be removed,\r\n\t\t*\t\t\teven if there were no changes. (https://github.com/Breeze/breeze.js/issues/47)\r\n\t\t*\t \tworkaround options:\r\n\t\t*\t \t1. reload the entity from the server right after rejectChanges.\r\n\t\t*\t \t2. keep the original pristine state to go back to. (example - see todo.panel todo.programIds restored by originalProgramIds).\r\n\t\t*\r\n\t\t*\t@method cancelEntityChanges\r\n\t\t*\r\n\t\t*\t@param entity - a single entity to cancel changes if any.\r\n\t\t*/\r\n\t\tfunction cancelEntityChanges(entity) {\r\n\t\t\tentity.entityAspect.rejectChanges();\r\n\t\t}\r\n\r\n\t\t// Cancel changes to all entities\r\n\t\tfunction cancelAllChanges() {\r\n\t\t\tmanager.rejectChanges();\r\n\t\t}\r\n\r\n\t\t// Gets all changes to all entities\r\n\t\tfunction getAllChanges() {\r\n\t\t\treturn manager.getChanges();\r\n\t\t}\r\n\r\n\t\t// Save all changes to each entity in the array\r\n\t\tfunction saveAllChangesToEntities(entities) {\r\n\t\t\tko.utils.arrayForEach(entities, function (entity) {\r\n\t\t\t\tentity.entityAspect.acceptChanges();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction checkForFourOhOne(error) {\r\n\t\t\t// Check if the error status code is a 401\r\n\t\t\tif (error.status && error.status === 401) {\r\n\t\t\t\t// Log the user out\r\n\t\t\t\tsession.logOff();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction addPatientToRecentList (patient) {\r\n\t\t\tpatientsService.addPatientToRecentList(patient);\r\n\t\t}\r\n\r\n\t\tfunction createAlert(result, reason) {\r\n\t\t\t// We use the name result and reason because that is the backend convention, not our choice\r\n\t\t\t// Create an alert\r\n\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: result, reason: reason });\r\n\t\t\t// Accept changes since it doesn't get persisted anyway\r\n\t\t\tthisAlert.entityAspect.acceptChanges();\r\n\t\t\t// Add it to the enums of alerts\r\n\t\t\tlocalCollections.alerts.push(thisAlert);\r\n\t\t}\r\n\r\n\t\tfunction getToDos (observable, params, observableTotalCount) {\r\n\t\t\tvar message = queryStarted('ToDos', true, 'Loading');\r\n\t\t\ttodosSaving(true);\r\n\t\t\t\r\n\t\t\tfunction todosReturned(todos) {\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t//TODO: manage the size of the localCollections.todo\r\n\t\t\t\t// Make sure each of the todos are in the collection locally\r\n\t\t\t\tko.utils.arrayForEach(todos, function (todo) {\r\n\t\t\t\t\tif (todo.entityAspect && localCollections.todos.indexOf(todo) === -1) {\r\n\t\t\t\t\t\t// Add it in\r\n\t\t\t\t\t\tlocalCollections.todos.push(todo);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\ttodosSaving(false);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn notesService.getToDos(manager, observable, params, observableTotalCount).then(todosReturned);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t*\tclear all the todos from the cache\r\n\t\t*\t@method clearToDos\r\n\t\t*/\r\n\t\tfunction clearToDos(){\r\n\t\t\tko.utils.arrayForEach( localCollections.todos, function( todo ) {\r\n\t\t\t\tmanager.detachEntity(todo);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction getToDosQuery (params, orderstring, take) {\r\n\t\t\treturn notesService.getToDosQuery(manager, params, orderstring, take);\r\n\t\t}\r\n\r\n\t\tfunction getToDosRemoteOpenAssignedToMe( observable, skip, take, sort, observableTotalCount ){\r\n\t\t\tvar params = {\r\n\t\t\t\t\t\tStatusIds: [1,3],\r\n\t\t\t\t\t\tAssignedToId: session.currentUser().userId(),\r\n\t\t\t\t\t\tSkip: skip,\r\n\t\t\t\t\t\tTake: take,\r\n\t\t\t\t\t\tSort: sort\r\n\t\t\t};\r\n\t\t\treturn getToDos(observable, params, observableTotalCount);\r\n\t\t}\r\n\r\n\t\tfunction getLocalTodos( params, orderString ){\r\n\t\t\tvar theseTodos = getToDosQuery( params, orderString );\r\n\t\t\t// Filter out the new todos\r\n\t\t\ttheseTodos = ko.utils.arrayFilter(theseTodos, function (todo) {\r\n\t\t\t\treturn !todo.isNew();\r\n\t\t\t});\r\n\t\t\treturn theseTodos;\r\n\t\t}\r\n\r\n\t\tfunction getInterventions (observable, params) {\r\n\t\t\tvar message = queryStarted('Interventions', true, 'Loading');\r\n\t\t\tinterventionsSaving(true);\r\n\t\t\treturn goalsService.getInterventions(manager, observable, params).then(interventionsReturned);\r\n\r\n\t\t\tfunction interventionsReturned(interventions) {\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t// Make sure each of the interventions are in the collection locally\r\n\t\t\t\tko.utils.arrayForEach(interventions, function (intervention) {\r\n\t\t\t\t\tif (localCollections.interventions.indexOf(intervention) === -1) {\r\n\t\t\t\t\t\t// Add it in\r\n\t\t\t\t\t\tlocalCollections.interventions.push(intervention);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tinterventionsSaving(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getInterventionsQuery (params, orderstring) {\r\n\t\t\treturn goalsService.getInterventionsQuery(manager, params, orderstring);\r\n\t\t}\r\n\r\n\t\tfunction getTasks (observable, params) {\r\n\t\t\tvar message = queryStarted('Tasks', true, 'Loading');\r\n\t\t\ttasksSaving(true);\r\n\t\t\treturn goalsService.getTasks(manager, observable, params).then(tasksReturned);\r\n\r\n\t\t\tfunction tasksReturned(tasks) {\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t// Make sure each of the tasks are in the collection locally\r\n\t\t\t\tko.utils.arrayForEach(tasks, function (task) {\r\n\t\t\t\t\tif (localCollections.tasks.indexOf(task) === -1) {\r\n\t\t\t\t\t\t\t\t// Add it in\r\n\t\t\t\t\t\t\t\tlocalCollections.tasks.push(task);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\ttasksSaving(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getTasksQuery (params, orderstring) {\r\n\t\t\treturn goalsService.getTasksQuery(manager, params, orderstring);\r\n\t\t}\r\n\r\n\t\t// Save changes to a single contact card\r\n\t\tfunction saveToDo(todo, action) {\r\n\t\t\t// Display a message while saving\r\n\t\t\tvar message = queryStarted('ToDo', true, 'Saving');\r\n\t\t\ttodosSaving(true);\r\n\t\t\ttodo.entityAspect.acceptChanges();\r\n\t\t\tvar serializedTodo = entitySerializer.serializeToDo(todo, manager);\r\n\t\t\treturn notesService.saveToDo(manager, serializedTodo, action).then(saveCompleted);\r\n\r\n\t\t\tfunction saveCompleted(data) {\r\n\r\n\t\t\t\t// If it is a new todo,\r\n\t\t\t\tif (todo && todo.id() < 0) {\r\n\t\t\t\t\t// Remove it so the replacement gets set\r\n\t\t\t\t\tmanager.detachEntity(todo);\r\n\t\t\t\t}\r\n\t\t\t\tif (localCollections.todos.indexOf(data) < 0) {\r\n\t\t\t\t\tlocalCollections.todos.push(data);\r\n\t\t\t\t}\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\ttodosSaving(false);\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getSystemCareManager(){\r\n\t\t\tvar SystemCareManager = ko.utils.arrayFirst(datacontext.enums.careManagers(), function (caremanager) {\r\n\t\t\t\treturn (caremanager.userId()=== '' && caremanager.firstName() === 'System' && caremanager.preferredName() === 'System');\r\n\t\t\t});\r\n\t\t\treturn SystemCareManager;\r\n\t\t}\r\n\r\n\t\tfunction getUsercareManagerName(){\r\n\t\t\tvar thisMatchedCareManager = ko.utils.arrayFirst(datacontext.enums.careManagers(), function (caremanager) {\r\n\t\t\t\treturn caremanager.id() === session.currentUser().userId();\r\n\t\t\t});\r\n\t\t\treturn thisMatchedCareManager.preferredName();\r\n\t\t}\r\n\r\n\t\tfunction getUserCareManager(){\r\n\t\t\tvar thisMatchedCareManager = ko.utils.arrayFirst(datacontext.enums.careManagers(), function (caremanager) {\r\n\t\t\t\t//note: the caremanager id is actually a contact id (get care managers call returns them as contacts)\r\n\t\t\t\treturn caremanager.id() === session.currentUser().userId();\r\n\t\t\t});\r\n\t\t\treturn thisMatchedCareManager;\r\n\t\t}\r\n\r\n\t\tfunction getUserFullName(){\r\n\t\t\treturn session.currentUser().firstName() + ' ' + session.currentUser().lastName();\r\n\t\t}\r\n\t\t\r\n\t\tfunction getCalendarEvents( theseTodos ){\r\n\t\t\t//convert todos to calendar events:\r\n\t\t\tvar userEvents = [];\r\n\t\t\tvar careManagerName = getUsercareManagerName();\r\n\t\t\tko.utils.arrayForEach(theseTodos, function (todo) {\r\n\t\t\t\tif( todo.isEvent() ){\r\n\t\t\t\t\tvar event = todo.getAsNewEvent(); //fullcalendar event - plain object\r\n\t\t\t\t\tuserEvents.push(event);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn userEvents;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t*\tsynchronize Event entities based on the given todos.\r\n\t\t*\tthe event entities are on client only and they reflect todos and interventions.\r\n\t\t*\tin this function we reflect the given todos on Event entities by creating / updating / deleting accordingly.\r\n\t\t*\t@method syncCalendarEvents\r\n\t\t*\t@param theseTodos: the current user todos - expected todos assigned to the current user and that are not deleted.\r\n\t\t*\r\n\t\t*/\r\n\t\tfunction syncCalendarEvents( theseTodos ){\r\n\t\t\t// Add /update an event entity for each todo\r\n\t\t\tvar thisMatchedCareManager = ko.utils.arrayFirst(datacontext.enums.careManagers(), function (caremanager) {\r\n\t\t\t\treturn caremanager.id() === session.currentUser().userId();\r\n\t\t\t});\r\n\t\t\tko.utils.arrayForEach(theseTodos, function (todo) {\r\n\t\t\t\tsyncEventFromTodo(todo);\r\n\t\t\t});\r\n\r\n\t\t\tfunction syncEventFromTodo(todo){\r\n\t\t\t\tif( todo.isEvent() ){\r\n\t\t\t\t\t//the todo should be represented by a calendar event:\r\n\t\t\t\t\tif(!updateCalendarEventFromTodo(todo)){\r\n\t\t\t\t\t\tinsertCalendarEventFromTodo(todo);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tremoveCalendarEventById(todo.id());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction insertCalendarEventFromTodo(todo){\r\n\t\t\t\tvar newEvent = todo.getAsNewEvent();\r\n\t\t\t\tcreateCalendarEvent(newEvent);\r\n\t\t\t}\r\n\r\n\t\t\tfunction updateCalendarEventFromTodo(todo){\r\n\t\t\t\tvar existingEvent = getEventById(todo.id());\r\n\t\t\t\tif(existingEvent){\r\n\t\t\t\t\texistingEvent = todo.updateExistingEvent( existingEvent );\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//update a patient contact\r\n\t\tfunction updateContact(patient, contactEntity){\r\n\t\t\tvar contact = ko.observable();\t\t\t\t\t\t\t\r\n\t\t\tcheckForEntityLocally(contact, patient.contactId(), contactEntity);\r\n\t\t\tif (contact()) {\r\n\t\t\t\t//the patient related contact exist locally. \r\n\t\t\t\t//sync the overlapping properties:\r\n\t\t\t\tcontact().firstName(patient.firstName());\r\n\t\t\t\tcontact().lastName(patient.lastName());\r\n\t\t\t\tcontact().middleName(patient.middleName());\r\n\t\t\t\tcontact().suffix(patient.suffix());\t\t\t\t\t\t\t\t\r\n\t\t\t\tcontact().gender(patient.gender());\r\n\t\t\t\tcontact().preferredName(patient.preferredName());\r\n\t\t\t\tcontact().deceasedId(patient.deceasedId());\r\n\t\t\t\tcontact().entityAspect.acceptChanges();\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Update a todo patient's information\r\n\t\tfunction updateTodoPatient(patient) {\r\n\t\t\tvar thisTodoPatient = ko.observable();\r\n\t\t\t// Check to see if there is a matching todo patient dto\r\n\t\t\tcheckForEntityLocally(thisTodoPatient, patient.id(), 'ToDoPatient');\r\n\t\t\t// If a matching todo patient was found,\r\n\t\t\tif (thisTodoPatient()) {\r\n\t\t\t\t// Update all of the properties\r\n\t\t\t\tthisTodoPatient().firstName(patient.firstName());\r\n\t\t\t\tthisTodoPatient().lastName(patient.lastName());\r\n\t\t\t\tthisTodoPatient().middleName(patient.middleName());\r\n\t\t\t\tthisTodoPatient().suffix(patient.suffix());\r\n\t\t\t\tthisTodoPatient().preferredName(patient.preferredName());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove an entity from cache\r\n\t\tfunction detachEntity(entity) {\r\n\t\t\tmanager.detachEntity(entity);\r\n\t\t}\r\n\r\n\t\tfunction initializeNewPatientMedication(patient, name) {\r\n\t\t\t// Create a fake medications length\r\n\t\t\tvar medId = (patient.medications().length + 1) * -1;\r\n\t\t\t// Get the default source\r\n\t\t\tvar defaultSource = ko.utils.arrayFirst(datacontext.enums.allergySources(), function (src) {\r\n\t\t\t\treturn src.isDefault();\r\n\t\t\t});\r\n\t\t\t// Get the default type to associate\r\n\t\t\tvar defaultType = ko.utils.arrayFirst(datacontext.enums.medSuppTypes(), function (type) {\r\n\t\t\t\treturn type.name() === 'Prescribed';\r\n\t\t\t});\r\n\t\t\tvar patMed = createEntity('PatientMedication', { id: medId, patientId: patient.id(), categoryId: 1, statusId: 1, sourceId: defaultSource.id(), type: defaultType });\r\n\t\t\tpatMed.isNew(true);\r\n\t\t\tpatMed.isEditing(true);\r\n\t\t\tpatMed.name(name);\r\n\t\t\tpatMed.isCreateNewMedication(true);\r\n\t\t\treturn patMed;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t*\t\t\tread medication frequencies from 'Frequency' lookup merged with patient specific medication frequencies ('PatientMedFrequency' - as in back end).\r\n\t\t*\t\t\tthe cache entity for this merge is : PatientMedicationFrequency.\r\n\t\t*\t\t\twe need to return frequencies (PatientMedicationFrequency entities)\r\n\t\t*\t\t\twith patientId = null OR patientId = -1 OR patientId = given patientId.\r\n\t\t*\r\n\t\t*\t@method getPatientFrequencies\r\n\t\t*/\r\n\t\tfunction getPatientFrequencies(observable, patientId, forceRemote){\r\n\t\t\treturn medicationsService.getPatientFrequencies(manager, observable, patientId, forceRemote);\r\n\t\t}\r\n\r\n\t\tfunction getPatientMedications (observable, params, patientId) {\r\n\t\t\tvar message = queryStarted('Medications', true, 'Loading');\r\n\t\t\tmedicationSaving(true);\r\n\t\t\treturn medicationsService.getPatientMedications(manager, observable, params, patientId).then(medicationReturned);\r\n\r\n\t\t\tfunction medicationReturned(medication) {\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tmedicationSaving(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getRemoteMedicationFields (medication) {\r\n\t\t\treturn medicationsService.getRemoteMedicationFields(manager, medication).then(dataReturned);\r\n\r\n\t\t\tfunction dataReturned (data) {\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getPatientMedicationsQuery (params, orderstring) {\r\n\t\t\treturn medicationsService.getPatientMedicationsQuery(manager, params, orderstring);\r\n\t\t}\r\n\r\n\t\tfunction initializeNewMedication(name){\r\n\t\t\treturn medicationsService.initializeNewMedication(manager, name);\r\n\t\t}\r\n\r\n\t\t\t\t// Save changes to a list of medications\r\n\t\tfunction saveMedication(medication) {\r\n\t\t\tvar message = queryStarted('Medication', true, 'Saving');\r\n\t\t\ttrimNewMedicationFields(medication);\r\n\t\t\tif(medication.customFrequency()){\r\n\t\t\t\t//a custom frequency is added - save it first\r\n\t\t\t\treturn saveCustomFrequency(medication).then(handleCreateNew);\r\n\t\t\t}\r\n\t\t\telse return handleCreateNew(medication);\r\n\r\n\t\t\tfunction handleCreateNew(medication){\r\n\t\t\t\t//continue saving:\r\n\t\t\t\tif(medication.isCreateNewMedication() === true){\r\n\t\t\t\t\t//initialize medicationMap record and link by setting its id in familyId before saving this patient medication:\r\n\t\t\t\t\treturn medicationsService.initializeNewMedication(manager, name)\r\n\t\t\t\t\t.then(function(data){\r\n\t\t\t\t\t\tif(data && data.MedicationMap && data.MedicationMap.Id){\r\n\t\t\t\t\t\t\tmedication.familyId(data.MedicationMap.Id);\r\n\t\t\t\t\t\t\treturn saveIt(medication);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn saveIt(medication);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction saveCustomFrequency(medication){\r\n\t\t\t\treturn medicationsService.saveCustomFrequency(manager, medication.customFrequency(), medication.patientId())\r\n\t\t\t\t.then(\r\n\t\t\t\t\tfunction(data){\r\n\t\t\t\t\t\t//when it is returned: populate the new created frequencyId in medication.frequencyId\r\n\t\t\t\t\t\tif(data && data.Id){\r\n\t\t\t\t\t\t\tmedication.frequencyId(data.Id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn medication;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction trimNewMedicationFields(medication){\r\n\t\t\t\tif(medication.name())\r\n\t\t\t\t\tmedication.name(medication.name().trim());\r\n\t\t\t\tif(medication.route())\r\n\t\t\t\t\tmedication.route(medication.route().trim());\r\n\t\t\t\tif(medication.form())\r\n\t\t\t\t\tmedication.form(medication.form().trim());\r\n\t\t\t\tif(medication.strength())\r\n\t\t\t\t\tmedication.strength(medication.strength().trim());\r\n\t\t\t\tif(medication.reason())\r\n\t\t\t\t\tmedication.reason(medication.reason().trim());\r\n\t\t\t\tif(medication.notes())\r\n\t\t\t\t\tmedication.notes(medication.notes().trim());\r\n\t\t\t\tif(medication.prescribedBy())\r\n\t\t\t\t\tmedication.prescribedBy(medication.prescribedBy().trim());\r\n\t\t\t\tif(medication.freqQuantity())\r\n\t\t\t\t\tmedication.freqQuantity(medication.freqQuantity().trim());\r\n\t\t\t\tif(medication.dosage())\r\n\t\t\t\t\tmedication.dosage(medication.dosage().trim());\r\n\t\t\t\tif(medication.customFrequency())\r\n\t\t\t\t\tmedication.customFrequency(medication.customFrequency().trim());\r\n\t\t\t}\r\n\r\n\t\t\tfunction saveIt(medication){\r\n\t\t\t\tmedication.entityAspect.acceptChanges();\r\n\t\t\t\t// Serialize it\r\n\t\t\t\tvar serializedMedication = entitySerializer.serializePatientMedication(medication, manager);\r\n\t\t\t\tif (serializedMedication) {\r\n\t\t\t\t\tmedicationSaving(true);\r\n\t\t\t\t\treturn medicationsService.saveMedication(manager, serializedMedication, medication.isNew()).then(saveCompleted);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Q.promise(function () {\r\n\t\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}).then(saveCompleted);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t\t// If it was a newly created med,\r\n\t\t\t\t\tif (medication.isNew()) {\r\n\t\t\t\t\t\t// Remove it so the newly returned med is only one shown\r\n\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\t// Wait half a second to remove it so it can be properly disposed of\r\n\t\t\t\t\t\t\tmedication.entityAspect.rejectChanges();\r\n\t\t\t\t\t\t\tmedication.patientId(null);\r\n\t\t\t\t\t\t\tmanager.detachEntity(medication);\r\n\t\t\t\t\t\t}, 500);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Remove it so the newly returned med is only one shown\r\n\t\t\t\t\tmedication.isEditing(false);\r\n\t\t\t\t\tmedicationSaving(false);\r\n\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t\treturn data.results[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction deletePatientMedication(medication){\r\n\t\t\tvar message = queryStarted('Medication', true, 'Deleting');\r\n\t\t\treturn medicationsService.deletePatientMedication(manager, medication).then(deleted).fail(deleteFailed);\r\n\r\n\t\t\tfunction deleted(data) {\r\n\t\t\t\t// Remove the medication from cache completely\r\n\t\t\t\tmanager.detachEntity(medication);\r\n\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t//setTimeout(function () { location.reload(); }, 2000);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfunction deleteFailed(error) {\r\n\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Delete failed!' });\r\n\t\t\t\tthisAlert.entityAspect.acceptChanges();\r\n\t\t\t\tlocalCollections.alerts.push(thisAlert);\r\n\t\t\t\tcheckForFourOhOne(error);\r\n\t\t\t\tremoveLoadingMessage(message);\r\n\t\t\t\tthrow new Error('Delete failed');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction initializeAllergy(observable, type, allergyId, patientId, isNewAllergy) {\r\n\t\t\treturn allergiesService.initializeAllergy(manager, observable, type, patientId, allergyId).then(initialized);\r\n\t\t\t// var newAllergy = createEntity('PatientAllergy', { id: -1, name: 'Fake Allergy', patientId: patientId });\r\n\t\t\t// return Q.promise(function () {\r\n\t\t\t//     return observable(newAllergy);\r\n\t\t\t// });\r\n\t\t\tfunction initialized(allergy) {\r\n\t\t\t\t// Find the default allergy source\r\n\t\t\t\tvar defaultSource = ko.utils.arrayFirst(datacontext.enums.allergySources(), function (src) {\r\n\t\t\t\t\treturn src.isDefault();\r\n\t\t\t\t});\r\n\t\t\t\t// Set default properties on the allergy\r\n\t\t\t\tko.unwrap(allergy).source(defaultSource);\r\n\t\t\t\tko.unwrap(allergy).statusId(1);\r\n\t\t\t\tko.unwrap(allergy).isUserCreated(isNewAllergy);\r\n\t\t\t\tko.unwrap(allergy).createdOn(new Date());\t//back end does not populate the createdOn on initialize.\r\n\t\t\t\treturn allergy;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction initializeNewAllergy(allergyName) {\r\n\t\t\tallergySaving(true);\r\n\t\t\treturn allergiesService.initializeNewAllergy(manager, allergyName);\r\n\t\t}\r\n\r\n\t\t// Save changes to a list of allergies\r\n\t\tfunction saveAllergies(allergies) {\r\n\t\t\tvar serializedAllergies = [];\r\n\t\t\tvar message = queryStarted('Allergy', true, 'Saving');\r\n\t\t\t// serializedAllergies.PatientId = patientId;\r\n\t\t\t// Go through the observations,\r\n\t\t\tko.utils.arrayForEach(allergies, function (allergy) {\r\n\t\t\t\tallergy.entityAspect.acceptChanges();\r\n\t\t\t\t\t// Serialize it\r\n\t\t\t\t\tvar serializedAllergy = entitySerializer.serializePatientAllergy(allergy, manager);\r\n\t\t\t\t\tserializedAllergies.push(serializedAllergy);\r\n\t\t\t\t});\r\n\t\t\tif (serializedAllergies.length > 0) {\r\n\t\t\t\tallergySaving(true);\r\n\t\t\t\treturn allergiesService.saveAllergies(manager, serializedAllergies).then(saveCompleted);\r\n\t\t\t} else {\r\n\t\t\t\treturn Q.promise(function () {\r\n\t\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}).then(saveCompleted);\r\n\t\t\t}\r\n\r\n\t\t\tfunction saveCompleted(data) {\r\n\t\t\t\t// After saving, remove the isNew flag\r\n\t\t\t\tko.utils.arrayForEach(allergies, function (allergy) {\r\n\t\t\t\t\tallergy.isNew(false);\r\n\t\t\t\t});\r\n\t\t\t\tallergySaving(false);\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\treturn data.results;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction deletePatientAllergy(allergy){\r\n\t\t\tvar message = queryStarted('Allergy', true, 'Deleting');\r\n\t\t\treturn allergiesService.deletePatientAllergy(manager, allergy).then(deleted).fail(deleteFailed);\r\n\r\n\t\t\tfunction deleted(data) {\r\n\t\t\t\t// Remove the allergy from cache completely\r\n\t\t\t\tmanager.detachEntity(allergy);\r\n\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\t//setTimeout(function () { location.reload(); }, 2000);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfunction deleteFailed(error) {\r\n\t\t\t\tvar thisAlert = datacontext.createEntity('Alert', { result: 0, reason: 'Delete failed!' });\r\n\t\t\t\tthisAlert.entityAspect.acceptChanges();\r\n\t\t\t\tlocalCollections.alerts.push(thisAlert);\r\n\t\t\t\tcheckForFourOhOne(error);\r\n\t\t\t\tremoveLoadingMessage(message);\r\n\t\t\t\tthrow new Error('Delete failed');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getPatientAllergies (observable, params, patientId) {\r\n\t\t\tvar message = queryStarted('Allergies', true, 'Loading');\r\n\t\t\tallergySaving(true);\r\n\t\t\treturn allergiesService.getPatientAllergies(manager, observable, params, patientId).then(allergiesReturned);\r\n\r\n\t\t\tfunction allergiesReturned(allergies) {\r\n\t\t\t\t// Finally, clear out the message\r\n\t\t\t\tqueryCompleted(message);\r\n\t\t\t\tallergySaving(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getPatientAllergiesQuery (params, orderstring) {\r\n\t\t\treturn allergiesService.getPatientAllergiesQuery(manager, params, orderstring);\r\n\t\t}\r\n\r\n\t\tfunction getRemoteAllergies(searchterm) {\r\n\t\t\treturn allergiesService.getRemoteAllergies(manager, searchterm);\r\n\t\t}\r\n\r\n\t\tfunction singleSort (patientId, breezeEntities, type, prop) {\r\n\t\t\tvar query = breeze.EntityQuery\r\n\t\t\t.from(type)\r\n\t\t\t.toType(type)\r\n\t\t\t.where('patientId', '==', patientId)\r\n\t\t\t.orderBy(prop);\r\n\r\n\t\t\treturn manager.executeQueryLocally(query);\r\n\t\t}\r\n\r\n});\n","define('services/dataservices/stepservice',[],\r\n    function () {\r\n\r\n        var createMockStepAndQuestions = function (manager) {\r\n            var thisStepMap = manager.createEntity('Step', { name: 'Eligibility' });\r\n            var thisStepMap = manager.createEntity('QuestionTypeId', { name: 'True/False' });\r\n            manager.createEntity('Question', { question: 'Eligibility', stepMap: thisStepMap, typeId: 1 });\r\n            manager.createEntity('Question', { question: 'Eligibility', stepMap: thisStepMap, typeId: 1 });\r\n            manager.createEntity('Question', { question: 'Eligibility', stepMap: thisStepMap, typeId: 1 });\r\n        };\r\n\r\n        var getStepById = function (manager, entityObservable, id) {\r\n            var p = getLocalList(manager, 'Step', entityType);\r\n            if (p.length > 0) {\r\n                entityObservable(p);\r\n                return Q.resolve();\r\n            }\r\n        };\r\n\r\n        var getStepMap = function (manager) {\r\n            var p = getLocalList(manager, 'Step', entityType);\r\n            if (p.length > 0) {\r\n                entityObservable(p);\r\n                return Q.resolve();\r\n            }\r\n        };\r\n\r\n        var stepservice = {\r\n            createMockStepAndQuestions: createMockStepAndQuestions,\r\n            getStepById: getStepById,\r\n            getMockStepMap: getMockStepMap\r\n        };\r\n        return stepservice;\r\n\r\n        function getLocalList(manager, resource, entityType, parentPropertyName, parentPropertyId, orderby) {\r\n            var query = breeze.EntityQuery.from(resource)\r\n                .toType(entityType);\r\n\r\n            if (orderby) {\r\n                query = query.orderBy(orderby);\r\n            }\r\n\r\n            if (parentPropertyName && parentPropertyId) {\r\n                query = query.where(parentPropertyName, '==', parentPropertyId);\r\n            }\r\n            return manager.executeQueryLocally(query);\r\n        }\r\n    });\n","\r\ndefine('services/logger',['services/analytics'], function(analytics){\r\n\tvar isLogging = false;\t\t\t\r\n\treturn {\r\n\t\tinitialize: function(gaId, contractId, userName){\t\t\t\r\n\t\t\tif(gaId && gaId.length > 0){\r\n\t\t\t\tisLogging = true;\r\n\t\t\t\tconsole.log('google analytics logger initialized: gaId=' + gaId);\r\n\t\t\t\tanalytics.initialize(gaId, contractId, userName);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tconsole.log('google analytics logger is turned off. (gaId is empty)');\r\n\t\t\t}\r\n\t\t},\r\n\t\tlogNavigation: function(route){\t\r\n\t\t\tif(isLogging){\t\t\t\t\r\n\t\t\t\tanalytics.sendPageView(route);\t\t\t\r\n\t\t\t}\r\n\t\t}    \t\t\r\n\t};\r\n});\n","/**\r\n * This module is based on Backbone's core history support. It abstracts away the low level details of working with browser history and url changes in order to provide a solid foundation for a router.\r\n * @module history\r\n * @requires system\r\n * @requires jquery\r\n */\r\ndefine('plugins/history',['durandal/system', 'jquery'], function (system, $) {\r\n    // Cached regex for stripping a leading hash/slash and trailing space.\r\n    var routeStripper = /^[#\\/]|\\s+$/g;\r\n\r\n    // Cached regex for stripping leading and trailing slashes.\r\n    var rootStripper = /^\\/+|\\/+$/g;\r\n\r\n    // Cached regex for detecting MSIE.\r\n    var isExplorer = /msie [\\w.]+/;\r\n\r\n    // Cached regex for removing a trailing slash.\r\n    var trailingSlash = /\\/$/;\r\n\r\n    // Update the hash location, either replacing the current entry, or adding\r\n    // a new one to the browser history.\r\n    function updateHash(location, fragment, replace) {\r\n        if (replace) {\r\n            var href = location.href.replace(/(javascript:|#).*$/, '');\r\n\r\n            if (history.history.replaceState) {\r\n                history.history.replaceState({}, document.title, href + '#' + fragment); // using history.replaceState instead of location.replace to work around chrom bug\r\n            } else {\r\n                location.replace(href + '#' + fragment);\r\n            }\r\n        } else {\r\n            // Some browsers require that `hash` contains a leading #.\r\n            location.hash = '#' + fragment;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @class HistoryModule\r\n     * @static\r\n     */\r\n    var history = {\r\n        /**\r\n         * The setTimeout interval used when the browser does not support hash change events.\r\n         * @property {string} interval\r\n         * @default 50\r\n         */\r\n        interval: 50,\r\n        /**\r\n         * Indicates whether or not the history module is actively tracking history.\r\n         * @property {string} active\r\n         */\r\n        active: false\r\n    };\r\n    \r\n    // Ensure that `History` can be used outside of the browser.\r\n    if (typeof window !== 'undefined') {\r\n        history.location = window.location;\r\n        history.history = window.history;\r\n    }\r\n\r\n    /**\r\n     * Gets the true hash value. Cannot use location.hash directly due to a bug in Firefox where location.hash will always be decoded.\r\n     * @method getHash\r\n     * @param {string} [window] The optional window instance\r\n     * @return {string} The hash.\r\n     */\r\n    history.getHash = function(window) {\r\n        var match = (window || history).location.href.match(/#(.*)$/);\r\n        return match ? match[1] : '';\r\n    };\r\n    \r\n    /**\r\n     * Get the cross-browser normalized URL fragment, either from the URL, the hash, or the override.\r\n     * @method getFragment\r\n     * @param {string} fragment The fragment.\r\n     * @param {boolean} forcePushState Should we force push state?\r\n     * @return {string} he fragment.\r\n     */\r\n    history.getFragment = function(fragment, forcePushState) {\r\n        if (fragment == null) {\r\n            if (history._hasPushState || !history._wantsHashChange || forcePushState) {\r\n                fragment = history.location.pathname + history.location.search;\r\n                var root = history.root.replace(trailingSlash, '');\r\n                if (!fragment.indexOf(root)) {\r\n                    fragment = fragment.substr(root.length);\r\n                }\r\n            } else {\r\n                fragment = history.getHash();\r\n            }\r\n        }\r\n        \r\n        return fragment.replace(routeStripper, '');\r\n    };\r\n\r\n    /**\r\n     * Activate the hash change handling, returning `true` if the current URL matches an existing route, and `false` otherwise.\r\n     * @method activate\r\n     * @param {HistoryOptions} options.\r\n     * @return {boolean|undefined} Returns true/false from loading the url unless the silent option was selected.\r\n     */\r\n    history.activate = function(options) {\r\n        if (history.active) {\r\n            system.error(\"History has already been activated.\");\r\n        }\r\n\r\n        history.active = true;\r\n\r\n        // Figure out the initial configuration. Do we need an iframe?\r\n        // Is pushState desired ... is it available?\r\n        history.options = system.extend({}, { root: '/' }, history.options, options);\r\n        history.root = history.options.root;\r\n        history._wantsHashChange = history.options.hashChange !== false;\r\n        history._wantsPushState = !!history.options.pushState;\r\n        history._hasPushState = !!(history.options.pushState && history.history && history.history.pushState);\r\n\r\n        var fragment = history.getFragment();\r\n        var docMode = document.documentMode;\r\n        var oldIE = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\r\n\r\n        // Normalize root to always include a leading and trailing slash.\r\n        history.root = ('/' + history.root + '/').replace(rootStripper, '/');\r\n\r\n        if (oldIE && history._wantsHashChange) {\r\n            history.iframe = $('<iframe src=\"javascript:0\" tabindex=\"-1\" />').hide().appendTo('body')[0].contentWindow;\r\n            history.navigate(fragment, false);\r\n        }\r\n\r\n        // Depending on whether we're using pushState or hashes, and whether\r\n        // 'onhashchange' is supported, determine how we check the URL state.\r\n        if (history._hasPushState) {\r\n            $(window).on('popstate', history.checkUrl);\r\n        } else if (history._wantsHashChange && ('onhashchange' in window) && !oldIE) {\r\n            $(window).on('hashchange', history.checkUrl);\r\n        } else if (history._wantsHashChange) {\r\n            history._checkUrlInterval = setInterval(history.checkUrl, history.interval);\r\n        }\r\n\r\n        // Determine if we need to change the base url, for a pushState link\r\n        // opened by a non-pushState browser.\r\n        history.fragment = fragment;\r\n        var loc = history.location;\r\n        var atRoot = loc.pathname.replace(/[^\\/]$/, '$&/') === history.root;\r\n\r\n        // Transition from hashChange to pushState or vice versa if both are requested.\r\n        if (history._wantsHashChange && history._wantsPushState) {\r\n            // If we've started off with a route from a `pushState`-enabled\r\n            // browser, but we're currently in a browser that doesn't support it...\r\n            if (!history._hasPushState && !atRoot) {\r\n                history.fragment = history.getFragment(null, true);\r\n                history.location.replace(history.root + history.location.search + '#' + history.fragment);\r\n                // Return immediately as browser will do redirect to new url\r\n                return true;\r\n\r\n            // Or if we've started out with a hash-based route, but we're currently\r\n            // in a browser where it could be `pushState`-based instead...\r\n            } else if (history._hasPushState && atRoot && loc.hash) {\r\n                this.fragment = history.getHash().replace(routeStripper, '');\r\n                this.history.replaceState({}, document.title, history.root + history.fragment + loc.search);\r\n            }\r\n        }\r\n\r\n        if (!history.options.silent) {\r\n            return history.loadUrl(options.startRoute);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Disable history, perhaps temporarily. Not useful in a real app, but possibly useful for unit testing Routers.\r\n     * @method deactivate\r\n     */\r\n    history.deactivate = function() {\r\n        $(window).off('popstate', history.checkUrl).off('hashchange', history.checkUrl);\r\n        clearInterval(history._checkUrlInterval);\r\n        history.active = false;\r\n    };\r\n\r\n    /**\r\n     * Checks the current URL to see if it has changed, and if it has, calls `loadUrl`, normalizing across the hidden iframe.\r\n     * @method checkUrl\r\n     * @return {boolean} Returns true/false from loading the url.\r\n     */\r\n    history.checkUrl = function() {\r\n        var current = history.getFragment();\r\n        if (current === history.fragment && history.iframe) {\r\n            current = history.getFragment(history.getHash(history.iframe));\r\n        }\r\n\r\n        if (current === history.fragment) {\r\n            return false;\r\n        }\r\n\r\n        if (history.iframe) {\r\n            history.navigate(current, false);\r\n        }\r\n        \r\n        history.loadUrl();\r\n    };\r\n    \r\n    /**\r\n     * Attempts to load the current URL fragment. A pass-through to options.routeHandler.\r\n     * @method loadUrl\r\n     * @return {boolean} Returns true/false from the route handler.\r\n     */\r\n    history.loadUrl = function(fragmentOverride) {\r\n        var fragment = history.fragment = history.getFragment(fragmentOverride);\r\n\r\n        return history.options.routeHandler ?\r\n            history.options.routeHandler(fragment) :\r\n            false;\r\n    };\r\n\r\n    /**\r\n     * Save a fragment into the hash history, or replace the URL state if the\r\n     * 'replace' option is passed. You are responsible for properly URL-encoding\r\n     * the fragment in advance.\r\n     * The options object can contain `trigger: false` if you wish to not have the\r\n     * route callback be fired, or `replace: true`, if\r\n     * you wish to modify the current URL without adding an entry to the history.\r\n     * @method navigate\r\n     * @param {string} fragment The url fragment to navigate to.\r\n     * @param {object|boolean} options An options object with optional trigger and replace flags. You can also pass a boolean directly to set the trigger option. Trigger is `true` by default.\r\n     * @return {boolean} Returns true/false from loading the url.\r\n     */\r\n    history.navigate = function(fragment, options) {\r\n        if (!history.active) {\r\n            return false;\r\n        }\r\n\r\n        if(options === undefined) {\r\n            options = {\r\n                trigger: true\r\n            };\r\n        }else if(system.isBoolean(options)) {\r\n            options = {\r\n                trigger: options\r\n            };\r\n        }\r\n\r\n        fragment = history.getFragment(fragment || '');\r\n\r\n        if (history.fragment === fragment) {\r\n            return;\r\n        }\r\n\r\n        history.fragment = fragment;\r\n\r\n        var url = history.root + fragment;\r\n\r\n        // Don't include a trailing slash on the root.\r\n        if(fragment === '' && url !== '/') {\r\n            url = url.slice(0, -1);\r\n        }\r\n\r\n        // If pushState is available, we use it to set the fragment as a real URL.\r\n        if (history._hasPushState) {\r\n            history.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\r\n\r\n            // If hash changes haven't been explicitly disabled, update the hash\r\n            // fragment to store history.\r\n        } else if (history._wantsHashChange) {\r\n            updateHash(history.location, fragment, options.replace);\r\n            \r\n            if (history.iframe && (fragment !== history.getFragment(history.getHash(history.iframe)))) {\r\n                // Opening and closing the iframe tricks IE7 and earlier to push a\r\n                // history entry on hash-tag change.  When replace is true, we don't\r\n                // want history.\r\n                if (!options.replace) {\r\n                    history.iframe.document.open().close();\r\n                }\r\n                \r\n                updateHash(history.iframe.location, fragment, options.replace);\r\n            }\r\n\r\n            // If you've told us that you explicitly don't want fallback hashchange-\r\n            // based history, then `navigate` becomes a page refresh.\r\n        } else {\r\n            return history.location.assign(url);\r\n        }\r\n\r\n        if (options.trigger) {\r\n            return history.loadUrl(fragment);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Navigates back in the browser history.\r\n     * @method navigateBack\r\n     */\r\n    history.navigateBack = function() {\r\n        history.history.back();\r\n    };\r\n\r\n    /**\r\n     * @class HistoryOptions\r\n     * @static\r\n     */\r\n\r\n    /**\r\n     * The function that will be called back when the fragment changes.\r\n     * @property {function} routeHandler\r\n     */\r\n\r\n    /**\r\n     * The url root used to extract the fragment when using push state.\r\n     * @property {string} root\r\n     */\r\n\r\n    /**\r\n     * Use hash change when present.\r\n     * @property {boolean} hashChange\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * Use push state when present.\r\n     * @property {boolean} pushState\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * Prevents loading of the current url when activating history.\r\n     * @property {boolean} silent\r\n     * @default false\r\n     */\r\n\r\n    return history;\r\n});\r\n\n","/**\r\n * Connects the history module's url and history tracking support to Durandal's activation and composition engine allowing you to easily build navigation-style applications.\r\n * @module router\r\n * @requires system\r\n * @requires app\r\n * @requires activator\r\n * @requires events\r\n * @requires composition\r\n * @requires history\r\n * @requires knockout\r\n * @requires jquery\r\n */\r\ndefine('plugins/router',['durandal/system', 'durandal/app', 'durandal/activator', 'durandal/events', 'durandal/composition', 'plugins/history', 'knockout', 'jquery'], function(system, app, activator, events, composition, history, ko, $) {\r\n    var optionalParam = /\\((.*?)\\)/g;\r\n    var namedParam = /(\\(\\?)?:\\w+/g;\r\n    var splatParam = /\\*\\w+/g;\r\n    var escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\n    var startDeferred, rootRouter;\r\n    var trailingSlash = /\\/$/;\r\n    var routesAreCaseSensitive = false;\r\n    var lastUrl = '/', lastTryUrl = '/';\r\n\r\n    function routeStringToRegExp(routeString) {\r\n        routeString = routeString.replace(escapeRegExp, '\\\\$&')\r\n            .replace(optionalParam, '(?:$1)?')\r\n            .replace(namedParam, function(match, optional) {\r\n                return optional ? match : '([^\\/]+)';\r\n            })\r\n            .replace(splatParam, '(.*?)');\r\n\r\n        return new RegExp('^' + routeString + '$', routesAreCaseSensitive ? undefined : 'i');\r\n    }\r\n\r\n    function stripParametersFromRoute(route) {\r\n        var colonIndex = route.indexOf(':');\r\n        var length = colonIndex > 0 ? colonIndex - 1 : route.length;\r\n        return route.substring(0, length);\r\n    }\r\n\r\n    function endsWith(str, suffix) {\r\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n    }\r\n\r\n    function compareArrays(first, second) {\r\n        if (!first || !second){\r\n            return false;\r\n        }\r\n\r\n        if (first.length != second.length) {\r\n            return false;\r\n        }\r\n\r\n        for (var i = 0, len = first.length; i < len; i++) {\r\n            if (first[i] != second[i]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function reconstructUrl(instruction){\r\n        if(!instruction.queryString){\r\n            return instruction.fragment;\r\n        }\r\n\r\n        return instruction.fragment + '?' + instruction.queryString;\r\n    }\r\n\r\n    /**\r\n     * @class Router\r\n     * @uses Events\r\n     */\r\n\r\n    /**\r\n     * Triggered when the navigation logic has completed.\r\n     * @event router:navigation:complete\r\n     * @param {object} instance The activated instance.\r\n     * @param {object} instruction The routing instruction.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    /**\r\n     * Triggered when the navigation has been cancelled.\r\n     * @event router:navigation:cancelled\r\n     * @param {object} instance The activated instance.\r\n     * @param {object} instruction The routing instruction.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    /**\r\n     * Triggered when navigation begins.\r\n     * @event router:navigation:processing\r\n     * @param {object} instruction The routing instruction.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    /**\r\n     * Triggered right before a route is activated.\r\n     * @event router:route:activating\r\n     * @param {object} instance The activated instance.\r\n     * @param {object} instruction The routing instruction.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    /**\r\n     * Triggered right before a route is configured.\r\n     * @event router:route:before-config\r\n     * @param {object} config The route config.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    /**\r\n     * Triggered just after a route is configured.\r\n     * @event router:route:after-config\r\n     * @param {object} config The route config.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    /**\r\n     * Triggered when the view for the activated instance is attached.\r\n     * @event router:navigation:attached\r\n     * @param {object} instance The activated instance.\r\n     * @param {object} instruction The routing instruction.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    /**\r\n     * Triggered when the composition that the activated instance participates in is complete.\r\n     * @event router:navigation:composition-complete\r\n     * @param {object} instance The activated instance.\r\n     * @param {object} instruction The routing instruction.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    /**\r\n     * Triggered when the router does not find a matching route.\r\n     * @event router:route:not-found\r\n     * @param {string} fragment The url fragment.\r\n     * @param {Router} router The router.\r\n     */\r\n\r\n    var createRouter = function() {\r\n        var queue = [],\r\n            isProcessing = ko.observable(false),\r\n            currentActivation,\r\n            currentInstruction,\r\n            activeItem = activator.create();\r\n\r\n        var router = {\r\n            /**\r\n             * The route handlers that are registered. Each handler consists of a `routePattern` and a `callback`.\r\n             * @property {object[]} handlers\r\n             */\r\n            handlers: [],\r\n            /**\r\n             * The route configs that are registered.\r\n             * @property {object[]} routes\r\n             */\r\n            routes: [],\r\n            /**\r\n             * The route configurations that have been designated as displayable in a nav ui (nav:true).\r\n             * @property {KnockoutObservableArray} navigationModel\r\n             */\r\n            navigationModel: ko.observableArray([]),\r\n            /**\r\n             * The active item/screen based on the current navigation state.\r\n             * @property {Activator} activeItem\r\n             */\r\n            activeItem: activeItem,\r\n            /**\r\n             * Indicates that the router (or a child router) is currently in the process of navigating.\r\n             * @property {KnockoutComputed} isNavigating\r\n             */\r\n            isNavigating: ko.computed(function() {\r\n                var current = activeItem();\r\n                var processing = isProcessing();\r\n                var currentRouterIsProcesing = current\r\n                    && current.router\r\n                    && current.router != router\r\n                    && current.router.isNavigating() ? true : false;\r\n                return  processing || currentRouterIsProcesing;\r\n            }),\r\n            /**\r\n             * An observable surfacing the active routing instruction that is currently being processed or has recently finished processing.\r\n             * The instruction object has `config`, `fragment`, `queryString`, `params` and `queryParams` properties.\r\n             * @property {KnockoutObservable} activeInstruction\r\n             */\r\n            activeInstruction:ko.observable(null),\r\n            __router__:true\r\n        };\r\n\r\n        events.includeIn(router);\r\n\r\n        activeItem.settings.areSameItem = function (currentItem, newItem, currentActivationData, newActivationData) {\r\n            if (currentItem == newItem) {\r\n                return compareArrays(currentActivationData, newActivationData);\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        activeItem.settings.findChildActivator = function(item) {\r\n            if (item && item.router && item.router.parent == router) {\r\n                return item.router.activeItem;\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        function hasChildRouter(instance, parentRouter) {\r\n            return instance.router && instance.router.parent == parentRouter;\r\n        }\r\n\r\n        function setCurrentInstructionRouteIsActive(flag) {\r\n            if (currentInstruction && currentInstruction.config.isActive) {\r\n                currentInstruction.config.isActive(flag);\r\n            }\r\n        }\r\n\r\n        function completeNavigation(instance, instruction, mode) {\r\n            system.log('Navigation Complete', instance, instruction);\r\n\r\n            var fromModuleId = system.getModuleId(currentActivation);\r\n            if (fromModuleId) {\r\n                router.trigger('router:navigation:from:' + fromModuleId);\r\n            }\r\n\r\n            currentActivation = instance;\r\n\r\n            setCurrentInstructionRouteIsActive(false);\r\n            currentInstruction = instruction;\r\n            setCurrentInstructionRouteIsActive(true);\r\n\r\n            var toModuleId = system.getModuleId(currentActivation);\r\n            if (toModuleId) {\r\n                router.trigger('router:navigation:to:' + toModuleId);\r\n            }\r\n\r\n            if (!hasChildRouter(instance, router)) {\r\n                router.updateDocumentTitle(instance, instruction);\r\n            }\r\n\r\n            switch (mode) {\r\n                case 'rootRouter':\r\n                    lastUrl = reconstructUrl(currentInstruction);\r\n                    break;\r\n                case 'rootRouterWithChild':\r\n                    lastTryUrl = reconstructUrl(currentInstruction);\r\n                    break;\r\n                case 'lastChildRouter':\r\n                    lastUrl = lastTryUrl;\r\n                    break;\r\n            }\r\n\r\n            rootRouter.explicitNavigation = false;\r\n            rootRouter.navigatingBack = false;\r\n\r\n            router.trigger('router:navigation:complete', instance, instruction, router);\r\n        }\r\n\r\n        function cancelNavigation(instance, instruction) {\r\n            system.log('Navigation Cancelled');\r\n\r\n            router.activeInstruction(currentInstruction);\r\n\r\n            router.navigate(lastUrl, false);\r\n\r\n            isProcessing(false);\r\n            rootRouter.explicitNavigation = false;\r\n            rootRouter.navigatingBack = false;\r\n            router.trigger('router:navigation:cancelled', instance, instruction, router);\r\n        }\r\n\r\n        function redirect(url) {\r\n            system.log('Navigation Redirecting');\r\n\r\n            isProcessing(false);\r\n            rootRouter.explicitNavigation = false;\r\n            rootRouter.navigatingBack = false;\r\n            router.navigate(url, { trigger: true, replace: true });\r\n        }\r\n\r\n        function activateRoute(activator, instance, instruction) {\r\n            rootRouter.navigatingBack = !rootRouter.explicitNavigation && currentActivation != instruction.fragment;\r\n            router.trigger('router:route:activating', instance, instruction, router);\r\n\r\n            var options = {\r\n                canDeactivate: !router.parent\r\n            };\r\n\r\n            activator.activateItem(instance, instruction.params, options).then(function(succeeded) {\r\n                if (succeeded) {\r\n                    var previousActivation = currentActivation;\r\n                    var withChild = hasChildRouter(instance, router);\r\n                    var mode = '';\r\n\r\n                    if (router.parent) {\r\n                        if(!withChild) {\r\n                            mode = 'lastChildRouter';\r\n                        }\r\n                    } else {\r\n                        if (withChild) {\r\n                            mode = 'rootRouterWithChild';\r\n                        } else {\r\n                            mode = 'rootRouter';\r\n                        }\r\n                    }\r\n\r\n                    completeNavigation(instance, instruction, mode);\r\n\r\n                    if (withChild) {\r\n                        instance.router.trigger('router:route:before-child-routes', instance, instruction, router);\r\n\r\n                        var fullFragment = instruction.fragment;\r\n                        if (instruction.queryString) {\r\n                            fullFragment += \"?\" + instruction.queryString;\r\n                        }\r\n\r\n                        instance.router.loadUrl(fullFragment);\r\n                    }\r\n\r\n                    if (previousActivation == instance) {\r\n                        router.attached();\r\n                        router.compositionComplete();\r\n                    }\r\n                } else if(activator.settings.lifecycleData && activator.settings.lifecycleData.redirect){\r\n                    redirect(activator.settings.lifecycleData.redirect);\r\n                }else{\r\n                    cancelNavigation(instance, instruction);\r\n                }\r\n\r\n                if (startDeferred) {\r\n                    startDeferred.resolve();\r\n                    startDeferred = null;\r\n                }\r\n            }).fail(function(err){\r\n                system.error(err);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Inspects routes and modules before activation. Can be used to protect access by cancelling navigation or redirecting.\r\n         * @method guardRoute\r\n         * @param {object} instance The module instance that is about to be activated by the router.\r\n         * @param {object} instruction The route instruction. The instruction object has config, fragment, queryString, params and queryParams properties.\r\n         * @return {Promise|Boolean|String} If a boolean, determines whether or not the route should activate or be cancelled. If a string, causes a redirect to the specified route. Can also be a promise for either of these value types.\r\n         */\r\n        function handleGuardedRoute(activator, instance, instruction) {\r\n            var resultOrPromise = router.guardRoute(instance, instruction);\r\n            if (resultOrPromise || resultOrPromise === '') {\r\n                if (resultOrPromise.then) {\r\n                    resultOrPromise.then(function(result) {\r\n                        if (result) {\r\n                            if (system.isString(result)) {\r\n                                redirect(result);\r\n                            } else {\r\n                                activateRoute(activator, instance, instruction);\r\n                            }\r\n                        } else {\r\n                            cancelNavigation(instance, instruction);\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (system.isString(resultOrPromise)) {\r\n                        redirect(resultOrPromise);\r\n                    } else {\r\n                        activateRoute(activator, instance, instruction);\r\n                    }\r\n                }\r\n            } else {\r\n                cancelNavigation(instance, instruction);\r\n            }\r\n        }\r\n\r\n        function ensureActivation(activator, instance, instruction) {\r\n            if (router.guardRoute) {\r\n                handleGuardedRoute(activator, instance, instruction);\r\n            } else {\r\n                activateRoute(activator, instance, instruction);\r\n            }\r\n        }\r\n\r\n        function canReuseCurrentActivation(instruction) {\r\n            return currentInstruction\r\n                && currentInstruction.config.moduleId == instruction.config.moduleId\r\n                && currentActivation\r\n                && ((currentActivation.canReuseForRoute && currentActivation.canReuseForRoute.apply(currentActivation, instruction.params))\r\n                || (!currentActivation.canReuseForRoute && currentActivation.router && currentActivation.router.loadUrl));\r\n        }\r\n\r\n        function dequeueInstruction() {\r\n            if (isProcessing()) {\r\n                return;\r\n            }\r\n\r\n            var instruction = queue.shift();\r\n            queue = [];\r\n\r\n            if (!instruction) {\r\n                return;\r\n            }\r\n\r\n            isProcessing(true);\r\n            router.activeInstruction(instruction);\r\n            router.trigger('router:navigation:processing', instruction, router);\r\n\r\n            if (canReuseCurrentActivation(instruction)) {\r\n                var tempActivator = activator.create();\r\n                tempActivator.forceActiveItem(currentActivation); //enforce lifecycle without re-compose\r\n                tempActivator.settings.areSameItem = activeItem.settings.areSameItem;\r\n                tempActivator.settings.findChildActivator = activeItem.settings.findChildActivator;\r\n                ensureActivation(tempActivator, currentActivation, instruction);\r\n            } else if(!instruction.config.moduleId) {\r\n                ensureActivation(activeItem, {\r\n                    viewUrl:instruction.config.viewUrl,\r\n                    canReuseForRoute:function() {\r\n                        return true;\r\n                    }\r\n                }, instruction);\r\n            } else {\r\n                system.acquire(instruction.config.moduleId).then(function(m) {\r\n                    var instance = system.resolveObject(m);\r\n\r\n                    if(instruction.config.viewUrl) {\r\n                        instance.viewUrl = instruction.config.viewUrl;\r\n                    }\r\n\r\n                    ensureActivation(activeItem, instance, instruction);\r\n                }).fail(function(err) {\r\n                    system.error('Failed to load routed module (' + instruction.config.moduleId + '). Details: ' + err.message, err);\r\n                });\r\n            }\r\n        }\r\n\r\n        function queueInstruction(instruction) {\r\n            queue.unshift(instruction);\r\n            dequeueInstruction();\r\n        }\r\n\r\n        // Given a route, and a URL fragment that it matches, return the array of\r\n        // extracted decoded parameters. Empty or unmatched parameters will be\r\n        // treated as `null` to normalize cross-browser behavior.\r\n        function createParams(routePattern, fragment, queryString) {\r\n            var params = routePattern.exec(fragment).slice(1);\r\n\r\n            for (var i = 0; i < params.length; i++) {\r\n                var current = params[i];\r\n                params[i] = current ? decodeURIComponent(current) : null;\r\n            }\r\n\r\n            var queryParams = router.parseQueryString(queryString);\r\n            if (queryParams) {\r\n                params.push(queryParams);\r\n            }\r\n\r\n            return {\r\n                params:params,\r\n                queryParams:queryParams\r\n            };\r\n        }\r\n\r\n        function configureRoute(config){\r\n            router.trigger('router:route:before-config', config, router);\r\n\r\n            if (!system.isRegExp(config.route)) {\r\n                config.title = config.title || router.convertRouteToTitle(config.route);\r\n\r\n                if (!config.viewUrl) {\r\n                    config.moduleId = config.moduleId || router.convertRouteToModuleId(config.route);\r\n                }\r\n                \r\n                config.hash = config.hash || router.convertRouteToHash(config.route);\r\n\r\n                if (config.hasChildRoutes) {\r\n                    config.route = config.route + '*childRoutes';\r\n                }\r\n\r\n                config.routePattern = routeStringToRegExp(config.route);\r\n            }else{\r\n                config.routePattern = config.route;\r\n            }\r\n\r\n            config.isActive = config.isActive || ko.observable(false);\r\n            router.trigger('router:route:after-config', config, router);\r\n            router.routes.push(config);\r\n\r\n            router.route(config.routePattern, function(fragment, queryString) {\r\n                var paramInfo = createParams(config.routePattern, fragment, queryString);\r\n                queueInstruction({\r\n                    fragment: fragment,\r\n                    queryString:queryString,\r\n                    config: config,\r\n                    params: paramInfo.params,\r\n                    queryParams:paramInfo.queryParams\r\n                });\r\n            });\r\n        };\r\n\r\n        function mapRoute(config) {\r\n            if(system.isArray(config.route)){\r\n                var isActive = config.isActive || ko.observable(false);\r\n\r\n                for(var i = 0, length = config.route.length; i < length; i++){\r\n                    var current = system.extend({}, config);\r\n\r\n                    current.route = config.route[i];\r\n                    current.isActive = isActive;\r\n\r\n                    if(i > 0){\r\n                        delete current.nav;\r\n                    }\r\n\r\n                    configureRoute(current);\r\n                }\r\n            }else{\r\n                configureRoute(config);\r\n            }\r\n\r\n            return router;\r\n        }\r\n\r\n        /**\r\n         * Parses a query string into an object.\r\n         * @method parseQueryString\r\n         * @param {string} queryString The query string to parse.\r\n         * @return {object} An object keyed according to the query string parameters.\r\n         */\r\n        router.parseQueryString = function (queryString) {\r\n            var queryObject, pairs;\r\n\r\n            if (!queryString) {\r\n                return null;\r\n            }\r\n\r\n            pairs = queryString.split('&');\r\n\r\n            if (pairs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            queryObject = {};\r\n\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                var pair = pairs[i];\r\n                if (pair === '') {\r\n                    continue;\r\n                }\r\n\r\n                var parts = pair.split(/=(.+)?/),\r\n                    key = parts[0],\r\n                    value = parts[1] && decodeURIComponent(parts[1].replace(/\\+/g, ' '));\r\n\r\n                var existing = queryObject[key];\r\n\r\n                if (existing) {\r\n                    if (system.isArray(existing)) {\r\n                        existing.push(value);\r\n                    } else {\r\n                        queryObject[key] = [existing, value];\r\n                    }\r\n                }\r\n                else {\r\n                    queryObject[key] = value;\r\n                }\r\n            }\r\n\r\n            return queryObject;\r\n        };\r\n\r\n        /**\r\n         * Add a route to be tested when the url fragment changes.\r\n         * @method route\r\n         * @param {RegEx} routePattern The route pattern to test against.\r\n         * @param {function} callback The callback to execute when the route pattern is matched.\r\n         */\r\n        router.route = function(routePattern, callback) {\r\n            router.handlers.push({ routePattern: routePattern, callback: callback });\r\n        };\r\n\r\n        /**\r\n         * Attempt to load the specified URL fragment. If a route succeeds with a match, returns `true`. If no defined routes matches the fragment, returns `false`.\r\n         * @method loadUrl\r\n         * @param {string} fragment The URL fragment to find a match for.\r\n         * @return {boolean} True if a match was found, false otherwise.\r\n         */\r\n        router.loadUrl = function(fragment) {\r\n            var handlers = router.handlers,\r\n                queryString = null,\r\n                coreFragment = fragment,\r\n                queryIndex = fragment.indexOf('?');\r\n\r\n            if (queryIndex != -1) {\r\n                coreFragment = fragment.substring(0, queryIndex);\r\n                queryString = fragment.substr(queryIndex + 1);\r\n            }\r\n\r\n            if(router.relativeToParentRouter){\r\n                var instruction = this.parent.activeInstruction();\r\n\t\t\t\tcoreFragment = queryIndex == -1 ? instruction.params.join('/') : instruction.params.slice(0, -1).join('/');\r\n\r\n                if(coreFragment && coreFragment.charAt(0) == '/'){\r\n                    coreFragment = coreFragment.substr(1);\r\n                }\r\n\r\n                if(!coreFragment){\r\n                    coreFragment = '';\r\n                }\r\n\r\n                coreFragment = coreFragment.replace('//', '/').replace('//', '/');\r\n            }\r\n\r\n            coreFragment = coreFragment.replace(trailingSlash, '');\r\n\r\n            for (var i = 0; i < handlers.length; i++) {\r\n                var current = handlers[i];\r\n                if (current.routePattern.test(coreFragment)) {\r\n                    current.callback(coreFragment, queryString);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            system.log('Route Not Found', fragment, currentInstruction);\r\n            router.trigger('router:route:not-found', fragment, router);\r\n\r\n            if (router.parent) {\r\n                lastUrl = lastTryUrl;\r\n            }\r\n\r\n            history.navigate(lastUrl, { trigger:false, replace:true });\r\n\r\n            rootRouter.explicitNavigation = false;\r\n            rootRouter.navigatingBack = false;\r\n\r\n            return false;\r\n        };\r\n\r\n        var titleSubscription;\r\n        function setTitle(value) {\r\n            var appTitle = ko.unwrap(app.title);\r\n\r\n            if (appTitle) {\r\n                document.title = value + \" | \" + appTitle;\r\n            } else {\r\n                document.title = value;\r\n            }\r\n        }  \r\n        \r\n        // Allow observable to be used for app.title\r\n        if(ko.isObservable(app.title)) {\r\n            app.title.subscribe(function () {\r\n                var instruction = router.activeInstruction();\r\n                var title = instruction != null ? ko.unwrap(instruction.config.title) : '';\r\n                setTitle(title);\r\n            });\r\n        }\r\n        \r\n        /**\r\n         * Updates the document title based on the activated module instance, the routing instruction and the app.title.\r\n         * @method updateDocumentTitle\r\n         * @param {object} instance The activated module.\r\n         * @param {object} instruction The routing instruction associated with the action. It has a `config` property that references the original route mapping config.\r\n         */\r\n        router.updateDocumentTitle = function (instance, instruction) {\r\n            var appTitle = ko.unwrap(app.title),\r\n                title = instruction.config.title;\r\n                \r\n            if (titleSubscription) {\r\n                titleSubscription.dispose();\r\n            }\r\n\r\n            if (title) {\r\n                if (ko.isObservable(title)) {\r\n                    titleSubscription = title.subscribe(setTitle);\r\n                    setTitle(title());\r\n                } else {\r\n                    setTitle(title);\r\n                }\r\n            } else if (appTitle) {\r\n                document.title = appTitle;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Save a fragment into the hash history, or replace the URL state if the\r\n         * 'replace' option is passed. You are responsible for properly URL-encoding\r\n         * the fragment in advance.\r\n         * The options object can contain `trigger: false` if you wish to not have the\r\n         * route callback be fired, or `replace: true`, if\r\n         * you wish to modify the current URL without adding an entry to the history.\r\n         * @method navigate\r\n         * @param {string} fragment The url fragment to navigate to.\r\n         * @param {object|boolean} options An options object with optional trigger and replace flags. You can also pass a boolean directly to set the trigger option. Trigger is `true` by default.\r\n         * @return {boolean} Returns true/false from loading the url.\r\n         */\r\n        router.navigate = function(fragment, options) {\r\n            if(fragment && fragment.indexOf('://') != -1) {\r\n                window.location.href = fragment;\r\n                return true;\r\n            }\r\n\r\n            if(options === undefined || (system.isBoolean(options) && options) || (system.isObject(options) && options.trigger)) {\r\n                rootRouter.explicitNavigation = true;\r\n            }\r\n\r\n            if ((system.isBoolean(options) && !options) || (options && options.trigger != undefined && !options.trigger)) {\r\n                lastUrl = fragment;\r\n            }\r\n\r\n            return history.navigate(fragment, options);\r\n        };\r\n\r\n        /**\r\n         * Navigates back in the browser history.\r\n         * @method navigateBack\r\n         */\r\n        router.navigateBack = function() {\r\n            history.navigateBack();\r\n        };\r\n\r\n        router.attached = function() {\r\n            router.trigger('router:navigation:attached', currentActivation, currentInstruction, router);\r\n        };\r\n\r\n        router.compositionComplete = function(){\r\n            isProcessing(false);\r\n            router.trigger('router:navigation:composition-complete', currentActivation, currentInstruction, router);\r\n            dequeueInstruction();\r\n        };\r\n\r\n        /**\r\n         * Converts a route to a hash suitable for binding to a link's href.\r\n         * @method convertRouteToHash\r\n         * @param {string} route\r\n         * @return {string} The hash.\r\n         */\r\n        router.convertRouteToHash = function(route) {\r\n            route = route.replace(/\\*.*$/, '');\r\n\r\n            if(router.relativeToParentRouter){\r\n                var instruction = router.parent.activeInstruction(),\r\n                    hash = route ? instruction.config.hash + '/' + route : instruction.config.hash;\r\n\r\n                if(history._hasPushState){\r\n                    hash = '/' + hash;\r\n                }\r\n\r\n                hash = hash.replace('//', '/').replace('//', '/');\r\n                return hash;\r\n            }\r\n\r\n            if(history._hasPushState){\r\n                return route;\r\n            }\r\n\r\n            return \"#\" + route;\r\n        };\r\n\r\n        /**\r\n         * Converts a route to a module id. This is only called if no module id is supplied as part of the route mapping.\r\n         * @method convertRouteToModuleId\r\n         * @param {string} route\r\n         * @return {string} The module id.\r\n         */\r\n        router.convertRouteToModuleId = function(route) {\r\n            return stripParametersFromRoute(route);\r\n        };\r\n\r\n        /**\r\n         * Converts a route to a displayable title. This is only called if no title is specified as part of the route mapping.\r\n         * @method convertRouteToTitle\r\n         * @param {string} route\r\n         * @return {string} The title.\r\n         */\r\n        router.convertRouteToTitle = function(route) {\r\n            var value = stripParametersFromRoute(route);\r\n            return value.substring(0, 1).toUpperCase() + value.substring(1);\r\n        };\r\n\r\n        /**\r\n         * Maps route patterns to modules.\r\n         * @method map\r\n         * @param {string|object|object[]} route A route, config or array of configs.\r\n         * @param {object} [config] The config for the specified route.\r\n         * @chainable\r\n         * @example\r\n         router.map([\r\n         { route: '', title:'Home', moduleId: 'homeScreen', nav: true },\r\n         { route: 'customer/:id', moduleId: 'customerDetails'}\r\n         ]);\r\n         */\r\n        router.map = function(route, config) {\r\n            if (system.isArray(route)) {\r\n                for (var i = 0; i < route.length; i++) {\r\n                    router.map(route[i]);\r\n                }\r\n\r\n                return router;\r\n            }\r\n\r\n            if (system.isString(route) || system.isRegExp(route)) {\r\n                if (!config) {\r\n                    config = {};\r\n                } else if (system.isString(config)) {\r\n                    config = { moduleId: config };\r\n                }\r\n\r\n                config.route = route;\r\n            } else {\r\n                config = route;\r\n            }\r\n\r\n            return mapRoute(config);\r\n        };\r\n\r\n        /**\r\n         * Builds an observable array designed to bind a navigation UI to. The model will exist in the `navigationModel` property.\r\n         * @method buildNavigationModel\r\n         * @param {number} defaultOrder The default order to use for navigation visible routes that don't specify an order. The default is 100 and each successive route will be one more than that.\r\n         * @chainable\r\n         */\r\n        router.buildNavigationModel = function(defaultOrder) {\r\n            var nav = [], routes = router.routes;\r\n            var fallbackOrder = defaultOrder || 100;\r\n\r\n            for (var i = 0; i < routes.length; i++) {\r\n                var current = routes[i];\r\n\r\n                if (current.nav) {\r\n                    if (!system.isNumber(current.nav)) {\r\n                        current.nav = ++fallbackOrder;\r\n                    }\r\n\r\n                    nav.push(current);\r\n                }\r\n            }\r\n\r\n            nav.sort(function(a, b) { return a.nav - b.nav; });\r\n            router.navigationModel(nav);\r\n\r\n            return router;\r\n        };\r\n\r\n        /**\r\n         * Configures how the router will handle unknown routes.\r\n         * @method mapUnknownRoutes\r\n         * @param {string|function} [config] If not supplied, then the router will map routes to modules with the same name.\r\n         * If a string is supplied, it represents the module id to route all unknown routes to.\r\n         * Finally, if config is a function, it will be called back with the route instruction containing the route info. The function can then modify the instruction by adding a moduleId and the router will take over from there.\r\n         * @param {string} [replaceRoute] If config is a module id, then you can optionally provide a route to replace the url with.\r\n         * @chainable\r\n         */\r\n        router.mapUnknownRoutes = function(config, replaceRoute) {\r\n            var catchAllRoute = \"*catchall\";\r\n            var catchAllPattern = routeStringToRegExp(catchAllRoute);\r\n\r\n            router.route(catchAllPattern, function (fragment, queryString) {\r\n                var paramInfo = createParams(catchAllPattern, fragment, queryString);\r\n                var instruction = {\r\n                    fragment: fragment,\r\n                    queryString: queryString,\r\n                    config: {\r\n                        route: catchAllRoute,\r\n                        routePattern: catchAllPattern\r\n                    },\r\n                    params: paramInfo.params,\r\n                    queryParams: paramInfo.queryParams\r\n                };\r\n\r\n                if (!config) {\r\n                    instruction.config.moduleId = fragment;\r\n                } else if (system.isString(config)) {\r\n                    instruction.config.moduleId = config;\r\n                    if(replaceRoute){\r\n                        history.navigate(replaceRoute, { trigger:false, replace:true });\r\n                    }\r\n                } else if (system.isFunction(config)) {\r\n                    var result = config(instruction);\r\n                    if (result && result.then) {\r\n                        result.then(function() {\r\n                            router.trigger('router:route:before-config', instruction.config, router);\r\n                            router.trigger('router:route:after-config', instruction.config, router);\r\n                            queueInstruction(instruction);\r\n                        });\r\n                        return;\r\n                    }\r\n                } else {\r\n                    instruction.config = config;\r\n                    instruction.config.route = catchAllRoute;\r\n                    instruction.config.routePattern = catchAllPattern;\r\n                }\r\n\r\n                router.trigger('router:route:before-config', instruction.config, router);\r\n                router.trigger('router:route:after-config', instruction.config, router);\r\n                queueInstruction(instruction);\r\n            });\r\n\r\n            return router;\r\n        };\r\n\r\n        /**\r\n         * Resets the router by removing handlers, routes, event handlers and previously configured options.\r\n         * @method reset\r\n         * @chainable\r\n         */\r\n        router.reset = function() {\r\n            currentInstruction = currentActivation = undefined;\r\n            router.handlers = [];\r\n            router.routes = [];\r\n            router.off();\r\n            delete router.options;\r\n            return router;\r\n        };\r\n\r\n        /**\r\n         * Makes all configured routes and/or module ids relative to a certain base url.\r\n         * @method makeRelative\r\n         * @param {string|object} settings If string, the value is used as the base for routes and module ids. If an object, you can specify `route` and `moduleId` separately. In place of specifying route, you can set `fromParent:true` to make routes automatically relative to the parent router's active route.\r\n         * @chainable\r\n         */\r\n        router.makeRelative = function(settings){\r\n            if(system.isString(settings)){\r\n                settings = {\r\n                    moduleId:settings,\r\n                    route:settings\r\n                };\r\n            }\r\n\r\n            if(settings.moduleId && !endsWith(settings.moduleId, '/')){\r\n                settings.moduleId += '/';\r\n            }\r\n\r\n            if(settings.route && !endsWith(settings.route, '/')){\r\n                settings.route += '/';\r\n            }\r\n\r\n            if(settings.fromParent){\r\n                router.relativeToParentRouter = true;\r\n            }\r\n\r\n            router.on('router:route:before-config').then(function(config){\r\n                if(settings.moduleId){\r\n                    config.moduleId = settings.moduleId + config.moduleId;\r\n                }\r\n\r\n                if(settings.route){\r\n                    if(config.route === ''){\r\n                        config.route = settings.route.substring(0, settings.route.length - 1);\r\n                    }else{\r\n                        config.route = settings.route + config.route;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (settings.dynamicHash) {\r\n                router.on('router:route:after-config').then(function (config) {\r\n                    config.routePattern = routeStringToRegExp(config.route ? settings.dynamicHash + '/' + config.route : settings.dynamicHash);\r\n                    config.dynamicHash = config.dynamicHash || ko.observable(config.hash);\r\n                });\r\n\r\n                router.on('router:route:before-child-routes').then(function(instance, instruction, parentRouter) {\r\n                    var childRouter = instance.router;\r\n\r\n                    for(var i = 0; i < childRouter.routes.length; i++) {\r\n                        var route = childRouter.routes[i];\r\n                        var params = instruction.params.slice(0);\r\n\r\n                        route.hash = childRouter.convertRouteToHash(route.route)\r\n                            .replace(namedParam, function(match) {\r\n                                return params.length > 0 ? params.shift() : match;\r\n                            });\r\n\r\n                        route.dynamicHash(route.hash);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return router;\r\n        };\r\n\r\n        /**\r\n         * Creates a child router.\r\n         * @method createChildRouter\r\n         * @return {Router} The child router.\r\n         */\r\n        router.createChildRouter = function() {\r\n            var childRouter = createRouter();\r\n            childRouter.parent = router;\r\n            return childRouter;\r\n        };\r\n\r\n        return router;\r\n    };\r\n\r\n    /**\r\n     * @class RouterModule\r\n     * @extends Router\r\n     * @static\r\n     */\r\n    rootRouter = createRouter();\r\n    rootRouter.explicitNavigation = false;\r\n    rootRouter.navigatingBack = false;\r\n\r\n    /**\r\n     * Makes the RegExp generated for routes case sensitive, rather than the default of case insensitive.\r\n     * @method makeRoutesCaseSensitive\r\n     */\r\n    rootRouter.makeRoutesCaseSensitive = function(){\r\n        routesAreCaseSensitive = true;\r\n    };\r\n\r\n    /**\r\n     * Verify that the target is the current window\r\n     * @method targetIsThisWindow\r\n     * @return {boolean} True if the event's target is the current window, false otherwise.\r\n     */\r\n    rootRouter.targetIsThisWindow = function(event) {\r\n        var targetWindow = $(event.target).attr('target');\r\n\r\n        if (!targetWindow ||\r\n            targetWindow === window.name ||\r\n            targetWindow === '_self' ||\r\n            (targetWindow === 'top' && window === window.top)) { return true; }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Activates the router and the underlying history tracking mechanism.\r\n     * @method activate\r\n     * @return {Promise} A promise that resolves when the router is ready.\r\n     */\r\n    rootRouter.activate = function(options) {\r\n        return system.defer(function(dfd) {\r\n            startDeferred = dfd;\r\n            rootRouter.options = system.extend({ routeHandler: rootRouter.loadUrl }, rootRouter.options, options);\r\n\r\n            history.activate(rootRouter.options);\r\n\r\n            if(history._hasPushState){\r\n                var routes = rootRouter.routes,\r\n                    i = routes.length;\r\n\r\n                while(i--){\r\n                    var current = routes[i];\r\n                    current.hash = current.hash.replace('#', '/');\r\n                }\r\n            }\r\n\r\n            var rootStripper = rootRouter.options.root && new RegExp(\"^\" + rootRouter.options.root + \"/\");\r\n\r\n            $(document).delegate(\"a\", 'click', function(evt){\r\n                if(history._hasPushState){\r\n                    if(!evt.altKey && !evt.ctrlKey && !evt.metaKey && !evt.shiftKey && rootRouter.targetIsThisWindow(evt)){\r\n                        var href = $(this).attr(\"href\");\r\n\r\n                        // Ensure the protocol is not part of URL, meaning its relative.\r\n                        // Stop the event bubbling to ensure the link will not cause a page refresh.\r\n                        if (href != null && !(href.charAt(0) === \"#\" || /^[a-z]+:/i.test(href))) {\r\n                            rootRouter.explicitNavigation = true;\r\n                            evt.preventDefault();\r\n\r\n                            if (rootStripper) {\r\n                                href = href.replace(rootStripper, \"\");\r\n                            }\r\n\r\n                            history.navigate(href);\r\n                        }\r\n                    }\r\n                }else{\r\n                    rootRouter.explicitNavigation = true;\r\n                }\r\n            });\r\n\r\n            if(history.options.silent && startDeferred){\r\n                startDeferred.resolve();\r\n                startDeferred = null;\r\n            }\r\n        }).promise();\r\n    };\r\n\r\n    /**\r\n     * Disable history, perhaps temporarily. Not useful in a real app, but possibly useful for unit testing Routers.\r\n     * @method deactivate\r\n     */\r\n    rootRouter.deactivate = function() {\r\n        history.deactivate();\r\n    };\r\n\r\n    /**\r\n     * Installs the router's custom ko binding handler.\r\n     * @method install\r\n     */\r\n    rootRouter.install = function(){\r\n        ko.bindingHandlers.router = {\r\n            init: function() {\r\n                return { controlsDescendantBindings: true };\r\n            },\r\n            update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n                var settings = ko.utils.unwrapObservable(valueAccessor()) || {};\r\n\r\n                if (settings.__router__) {\r\n                    settings = {\r\n                        model:settings.activeItem(),\r\n                        attached:settings.attached,\r\n                        compositionComplete:settings.compositionComplete,\r\n                        activate: false\r\n                    };\r\n                } else {\r\n                    var theRouter = ko.utils.unwrapObservable(settings.router || viewModel.router) || rootRouter;\r\n                    settings.model = theRouter.activeItem();\r\n                    settings.attached = theRouter.attached;\r\n                    settings.compositionComplete = theRouter.compositionComplete;\r\n                    settings.activate = false;\r\n                }\r\n\r\n                composition.compose(element, settings, bindingContext);\r\n            }\r\n        };\r\n\r\n        ko.virtualElements.allowedBindings.router = true;\r\n    };\r\n\r\n    return rootRouter;\r\n});\r\n\n","define('services/navigation',['plugins/router', 'services/branding', 'services/logger'],\r\n    function (router, branding, logger) {\r\n\r\n        // The current route that shell has showing\r\n        var currentRoute = ko.computed(function () {\r\n            if (router.activeInstruction() && !router.isNavigating()) {\r\n                return router.activeInstruction();\r\n            }\r\n            else { return false; }\r\n        }).extend({ throttle: 1 });\r\n\r\n        // The current sub route for the route that shell has showing\r\n        var currentSubRoute = ko.observable();\r\n\r\n        var indexOverride = ko.observable(0);\r\n\r\n        var currentRouteWatcher = ko.computed(function () {\r\n            var thisRoute = currentRoute();\r\n            if (thisRoute && thisRoute.config && thisRoute.config.settings) {\r\n                if (thisRoute.config.settings.pages.length !== 0) {\r\n                    // Check if the sub route is already a page of the current route\r\n                    //   so that we don't reset the page if so\r\n                    if (thisRoute.config.settings.pages.indexOf(currentSubRoute()) === -1) {\r\n                        setSubRoute(currentRoute().config.settings.pages[indexOverride()]);\r\n                        //currentSubRoute(currentRoute().config.settings.pages[indexOverride()]);\r\n                        indexOverride(0);\r\n                    }\r\n                }\r\n            } else if (!currentSubRoute.peek() && currentRoute()) {\r\n                setSubRoute(currentRoute().config.settings.pages[indexOverride()]);\r\n                indexOverride(0);\r\n            }\r\n        }).extend({ throttle: 1 });\r\n\r\n        // The currently loaded branding stuff (this is probably moving a style selector somehow\r\n        var currentBrand = ko.computed(function () {\r\n            return branding.currentBrand();\r\n        });\r\n\r\n        var navRoutes = ko.computed(function () {\r\n            // Need to stuff this with the routes from the router\r\n            return router.navigationModel();\r\n        });\r\n\r\n        var navigation = {\r\n            currentBrand: currentBrand,\r\n            currentRoute: currentRoute,\r\n            currentSubRoute: currentSubRoute,\r\n            setSubRoute: setSubRoute,\r\n            navRoutes: navRoutes,\r\n            setRoute: setRoute,\r\n            indexOverride: indexOverride\r\n        };\r\n\r\n        return navigation;\r\n\r\n        // Change the main route\r\n        function setRoute(sender) {\r\n            var thisRoute = sender.hash;\r\n            // If the hash has an optional parameter,\r\n            if (thisRoute.indexOf('(/:id)') !== -1) {\r\n                thisRoute = thisRoute.replace('(/:id)', '');\r\n            }\r\n            if (thisRoute.indexOf('#') !== -1) {\r\n                return router.navigate(thisRoute);\r\n            }\r\n            return router.navigate('#' + thisRoute);\r\n        }\r\n\r\n        // Change the 'sub' route\r\n        function setSubRoute(sender) {\r\n            // If the sent route is already the sub route, ignore it\r\n            if (currentSubRoute() !== sender) {\r\n                currentSubRoute(sender);\r\n                logger.logNavigation(currentRoute().config.title + \"/\" + sender.title);\r\n            }            \r\n        }\r\n\r\n    });\n","define('services/report.context',['services/datacontext'], function (datacontext) {\r\n\r\n\tfunction clause (prop, comp, value) {\r\n\t\tvar self = this;\r\n\t\tself.Property = prop;\r\n\t\tself.Comparator = comp;\r\n\t\tself.Value = value;\t\t\r\n\t}\r\n\r\n\tvar manager = datacontext.manager;\r\n\r\n\tvar reportContext = {\r\n\t\tclause: clause,\r\n\t\tcreateDynamicQuery: createDynamicQuery,\r\n\t\t//runReport: runReport,\r\n\t\trunNewReport: runNewReport,\r\n\t\treport: report\r\n\t};\r\n\treturn reportContext;\r\n\r\n\tfunction createDynamicQuery (entityType, clauses) {\r\n        var query = breeze.EntityQuery.from(entityType)\r\n            .toType(entityType);\r\n\r\n        $.each(clauses, function (index, item) {\r\n        \tquery = query.where(item.Property, item.Comparator, item.Value);\r\n        });\r\n\r\n        return manager.executeQueryLocally(query);\r\n\t}\r\n\r\n\tfunction report (name, description, columns) {\r\n\t\tvar self = this;\r\n\t\tself.entities = ko.observableArray([]);\r\n\t\tself.name = name;\r\n\t\tself.description = description;\r\n\t\tself.columns = columns;\r\n\t}\r\n\r\n\tfunction runNewReport(reportpassedin) {\r\n\t\tvar thisReport = reportpassedin;\r\n\t\t// Get the properties we need\r\n\t\tvar theseEntities = getListLocally(thisReport.entityType, thisReport.columns);\r\n\t\tgoThroughArray(theseEntities, thisReport);\r\n\t\treturn theseEntities;\r\n\t}\r\n\r\n\tfunction goThroughChildren(thisObject, context) {\r\n\t\tko.utils.arrayForEach(context.childEntities, function (thisChildEntityType) {\r\n        \t// If we should only get the first,\r\n        \tif (thisChildEntityType.onlyFirst) {\r\n\t        \t// Name the new property singularly\r\n\t        \tvar thisPropName = thisChildEntityType.entityType;\r\n        \t\t// Go get only the first result\r\n        \t\tthisObject[thisPropName] = getListLocally(thisChildEntityType.entityType, thisChildEntityType.columns, makeParentPropName(context.entityType), thisObject.id)[0];\r\n        \t\tgoThroughArray(thisObject[thisPropName], thisChildEntityType);\r\n        \t} else {\r\n\t        \t// Name the new property plurally\r\n\t        \tvar thisPropName = thisChildEntityType.entityType + 's';\r\n\t\t\t\t// Get the data\r\n\t        \tthisObject[thisPropName] = getListLocally(thisChildEntityType.entityType, thisChildEntityType.columns, makeParentPropName(context.entityType), thisObject.id);\r\n\t        \tgoThroughArray(thisObject[thisPropName], thisChildEntityType);\r\n        \t}\r\n        });\r\n\t}\r\n\r\n\tfunction goThroughNavProperties(thisObject, context) {\r\n\t\tif (context && context.navProperties) {\r\n\t\t\tko.utils.arrayForEach(context.navProperties, function (thisNavPropType) {\r\n\t        \t// Name the new property singularly\r\n\t        \tvar thisPropName = thisNavPropType.entityType;\r\n\t        \tvar navPropName = thisNavPropType.propName ? thisNavPropType.propName : makeParentPropName(thisNavPropType.entityType);\r\n\t    \t\t// Go get only the first result\r\n\t    \t\tthisObject[thisPropName] = getNavPropLocally(thisNavPropType.entityType, thisNavPropType.columns, 'id', thisObject[navPropName]);\r\n\t    \t\tgoThroughArray(thisObject[thisPropName], thisNavPropType);\r\n\t        });\r\n\t\t}\r\n\t}\r\n\r\n\tfunction goThroughArray (thisObject, context) {\r\n\r\n\t\tif (Array.isArray(thisObject)) {\r\n\t    \t// Go through each object\r\n\t        ko.utils.arrayForEach(thisObject, function (item) {\r\n\t        \t// It's down to a single object, pass it back\r\n\t            //single(item);\r\n\t            // For each of it's children,\r\n\t            goThroughChildren(item, context);\r\n\t            goThroughNavProperties(item, context);\r\n\t        });\r\n\t\t} else {\r\n\t\t\tgoThroughChildren(thisObject, context);\r\n            goThroughNavProperties(thisObject, context);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getListLocally (entityType, columns, referencePropName, parentId) {\r\n\r\n\t\tvar columnsString = '';\r\n\t\tko.utils.arrayForEach(columns, function (column) {\r\n\t\t\tcolumnsString = columnsString + camelCase(column) + ',';\r\n\t\t});\r\n\t\tcolumnsString = columnsString.length > 0 ? columnsString.substr(0, columnsString.length - 1) : '';\r\n        var query = breeze.EntityQuery.from(entityType)\r\n        \t.toType(entityType)\r\n        \t.select(columnsString);\r\n\r\n\t\tif (parentId) {\r\n\t\t\tquery = query.where(referencePropName, '==', parentId);\r\n\t\t}\r\n\r\n        return manager.executeQueryLocally(query);\r\n\t}\r\n\r\n\tfunction getNavPropLocally (entityType, columns, referencePropName, parentId) {\r\n\r\n\t\tvar columnsString = '';\r\n\t\tko.utils.arrayForEach(columns, function (column) {\r\n\t\t\tcolumnsString = columnsString + camelCase(column) + ',';\r\n\t\t});\r\n\t\tcolumnsString = columnsString.length > 0 ? columnsString.substr(0, columnsString.length - 1) : '';\r\n        var query = breeze.EntityQuery.from(entityType)\r\n        \t.toType(entityType)\r\n        \t.select(columnsString);\r\n\r\n\t\tif (parentId) {\r\n\t\t\tquery = query.where(referencePropName, '==', parentId);\r\n\t\t}\r\n\r\n        return manager.executeQueryLocally(query)[0];\r\n\t}\r\n\t\r\n\tfunction makeParentPropName(thisString) {\r\n\t\treturn thisString.toLowerCase() + 'Id';\r\n\t}\r\n\r\n\tfunction camelCase(string) {\r\n\t    return string.charAt(0).toLowerCase() + string.slice(1);\r\n\t}\r\n\r\n});\n","define('viewmodels/shell/shell',['plugins/router', 'services/navigation', 'services/session', 'services/bindings', 'services/local.collections', 'services/datacontext', 'models/base', 'config.routes', 'config.services', 'services/logger'],\r\n\tfunction (router, navigation, session, bindings, localCollections, datacontext, modelConfig, routeConfig, configServices, logger) {\r\n\r\n    var alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n\r\n\t\t// Internal properties and functions\r\n\r\n\t\tvar showSideBar = ko.observable(false);\r\n\t\tvar loadingMessages = ko.computed(datacontext.loadingMessages);\r\n\t\tvar compLoadingMessages = ko.computed(function () {\r\n\t\t\tvar messages = loadingMessages();\r\n\t\t\tvar theseMessages = [];\r\n\t\t\tko.utils.arrayForEach(messages, function (message) {\r\n\t\t\t\tif (theseMessages.length < 3) {\r\n\t\t\t\t\ttheseMessages.push(message);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn theseMessages;\r\n\t\t});\r\n\t\tvar userMenuOpen = ko.observable(false);\r\n\t\tvar loadingMessagesShowing = ko.computed(datacontext.loadingMessagesShowing);\r\n\t\tvar currentModal = ko.observable();\r\n\t\tvar token;\r\n\r\n\t\t// Show the quick add only when active route is patients\r\n\t\tvar showQuickAdd = ko.computed(function () {\r\n\t\t\tif (navigation.currentRoute() !== false) {\r\n\t\t\t\treturn navigation.currentRoute().config.title === 'Individual';\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\t// Reveal the bindable properties and functions\r\n\t\tvar shell = {\r\n\t\t\tshowSideBar: showSideBar,\r\n\t\t\tshowQuickAdd: showQuickAdd,\r\n\t\t\tcompLoadingMessages: compLoadingMessages,\r\n\t\t\tloadingMessagesShowing: loadingMessagesShowing,\r\n\t\t\tcurrentModal: currentModal,\r\n\t\t\ttoggleNavVisibility: toggleNavVisibility,\r\n\t\t\ttoggleQuickAddShowing: toggleQuickAddShowing,\r\n\t\t\tactivate: activate,\r\n\t\t\tgoBack: goBack,\r\n\t\t\tnavigation: navigation,\r\n\t\t\tsession: session,\r\n\t\t\ttitle: 'Shell',\r\n\r\n\t\t\talerts: ko.computed(datacontext.alerts),\r\n\t\t\tpriorities: ko.computed(datacontext.enums.priorities),\r\n\t\t\tgenders: ko.computed(datacontext.enums.genders),\r\n\t\t\tmaritalStatuses: ko.computed(datacontext.enums.maritalStatuses),\r\n\t\t\tdeceasedStatuses: ko.computed(function () { return datacontext.enums.deceasedStatuses().sort(alphabeticalNameSort) }),\r\n\t\t\tprotectedStatuses: ko.computed(function () { return [{Id: false, Name: 'No'}, {Id: true, Name: 'Yes'}] }),\r\n\t\t\tstateList: ko.computed(datacontext.enums.states),\r\n\t\t\tphoneTypes: ko.computed(datacontext.enums.phoneTypes),\r\n\t\t\temailTypes: ko.computed(datacontext.enums.emailTypes),\r\n\t\t\tdaysOfWeek: ko.computed(datacontext.enums.daysOfWeek),\r\n\t\t\ttimesOfDay: ko.computed(datacontext.enums.timesOfDay),\r\n\t\t\tpatientStatuses: ko.computed(datacontext.enums.patientStatuses),\r\n\t\t\tpatientStatusReasons: ko.computed(datacontext.enums.patientStatusReasons),\r\n\t\t\tlanguages: ko.computed(datacontext.enums.languages),\r\n\t\t\ttimeZones: ko.computed(datacontext.enums.timeZones),\r\n\t\t\taddressTypes: ko.computed(datacontext.enums.addressTypes),\r\n\t\t\tcommunicationModes: ko.computed(datacontext.enums.communicationModes),\r\n\r\n\t\t\tsetRoute: setRoute,\r\n\t\t\tuserMenuOpen: userMenuOpen,\r\n\t\t\tinitializeLogger: initializeLogger\r\n\t\t};\r\n\r\n\t\treturn shell;\r\n\r\n\t\tfunction setRoute(sender) {\r\n\t\t\tshowSideBar(false);\r\n\t\t\tvar result = navigation.setRoute(sender);\r\n\r\n\t\t\tif (result) {\r\n\t\t\t\tconsole.log('The route has changed');\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log('The route has NOT changed');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction deactivate() {\r\n\t\t\ttoken.dispose();\r\n\t\t}\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t\t// Load all of the routes\r\n\t\t\trouter.map(routeConfig.routes).buildNavigationModel();\r\n\r\n\t\t\t// Check if the route to go to is ut (authentication)\r\n\t\t\tvar hasATokenId = (window.location.href.indexOf(\"#ut\") > -1);\r\n\t\t\ttoken = navigation.currentRoute.subscribe(function () {\r\n\t\t\t\tshowSideBar(false);\r\n\t\t\t\t// if (navigation.currentRoute() && navigation.currentRoute().config.settings) {\r\n\t\t\t\t//     if (navigation.currentRoute().config.settings.pages.length !== 0) {\r\n\t\t\t\t//         navigation.currentSubRoute(navigation.currentRoute().config.settings.pages[0]);\r\n\t\t\t\t//     }\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t\t\tif (!hasATokenId) {\r\n\t\t\t\tvar foundUser = session.getUserFromSession();\r\n\t\t\t\tif (foundUser) {\r\n\t\t\t\t\treturn boot().then(function () {\r\n\t\t\t\t\t\tinitializeLogger();\r\n\t\t\t\t\t\t//navigation.currentSubRoute(navigation.currentRoute().config.settings.pages[0]);\r\n\t\t\t\t\t\trouter.activate();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If no token id has been found, load authenticate by default\r\n\t\t\trouter.activate();\r\n\t\t\t// If we got here, something went wrong so reload\r\n\t\t}\r\n\r\n\t\tfunction initializeLogger() {\r\n\t\t\tvar gaId = configServices.gaId;\r\n\t\t\tvar contractId = session.currentUser().contracts()[0].number();\r\n\t\t\tvar userName = session.currentUser().userName();\r\n\t\t\tlogger.initialize(gaId, contractId, userName)\r\n\t\t}\r\n\r\n\t\tfunction boot() {\r\n\t\t\treturn datacontext.primeData();\r\n\t\t}\r\n\r\n\t\tfunction toggleNavVisibility() {\r\n\t\t\tshowSideBar(!showSideBar());\r\n\t\t}\r\n\r\n\t\tfunction toggleQuickAddShowing() {\r\n\t\t\tshowQuickAdd(!showQuickAdd());\r\n\t\t}\r\n\r\n\t\tfunction closeModal(sender) {\r\n\t\t\tsender.Showing(false);\r\n\t\t}\r\n\r\n\t\tfunction goBack(complete) {\r\n\t\t\trouter.navigateBack();\r\n\t\t}\r\n\r\n\t\tfunction genderType(letter, description) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar letter = ko.observable(letter);\r\n\t\t\tvar description = ko.observable(description);\r\n\t\t}\r\n});\n","//TODO: Inject dependencies\r\ndefine('viewmodels/admin/concierge/index',['viewmodels/shell/shell', 'models/base', 'services/datacontext'],\r\n    function (shell, modelConfig, datacontext) {\r\n\r\n        var activeSecondColumn = ko.observable();\r\n\r\n        var newPatient = ko.observable();\r\n        var createModalShowing = ko.observable(false);\r\n        // var isOpen = ko.observable(true);\r\n        var isEditing = ko.observable(false);\r\n\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            activate: activate,\r\n            activeSecondColumn: activeSecondColumn,\r\n            deleteIndividual: deleteIndividual,\r\n            createIndividual: createIndividual\r\n        };\r\n\r\n        return vm;\r\n        \r\n        function deleteIndividual () {\r\n            activeSecondColumn('viewmodels/admin/widgets/delete.individuals.list');\r\n        }\r\n        function createIndividual () {\r\n            datacontext.initializePatient(newPatient).then(indReturned);\r\n            activeSecondColumn(null);\r\n\r\n            function indReturned(data) {\r\n                newPatient().isNew(true);\r\n\t\t\t\tnewPatient().statusId('1'); //active\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tnewPatient().statusDataSource('Engage');\r\n\t\t\t\tvar modalSettings = {\r\n\t\t\t\t\ttitle: 'Create Individual',\r\n\t\t\t\t\tentity: newPatient, \r\n\t\t\t\t\ttemplatePath: 'templates/patient.html', \r\n\t\t\t\t\tshowing: createModalShowing \r\n\t\t\t\t\t//saveOverride, cancelOverride, deleteOverride, classOverride\r\n\t\t\t\t}\r\n                var modal = new modelConfig.modal(modalSettings);\r\n                shell.currentModal(modal);\r\n                createModalShowing(true);\r\n                var editingToken = createModalShowing.subscribe(function () {\r\n                    isEditing(false);\r\n                    editingToken.dispose();\r\n                    // If it is a new patient that is a dupe and isn't force save,\r\n                    var dupetoken = newPatient().isDuplicate.subscribe(function (newValue) {\r\n                        if (newValue) {\r\n                            createModalShowing(true);\r\n                            var forcingToken = newPatient().isDuplicate.subscribe(function () {\r\n                                isEditing(false);\r\n                                forcingToken.dispose();\r\n                                createModalShowing(false);\r\n                                newPatient().entityAspect.acceptChanges();\r\n                            });\r\n                        }\r\n                        dupetoken.dispose();\r\n                    });\r\n                });\r\n            }\r\n            // }\r\n            // isEditing(!isEditing());\r\n            // isOpen(true);\r\n        };\r\n        \r\n        function activate() {\r\n        }\r\n\r\n    });\n","//TODO: Inject dependencies\r\ndefine('viewmodels/admin/index',['services/navigation', 'services/session', 'config.services', 'services/datacontext'],\r\n    function (navigation, session, servicesConfig, datacontext) {\r\n        \r\n        var vm = {\r\n            activate: activate,\r\n            navigation: navigation,\r\n            title: 'Admin'\r\n        };\r\n\r\n        return vm;\r\n        \r\n        function activate() {\r\n            console.log('Loaded admin index')\r\n        }\r\n\r\n    });\n","//TODO: Inject dependencies\r\ndefine('viewmodels/admin/reports/index',['config.services', 'services/session','services/datacontext', 'services/report.context'],\r\n    function (servicesConfig, session, datacontext, reportContext) {\r\n\r\n        function programLoading(name) {\r\n            var self = this;\r\n            self.name = name;\r\n        }\r\n\r\n        // End point to go grab some cohorts\r\n        var cohortEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohorts', 'Cohort');\r\n        });\r\n\r\n        var programsLoading = ko.observableArray();\r\n        var actionsLoading = ko.observableArray();\r\n        var careMembersLoading = ko.observableArray();\r\n        var goalsLoading = ko.observableArray();\r\n\r\n        // End point to grab the patients from the current cohort\r\n        var currentCohortsPatientsEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohortpatients', 'Patient', { Skip: 0, Take: 5000 });\r\n        });\r\n\r\n        var goalEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Goal');\r\n        });\r\n\r\n        var careMemberEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'CareMember');\r\n        });\r\n\r\n        // Endpoint to use for getting the current patient's programs\r\n        var patientProgramEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Program');\r\n        });\r\n\r\n        var actionEndPoint = ko.computed(function() {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Action');\r\n        });\r\n\r\n        var cohortsList = ko.observableArray();\r\n        var elementStateList = ko.observableArray();\r\n        var selectedProgramStateIds = ko.observableArray();\r\n        var selectedActionStateIds = ko.observableArray();\r\n        var selectedCohort = ko.observable();\r\n\r\n        var patientsList = ko.observableArray();\r\n        var haveCareManagerPatientsList = ko.computed(function () {\r\n            var returnList = [];\r\n            if (careMembersLoading().length === 0) {\r\n                var thesePatients = patientsList();\r\n                returnList = ko.utils.arrayFilter(thesePatients, function (thisPatient) {\r\n                    var thisMatchedCareManager = ko.utils.arrayFirst(thisPatient.careMembers(), function (cm) {\r\n                        return cm.type().name() === 'Care Manager';\r\n                    });\r\n                    return !!thisMatchedCareManager;\r\n                });\r\n            }\r\n            return returnList;\r\n        });\r\n        var haveProgramPatientsList = ko.computed(function () {\r\n            var thesePatients = patientsList();\r\n            var returnList = ko.utils.arrayFilter(thesePatients, function (thisPatient) {\r\n                return thisPatient.programs().length > 0;\r\n            });\r\n            return returnList;\r\n        });\r\n        var haveGoalPatientsList = ko.computed(function () {\r\n            var thesePatients = patientsList();\r\n            var returnList = ko.utils.arrayFilter(thesePatients, function (thisPatient) {\r\n                return thisPatient.goals().length > 0;\r\n            });\r\n            return returnList;\r\n        });\r\n\r\n        var goalsList = ko.observableArray();\r\n        var careMembersList = ko.observableArray();\r\n\r\n        var programsList = ko.observableArray();\r\n        var inProgressProgramsList = ko.computed(function () {\r\n            var thesePrograms = programsList();\r\n            var returnList = ko.utils.arrayFilter(thesePrograms, function (thisProgram) {\r\n                return thisProgram.elementStateModel().name() === 'In Progress';\r\n            });\r\n            return returnList;\r\n        });\r\n        var completedProgramsList = ko.computed(function () {\r\n            var thesePrograms = programsList();\r\n            var returnList = ko.utils.arrayFilter(thesePrograms, function (thisProgram) {\r\n                return thisProgram.elementStateModel().name() === 'Completed';\r\n            });\r\n            return returnList;\r\n        });\r\n        var closedProgramsList = ko.computed(function () {\r\n            var thesePrograms = programsList();\r\n            var returnList = ko.utils.arrayFilter(thesePrograms, function (thisProgram) {\r\n                return thisProgram.elementStateModel().name() === 'Closed';\r\n            });\r\n            return returnList;\r\n        });\r\n        var notStartedProgramsList = ko.computed(function () {\r\n            var thesePrograms = programsList();\r\n            var returnList = ko.utils.arrayFilter(thesePrograms, function (thisProgram) {\r\n                return thisProgram.elementStateModel().name() === 'Not Started';\r\n            });\r\n            return returnList;\r\n        });\r\n\r\n        var actionsList = ko.observableArray();\r\n        var inProgressActionsList = ko.computed(function () {\r\n            var theseActions = actionsList();\r\n            var returnList = ko.utils.arrayFilter(theseActions, function (thisAction) {\r\n                return thisAction.elementStateModel().name() === 'In Progress';\r\n            });\r\n            return returnList;\r\n        });\r\n        var completedActionsList = ko.computed(function () {\r\n            var theseActions = actionsList();\r\n            var returnList = ko.utils.arrayFilter(theseActions, function (thisAction) {\r\n                return thisAction.elementStateModel().name() === 'Completed';\r\n            });\r\n            return returnList;\r\n        });\r\n        var closedActionsList = ko.computed(function () {\r\n            var theseActions = actionsList();\r\n            var returnList = ko.utils.arrayFilter(theseActions, function (thisAction) {\r\n                return thisAction.elementStateModel().name() === 'Closed';\r\n            });\r\n            return returnList;\r\n        });\r\n        var notStartedActionsList = ko.computed(function () {\r\n            var theseActions = actionsList();\r\n            var returnList = ko.utils.arrayFilter(theseActions, function (thisAction) {\r\n                return thisAction.elementStateModel().name() === 'Not Started';\r\n            });\r\n            return returnList;\r\n        });\r\n\r\n        // Have we initialized this vm already?\r\n        var initialized = false;\r\n        var selectedCohortToken;\r\n        var programsByCohortLoaded = ko.observable(false);\r\n        var actionsByCohortLoaded = ko.observable(false);\r\n        var careMembersByCohortLoaded = ko.observable(false);\r\n        var goalsByCohortLoaded = ko.observable(false);\r\n\r\n        var canShowProgramReport = ko.computed(function() {\r\n            var pbcl = programsByCohortLoaded();\r\n            var pl = programsLoading();\r\n            return (programsByCohortLoaded() && pl.length === 0);\r\n        });\r\n\r\n        var canShowActionReport = ko.computed(function() {\r\n            var pbcl = actionsByCohortLoaded();\r\n            var pl = actionsLoading();\r\n            return (actionsByCohortLoaded() && pl.length === 0);\r\n        });\r\n\r\n        var canShowCareManagerReport = ko.computed(function() {\r\n            var pl = careMembersLoading();\r\n            return (careMembersByCohortLoaded() && pl.length === 0);\r\n        });\r\n\r\n        var activeSecondColumn = ko.observable();\r\n        activeSecondColumn.data = ko.observableArray();\r\n        var programLength = ko.observable();\r\n\r\n        var canLoadProgramData = ko.computed(function () {\r\n            var pbcl = !programsByCohortLoaded();\r\n            var sc = selectedCohort();\r\n            return pbcl && !!sc;\r\n        });\r\n        var canLoadActionData = ko.computed(function () {\r\n            var pbcl = !actionsByCohortLoaded();\r\n            var sc = selectedCohort();\r\n            var cspr = canShowProgramReport();\r\n            return pbcl && cspr && !!sc;\r\n        });\r\n        var canLoadGoalData = ko.computed(function () {\r\n            var gbcl = !goalsByCohortLoaded();\r\n            var sc = selectedCohort();\r\n            return gbcl && !!sc;\r\n        });\r\n        var canLoadCareMemberData = ko.computed(function () {\r\n            var cmbcl = !careMembersByCohortLoaded();\r\n            var sc = selectedCohort();\r\n            return cmbcl && !!sc;\r\n        });\r\n        var programInfoVisible = ko.observable(true);\r\n        var goalInfoVisible = ko.observable(true);\r\n        var overviewInfoVisible = ko.observable(true);\r\n        var careMemberInfoVisible = ko.observable(true);\r\n        var dynamicReportVisible = ko.observable(true);\r\n        var dynamicReportName = ko.observable();\r\n        var dynamicReportDescription = ko.observable();\r\n        var dynamicReportQueryJSON = ko.observable();\r\n        var dynamicReportColumns = ko.observable();\r\n\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            patientsList: patientsList,\r\n            haveCareManagerPatientsList: haveCareManagerPatientsList,\r\n            cohortsList: cohortsList,\r\n            goalsList: goalsList,\r\n            elementStateList: elementStateList,\r\n            selectedActionStateIds: selectedActionStateIds,\r\n            selectedProgramStateIds: selectedProgramStateIds,\r\n            careMembersList: careMembersList,\r\n            programsList: programsList,\r\n\r\n            actionsList: actionsList,\r\n            inProgressActionsList: inProgressActionsList,\r\n            completedActionsList: completedActionsList,\r\n            closedActionsList: closedActionsList,\r\n            notStartedActionsList: notStartedActionsList,\r\n\r\n            programInfoVisible: programInfoVisible,\r\n            goalInfoVisible: goalInfoVisible,\r\n            overviewInfoVisible: overviewInfoVisible,\r\n            careMemberInfoVisible: careMemberInfoVisible,\r\n            dynamicReportVisible: dynamicReportVisible,\r\n            notStartedProgramsList: notStartedProgramsList,\r\n            inProgressProgramsList: inProgressProgramsList,\r\n            completedProgramsList: completedProgramsList,\r\n            closedProgramsList: closedProgramsList,\r\n            haveProgramPatientsList: haveProgramPatientsList,\r\n            haveGoalPatientsList: haveGoalPatientsList,\r\n            selectedCohort: selectedCohort,\r\n            programsByCohortLoaded: programsByCohortLoaded,\r\n            careMembersByCohortLoaded: careMembersByCohortLoaded,\r\n            goalsByCohortLoaded: goalsByCohortLoaded,\r\n            programsLoading: programsLoading,\r\n            actionsLoading: actionsLoading,\r\n            goalsLoading: goalsLoading,\r\n            careMembersLoading: careMembersLoading,\r\n            activate: activate,\r\n            activeSecondColumn: activeSecondColumn,\r\n            canLoadProgramData: canLoadProgramData,\r\n            canLoadActionData: canLoadActionData,\r\n            canLoadGoalData: canLoadGoalData,\r\n            canLoadCareMemberData: canLoadCareMemberData,\r\n            canShowProgramReport: canShowProgramReport,\r\n            canShowActionReport: canShowActionReport,\r\n            programLength: programLength,\r\n            runProgramReport: runProgramReport,\r\n            runActionReport: runActionReport,\r\n            runCareMemberReport: runCareMemberReport,\r\n            runGoalReport: runGoalReport,\r\n            showProgramResults: showProgramResults,\r\n\r\n            canShowCareManagerReport: canShowCareManagerReport,\r\n            getPatientsByCareManagerReport: getPatientsByCareManagerReport,\r\n\r\n            notStartedProgReport: notStartedProgReport,\r\n            inProgressProgReport: inProgressProgReport,\r\n            completedProgReport: completedProgReport,\r\n            closedProgReport: closedProgReport,\r\n\r\n            notStartedActionReport: notStartedActionReport,\r\n            inProgressActionReport: inProgressActionReport,\r\n            completedActionReport: completedActionReport,\r\n            closedActionReport: closedActionReport,\r\n\r\n            haveGoalPatReport: haveGoalPatReport,\r\n            withProgPatReport: withProgPatReport,\r\n            showPatientList: showPatientList,\r\n\r\n            dynamicReportName: dynamicReportName,\r\n            dynamicReportDescription: dynamicReportDescription,\r\n            dynamicReportColumns: dynamicReportColumns,\r\n            dynamicReportQueryJSON: dynamicReportQueryJSON,\r\n\r\n            actionCountReport: actionCountReport,\r\n            dynamicReport: dynamicReport,\r\n            getJSONResults: getJSONResults\r\n        };\r\n\r\n        return vm;\r\n        \r\n        function runProgramReport () {\r\n            // Load all programs into cache\r\n            getAllPrograms();\r\n        }\r\n\r\n        function runActionReport () {\r\n            // Load all programs into cache\r\n            getAllActions();\r\n        }\r\n\r\n        function runCareMemberReport () {\r\n            // Load all programs into cache\r\n            getAllCareMembers();\r\n        }\r\n\r\n        function runGoalReport () {\r\n            // Load all programs into cache\r\n            getAllGoals();\r\n        }\r\n\r\n        function haveGoalPatReport () {\r\n            if (goalsList().length > 0) {\r\n                showPatientList(haveGoalPatientsList());\r\n            }\r\n        }\r\n\r\n        function withProgPatReport () {\r\n            if (programsList().length > 0) {             \r\n                showPatientList(haveProgramPatientsList());   \r\n            }\r\n        }\r\n\r\n        function showPatientList (thesePatients) {\r\n            activeSecondColumn.data(thesePatients);\r\n            activeSecondColumn('viewmodels/admin/reports/matching.patients');\r\n        }\r\n\r\n        function notStartedProgReport () {\r\n            if (programsList().length > 0) {\r\n                showProgramList(notStartedProgramsList());\r\n            }\r\n        }\r\n\r\n        function inProgressProgReport () {\r\n            if (programsList().length > 0) {\r\n                showProgramList(inProgressProgramsList());\r\n            }\r\n        }\r\n\r\n        function completedProgReport () {\r\n            if (programsList().length > 0) {\r\n                showProgramList(completedProgramsList());   \r\n            }\r\n        }\r\n\r\n        function closedProgReport () {\r\n            if (programsList().length > 0) {\r\n                showProgramList(closedProgramsList());\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function notStartedActionReport () {\r\n            if (actionsList().length > 0) {\r\n                showActionList(notStartedActionsList());\r\n            }\r\n        }\r\n\r\n        function inProgressActionReport () {\r\n            if (actionsList().length > 0) {\r\n                showActionList(inProgressActionsList());\r\n            }\r\n        }\r\n\r\n        function completedActionReport () {\r\n            if (actionsList().length > 0) {\r\n                showActionList(completedActionsList());   \r\n            }\r\n        }\r\n\r\n        function closedActionReport () {\r\n            if (actionsList().length > 0) {\r\n                showActionList(closedActionsList());\r\n            }\r\n        }\r\n\r\n        function showActionList (theseActions) {\r\n            activeSecondColumn.data(theseActions);\r\n            activeSecondColumn('viewmodels/admin/reports/matching.actions');\r\n        }\r\n\r\n        function showProgramList (thesePrograms) {\r\n            activeSecondColumn.data(thesePrograms);\r\n            activeSecondColumn('viewmodels/admin/reports/matching.programs');\r\n        }\r\n\r\n        function showProgramResults () {\r\n            var thisLength = programLength();\r\n            var thesePrograms = ko.observableArray();\r\n            // Get all the programs\r\n            datacontext.getEntityList(thesePrograms, patientProgramEndPoint().EntityType, 'gettingLocally', null, null, false);\r\n            var matchingPrograms = ko.utils.arrayFilter(thesePrograms(), function (prog) {\r\n                if (prog.duration() > thisLength) {\r\n                    return true;\r\n                }\r\n            });\r\n            activeSecondColumn.data(matchingPrograms);\r\n            activeSecondColumn('viewmodels/admin/reports/matching.programs');\r\n        }\r\n\r\n        function getAllPrograms () {\r\n            // If we have not already loaded this cohorts programs,\r\n            if (!programsByCohortLoaded()) {\r\n                // For eaech individual,\r\n                var progCount = 0;\r\n                var selectedIds = [];\r\n                ko.utils.arrayForEach(selectedProgramStateIds(), function (progstateid) {\r\n                    selectedIds.push(parseInt(progstateid.id()));\r\n                });\r\n\r\n                ko.utils.arrayForEach(patientsList(), function (patient) {\r\n                    var thisPatient = new programLoading(patient.id());\r\n                    programsLoading.push(thisPatient);\r\n                    var thesePatientsPrograms = ko.observableArray();\r\n                    // Go get programs from the server\r\n\r\n\r\n                    datacontext.getEntityList(thesePatientsPrograms, patientProgramEndPoint().EntityType, patientProgramEndPoint().ResourcePath + patient.id() + '/Programs', null, null, true).then(patientProgramsReturned); \r\n\r\n                    function patientProgramsReturned() {\r\n                        ko.utils.arrayForEach(thesePatientsPrograms(), function (patprog) {\r\n                            // If the program matches a selected state,\r\n                            if (selectedIds.indexOf(patprog.elementState()) !== -1) {\r\n                                var thisPatProgLoading = new programLoading(patprog.id());\r\n                                programsLoading.push(thisPatProgLoading);\r\n                                // Go get the programs details\r\n                                var thisEndPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patprog.patientId() + '/Program/' + patprog.id(), 'Program');\r\n                                datacontext.getMelsEntityById(null, null, thisEndPoint.EntityType, thisEndPoint.ResourcePath, true, null).then(programReturned);\r\n                                programsList.push(patprog);\r\n                                function programReturned () {\r\n                                    programsLoading.remove(thisPatProgLoading);\r\n                                }   \r\n                            }\r\n                        });\r\n                        programsLoading.remove(thisPatient);\r\n                    }\r\n                });\r\n                programsByCohortLoaded(true);\r\n            } else {\r\n                alert('Program data already loaded');\r\n            }\r\n        }\r\n\r\n        function getAllActions () {\r\n            // If we have not already loaded this cohorts programs,\r\n            if (!actionsByCohortLoaded()) {\r\n                // For eaech individual,\r\n                var progCount = 0;\r\n                var selectedIds = [];\r\n                ko.utils.arrayForEach(selectedActionStateIds(), function (actionstateid) {\r\n                    selectedIds.push(parseInt(actionstateid.id()));\r\n                });\r\n\r\n                ko.utils.arrayForEach(programsList(), function (program) {\r\n                    var thisProgram = new programLoading(program.id());\r\n                    actionsLoading.push(thisProgram);\r\n                    var theseActions = ko.observableArray();\r\n                    // Go get programs from the server\r\n\r\n                    // This HSOULD GET ACTOINS NOT PROGRAMS\r\n                    //datacontext.getEntityList(theseActions, patientProgramEndPoint().EntityType, patientProgramEndPoint().ResourcePath + patient.id() + '/Programs', null, null, true).then(patientProgramsReturned); \r\n\r\n                    // For each programs modules\r\n                    ko.utils.arrayForEach(program.modules(), function (mod) {\r\n                        // For each action\r\n                        ko.utils.arrayForEach(mod.actions(), function (action) {\r\n                            // If the program matches a selected state,\r\n                            if (selectedIds.indexOf(action.elementState()) !== -1) {\r\n                                var thisActionLoading = new programLoading(action.id());\r\n                                actionsLoading.push(thisActionLoading);\r\n\r\n                                // Go get the action details from the server\r\n                                datacontext.getEntityList(theseActions, actionEndPoint().EntityType, actionEndPoint().ResourcePath + '/' + program.patientId() + '/Program/' + program.id() + '/Module/' + mod.id() + '/Action/' + action.id(), null, null, true).then(actionsReturned);\r\n\r\n\r\n                                // THIS IS THE ACTION DETAILS\r\n                                //var thisEndPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + action.patientId() + '/Program/' + patprog.id(), 'Program');\r\n                                //datacontext.getMelsEntityById(null, null, thisEndPoint.EntityType, thisEndPoint.ResourcePath, true, null).then(actionReturned);\r\n                                actionsList.push(action);\r\n\r\n                                function actionsReturned () {\r\n                                    actionsLoading.remove(thisActionLoading);\r\n                                }   \r\n                            }\r\n                        });\r\n                        actionsLoading.remove(thisProgram);                        \r\n                    });\r\n                });\r\n                actionsByCohortLoaded(true);\r\n            } else {\r\n                alert('Action data already loaded');\r\n            }\r\n        }\r\n\r\n        function getAllGoals () {\r\n            // If we have not already loaded this cohorts programs,\r\n            if (!goalsByCohortLoaded()) {\r\n                // For eaech individual,\r\n                ko.utils.arrayForEach(patientsList(), function (patient) {\r\n                    var thisPatient = new programLoading(patient.id());\r\n                    goalsLoading.push(thisPatient);\r\n                    var theseGoals = ko.observableArray();\r\n                    // Go get care members from the server\r\n                    datacontext.getEntityList(theseGoals, goalEndPoint().EntityType, goalEndPoint().ResourcePath + patient.id() + '/Goals', null, null, true).then(goalsReturned);\r\n\r\n                    function goalsReturned() {\r\n                        ko.utils.arrayForEach(theseGoals(), function (thisgoal) {\r\n                            goalsList.push(thisgoal);\r\n                        });                        \r\n                        // ko.utils.arrayForEach(thesePatientsPrograms(), function (patprog) {\r\n                        //     var thisPatProgLoading = new programLoading(patprog.id());\r\n                        //     careMembersLoading.push(thisPatProgLoading);\r\n                        //     // Go get the programs details\r\n                        //     var thisEndPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + patprog.patientId() + '/Program/' + patprog.id(), 'Program');\r\n                        //     datacontext.getMelsEntityById(null, null, thisEndPoint.EntityType, thisEndPoint.ResourcePath, true, null).then(programReturned);\r\n                        //     programsList.push(patprog);\r\n                        //     function programReturned () {\r\n                        //         careMembersLoading.remove(thisPatProgLoading);\r\n                        //     }\r\n                        // });\r\n                        goalsLoading.remove(thisPatient);\r\n                    }\r\n                });\r\n                goalsByCohortLoaded(true);\r\n            } else {\r\n                alert('Goal data already loaded');\r\n            }\r\n        }\r\n\r\n        function getAllCareMembers () {\r\n            // If we have not already loaded this cohorts programs,\r\n            if (!careMembersByCohortLoaded()) {\r\n                // For eaech individual,\r\n                ko.utils.arrayForEach(patientsList(), function (patient) {\r\n                    var thisPatient = new programLoading(patient.id());\r\n                    careMembersLoading.push(thisPatient);\r\n                    var theseCareMembers = ko.observableArray();\r\n                    // Go get care members from the server\r\n                    datacontext.getEntityList(theseCareMembers, careMemberEndPoint().EntityType, careMemberEndPoint().ResourcePath + patient.id() + '/CareMembers', null, null, true).then(careMembersReturned);\r\n\r\n                    function careMembersReturned() {\r\n                        ko.utils.arrayForEach(theseCareMembers(), function (thisCM) {\r\n                            careMembersList.push(thisCM);\r\n                        });\r\n                        careMembersLoading.remove(thisPatient);\r\n                    }\r\n                });\r\n                careMembersByCohortLoaded(true);\r\n            } else {\r\n                alert('Care Member data already loaded');\r\n            }\r\n        }\r\n\r\n        function getProgramsByPatient() {\r\n            datacontext.getEntityList(null, programEndPoint().EntityType, programEndPoint().ResourcePath, null, null, false);\r\n        }\r\n\r\n        function activate() {\r\n            if (!initialized) {\r\n                initializeViewModel();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function initializeViewModel() {\r\n            datacontext.getEntityList(elementStateList, 'ElementState', 'fakeEndpoint', null, null, false, null, 'id');\r\n            // Go get a list of cohorts locally\r\n            datacontext.getEntityList(cohortsList, cohortEndPoint().EntityType, cohortEndPoint().ResourcePath, null, null, false, null, 'sName').then(cohortsReturned);\r\n            // Subscribe to changes on the selected cohort to get an updated patient list when it changes\r\n            selectedCohortToken = selectedCohort.subscribe(function () {\r\n                patientsList([]);\r\n                getPatientsByCohort();\r\n                programsByCohortLoaded(false);\r\n            });\r\n            // Set initialized true so we don't accidentally re-initialize the view model\r\n            initialized = true;\r\n            return true;\r\n\r\n            function cohortsReturned() {\r\n                // Load a default cohort when cohorts are returned from the server\r\n                //selectedCohort(cohortsList()[0]);\r\n                var thisCohortMatch = ko.utils.arrayFirst(cohortsList(), function (cohort) {\r\n                    return cohort.sName() === \"All individuals\";\r\n                });\r\n                selectedCohort(thisCohortMatch);\r\n            }\r\n        };\r\n\r\n        function getPatientsByCohort(searchValue) {\r\n            var parameters = {};\r\n            // Create an object to hold the parameters\r\n            var parameters = currentCohortsPatientsEndPoint().Parameters;\r\n            parameters.SearchFilter = null;\r\n            // TODO : Add Skip and Take to the endpoint and pass it down as params\r\n            // TODO : Make sure the service is checking locally first before going out to the server to get these patients\r\n            datacontext.getEntityList(patientsList, currentCohortsPatientsEndPoint().EntityType, currentCohortsPatientsEndPoint().ResourcePath, null, selectedCohort().iD(), true, parameters).then(dataReturned);\r\n\r\n            function dataReturned (data) {\r\n            }\r\n        }\r\n\r\n        function getPatientSelection () {\r\n            var thisReport = $.parseJSON(\"{ 'entityType': 'Patient', 'columns': ['Id', 'FirstName', 'LastName'], 'childEntities': [ { 'entityType': 'Program', 'columns': [ 'Id', 'Name'], 'childEntities': [{ 'entityType': 'Module', 'columns': [ 'Id', 'Name' ], 'childEntities': [{ 'entityType': 'Action', 'columns': [ 'Id', 'Name' ], 'childEntities': []}]}]}, { 'entityType': 'Goal', 'columns': [ 'Id', 'Name' ], 'childEntities': []}] }\");\r\n            var thesePatients = reportContext.runReport(thisReport);\r\n        }\r\n\r\n        function getPatientsByCareManagerReport () {\r\n            var thisReport = new reportContext.report();\r\n            thisReport.name = \"Individuals by Care Manager\";\r\n            thisReport.description = \"List of Individuals with Care Manager and Programs\";\r\n            thisReport.columns = [new column('id', 'Id'), new column('firstName', 'First Name'),new column('lastName', 'Last Name'), new column('CareMember.preferredName', 'Care Manager'), new column('Programs.length', '# Programs')]\r\n            thisReport.queryJson = $.parseJSON('{ \"entityType\": \"Patient\", \"columns\": [\"Id\", \"FirstName\", \"LastName\"], \"childEntities\": [ { \"entityType\": \"Program\", \"columns\": [ \"Id\", \"Name\"], \"childEntities\": [{ \"entityType\": \"Module\", \"columns\": [ \"Id\", \"Name\" ], \"childEntities\": [{ \"entityType\": \"Action\", \"columns\": [ \"Id\", \"Name\" ], \"childEntities\": []}]}]}, { \"entityType\": \"CareMember\", \"columns\": [ \"Id\", \"PreferredName\" ], \"childEntities\": [], \"onlyFirst\": true}] }');\r\n            \r\n            //var thisReport = $.parseJSON(\"{ 'entityType': 'Patient', 'columns': ['Id', 'FirstName', 'LastName'], 'childEntities': [ { 'entityType': 'Program', 'columns': [ 'Id', 'Name'], 'childEntities': [{ 'entityType': 'Module', 'columns': [ 'Id', 'Name' ], 'childEntities': [{ 'entityType': 'Action', 'columns': [ 'Id', 'Name' ], 'childEntities': []}]}]}, { 'entityType': 'CareMember', 'columns': [ 'Id', 'Name' ], 'childEntities': [], 'onlyFirst': true}] }\");\r\n            var thesePatients = reportContext.runNewReport(thisReport.queryJson);\r\n            thisReport.entities(thesePatients);\r\n            showDynamicReport(thisReport);\r\n        }\r\n\r\n        function actionCountReport () {\r\n            var thisReport = new reportContext.report();\r\n            thisReport.name = \"Action Count by Individual\";\r\n            thisReport.description = \"Action Counts by Individual with Care Manager and Programs\";\r\n            thisReport.columns = [new column('id', 'Id'), new column('preferredName', 'Name'), new column('CareMemberType.name', 'Care Manager'), new column('Patient.firstName', 'Patients First Name')]\r\n            thisReport.queryJson = $.parseJSON('{ \"entityType\": \"CareMember\", \"columns\": [\"Id\", \"PreferredName\", \"TypeId\"], \"navProperties\": [ { \"entityType\": \"CareMemberType\", \"propName\": \"typeId\", \"columns\": [ \"Name\" ], \"childEntities\": [] }, { \"entityType\": \"Patient\", \"propName\": \"patientId\", \"columns\": [ \"FirstName\", \"LastName\" ], \"childEntities\": [] } ], \"childEntities\": [ ] }');\r\n            //var thisReport = $.parseJSON(\"{ 'entityType': 'Patient', 'columns': ['Id', 'FirstName', 'LastName'], 'childEntities': [ { 'entityType': 'Program', 'columns': [ 'Id', 'Name'], 'childEntities': [{ 'entityType': 'Module', 'columns': [ 'Id', 'Name' ], 'childEntities': [{ 'entityType': 'Action', 'columns': [ 'Id', 'Name' ], 'childEntities': []}]}]}, { 'entityType': 'CareMember', 'columns': [ 'Id', 'Name' ], 'childEntities': [], 'onlyFirst': true}] }\");\r\n            var thesePatients = reportContext.runNewReport(thisReport.queryJson);\r\n            thisReport.entities(thesePatients);\r\n            showDynamicReport(thisReport);\r\n        }\r\n\r\n        function dynamicReport () {\r\n            var thisReport = new reportContext.report();\r\n            thisReport.name = dynamicReportName();\r\n            thisReport.description = dynamicReportDescription();\r\n            thisReport.columns = $.parseJSON(dynamicReportColumns());\r\n            thisReport.queryJson = $.parseJSON(dynamicReportQueryJSON());\r\n            var theseEntities = getJSONResults(thisReport);\r\n            thisReport.entities(theseEntities);\r\n            showDynamicReport(thisReport);\r\n        }\r\n\r\n        function getJSONResults(report) {\r\n            var thisReport = report;\r\n            if (!thisReport.queryJson) {\r\n                thisReport = new reportContext.report();\r\n                thisReport.name = dynamicReportName();\r\n                thisReport.description = dynamicReportDescription();\r\n                thisReport.columns = $.parseJSON(dynamicReportColumns());\r\n                //thisReport.columns = [new column('id', 'Id'), new column('preferredName', 'Name'), new column('CareMemberType.name', 'Care Manager'), new column('Patient.firstName', 'Patients First Name')]\r\n                thisReport.queryJson = $.parseJSON(dynamicReportQueryJSON());\r\n            }\r\n            //'{ \"entityType\": \"CareMember\", \"columns\": [\"Id\", \"PreferredName\", \"TypeId\"], \"navProperties\": [ { \"entityType\": \"CareMemberType\", \"propName\": \"typeId\", \"columns\": [ \"Name\" ], \"childEntities\": [] }, { \"entityType\": \"Patient\", \"propName\": \"patientId\", \"columns\": [ \"FirstName\", \"LastName\" ], \"childEntities\": [] } ], \"childEntities\": [ ] }');\r\n            //var thisReport = $.parseJSON(\"{ 'entityType': 'Patient', 'columns': ['Id', 'FirstName', 'LastName'], 'childEntities': [ { 'entityType': 'Program', 'columns': [ 'Id', 'Name'], 'childEntities': [{ 'entityType': 'Module', 'columns': [ 'Id', 'Name' ], 'childEntities': [{ 'entityType': 'Action', 'columns': [ 'Id', 'Name' ], 'childEntities': []}]}]}, { 'entityType': 'CareMember', 'columns': [ 'Id', 'Name' ], 'childEntities': [], 'onlyFirst': true}] }\");\r\n            var theseEntities = reportContext.runNewReport(thisReport.queryJson);\r\n            return theseEntities;\r\n        }\r\n\r\n        function showDynamicReport(report) {\r\n            activeSecondColumn.data(report);\r\n            activeSecondColumn('viewmodels/admin/reports/dynamic.report');\r\n        }\r\n\r\n        function column(name, displayname) {\r\n            var self = this;\r\n            self.name = name;\r\n            self.displayName = displayname;\r\n        }\r\n    });\n","define('viewmodels/admin/reports/dynamic.report',['viewmodels/admin/reports/index'], function (reportsIndex) {\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.data = self.settings.data;\r\n        self.report = self.data.data();\r\n\r\n        // Programs list\r\n        //self.patients = self.data;\r\n\r\n        self.computedEntities = ko.computed(function () {\r\n            var theseEntities = self.report.entities();\r\n            ko.utils.arrayForEach(theseEntities, function (pat) {\r\n                // If the patient doesn't already have a 'selected' property\r\n                if (pat.selected === undefined) {\r\n                    // Give it one\r\n                    pat.selected = ko.observable(false);\r\n                }\r\n            });\r\n            return theseEntities;\r\n        }).extend({ throttle: 50 });\r\n\r\n        self.allSelected = ko.computed({\r\n            read: function () {\r\n                var allAreSelected = true;\r\n                ko.utils.arrayForEach(self.computedEntities(), function (thisPat) {\r\n                    var isselected = thisPat.selected();\r\n                    if (!isselected) {\r\n                        allAreSelected = false;\r\n                    }\r\n                });\r\n                return allAreSelected;\r\n            },\r\n            write: function (newValue) {\r\n                if (newValue) {\r\n                    ko.utils.arrayForEach(self.computedEntities(), function (pat) {\r\n                        pat.selected(true);\r\n                    });\r\n                } else {\r\n                    ko.utils.arrayForEach(self.computedEntities(), function (pat) {\r\n                        pat.selected(false);\r\n                    });\r\n                }\r\n            }\r\n        }).extend({ throttle: 50 });\r\n        self.allSelected(true);\r\n    };\r\n\r\n    ctor.prototype.closeReport = function () {\r\n        var self = this;\r\n        self.settings.data(null);\r\n    };\r\n\r\n    ctor.prototype.sendCleanCSV = function () {\r\n        var self = this;\r\n        var a = document.createElement('a');\r\n        var colDelim = '\",\"';\r\n        var rowDelim = '\"\\r\\n\"';\r\n        var thisString = '';\r\n        thisString = thisString + self.report.name + rowDelim;\r\n        thisString = thisString + self.report.description + rowDelim;\r\n        thisString = thisString + moment().format('LLLL') + rowDelim;\r\n        ko.utils.arrayForEach(self.report.columns, function (column) {\r\n            thisString = thisString + column.displayName + colDelim;\r\n        });\r\n        thisString = thisString + rowDelim;\r\n        ko.utils.arrayForEach(self.computedEntities(), function (entity) {\r\n            if (entity.selected()) {\r\n                ko.utils.arrayForEach(self.report.columns, function (column) {\r\n                    if (column.name.indexOf('.') === -1 && column.name.indexOf('|') === -1) {\r\n                        // It must not be delimited\r\n                        thisString = thisString + entity[column.name] + colDelim;\r\n                    } else if (column.name.indexOf('|') === -1) {\r\n                        // It must be period delimited\r\n                        thisString = thisString + (entity[column.name.substr(0, column.name.indexOf('.'))] ? entity[column.name.substr(0, column.name.indexOf('.'))][column.name.substr(column.name.indexOf('.')+1, column.name.length)] : '-') + colDelim;\r\n                    } else {\r\n                        var propArray = column.name.split('|');\r\n                        var currentProp = entity;\r\n                        for (var i = propArray.length - 1; i >= 0; i--) {\r\n                            //propArray[i]\r\n                            // Get the second property from first property\r\n                            currentProp = currentProp[propArray[0]];\r\n                            if (currentProp === undefined) {\r\n                                currentProp = '-';\r\n                                i = 0;\r\n                            }\r\n                            propArray.shift();\r\n                        };\r\n                        // It must be pipe delimited\r\n                        thisString = thisString + currentProp + colDelim;\r\n                    }\r\n                });\r\n                thisString = thisString + rowDelim;\r\n            }\r\n        });\r\n\r\n        blob = new Blob([thisString], { type: 'text/csv' }); //new way\r\n        var csvUrl = URL.createObjectURL(blob);\r\n\r\n        $(a).attr({\r\n            'download': 'exported_report.csv',\r\n            'href': csvUrl\r\n        });\r\n        a.click();\r\n    };\r\n\r\n    return ctor;\r\n});\n","define('viewmodels/admin/reports/entity.template',['services/datacontext', 'services/report.context'], function (datacontext, reportContext) {\r\n\r\n\tfunction entity(type, propname, columns, navprops, childentities) {\r\n\t\tvar self = this;\r\n\t\tself.entityType = type;\r\n\t\tself.propName = propname;\r\n\t\tself.columns = ko.observableArray(columns);\r\n\t\tself.navProperties = ko.observableArray(navprops);\r\n\t\tself.childEntities = ko.observableArray(childentities);\r\n\t\tself.availableColumns = ko.observableArray([]);\r\n\t\tself.availableNavProps = ko.observableArray([]);\r\n\t\tself.availableChildEntities = ko.observableArray([]);\r\n\t}\r\n\r\n    var metadataStore = datacontext.manager.metadataStore;\r\n\r\n    var ctor = function () {\r\n\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.entityType = settings.entityType;\r\n        if (endsWith(self.entityType, 's')) {\r\n            self.entityType = self.entityType.substr(0, self.entityType.length - 1);\r\n        }\r\n        if (endsWith(self.entityType, 'Model')) {\r\n            self.entityType = self.entityType.substr(0, self.entityType.length - 5);\r\n        }\r\n        var thisType = metadataStore.getEntityType(self.entityType);\r\n        var theseAvailableColumns = thisType.dataProperties;\r\n        // Get a list of the singular nav props\r\n        var theseAvailableNavProps = ko.utils.arrayFilter(thisType.navigationProperties, function (navprop) {\r\n            return navprop.isScalar;\r\n        });\r\n        // Get a list of the collection nav properties\r\n        var theseAvailableChildEntities = ko.utils.arrayFilter(thisType.navigationProperties, function (navprop) {\r\n            return !navprop.isScalar;\r\n        });\r\n        self.entity = new entity(thisType.shortName);\r\n        self.entity.availableColumns(theseAvailableColumns);\r\n        self.entity.availableNavProps(theseAvailableNavProps);\r\n        self.entity.availableChildEntities(theseAvailableChildEntities);\r\n    }\r\n\r\n    return ctor;\r\n\r\n    function endsWith(str, suffix) {\r\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n    }\r\n\r\n});\n","define('viewmodels/admin/reports/matching.actions',[], function () {\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.data = self.settings.data.data;\r\n        // Actions list\r\n        self.actions = self.data;\r\n        self.computedActions = ko.computed(function () {\r\n            var theseActions = self.actions();\r\n            ko.utils.arrayForEach(theseActions, function (action) {\r\n                // If the patient doesn't already have a 'selected' property\r\n                if (action.selected === undefined) {\r\n                    // Give it one\r\n                    action.selected = ko.observable(false);\r\n                }\r\n            });\r\n            return theseActions;\r\n        }).extend({ throttle: 50 });\r\n        self.allSelected = ko.computed({\r\n            read: function () {\r\n                var allAreSelected = true;\r\n                ko.utils.arrayForEach(self.computedActions(), function (thisAction) {\r\n                    var isselected = thisAction.selected();\r\n                    if (!isselected) {\r\n                        allAreSelected = false;\r\n                    }\r\n                });\r\n                return allAreSelected;\r\n            },\r\n            write: function (newValue) {\r\n                if (newValue) {\r\n                    ko.utils.arrayForEach(self.computedActions(), function (action) {\r\n                        action.selected(true);\r\n                    });\r\n                } else {\r\n                    ko.utils.arrayForEach(self.computedActions(), function (action) {\r\n                        action.selected(false);\r\n                    });\r\n                }\r\n            }\r\n        }).extend({ throttle: 50 });\r\n        self.allSelected(true);\r\n    };\r\n\r\n    ctor.prototype.closeReport = function () {\r\n        var self = this;\r\n        self.settings.data(null);\r\n    };\r\n\r\n    ctor.prototype.sendCleanCSV = function () {\r\n        var self = this;\r\n        var a = document.createElement('a');\r\n        var thisString = '';\r\n        var colDelim = '\",\"';\r\n        var rowDelim = '\"\\r\\n\"';\r\n        var thisString = 'Individual Name' + colDelim + 'Action Name' + colDelim + 'Status' + colDelim + 'Start Date' + colDelim + 'Module Name' + colDelim + 'Program Name' + rowDelim;\r\n        ko.utils.arrayForEach(self.computedActions(), function (action) {\r\n            if (action.selected()) {\r\n                thisString = thisString + action.module().program().patient().fullName() + colDelim + action.name() + colDelim + action.elementStateModel().name() + colDelim + action.attrStartDate() + colDelim + action.module().name() + colDelim + action.module().program().name() + rowDelim;\r\n            //thisString = thisString + patient.fullName() + colDelim + patient.gender() + colDelim + patient.dOB() + colDelim + patient.goals().length + colDelim + patient.programs().length + rowDelim;\r\n            }\r\n        });\r\n        blob = new Blob([thisString], { type: 'text/csv' }); //new way\r\n        var csvUrl = URL.createObjectURL(blob);\r\n\r\n        $(a).attr({\r\n            'download': 'exported_table.csv',\r\n            'href': csvUrl\r\n        });\r\n        a.click();\r\n    };\r\n\r\n    return ctor;\r\n});\n","define('viewmodels/admin/reports/matching.patients',['viewmodels/admin/reports/index'], function (reportsIndex) {\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.data = self.settings.data.data;\r\n        // Programs list\r\n        self.patients = self.data;\r\n        self.computedPatients = ko.computed(function () {\r\n            var thesePatients = self.patients();\r\n            ko.utils.arrayForEach(thesePatients, function (pat) {\r\n                // If the patient doesn't already have a 'selected' property\r\n                if (pat.selected === undefined) {\r\n                    // Give it one\r\n                    pat.selected = ko.observable(false);\r\n                }\r\n            });\r\n            return thesePatients;\r\n        }).extend({ throttle: 50 });\r\n        self.goalsLoaded = ko.computed(function () {\r\n            return reportsIndex.goalsList().length > 0;\r\n        });\r\n        self.programsLoaded = ko.computed(function () {\r\n            return reportsIndex.programsList().length > 0;\r\n        });\r\n        self.allSelected = ko.computed({\r\n            read: function () {\r\n                var allAreSelected = true;\r\n                ko.utils.arrayForEach(self.computedPatients(), function (thisPat) {\r\n                    var isselected = thisPat.selected();\r\n                    if (!isselected) {\r\n                        allAreSelected = false;\r\n                    }\r\n                });\r\n                return allAreSelected;\r\n            },\r\n            write: function (newValue) {\r\n                if (newValue) {\r\n                    ko.utils.arrayForEach(self.computedPatients(), function (pat) {\r\n                        pat.selected(true);\r\n                    });\r\n                } else {\r\n                    ko.utils.arrayForEach(self.computedPatients(), function (pat) {\r\n                        pat.selected(false);\r\n                    });\r\n                }\r\n            }\r\n        }).extend({ throttle: 50 });\r\n        self.allSelected(true);\r\n    };\r\n\r\n    ctor.prototype.closeReport = function () {\r\n        var self = this;\r\n        self.settings.data(null);\r\n    };\r\n\r\n    ctor.prototype.sendToExcel = function () {\r\n        var self = this;\r\n        var a = document.createElement('a');\r\n        var data_type = 'data:application/vnd.ms-excel';\r\n        var table_div = document.getElementById('matching-patients');\r\n        var table_html = table_div.outerHTML.replace(/ /g, '%20');\r\n        a.href = data_type + ', ' + table_html;\r\n        //setting the file name\r\n        a.download = 'exported_table.xls';\r\n        a.click();\r\n    };\r\n\r\n    ctor.prototype.sendCleanCSV = function () {\r\n        var self = this;\r\n        var a = document.createElement('a');\r\n        var colDelim = '\",\"';\r\n        var rowDelim = '\"\\r\\n\"';\r\n        var thisString = 'Individual Name' + colDelim + 'Gender' + colDelim + 'DOB' + colDelim + '# of Goal' + colDelim + '# of Programs' + rowDelim;\r\n        ko.utils.arrayForEach(self.computedPatients(), function (patient) {\r\n            if (patient.selected()) {\r\n                thisString = thisString + patient.fullName() + colDelim + patient.gender() + colDelim + patient.dOB() + colDelim + patient.goals().length + colDelim + patient.programs().length + rowDelim;\r\n            }\r\n        });\r\n        blob = new Blob([thisString], { type: 'text/csv' }); //new way\r\n        var csvUrl = URL.createObjectURL(blob);\r\n\r\n        $(a).attr({\r\n            'download': 'exported_table.csv',\r\n            'href': csvUrl\r\n        });\r\n        a.click();\r\n    };\r\n\r\n    return ctor;\r\n});\n","define('viewmodels/admin/reports/matching.programs',[], function () {\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n    };\r\n\r\n    var dateSort = function (l, r) { return (l.duration() == r.duration()) ? (l.duration() > r.duration() ? 1 : -1) : (l.duration() > r.duration() ? 1 : -1) };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.data = self.settings.data.data;\r\n        // Programs list\r\n        self.programs = self.data.sort(dateSort);\r\n        self.computedPrograms = ko.computed(function () {\r\n            var thesePrograms = self.programs;\r\n            ko.utils.arrayForEach(thesePrograms, function (prog) {\r\n                // If the patient doesn't already have a 'selected' property\r\n                if (prog.selected === undefined) {\r\n                    // Give it one\r\n                    prog.selected = ko.observable(false);\r\n                }\r\n            });\r\n            return thesePrograms;\r\n        }).extend({ throttle: 50 });\r\n        self.allSelected = ko.computed({\r\n            read: function () {\r\n                var allAreSelected = true;\r\n                ko.utils.arrayForEach(self.computedPrograms(), function (thisProg) {\r\n                    var isselected = thisProg.selected();\r\n                    if (!isselected) {\r\n                        allAreSelected = false;\r\n                    }\r\n                });\r\n                return allAreSelected;\r\n            },\r\n            write: function (newValue) {\r\n                if (newValue) {\r\n                    ko.utils.arrayForEach(self.computedPrograms(), function (prog) {\r\n                        prog.selected(true);\r\n                    });\r\n                } else {\r\n                    ko.utils.arrayForEach(self.computedPrograms(), function (prog) {\r\n                        prog.selected(false);\r\n                    });\r\n                }\r\n            }\r\n        }).extend({ throttle: 50 });\r\n        self.allSelected(true);\r\n    };\r\n\r\n    ctor.prototype.closeReport = function () {\r\n        var self = this;\r\n        self.settings.data(null);\r\n    };\r\n\r\n    ctor.prototype.sendToExcel = function () {\r\n        var self = this;\r\n        var a = document.createElement('a');\r\n        var data_type = 'data:application/vnd.ms-excel';\r\n        var table_div = document.getElementById('matching-programs');\r\n        var table_html = table_div.outerHTML.replace(/ /g, '%20');\r\n        a.href = data_type + ', ' + table_html;\r\n        //setting the file name\r\n        a.download = 'exported_table.xls';\r\n        a.click();\r\n    };\r\n\r\n    ctor.prototype.sendCleanCSV = function () {\r\n        var self = this;\r\n        var a = document.createElement('a');\r\n        var thisString = '';\r\n        var colDelim = '\",\"';\r\n        var rowDelim = '\"\\r\\n\"';\r\n        var thisString = 'Individual Name' + colDelim + 'Program Name' + colDelim + 'Start Date' + colDelim + 'Duration' + rowDelim;\r\n        ko.utils.arrayForEach(self.computedPrograms(), function (program) {\r\n            if (program.selected()) {\r\n            thisString = thisString + patient.fullName() + colDelim + patient.gender() + colDelim + patient.dOB() + colDelim + patient.goals().length + colDelim + patient.programs().length + rowDelim;\r\n            }\r\n        });\r\n        blob = new Blob([thisString], { type: 'text/csv' }); //new way\r\n        var csvUrl = URL.createObjectURL(blob);\r\n\r\n        $(a).attr({\r\n            'download': 'exported_table.csv',\r\n            'href': csvUrl\r\n        });\r\n        a.click();\r\n    };\r\n\r\n    return ctor;\r\n});\n","define('viewmodels/admin/reports/query.builder',['services/datacontext', 'services/report.context'], function (datacontext, reportContext) {\r\n\r\n\tfunction entity(type, propname, columns, navprops, childentities) {\r\n\t\tvar self = this;\r\n\t\tself.entityType = type;\r\n\t\tself.propName = propname;\r\n\t\tself.columns = ko.observableArray(columns);\r\n\t\tself.navProperties = ko.observableArray(navprops);\r\n\t\tself.childEntities = ko.observableArray(childentities);\r\n\t\tself.availableColumns = ko.observableArray([]);\r\n\t\tself.availableNavProps = ko.observableArray([]);\r\n\t\tself.availableChildEntities = ko.observableArray([]);\r\n\t}\r\n\r\n\tvar structuraltypes = ko.observableArray([]);\r\n\tvar selectedMainType = ko.observable();\r\n\tvar newQueryReport = ko.observable();\r\n    var metadataStore = datacontext.manager.metadataStore;\r\n\r\n    selectedMainType.subscribe(function (newValue) {\r\n    \tconsole.log('Doign this ', newValue);\r\n    \tnewQueryReport(add(newValue.shortName));\r\n    \tconsole.log(newQueryReport());\r\n    });\r\n\r\n    var queryBuilder = {\r\n    \tstructuraltypes: structuraltypes,\r\n    \tselectedMainType: selectedMainType,\r\n    \tnewQueryReport: newQueryReport,\r\n        activate: activate\r\n    };\r\n    return queryBuilder;\r\n\r\n    function activate() {\r\n    \tshowMetaData();\r\n    \t//newQueryReport(reportContext.report('Test', 'Test description', []));\r\n    }\r\n\r\n\r\n    function add(type) {\r\n    \tconsole.log(type);\r\n        var thisType = metadataStore.getEntityType(type);\r\n        console.log(thisType);\r\n    \tvar theseAvailableColumns = thisType.dataProperties;\r\n    \t// Get a list of the singular nav props\r\n    \tvar theseAvailableNavProps = ko.utils.arrayFilter(thisType.navigationProperties, function (navprop) {\r\n    \t\treturn navprop.isScalar;\r\n    \t});\r\n    \t// Get a list of the collection nav properties\r\n    \tvar theseAvailableChildEntities = ko.utils.arrayFilter(thisType.navigationProperties, function (navprop) {\r\n    \t\treturn !navprop.isScalar;\r\n    \t});\r\n    \tvar thisEntity = new entity(thisType.shortName);\r\n    \tthisEntity.availableColumns(theseAvailableColumns);\r\n    \tthisEntity.availableNavProps(theseAvailableNavProps);\r\n    \tthisEntity.availableChildEntities(theseAvailableChildEntities);\r\n    \treturn thisEntity;\r\n    }\r\n\r\n \tfunction showMetaData() {\r\n        var md = $.parseJSON(metadataStore.exportMetadata());\r\n        console.log(md);\r\n        var odType = metadataStore.getEntityType(\"Patient\");\r\n        console.log(odType);\r\n        structuraltypes(md.structuralTypes);\r\n        console.log(structuraltypes());\r\n    }\r\n\r\n});\n","//TODO: Inject dependencies\r\ndefine('viewmodels/admin/widgets/delete.individuals.list',['config.services', 'services/session', 'services/datacontext', 'models/base', 'viewmodels/shell/shell'],\r\n    function (servicesConfig, session, datacontext, modelConfig, shell) {\r\n\r\n\t\tvar noResultsMessage =  'No records meet your search criteria';\r\n\t\tvar showNoResultsMessage = ko.observable(false);\r\n\t\tvar maxPatientCount = ko.observable(50);\r\n\t\t\r\n        // End point to get the patient details\r\n        var patientEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient', 'Patient');\r\n        });\r\n\r\n        // End point to go grab some cohorts\r\n        var cohortEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohorts', 'Cohort');\r\n        });\r\n\t\t\r\n\t\tvar cohortPatientsSkip = ko.observable(0);\r\n\t\t\r\n        // End point to grab the patients from the current cohort\r\n        var currentCohortsPatientsEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohortpatients', 'Patient', { Skip: cohortPatientsSkip(), Take: maxPatientCount() });\r\n        });\r\n\t\t\r\n\t\tvar canLoadMoreCohortPatients = ko.observable(false);\r\n        var cohortsList = ko.observableArray();\r\n        var selectedCohort = ko.observable();\r\n        var cohortFilter = ko.observable();\r\n        var throttledFilter = ko.computed(cohortFilter).extend({ throttle: 500 }).extend({ notify: 'always' });\r\n        var patientsList = ko.observableArray();\r\n        var selectedPatient = ko.observable();\r\n\r\n        // Have we initialized this vm already?\r\n        var initialized = false;\r\n        var selectedCohortToken;\r\n\r\n        var deleteModalShowing = ko.observable(false);\r\n        var deleteOverride = function () {\r\n            // Prompt the user to confirm deletion\r\n            var result = confirm('You are about to delete an individual.  Press OK to continue, or cancel to return without deleting.');\r\n            // If they press OK,\r\n            if (result === true) {\r\n                patientsList.remove(selectedPatient());\r\n                datacontext.deleteIndividual(selectedPatient());\r\n                // Proceed to navigate away\r\n            }\r\n            else {                    \r\n                return false;\r\n            }\r\n        }\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Delete Individual',\r\n\t\t\tentity: selectedPatient, \r\n\t\t\ttemplatePath: 'templates/patient.delete.html', \r\n\t\t\tshowing: deleteModalShowing, \r\n\t\t\tsaveOverride: null, \r\n\t\t\tcancelOverride: null, \r\n\t\t\tdeleteOverride: deleteOverride, \r\n\t\t\tclassOverride: null\r\n\t\t}\r\n        var modal = new modelConfig.modal(modalSettings);\r\n        modal.canDelete(true);\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            cohortsList: cohortsList,\r\n            selectedCohort: selectedCohort,\r\n            cohortFilter: cohortFilter,\r\n\t\t\tclearCohortFilter: clearCohortFilter,\r\n            patientsList: patientsList,\r\n            activate: activate,\r\n            choosePatient: choosePatient,\r\n\t\t\tshowNoResultsMessage: showNoResultsMessage,\r\n\t\t\tcanLoadMoreCohortPatients: canLoadMoreCohortPatients,\r\n\t\t\tloadMoreCohortPatients: loadMoreCohortPatients,\r\n\t\t\tnoResultsMessage: noResultsMessage\r\n        };\r\n\r\n        return vm;\r\n\r\n\t\tfunction clearCohortFilter(){\r\n\t\t\tcohortFilter(null);\r\n\t\t}\r\n\r\n        function choosePatient (sender) {\r\n            selectedPatient(sender);\r\n            // Go select a patient by their Id to get all details\r\n            datacontext.getEntityById(selectedPatient, selectedPatient().id(), patientEndPoint().EntityType, patientEndPoint().ResourcePath, true).then(patientReturned);\r\n\r\n            function patientReturned() {\r\n                deleteModalShowing(true);\r\n                shell.currentModal(modal);\r\n\r\n            }\r\n        }\r\n\r\n        function activate() {\r\n            if (!initialized) {\r\n                initializeViewModel();\r\n            } \r\n\t\t\telse{\r\n\t\t\t\tsetTimeout( function(){\r\n\t\t\t\t\t//trigger the hight calculation setHeightFromPrev\r\n\t\t\t\t\tpatientsList.valueHasMutated();\r\n\t\t\t\t}, 200);\r\n\t\t\t}\r\n            return true;\r\n        }\r\n\r\n        function initializeViewModel() {\r\n            // Go get a list of cohorts locally\r\n            datacontext.getEntityList(cohortsList, cohortEndPoint().EntityType, cohortEndPoint().ResourcePath, null, null, false, null, 'sName').then(cohortsReturned);\r\n            // Subscribe to changes on the selected cohort to get an updated patient list when it changes\r\n            selectedCohortToken = selectedCohort.subscribe(function () {\r\n\t\t\t\tcanLoadMoreCohortPatients(false);\r\n\t\t\t\tshowNoResultsMessage(false);\r\n                cohortPatientsSkip(0);\r\n                // If there is a filter when the cohort changes, clear it\r\n                if (cohortFilter()) {\r\n                    cohortFilter(null);\r\n                }\r\n                patientsList([]);\t\t\t\t\r\n                getPatientsByCohort();\r\n            });\r\n            throttledFilterToken = throttledFilter.subscribe(function (val) {\r\n                // Get a list of patients by cohort using filter\r\n                if (selectedCohort()) {\r\n\t\t\t\t\tcanLoadMoreCohortPatients(false);\r\n\t\t\t\t\tshowNoResultsMessage(false);\r\n                    cohortPatientsSkip(0);\r\n                    patientsList([]);\t\t\t\t\t\r\n                    getPatientsByCohort(val);\r\n                }\r\n            });\r\n\t\t\t// Set the max patient count to the value of settings.TotalPatientCount, if it exists\r\n            if (session.currentUser().settings()) {\r\n\t\t\t\tvar totalPatientCount = datacontext.getSettingsParam('TotalPatientCount');\r\n\t\t\t\tif( totalPatientCount ){\r\n\t\t\t\t\tmaxPatientCount( parseInt( totalPatientCount ) );\r\n\t\t\t\t}                \r\n            }\r\n            // Set initialized true so we don't accidentally re-initialize the view model\r\n            initialized = true;\r\n            return true;\r\n\r\n            function cohortsReturned() {\r\n                // Load a default cohort when cohorts are returned from the server\r\n                //selectedCohort(cohortsList()[0]);\r\n            }\r\n        };\r\n\r\n        function getPatientsByCohort(searchValue) {\r\n            var parameters = {};\r\n            // Create an object to hold the parameters\r\n            var parameters = currentCohortsPatientsEndPoint().Parameters;\r\n            // If a search value is passed in\r\n            if (searchValue) {\r\n                // Add a filter parameter onto parameters\r\n                parameters.SearchFilter = searchValue;\r\n            }\r\n            else { parameters.SearchFilter = null; }\r\n\t\t\tshowNoResultsMessage(false);\r\n            // TODO : Add Skip and Take to the endpoint and pass it down as params\r\n            // TODO : Make sure the service is checking locally first before going out to the server to get these patients\r\n            datacontext.getEntityList(patientsList, currentCohortsPatientsEndPoint().EntityType, \r\n\t\t\t\t\t\tcurrentCohortsPatientsEndPoint().ResourcePath, null, selectedCohort().iD(), \r\n\t\t\t\t\t\ttrue, parameters, null, (!!'SkipMerge')).then( calculateSkipTake );\r\n        }\r\n\t\t\r\n\t\tfunction calculateSkipTake() {\r\n            var totalRecordsShowing = patientsList().length;\t\t\t\r\n\t\t\tif( totalRecordsShowing == 0 ){\r\n\t\t\t\tshowNoResultsMessage(true);\r\n\t\t\t}\r\n            var maxPossibleRecordsShowing = cohortPatientsSkip() === 0 ? maxPatientCount() : cohortPatientsSkip() + maxPatientCount();\r\n            // If max possible records showing is greater than the total records that are showing,\r\n            if (maxPossibleRecordsShowing > totalRecordsShowing) {\r\n                // Then don't show the load more button\r\n                canLoadMoreCohortPatients(false);\r\n            } else {\r\n                // Else, show the load more button\r\n                canLoadMoreCohortPatients(true);\r\n            }\r\n            // Always reset the skip after getting more records\r\n            cohortPatientsSkip(maxPossibleRecordsShowing);\r\n        }\r\n\r\n\t\tfunction loadMoreCohortPatients() {\r\n            var parameters = {};\r\n            var filter = cohortFilter();\r\n            // Create an object to hold the parameters\r\n            var parameters = currentCohortsPatientsEndPoint().Parameters;\r\n            // If a search value is passed in\r\n            if (filter) {\r\n                // Add a filter parameter onto parameters\r\n                parameters.SearchFilter = filter;\r\n            } else { parameters.SearchFilter = null; }\r\n            var newPatients = ko.observableArray();\r\n            datacontext.getEntityList(newPatients, currentCohortsPatientsEndPoint().EntityType, currentCohortsPatientsEndPoint().ResourcePath, null, selectedCohort().iD(), true, parameters)\r\n                .then(function () {\r\n                    patientsList.push.apply(patientsList, newPatients());\r\n                    calculateSkipTake();\r\n                });\r\n        }\r\n\r\n    });\n","define('viewmodels/authenticate',['services/session', 'config.routes', 'plugins/router', 'services/datacontext', 'viewmodels/shell/shell'],\r\n    function (session, routeConfig, router, datacontext, shell) {\r\n\r\n        var token;\r\n        var tokenId;\r\n        \r\n        function activate(tokenIdFromUrl) {\r\n            // Run tests to see if local storage and cookies are enabled\r\n            session.runTests();\r\n            var hasATokenId = (window.location.href.indexOf(\"#ut\") > -1);\r\n            if (hasATokenId) {\r\n                // Replace the entry in browser history so the token isn't reused\r\n                router.navigate('#', { replace: true, trigger: false });\r\n                return getUserSessionByToken(tokenIdFromUrl);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        var auth = {\r\n            activate: activate\r\n        }\r\n\r\n        return auth;\r\n\r\n        function boot() {\r\n            return datacontext.primeData().then(function () {\r\n                shell.initializeLogger();\r\n                // Navigate to the patients page first\r\n                return router.navigate('home');\r\n            });\r\n        }\r\n\r\n        function getUserSessionByToken(tokenId) {\r\n            // Use the data context to go get a user by the token in the query string\r\n            datacontext.getUserByUserToken(session.currentUser, tokenId, true);\r\n            token = session.currentUser.subscribe(function () {\r\n                if (session.currentUser()) {\r\n                    session.setLocalStorageAndCookie();\r\n                    token.dispose();\r\n                    return boot();\r\n                }\r\n            });\r\n            // If no user is found, redirect to login page\r\n            return false;\r\n        }\r\n    });\n","/**\r\n*\r\n*\t@module contact.details\r\n*/\r\ndefine('viewmodels/home/contacts/contact.details',[], \r\n\tfunction(){\r\n\t\t\t\t\r\n\t\t\r\n\t\t// var contact = ko.observable();\r\n\t\t\r\n\t\tvar activeDetailsTab = ko.observable('Profile');\r\n\t\t\r\n\t\tfunction setActiveDetailsTab( name ){\r\n\t\t\tactiveDetailsTab(name);\t\r\n\t\t}\r\n\t\t\t\r\n\t\tfunction activate( settings ){\r\n\t\t\tvar self = this;\r\n\t\t\tself.contact = settings.contact;\r\n\t\t\tself.isContactSelected = ko.computed( function(){\r\n\t\t\t\treturn (self.contact && self.contact()) ? true : false;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.primaryCommunications = ko.computed(function () {\r\n                // Get the primary communication types and return them\r\n                var communications = [];\r\n                var contactcard = self.contact();\r\n                if (contactcard) {\r\n                    var prefPhone = ko.utils.arrayFirst(contactcard.phones(), function (phone) {\r\n                        return phone.phonePreferred();\r\n                    });\r\n                    if (prefPhone) {\r\n                        prefPhone.template = 'templates/phone.html';\r\n                        communications.push(prefPhone);\r\n                    }\r\n                    var prefText = ko.utils.arrayFirst(contactcard.phones(), function (phone) {\r\n                        return phone.textPreferred();\r\n                    });\r\n                    if (prefText && prefText !== prefPhone) {\r\n                        prefText.template = 'templates/phone.html';\r\n                        communications.push(prefText);\r\n                    }\r\n                    var prefEmail = ko.utils.arrayFirst(contactcard.emails(), function (email) {\r\n                        return email.preferred();\r\n                    });\r\n                    if (prefEmail) {\r\n                        prefEmail.template = 'templates/email.html';\r\n                        communications.push(prefEmail);\r\n                    }\r\n                    var prefAddress = ko.utils.arrayFirst(contactcard.addresses(), function (address) {\r\n                        return address.preferred();\r\n                    });\r\n                    if (prefAddress) {\r\n                        prefAddress.template = 'templates/address.html';\r\n                        communications.push(prefAddress);\r\n                    }\r\n                }\r\n                // Return the list of preferred communications\r\n                return communications;\r\n            }).extend({ throttle: 25 });\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tvar detailsTabs = ko.observableArray([\r\n\t\t\t\tnew Tab('Profile', null, '/NightingaleUI/Content/images/patient_neutral_small.png', 'Phone blue small'),\r\n\t\t\t\tnew Tab('Professional', null, '/NightingaleUI/Content/images/settings_blue.png', 'Phone blue small'),\r\n\t\t\t\tnew Tab('Comm', 'icon-phone blue', null)\t\t\t\t\r\n\t\t]);\r\n\t\t\r\n\t\tfunction Tab(name, cssClass, imgSource, imgAlt){\r\n\t\t\tvar self = this;\r\n\t\t\tself.name = name;\r\n\t\t\tself.cssClass = cssClass;\r\n\t\t\tself.imgSource = imgSource;\r\n\t\t\tself.imgAlt = imgAlt;\r\n\t\t\tself.isShowing = true;\r\n\t\t\t//self.hasErrors = ko.observable(false);\r\n\t\t};\r\n\t\t\r\n\t\tvar detailsTabIndex = {\r\n\t\t\tprofile: 0,\r\n\t\t\tprofessional: 1,\r\n\t\t\tcomm: 2\r\n\t\t}\r\n\t\t\r\n\t\t//ctor.prototype.activeDetailsTab = ko.observable();\t\t\r\n\t\t//return ctor;\r\n\t\tvar vm = {\t\t\t\r\n\t\t\tactivate: activate,\r\n\t\t\tdetailsTabs: detailsTabs,\r\n\t\t\tsetActiveDetailsTab: setActiveDetailsTab,\r\n\t\t\tactiveDetailsTab: activeDetailsTab\r\n\t\t\t//contact: contact\r\n\t\t};\r\n\t\treturn vm;\r\n});\n","define('viewmodels/home/contacts/index',['services/session', 'services/datacontext', 'viewmodels/shell/shell', 'models/base', 'services/local.collections'],\r\n\tfunction(session, datacontext, shell, modelConfig, localCollections){\r\n\t\t\t\t\r\n        var fullScreenWidget = ko.observable();\r\n        var leftColumnOpen = ko.observable(true);\r\n\r\n\t\tcheckDataContext();\r\n\t\t\r\n\t\tvar tabs = ko.observableArray([\r\n\t\t\tnew Tab('Profile', null, '/NightingaleUI/Content/images/patient_neutral_small.png', 'Phone blue small'),\r\n\t\t\tnew Tab('General', null, '/NightingaleUI/Content/images/settings_blue.png', 'Phone blue small'),\r\n\t\t\tnew Tab('Phone', 'icon-phone blue', null),\r\n\t\t\tnew Tab('Text', 'icon-sms blue', null),\r\n\t\t\tnew Tab('Email', 'icon-email blue', null),\r\n\t\t\tnew Tab('Address', 'icon-address blue', null),\r\n\t\t\tnew Tab('Language', null, '/NightingaleUI/Content/images/nav_population.png', 'Language blue small')\t\t\t\r\n\t\t]);\r\n\t\t\r\n\t\tvar tabIndex = {\r\n\t\t\tprofile: 0,\r\n\t\t\tgeneral: 1,\r\n\t\t\tphone: 2,\r\n\t\t\ttext: 3,\r\n\t\t\temail: 4,\r\n\t\t\taddress: 5,\r\n\t\t\tlanguage: 6\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tfunction Tab(name, cssClass, imgSource, imgAlt){\r\n\t\t\tvar self = this;\r\n\t\t\tself.name = name;\r\n\t\t\tself.cssClass = cssClass;\r\n\t\t\tself.imgSource = imgSource;\r\n\t\t\tself.imgAlt = imgAlt;\r\n\t\t\tself.isShowing = true;\r\n\t\t\tself.hasErrors = ko.observable(false);\r\n\t\t}\r\n\t\t\r\n\t\tfunction setActiveTab( contactCard, name ){\r\n\t\t\tcontactCard.activeTab(name);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//contact dialog:\r\n\t\tvar modalShowing = ko.observable(false);\r\n\t\tvar modalEntity = ko.observable(new ModalEntity(modalShowing));\r\n\t\tvar theContact = ko.observable();\t\t\t\t\r\n\t\tvar myContactSearchResults = ko.observableArray([]);\r\n\t\tvar contactsReturned = ko.observableArray([]);\r\n\t\tvar contactsTake = ko.observable(100);\r\n\t\tvar contactsSkip = ko.observable(0);\r\n\t\tvar maxContactsCount = ko.observable(400);\r\n\t\tvar searching = ko.observable(false);\r\n\t\tvar totalCount = ko.observable();\r\n\t\tvar contactReturnedCallback = ko.observable();\r\n\t\t\r\n\t\tfunction saveOverride () {\r\n\t\t\t\r\n\t\t\ttheContact().saveChanges().then( saveCompleted );\r\n\t\t\ttheContact().clearDirty();\r\n\t\t\t\t\r\n            function saveCompleted(contact) {\r\n                if (contact) {\r\n                    //only insert returns the object\r\n\t\t\t\t\tcontact.isNew(false);\t\t\t\t\t\r\n\t\t\t\t\tcontact.clearDirty();\t\t\t\t\t\r\n\t\t\t\t}\r\n                if (modalEntity().callbackReturnTo) {                    \r\n                    //a callback to return to after save/cancel (this is currently used from assign care member dialog):\r\n                    //and return the created contact:\r\n\t\t\t\t\treturn setTimeout( function(){\r\n\t\t\t\t\t\tmodalEntity().callbackReturnTo( modalEntity().contactCard() );\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t}\r\n            }\r\n        };\r\n\t\t\r\n        function cancelOverride () {\r\n\t\t\tmodalShowing(false);\r\n\t\t\tmodalEntity().contactCard().cancelChanges();\r\n\t\t\tmodalEntity().contactCard().clearDirty();\r\n\t\t\tif( modalEntity().callbackReturnTo ){\r\n\t\t\t\treturn setTimeout( function(){\r\n\t\t\t\t\tmodalEntity().callbackReturnTo();\r\n\t\t\t\t}, 10);\r\n\t\t\t}\r\n        };\r\n\t\t\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Add Contact',\r\n\t\t\tentity: modalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/contact.edit', \r\n\t\t\tshowing: modalShowing, \r\n\t\t\tsaveOverride: saveOverride,\r\n\t\t\tcancelOverride: cancelOverride,\r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: null//'modal-lg'\r\n\t\t};\r\n\t\t\r\n        var modal = new modelConfig.modal(modalSettings);\r\n\t\t\r\n\t\tfunction ModalEntity(modalShowing) {\r\n            var self = this;\r\n            self.contactCard = ko.observable();\t\t\t\r\n            self.canSaveObservable = ko.observable(true);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    var contactok = false;\r\n                    if (self.contactCard()) {                        \r\n\t\t\t\t\t\tcontactok = self.contactCard().isValid() && !self.contactCard().isDuplicate() && self.contactCard().isDuplicateTested();\r\n                    }\r\n                    return contactok && self.canSaveObservable();\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { contactCard: self.contactCard, canSave: self.canSave, showing: modalShowing, saveFunction: saveOverride };\r\n        }\r\n\t\t\r\n\t\t\r\n\t\tfunction addContact( data, event, contactReturnedCallback, contactFirstName, contactLastName ){\r\n\t\t\t//navigate to add contact dialog\r\n\t\t\t\r\n\t\t\tvar newModes = [];\r\n\t\t\tko.utils.arrayForEach( datacontext.enums.communicationModes(), function(mode) {\r\n\t\t\t\tvar newMode = { lookUpModeId: mode.id(), optOut: false, preferred: false };\r\n\t\t\t\tnewModes.push( newMode );\r\n\t\t\t});\r\n\t\t\ttheContact( datacontext.createEntity('ContactCard', { id: -1, statusId: 1, modes: newModes, createdById: session.currentUser().userId() }));\r\n\t\t\ttheContact().isNew(true);\r\n\t\t\ttheContact().activeTab(\"Profile\");\r\n\t\t\tif( contactFirstName ){\r\n\t\t\t\ttheContact().firstName( contactFirstName );\r\n\t\t\t}\r\n\t\t\tif( contactLastName ){\r\n\t\t\t\ttheContact().lastName( contactLastName );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttheContact().watchDirty();\r\n            modalEntity().contactCard( theContact() );\r\n\t\t\tif( contactReturnedCallback ){\r\n\t\t\t\tmodalEntity().callbackReturnTo = contactReturnedCallback;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tmodalEntity().callbackReturnTo = null;\r\n\t\t\t}\r\n            shell.currentModal(modal);\r\n            modalShowing(true);\r\n\t\t}\r\n\t\t\r\n\t\tfunction editPatientContact( contact ){\r\n\t\t\tcontact.activeTab(\"General\");\r\n\t\t\tstartEditContactDialog( contact, 'Edit Communication Preferences', true );\r\n\t\t}\r\n\t\t\r\n\t\tfunction editContact( contact ){\t\t\t\t\t\t\r\n\t\t\tcontact.activeTab(\"Profile\");\r\n\t\t\tvar title = 'Edit Contact - ' + contact.firstName() + ' ' + contact.lastName();\r\n\t\t\tstartEditContactDialog( contact, title, false );\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfunction startEditContactDialog( contact, titleText, showPatientName ){\r\n\t\t\ttheContact( contact );\r\n\t\t\tmodalEntity().contactCard( contact );\r\n\t\t\tmodalEntity().callbackReturnTo = null;\r\n\t\t\t\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: titleText,\r\n\t\t\t\tshowSelectedPatientInTitle: showPatientName,\r\n\t\t\t\tentity: modalEntity, \r\n\t\t\t\ttemplatePath: 'viewmodels/templates/contact.edit', \r\n\t\t\t\tshowing: modalShowing, \r\n\t\t\t\tsaveOverride: saveOverride, \r\n\t\t\t\tcancelOverride: cancelOverride, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: null//'modal-lg'\r\n\t\t\t};\r\n\t\t\r\n\t\t\tvar modal = new modelConfig.modal(modalSettings);\r\n\t\t\t\r\n\t\t\tshell.currentModal(modal);\r\n            modalShowing(true);\r\n\t\t}\r\n\t\t//end contact dialog\r\n\t\t\r\n\t\t//contact search\r\n\t\tvar contactTypeGroupId = 1;\r\n\t\t\r\n\t\tvar contactTypes = ko.observableArray([]);\r\n\t\tcontactTypes( datacontext.getContactTypes( contactTypeGroupId, 'root' ) );\r\n\t\tvar allContactTypes = ko.observableArray([]);\r\n\t\tvar typesList = datacontext.getContactTypes( contactTypeGroupId, false );\r\n\t\tallContactTypes(typesList);\r\n\t\t\r\n\t\tvar criteriaContactTypeId = ko.observable();\r\n\t\tvar criteriaContactSubTypes = ko.observableArray();\r\n\t\tvar criteriaContactStatuses = ko.observableArray();\r\n\t\tvar contactStatuses = datacontext.enums.contactStatuses;\r\n\t\tvar activeContactStatus = ko.observable();\r\n\t\tvar activeStatuses = ko.utils.arrayFilter( contactStatuses(), function(status){\r\n\t\t\treturn status.name() == 'Active';\r\n\t\t});\r\n\t\tif( activeStatuses.length ){\r\n\t\t\tactiveContactStatus( activeStatuses[0] );\r\n\t\t}\r\n\t\t\r\n\t\tvar criteriaFirstName = ko.observable();\r\n\t\tvar criteriaLastName = ko.observable();\r\n\t\t//var criteriaPhone =  datacontext.createComplexType('Phone', { id: -1 });\r\n\t\tvar statesList = datacontext.enums.states;\t\t\t\r\n\t\tvar defaultContactType = ko.observable();\r\n\t\tvar initialized = false;\r\n\t\t\r\n\t\tfunction activate(){\r\n\t\t\tvar self = this;\r\n\t\t\tif (!initialized) {\r\n                initializeViewModel();\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                initialized = true;\t\t\t\t\r\n            }\r\n\t\t\tself.contactsShowingText = ko.computed( function(){\r\n\t\t\t\tvar text = '';\r\n\t\t\t\tvar myContactSearchResults = self.myContactSearchResults();\r\n\t\t\t\tvar totalQueryCount = totalCount();\r\n\t\t\t\tif( myContactSearchResults.length ){\r\n\t\t\t\t\ttext = ' - ' + myContactSearchResults.length + ' showing'; //TODO: X out of Y\r\n\t\t\t\t}\r\n\t\t\t\tif( myContactSearchResults.length < totalQueryCount ){\r\n\t\t\t\t\ttext += ' out of ' + totalQueryCount;\r\n\t\t\t\t}\r\n\t\t\t\treturn text;\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\t\r\n\t\t\tself.showResetFilters = ko.computed( function(){\t\t\t\t\r\n\t\t\t\tvar show = false;\r\n\t\t\t\tvar criteriaFirstName = self.criteriaFirstName();\r\n\t\t\t\tvar criteriaLastName = self.criteriaLastName();\r\n\t\t\t\tvar defaultContactType = self.defaultContactType();\r\n\t\t\t\tvar criteriaContactTypeId = self.criteriaContactTypeId();\r\n\t\t\t\tvar criteriaContactSubTypes = self.criteriaContactSubTypes();\r\n\t\t\t\tvar activeContactStatus = self.activeContactStatus();\r\n\t\t\t\tvar criteriaContactStatuses = self.criteriaContactStatuses();\r\n\t\t\t\t\r\n\t\t\t\tvar selectedStatuses = ko.utils.arrayFilter( criteriaContactStatuses, function(status){\r\n\t\t\t\t\treturn status.id() == activeContactStatus.id();\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif( criteriaContactTypeId && defaultContactType && defaultContactType.id() == criteriaContactTypeId ){\r\n\t\t\t\t\t//default contact type is selected\r\n\t\t\t\t\tif( selectedStatuses.length == 1 && criteriaContactStatuses.length == 1 ){\r\n\t\t\t\t\t\t//only activ status is selected\r\n\t\t\t\t\t\tif( criteriaContactSubTypes.length == 0 ){\r\n\t\t\t\t\t\t\t//no subtypes\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif( !criteriaFirstName && !criteriaLastName ){\r\n\t\t\t\t\t\t\t\tshow = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tshow = true;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\treturn show;\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\r\n\t\t\tself.canSearchContacts = ko.computed( function(){\r\n\t\t\t\tvar canSearch = false;\r\n\t\t\t\tvar firstName = self.criteriaFirstName();\r\n\t\t\t\tvar lastName = self.criteriaLastName();\r\n\t\t\t\tvar statuses = self.criteriaContactStatuses();\r\n\t\t\t\tvar subTypes = self.criteriaContactSubTypes();\r\n\t\t\t\tvar searching = self.searching? self.searching() : false;\r\n\t\t\t\t\r\n\t\t\t\tif( statuses && statuses.length > 0 ){\r\n\t\t\t\t\tif( subTypes.length > 0 ){\r\n\t\t\t\t\t\tcanSearch = true;\t//status/s and type/s are selected\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif( firstName && firstName.trim().length > 0 && lastName && lastName.trim().length > 0 ){\r\n\t\t\t\t\t\t\tcanSearch = true;\t//status/s and first and last name\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcanSearch = canSearch && !searching;\t//block until search returned\r\n\t\t\t\treturn canSearch;\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\r\n\t\t\tself.selectedContactId = ko.computed( function(){\r\n\t\t\t\tvar contact = selectedContact();\r\n\t\t\t\tif( contact ){\r\n\t\t\t\t\treturn contact.id();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\r\n\t\t\tself.showEditButton = ko.computed(function(){\r\n\t\t\t\tvar hasContactSelected = self.selectedContactId();\r\n\t\t\t\tvar contact = selectedContact();\r\n\t\t\t\treturn( hasContactSelected && contact && contact.isEditable() );\t\t\t\t\r\n\t\t\t}).extend({throttle: 100});\r\n\t\t\t\r\n\t\t\tself.showDeleteButton = ko.computed(function(){\r\n\t\t\t\treturn self.showEditButton();\r\n\t\t\t}).extend({throttle: 100});\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\t//activate\r\n\t\t\r\n\t\tfunction initializeViewModel(){\r\n\t\t\t\r\n\t\t\tif (session.currentUser().settings()) {\r\n\t\t\t\tvar totalQueryCount = datacontext.getSettingsParam('TotalQueryCount');\r\n\t\t\t\tif( totalQueryCount && !isNaN(totalQueryCount)){\r\n\t\t\t\t\t//the max contacts to load\r\n\t\t\t\t\tmaxContactsCount( parseInt( totalQueryCount ) );\t\t\t\t\t\r\n                }\r\n\t\t\t    var take = datacontext.getSettingsParam('QueryTake');\r\n\t\t\t    if( take && !isNaN(take) ){\r\n\t\t\t\t    //the take\r\n\t\t\t\t    contactsTake( parseInt( take ) );\t\t\t\t\t\r\n\t\t\t    }\r\n            }\r\n\t\t\tinitialized = true;\r\n\t\t}\r\n\t\t\r\n\t\tfunction toggleOpenColumn() {\r\n            leftColumnOpen(!leftColumnOpen());\r\n        }\r\n\t\t\r\n\t\t// Toggle the widget to / from fullscreen\r\n        function toggleFullScreen(widgetname) {\r\n            // If this widget is already fullscreen,\r\n            if (widgetname === fullScreenWidget()) {\r\n                // Remove full screen widget\r\n                fullScreenWidget(null);\r\n            } else {\r\n                // Else, set it as the full screen widget\r\n                fullScreenWidget(widgetname);\r\n            }\r\n        }\r\n\t\t\r\n\t\tvar selectedContact = ko.observable();\t\t\r\n\t\t\r\n\t\tfunction deleteContact(){\r\n\t\t\talert('delete');\r\n\t\t}\r\n\t\t\r\n\t\tfunction resetTabs(){\r\n\t\t\tko.utils.arrayForEach(tabs, function(tab){\r\n\t\t\t\ttab.isShowing = true;\r\n\t\t\t\ttab.hasErrors(false);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tfunction selectContact( contact ){\r\n\t\t\tresetTabs();\r\n\t\t\tcontact.activeTab(\"Profile\");\r\n\t\t\tselectedContact( contact );\r\n\t\t}\r\n\t\t\r\n\t\t//load more:\r\n\t\tvar canLoadMoreContacts = ko.observable(false);\r\n\t\t\t\t\r\n\t\tvar maxContactsLoaded = ko.observable(false);\r\n\t\t\t\t\t\r\n\t\tfunction findDefaultContactType( contactTypes ){\r\n\t\t\tvar defaultType = null;\r\n\t\t\tvar types = ko.utils.arrayFilter( contactTypes(), function(node){\r\n\t\t\t\treturn node.name() == 'Person';\r\n\t\t\t});\r\n\t\t\tif( types && types.length > 0 ){\r\n\t\t\t\tdefaultType = types[0];\r\n\t\t\t}\r\n\t\t\treturn defaultType;\r\n\t\t};\r\n\r\n\t\tvar noResultsFound = ko.observable(false);\r\n\t\t\r\n\t\tfunction resetFilters(){\r\n\t\t\tif( !defaultContactType() ){\r\n\t\t\t\tdefaultContactType( findDefaultContactType(contactTypes) )\r\n\t\t\t}\r\n\t\t\tcriteriaContactTypeId( defaultContactType().id() );\r\n\t\t\tcriteriaContactSubTypes([]);\t\t\t\r\n\t\t\t\r\n\t\t\t//set active status as selected in the criteria as default:\t\t\t\t\t\t\r\n\t\t\tcriteriaContactStatuses([]);\r\n\t\t\tif( activeContactStatus() ){\r\n\t\t\t\tcriteriaContactStatuses.push(activeContactStatus());\r\n\t\t\t}\r\n\t\t\tcriteriaFirstName(null);\r\n\t\t\tcriteriaLastName(null);\r\n\t\t\tmyContactSearchResults([]);\r\n\t\t\tcontactsReturned([]);\r\n\t\t\tcanLoadMoreContacts(false);\r\n\t\t\tmaxContactsLoaded(false);\r\n\t\t\tnoResultsFound(false);\r\n\t\t\tselectedContact(null);\r\n\t\t}\r\n\t\tresetFilters();\r\n\t\t\t\t\r\n\t\tfunction getContactTypeChildren( typeId ){\r\n\t\t\tvar subTypes = ko.utils.arrayFilter( allContactTypes(), function(item){\r\n\t\t\t\treturn ( item.parentId() && item.parentId() == typeId ) \r\n\t\t\t});\r\n\t\t\treturn subTypes;\r\n\t\t}\r\n\t\t\r\n\t\tvar contactSubTypes = ko.computed( function(){\r\n\t\t\t//return children of selected type\r\n\t\t\tvar subTypes = [];\r\n\t\t\tvar typeId = criteriaContactTypeId();\r\n\t\t\tif( typeId ){\r\n\t\t\t\tsubTypes = getContactTypeChildren( typeId );\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn subTypes;\r\n\t\t}).extend({ throttle: 100 });\t\t\t\t\t\t\r\n\t\t\r\n\t\tfunction clearCacheAndLoad(){\r\n\t\t\t\r\n\t\t\tsearching(true);\r\n\t\t\tnoResultsFound(false);\t\t\t\r\n\t\t\tvar contacts = datacontext.getLocalContacts('ContactSearch');\r\n\t\t\tmyContactSearchResults([]);\r\n\t\t\ttotalCount(0);\r\n\t\t\tcontactsSkip(0);\r\n\t\t\tselectedContact(null);\r\n\t\t\tsetTimeout( function(){\r\n\t\t\t\t//short delay to allow the ko data binding to release references to these contacts, before removing them: \r\n\t\t\t\tif( contacts && contacts.length > 0 ){\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tko.utils.arrayForEach( contacts, function(contact){\r\n\t\t\t\t\t\tif( contact ){\r\n\t\t\t\t\t\t\t//if( selectedContact() && contact.id() !== selectedContact().id() ){\r\n\t\t\t\t\t\t\t\t//remove from breeze cache:\r\n\t\t\t\t\t\t\t\tcontact.entityAspect.setDeleted();\r\n\t\t\t\t\t\t\t\tcontact.entityAspect.acceptChanges();\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tloadContacts();\t//load first block with the new sort\r\n\t\t\t}, 50);\r\n\t\t}\r\n\t\t\r\n\t\tfunction loadContacts(){\r\n\t\t\t\r\n\t\t\tvar params = {\r\n\t\t\t\t\t\tcontactTypeIds: [],\r\n\t\t\t\t\t\tcontactSubTypeIds: [],\r\n\t\t\t\t\t\tcontactStatuses: [],\r\n\t\t\t\t\t\tfirstName: criteriaFirstName(),\r\n\t\t\t\t\t\tlastName: criteriaLastName(),\r\n\t\t\t\t\t\tfilterType: 'StartsWith',\r\n\t\t\t\t\t\ttake: contactsTake(),\r\n\t\t\t\t\t\tskip: contactsSkip()\r\n\t\t\t};\r\n\t\t\tparams.contactTypeIds.push( criteriaContactTypeId() );\r\n\t\t\tko.utils.arrayForEach( criteriaContactSubTypes(), function(subType){\r\n\t\t\t\tparams.contactSubTypeIds.push( subType.id() );\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tko.utils.arrayForEach( criteriaContactStatuses(), function(status){\r\n\t\t\t\t\r\n\t\t\t\t//the search API wants the status enum NAME/s.\r\n\t\t\t\t//need to find the selected status as its enum object, since when multiselect selection values are clicked,\r\n\t\t\t\t//they are returned as type \"Identifier\", and dont have the \"name\" prop\r\n\t\t\t\t\r\n\t\t\t\tvar statusObjects = ko.utils.arrayFilter( contactStatuses(), function(statusEnum){\r\n\t\t\t\t\treturn statusEnum.id() == status.id();\r\n\t\t\t\t});\r\n\t\t\t\tif( statusObjects.length > 0 ){\r\n\t\t\t\t\t//the selected status object now has the \"name\" prop that we need\r\n\t\t\t\t\tparams.contactStatuses.push( statusObjects[0].name() );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tcontactsReturned([]);\r\n\t\t\treturn datacontext.getContacts( contactsReturned, params, totalCount, 'ContactSearch' ).then( getContactsReturned );\r\n\t\t}\r\n\t\t\r\n\t\tfunction loadMoreContacts(){\r\n\t\t\tloadContacts();\r\n\t\t}\r\n\t\t\r\n\t\tfunction searchContacts(){\r\n\t\t\tclearCacheAndLoad();\t\t\t\r\n\t\t}\t\t\t\r\n\r\n\t\tfunction getContactsReturned(){\r\n\t\t\t\r\n\t\t\tko.utils.arrayForEach( contactsReturned(), function(contact){\r\n\t\t\t\tmyContactSearchResults.push( contact );\r\n\t\t\t});\r\n\t\t\tvar skipped = contactsSkip();\r\n\t\t\tvar nextSkip = skipped + contactsTake();\r\n\t\t\tif( nextSkip < totalCount() && nextSkip < maxContactsCount() ){\r\n\t\t\t\tcontactsSkip( nextSkip );\r\n\t\t\t\tcanLoadMoreContacts( true );\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcanLoadMoreContacts( false );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( myContactSearchResults().length >= maxContactsCount() ){\r\n\t\t\t\tmaxContactsLoaded( true );\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tmaxContactsLoaded( false );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( totalCount() == 0 ){\r\n\t\t\t\t//show no results message\r\n\t\t\t\tnoResultsFound( true );\r\n\t\t\t}\r\n\t\t\t//allow the search button\r\n\t\t\tsearching(false);\r\n\t\t}\r\n\t\t\r\n\t\tfunction checkDataContext() {\r\n\t\t    if (!datacontext) {\r\n\t\t        datacontext = require('services/datacontext');\r\n\t\t    }\r\n\t\t}\r\n\t\t\r\n\t\tfunction detached(){\r\n\t\t\tvar self = this;\r\n\t\t\t//dispose computeds:\r\n\t\t\tself.contactsShowingText.dispose();\r\n\t\t\tself.showResetFilters.dispose();\t\t\t\r\n\t\t\tself.canSearchContacts.dispose();\r\n\t\t\tself.showDeleteButton.dispose();\r\n\t\t\tself.showEditButton.dispose();\r\n\t\t\tself.contactSubTypes.dispose();\r\n\t\t}\r\n\t\t\r\n\t\tvar activeDetailsTab = ko.observable('Profile');\r\n\t\t\r\n\t\tfunction setActiveDetailsTab( name ){\r\n\t\t\tself.activeDetailsTab(name);\t\r\n\t\t}\r\n\t\t\r\n\t\tvar vm = {\r\n\t\t\tactivate: activate,\r\n\t\t\tdetached: detached,\r\n\t\t\t\r\n\t\t\ttabs: tabs,\r\n\t\t\ttabIndex: tabIndex,\r\n\t\t\tsetActiveTab: setActiveTab,\r\n\t\t\tsearchContacts: searchContacts,\t\t\t\r\n\t\t\tselectedContact: selectedContact,\r\n\t\t\tselectContact: selectContact,\t\t\t\t\r\n\t\t\teditContact: editContact,\r\n\t\t\teditPatientContact: editPatientContact,\r\n\t\t\tdeleteContact: deleteContact,\r\n\t\t\taddContact: addContact,\t\t\t\r\n\t\t\tmyContactSearchResults: myContactSearchResults,\r\n\t\t\tcanLoadMoreContacts: canLoadMoreContacts,\r\n\t\t\tloadMoreContacts: loadMoreContacts,\r\n\t\t\tmaxContactsLoaded: maxContactsLoaded,\r\n\t\t\tsearching: searching,\r\n\t\t\tresetFilters: resetFilters,\r\n\t\t\tnoResultsFound: noResultsFound,\r\n\t\t\tcriteriaContactTypeId: criteriaContactTypeId,\r\n\t\t\tcriteriaContactSubTypes: criteriaContactSubTypes,\r\n\t\t\tcriteriaContactStatuses: criteriaContactStatuses,\r\n\t\t\tcriteriaFirstName: criteriaFirstName,\r\n\t\t\tcriteriaLastName: criteriaLastName,\r\n\t\t\t//criteriaPhone: criteriaPhone,\t\t\t\r\n\t\t\tgetContactTypeChildren: getContactTypeChildren,\r\n\t\t\tdefaultContactType: defaultContactType,\r\n\t\t\tactiveContactStatus: activeContactStatus,\r\n\t\t\tcontactTypes: contactTypes,\r\n\t\t\tcontactSubTypes: contactSubTypes,\r\n\t\t\tcontactStatuses: contactStatuses,\r\n\t\t\ttoggleOpenColumn: toggleOpenColumn,\r\n\t\t\tfullScreenWidget: fullScreenWidget,\r\n\t\t\tleftColumnOpen: leftColumnOpen,\r\n\t\t\ttoggleFullScreen: toggleFullScreen\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn vm;\t\t\t\r\n\t});\n","//TODO: Inject dependencies\r\ndefine('viewmodels/home/index',['plugins/router', 'services/navigation', 'services/session', 'config.services', 'services/datacontext'],\r\n    function (router, navigation, session, servicesConfig, datacontext) {\r\n        // Internal properties and functions\r\n\r\n        var cohortPatientSelectPanelShowing = ko.observable(false);\r\n        var cohorts = ko.observableArray();\r\n\r\n        ko.extenders.calculateShowingPatients = function (target, value) {\r\n            target.subscribe(function () {\r\n                //console.log('Cohorts have checked or changed - ', cohorts());\r\n            });\r\n            return target;\r\n        };\r\n\r\n        var computedCohorts = ko.computed(function () {\r\n            var theseCohorts = [];\r\n            ko.utils.arrayForEach(cohorts(), function (cohort) {\r\n                cohort.isChecked = ko.observable().extend({ calculateShowingPatients: true });\r\n                theseCohorts.push(cohort);\r\n            });\r\n            return theseCohorts;\r\n        });\r\n\r\n        var cohortEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('10', session.currentUser().contracts()[0].number(), 'cohorts', 'Cohort');\r\n        });\r\n\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            cohortPatientSelectPanelShowing: cohortPatientSelectPanelShowing,\r\n            cohorts: cohorts,\r\n            activate: activate,\r\n            navigation: navigation,\r\n            computedCohorts: computedCohorts,\r\n            title: 'Home'\r\n        };\r\n\r\n        return vm;\r\n        \r\n        function activate() {\r\n            getCohorts();\r\n        }\r\n\r\n        function getCohorts() {\r\n            datacontext.getEntityList(cohorts, cohortEndPoint().EntityType, cohortEndPoint().ResourcePath, null, null, false);\r\n        }\r\n    });\n","define('viewmodels/home/myhome/myhome',['services/session', 'services/datacontext', 'config.services', 'viewmodels/shell/shell', 'models/base', 'services/local.collections', 'services/navigation', 'plugins/router'],\r\n    function (session, datacontext, servicesConfig, shell, modelConfig, localCollections, navigation, router) {\r\n\r\n\t\tvar subscriptionTokens = [];\r\n        function CalendarOptionsModel(events, header, editable, viewDate, defaultView) {\r\n            var self = this;\r\n            // Set the events equal to an observableArray of unwrapped events\r\n            self.events = events;\t\t\t\r\n            self.header = header;\r\n            self.editable = editable;\r\n            self.viewDate = viewDate || ko.observable(new Date());\r\n            self.defaultView = defaultView;\r\n            self.eventClick = function (event) {\r\n                // If we are already in the context of the patient\r\n                if (navigation.currentRoute() && navigation.currentRoute().config.title === 'Individual') {\r\n                    // Get the goals subroute\r\n                    var thisSubRoute = ko.utils.arrayFirst(navigation.currentRoute().config.settings.pages, function (page) {\r\n                        return page.title === 'goals';\r\n                    });\r\n                    // And set the new sub route\r\n                    navigation.setSubRoute(thisSubRoute);\r\n                } else {\r\n                    // Get the event\r\n                    var thisEvent = datacontext.getEventById(event.id);\r\n                    // Show the event details modal\r\n                    eventModalEntity().event(thisEvent);\r\n                    shell.currentModal(eventModal);\r\n                    eventModalShowing(true);\r\n                }\r\n            };\r\n        }\r\n\r\n        var newTodo = ko.observable();\r\n\t\tvar todosLoading = ko.computed(datacontext.todosSaving).extend({ throttle: 50 });\r\n        var initialized = false;\t\t\r\n        var selectedCohortToken;\r\n        var maxPatientCount = ko.observable(20);\r\n        var cohortPatientsSkip = ko.observable(0);\r\n\t\t//new paging\r\n\t\tvar maxTodosCount = ko.observable(400); // max todos to load\r\n\t\tvar todosSkip = ko.observable(0);\t\t\r\n\t\tvar todosTake = ko.observable(100); \r\n\t\tvar todosTotalCount = ko.observable(0);\t\t\r\n\t\tvar canLoadMoreTodos = ko.observable(false);\t\t\r\n\t\tvar maxToToDosLoaded = ko.observable(false);\r\n\t\tvar todosProcessing = ko.observable(false);\r\n\t\t\r\n        var fullScreenWidget = ko.observable();\r\n\r\n        var leftColumnOpen = ko.observable();\r\n        var myToDoListOpen = ko.observable(true);\r\n        var myInterventionListOpen = ko.observable(true);\r\n        var myWorkListOpen = ko.observable(false);\r\n\r\n        var modalShowing = ko.observable(false);\r\n        var modalEntity = ko.observable(new ModalEntity(modalShowing));\r\n\r\n        // Event details modal\r\n        var eventModalShowing = ko.observable(false);\r\n        var eventModalEntity = ko.observable(new EventModalEntity(eventModalShowing));\r\n        function dummyFunction () { console.log('something was done'); }\r\n\t\tvar eventModalSettings = {\r\n\t\t\ttitle: 'Event Details',\r\n\t\t\tentity: eventModalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/event.details', \r\n\t\t\tshowing: eventModalShowing, \r\n\t\t\tsaveOverride: dummyFunction, \r\n\t\t\tcancelOverride: dummyFunction, \r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: null\r\n\t\t}\r\n        var eventModal = new modelConfig.modal(eventModalSettings);\r\n\r\n        // Columns to override the default sorts\r\n        var selectedTodoSortColumn = ko.observable();\r\n\t\tvar backendSort = ko.observable('-DueDate'); //default todo sort\r\n\t\tvar lastSort = ko.observable( backendSort() );\r\n        var selectedInterventionSortColumn = ko.observable();\r\n\r\n        function saveOverride () {\r\n            datacontext.saveToDo(newTodo(), 'Insert').then(saveCompleted);\r\n\r\n            function saveCompleted(todo) {\r\n                // todo.isNew(false);\r\n                // localCollections.todos.push(newTodo());\r\n\t\t\t\tvar dummy = myToDos().length;\r\n\t\t\t\ttodo.clearDirty();\r\n            }\r\n        };\r\n        function cancelOverride () {\r\n            datacontext.cancelEntityChanges(modalEntity().todo());\r\n\t\t\tmodalEntity().todo().clearDirty();\r\n        };\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Create To Do',\r\n\t\t\tentity: modalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/todo.edit', \r\n\t\t\tshowing: modalShowing, \r\n\t\t\tsaveOverride: saveOverride, \r\n\t\t\tcancelOverride: cancelOverride, \r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: null\r\n\t\t}\r\n        var modal = new modelConfig.modal(modalSettings);\r\n\r\n        function Event() {\r\n            var self = this;\r\n            self.id = ko.observable();\r\n            self.title = ko.observable();\r\n            self.start = ko.observable();\r\n            self.allDay = ko.observable(false);\r\n            self.url = ko.observable('');\r\n            self.patientId = ko.observable('');\r\n            self.patientName = ko.observable('');\r\n            self.assignedToName = ko.observable('');\r\n            self.typeId = ko.observable('');\r\n        }\r\n\r\n        // Toggle the active sort.\r\n        //  note: the 3'rd click on a sort field is clearing the sort (!)\r\n        function toggleTodoSort(sender) {\r\n            // If the current column is the one to sort by\r\n            if (selectedTodoSortColumn() && selectedTodoSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                // If it ends in desc\r\n                if (selectedTodoSortColumn() && selectedTodoSortColumn().substr(selectedTodoSortColumn().length - 4, 4) === 'desc' ) {\r\n                    // Clear the sort column, as it should be undone\r\n                    selectedTodoSortColumn(null);\r\n\t\t\t\t\tbackendSort(null);\r\n                } else {\r\n                    // Else set it as the sort column\r\n                    selectedTodoSortColumn(sender.sortProperty + ' desc');\r\n\t\t\t\t\tif( sender.backendSort ){\r\n\t\t\t\t\t\tbackendSort('-'+ sender.backendSort);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbackendSort(null);\r\n\t\t\t\t\t}\r\n                }\r\n            } else {\r\n                // Else set it as the new sort column\r\n                selectedTodoSortColumn(sender.sortProperty);\r\n\t\t\t\tif( sender.backendSort ){\r\n\t\t\t\t\tbackendSort(sender.backendSort);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbackendSort(null);\r\n\t\t\t\t}\r\n            }\r\n        }\r\n\r\n        // Toggle the active intervention sort\r\n        function toggleInterventionSort(sender) {            \r\n            // If the current column is the one to sort by\r\n            if (selectedInterventionSortColumn() && selectedInterventionSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                // If it ends in desc\r\n                if (selectedInterventionSortColumn() && selectedInterventionSortColumn().substr(selectedInterventionSortColumn().length - 4, 4) === 'desc' ) {\r\n                    // Clear the sort column, as it should be undone\r\n                    selectedInterventionSortColumn(null);\r\n                } else {\r\n                    // Else set it as the sort column\r\n                    selectedInterventionSortColumn(sender.sortProperty + ' desc');\r\n                }\r\n            } else {\r\n                // Else set it as the new sort column\r\n                selectedInterventionSortColumn(sender.sortProperty);\r\n            }\r\n        }\r\n\r\n        // The end point to use when getting cohorts\r\n        var cohortEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohorts', 'Cohort');\r\n        });\r\n        // The end point to use when getting cohorts\r\n        var currentCohortsPatientsEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohortpatients', 'Patient', { Skip: cohortPatientsSkip(), Take: maxPatientCount() });\r\n        });\r\n\r\n        // Internal properties and functions\r\n        var newEvent = ko.observable(new Event());\r\n        var myEvents = ko.observableArray();\r\n        var myHeader = {\r\n                left: 'title',\r\n                right: 'today agendaWeek,month prev,next'\r\n        };\r\n        // The date to start the calendar on\r\n        var thisDate = ko.observable(new Date());\r\n\r\n        // List of cohorts for this care manager\r\n        var cohortsList = ko.observableArray();\r\n        // The currently selected cohort\r\n        var selectedCohort = ko.observable();\r\n        // A list of patients, in this cohort\r\n        var patientsList = ko.observableArray();\r\n\t\t\r\n\t\tvar updateCalendarEvents = function( theseTodos ){\t\t\t\r\n            //TODO: separate the events from todos as they need to be sorted by dueDate range per calendar view.\r\n\t\t\tmyEvents.removeAll();\r\n\t\t\tvar events = datacontext.getCalendarEvents(theseTodos);\t//translate todos to events\r\n\t\t\tko.utils.arrayPushAll(myEvents, events);\r\n\t\t\tmyEvents.valueHasMutated();\r\n\t\t\tdatacontext.syncCalendarEvents(theseTodos);\t//sync Event entities from given todos\r\n\t\t};\r\n\t\t\t\r\n\t\tvar refreshMyTodos = function(){\t\t\t\t\t\t           \r\n            // Either sort by the selected sort or the default\r\n\t\t\tvar selectedSortCol = selectedTodoSortColumn();\t\t\t\t\t\r\n            var orderString = selectedSortCol ? selectedSortCol : 'dueDate desc';\t\t\t\r\n            // Add the second and third orders to the string\r\n            orderString = orderString + ', category.name, title';\r\n            // Go get the todos locally\r\n\t\t\tvar theseTodos = getCurrentUserToDos(orderString);\r\n            updateCalendarEvents(theseTodos);                       \r\n            return theseTodos;\t\t\t\r\n\t\t};\r\n\t\tvar myToDosQueryResult = ko.observableArray([]);\r\n\t\tvar myToDos = ko.observableArray([]);\r\n        var myToDosUpdater = ko.computed(function () {\r\n\t\t\tvar theseTodos = [];\r\n\t\t\t//Subscribe to localcollection todos: will trigger the refresh when a todo is deleted\\updated\r\n\t\t\tvar allTodos = localCollections.todos();\r\n\t\t\t//Subscribe to sorting\r\n\t\t\tvar selectedSortCol = selectedTodoSortColumn();\t\t\t\r\n\t\t\tvar bSort = backendSort? backendSort() : null;\r\n\t\t\tvar processing = todosProcessing();\t\t\t\r\n\t\t\tif( !processing ){\r\n\t\t\t\tif( backendSort() !== lastSort() ){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tlastSort( backendSort() );\t\t\t\t\r\n\t\t\t\t\tclearTodosCacheAndLoad();\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\ttheseTodos = [];\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\t//refresh from local query\r\n\t\t\t\t\ttheseTodos = refreshMyTodos();\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\t\t\t\t\r\n\t\t\tmyToDos(theseTodos);\r\n\t\t\treturn theseTodos;\r\n        }).extend({ throttle: 50 });\r\n\t\t\r\n\t\t\t\t\r\n\t\tvar todosReloading = ko.computed( function(){\t\t\t\r\n\t\t\tvar saving = todosLoading();\r\n\t\t\tvar processing = todosProcessing();\r\n\t\t\treturn (saving || processing);\t\t\t\r\n\t\t}).extend({ throttle: 20 });\r\n\r\n\t\tvar todosShowingText = ko.computed( function(){\r\n\t\t\tvar showing = ' showing ';\r\n\t\t\tvar totalCount = todosTotalCount();\r\n\t\t\tvar processing = todosProcessing();\r\n\t\t\tvar todos = myToDos? myToDos() : [];\r\n\t\t\tvar reloading = todosReloading();\r\n\t\t\tif( reloading || processing ){\r\n\t\t\t\tshowing = 'Loading...';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tshowing = todos.length + ' showing';\r\n\t\t\t\tif( todos.length < totalCount ) {\r\n\t\t\t\t\tshowing += ' out of ' + totalCount;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\t\r\n\t\t\treturn showing;\r\n\t\t}).extend({ throttle: 100 });\r\n\t\t\r\n        // My interventions\r\n        var myInterventions = ko.computed(function () {\r\n            var theseInterventions = [];\r\n            //Subscribe to localcollection todos\r\n            var allInterventions = localCollections.interventions();\r\n            var params = [];\r\n            var orderString = '';\r\n            // Add these parameters to the query\r\n            params.push(new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '=='));\r\n            params.push(new modelConfig.Parameter('statusId', '2', '!='));\r\n            params.push(new modelConfig.Parameter('statusId', '3', '!='));\r\n            // Either sort by the selected sort or the default\r\n            orderString = selectedInterventionSortColumn() ? selectedInterventionSortColumn() : 'dueDate desc, startDate desc';\r\n            // Add the second and third orders to the string\r\n            var finalOrderString = orderString + ', category.name, description';\r\n            // Go get the interventions\r\n            theseInterventions = datacontext.getInterventionsQuery(params, finalOrderString);\r\n            return theseInterventions;\r\n        }).extend({ throttle: 50 });\r\n\r\n        // List of columns currently showing\r\n        var activeTodoColumns = ko.observableArray(['priority','duedate','title','category','patient']);\r\n\r\n        // List of columns currently showing\r\n        var activeInterventionColumns = ko.observableArray(['dueDate','description','category','patient','goal']);\r\n\r\n        // Object containing the options\r\n        var calendarOptions = new CalendarOptionsModel(myEvents, myHeader, false, thisDate, 'agendaWeek')\r\n\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            activate: activate,\r\n            attached: attached,\r\n\t\t\tdetached: detached,\r\n            newEvent: newEvent,\r\n            addEvent: addEvent,\r\n            fullScreenWidget: fullScreenWidget,\r\n            toggleFullScreen: toggleFullScreen,\r\n            cohortsList: cohortsList,\r\n            selectedCohort: selectedCohort,\r\n            patientsList: patientsList,\r\n            calendarOptions: calendarOptions,\r\n            title: 'Home',\r\n            myToDos: myToDos,\r\n\t\t\ttodosShowingText: todosShowingText,\r\n\t\t\tcanLoadMoreTodos: canLoadMoreTodos,\r\n\t\t\tloadMoreTodos: loadMoreTodos,\r\n\t\t\tmaxToToDosLoaded: maxToToDosLoaded,\r\n\t\t\ttodosReloading: todosReloading,\r\n            myInterventions: myInterventions,\r\n            activeTodoColumns: activeTodoColumns,\r\n            activeInterventionColumns: activeInterventionColumns,\r\n            editToDo: editToDo,\r\n            addToDo: addToDo,\r\n            toggleOpenColumn: toggleOpenColumn,\r\n            leftColumnOpen: leftColumnOpen,\r\n            toggleTodoSort: toggleTodoSort,\r\n            toggleInterventionSort: toggleInterventionSort,\r\n            selectedTodoSortColumn: selectedTodoSortColumn,\r\n            selectedInterventionSortColumn: selectedInterventionSortColumn,\r\n            myToDoListOpen: myToDoListOpen,\r\n            myWorkListOpen: myWorkListOpen,\r\n            myInterventionListOpen: myInterventionListOpen,\r\n            toggleWidgetOpen: toggleWidgetOpen\r\n        };\r\n\r\n        return vm;\r\n\r\n        // Toggle whether the widget is open or not\r\n        function toggleWidgetOpen(sender) {\r\n            if (sender === myToDoListOpen && (myWorkListOpen() || myInterventionListOpen())) {\r\n                myToDoListOpen(!myToDoListOpen());\r\n            } else if (sender === myInterventionListOpen && (myWorkListOpen() || myToDoListOpen())) {\r\n                myInterventionListOpen(!myInterventionListOpen());\r\n            } else if (sender === myWorkListOpen && (myInterventionListOpen() || myToDoListOpen())) {\r\n                myWorkListOpen(!myWorkListOpen());\r\n            }\r\n        }\r\n\r\n        function addEvent(event) {\r\n\r\n            // Check if the event already exists\r\n            var matchedEvent = ko.utils.arrayFirst(localCollections.events(), function (evt) {\r\n                return evt.id() === event.id();\r\n            });\r\n\r\n            if (!matchedEvent) {\r\n                var params = {\r\n                    id: event.id(),\r\n                    title: event.title(),\r\n                    start: event.start(),\r\n                    allDay: event.allDay(),\r\n                    patientId: event.patientId(),\r\n                    patientName: event.patientName(),\r\n                    assignedToName: event.assignedToName(),\r\n                    typeId: event.typeId()\r\n                };\r\n\r\n                var thisEvent = datacontext.createCalendarEvent(params);   \r\n            }\r\n        }\r\n\r\n        function activate() {\r\n            if (!initialized) {\r\n                initializeViewModel();\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                initialized = true;\t\t\t\t\r\n            }\t\t\t\r\n\t\t\tif( !todosProcessing() ){\t//from some reason the activate fires twice when just logging in. (only in qa) \t\t\t\t\r\n\t\t\t\treturn clearTodosCacheAndLoad();\t//reloaded every time we navigate back to myhome, since the todos tab activity may clear the cache.\t\t\t\r\n\t\t\t}\r\n        }\r\n\r\n        function attached() {\r\n            $('.calendar').fullCalendar('render');\r\n        }\r\n\r\n        function getEvents() {\r\n            datacontext.getEventsByUserId(myEvents, session.currentUser().userId(), false);\r\n        }\r\n\r\n        function toggleOpenColumn() {\r\n            leftColumnOpen(!leftColumnOpen());\r\n            resizeCalendar();\r\n        }\r\n\r\n        function toggleFullScreen(widgetname) {\r\n            // If this widget is already fullscreen,\r\n            if (widgetname === fullScreenWidget()) {\r\n                // Remove full screen widget\r\n                fullScreenWidget(null);\r\n            } else {\r\n                // Else, set it as the full screen widget\r\n                fullScreenWidget(widgetname);\r\n            }\r\n            resizeCalendar();\r\n        }\r\n\r\n        function resizeCalendar() {\r\n            // Wait 1 second for animations to finish then trigger calendar redraw\r\n            setTimeout(function () {\r\n                $('.calendar').fullCalendar('render');\r\n            }, 500);\r\n        }\r\n\r\n        function initializeViewModel() {\r\n            // BUNCH OF LOGIC HERE WE WILL PROBABLY REUSE LATER\r\n            // Get the mock events for this user\r\n            //getEvents();\r\n            // Go get a list of cohorts locally\r\n            datacontext.getEntityList(cohortsList, cohortEndPoint().EntityType, cohortEndPoint().ResourcePath, null, null, false, null, 'sName').then(cohortsReturned);            \r\n\t\t\t\t\t\r\n\t\t\tif (session.currentUser().settings()) {\r\n\t\t\t\tvar totalQueryCount = datacontext.getSettingsParam('TotalQueryCount');\r\n\t\t\t\tif( totalQueryCount && !isNaN(totalQueryCount)){\r\n\t\t\t\t\t//the max todos to load\r\n\t\t\t\t\tmaxTodosCount( parseInt( totalQueryCount ) );\t\t\t\t\t\r\n                }\r\n\t\t\t    var take = datacontext.getSettingsParam('QueryTake');\r\n\t\t\t    if( take && !isNaN(take) ){\r\n\t\t\t\t    //the take\r\n\t\t\t\t    todosTake( parseInt( take ) );\t\t\t\t\t\r\n\t\t\t    }\r\n            }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            // Get my Interventions\r\n            getCurrentUserInterventions();\r\n            // On first load show the patients list flyout and open the data column\r\n            // Subscribe to changes on the selected cohort to get an updated patient list when it changes\r\n            selectedCohortToken = selectedCohort.subscribe(function () {\r\n                patientsList([]);\r\n                getPatientsByCohort();\r\n            });\r\n\t\t\tsubscriptionTokens.push( selectedCohortToken );\r\n\t\t\t\r\n            // Set initialized true so we don't accidentally re-initialize the view model\r\n            initialized = true;\r\n            return true;\r\n\r\n            function cohortsReturned() {\r\n            }\r\n        };\r\n\r\n        function getPatientsByCohort(searchValue) {\r\n            var parameters = {};\r\n            // Create an object to hold the parameters\r\n            var parameters = currentCohortsPatientsEndPoint().Parameters;\r\n            // If a search value is passed in\r\n            if (searchValue) {\r\n                // Add a filter parameter onto parameters\r\n                parameters.SearchFilter = searchValue;\r\n            }\r\n            else { parameters.SearchFilter = null; }\r\n            // TODO : Add Skip and Take to the endpoint and pass it down as params\r\n            // TODO : Make sure the service is checking locally first before going out to the server to get these patients\r\n            datacontext.getEntityList(patientsList, currentCohortsPatientsEndPoint().EntityType, currentCohortsPatientsEndPoint().ResourcePath, null, selectedCohort().iD(), true, parameters).then(calculateSkipTake);\r\n        }\r\n\r\n        function choosePatient(patient) {\r\n            // If there is a current patient and it is equal to the patient you are trying to set to current\r\n            if (selectedPatient() && selectedPatient() === patient) {\r\n                // Then do nothing (this is because we don't want to do anything if\r\n                // We have already selected our patient.\r\n                patientsListFlyoutOpen(false);\r\n            }\r\n                // Else check if datacontext exists in the global namespace (It should if datacontext.js has been loaded)\r\n            else if (datacontext) {\r\n                // Else go choose a new patient\r\n                var patientId = ko.unwrap(patient.id);\r\n                // Go get a patient to use as the current patient.  TODO : Remove this when we have a list of patients to select from\r\n                datacontext.getEntityById(selectedPatient, patientId, patientEndPoint().EntityType, patientEndPoint().ResourcePath, true).then(function () { patientsListFlyoutOpen(false); });\r\n                // Go get a list of problems for the currently selected patient\r\n                datacontext.getEntityList(null, patientProblemEndPoint().EntityType, patientProblemEndPoint().ResourcePath + patientId + '/Problems', null, null, true);\r\n                // Go get a list of programs for the currently selected patient\r\n                //datacontext.getEntityList(null, patientProgramsEndPoint().EntityType, patientProgramsEndPoint().ResourcePath, null, patientId, true);\r\n            }\r\n        }\r\n\r\n        function calculateSkipTake() {\r\n        }\r\n\r\n        function editToDo (sender) {\r\n        }\r\n\r\n        function addToDo () {\r\n            newTodo(datacontext.createEntity('ToDo', { id: -1, statusId: 1, priorityId: 0, createdById: session.currentUser().userId(), assignedToId: session.currentUser().userId() }));\r\n            newTodo().isNew(true);\r\n\t\t\tnewTodo().watchDirty();\r\n            modalEntity().todo(newTodo());\r\n            shell.currentModal(modal);\r\n            modalShowing(true);\r\n        }\r\n\r\n        function getCurrentUserToDos(orderString) {\r\n            // Go get a list of my todos\t\t\t\t\t\t\r\n\t\t\tvar params = []\r\n\t\t\tparams.push( new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '==') );\r\n\t\t\tparams.push( new modelConfig.Parameter('statusId', '2', '!=') );\r\n\t\t\tparams.push( new modelConfig.Parameter('statusId', '4', '!=') );\r\n\t\t\treturn datacontext.getLocalTodos(params, orderString);\t\t\t\t\t\t        \r\n        }\r\n\t\t\r\n\t\t/**\r\n\t\t*\tclear all todos from localCollections and breeze cache.\r\n\t\t*\t@method\tclearTodosCacheAndLoad\r\n\t\t*/\r\n\t\tfunction clearTodosCacheAndLoad(){\t\t\t\r\n\t\t\ttodosSkip(0);\t\t\t\r\n\t\t\tcanLoadMoreTodos(false);\r\n\t\t\tmaxToToDosLoaded(false);\r\n\t\t\t//assign empty array so todos wount be referenced from ko data binding of the views that had them showing.\t\t\t\r\n\t\t\tmyToDos([]);\r\n\t\t\ttodosProcessing(true);\t\t\t\r\n\t\t\tvar todos = datacontext.getLocalTodos([], null);\r\n\t\t\t//empty the collection. the todos should be cleaned out by garbage collector.\r\n\t\t\tlocalCollections.todos([]);\r\n\t\t\treturn setTimeout( function(){\r\n\t\t\t\t//short delay to allow the ko data binding to release references to these todos, before removing them: \r\n\t\t\t\tif( todos && todos.length > 0 ){\r\n\t\t\t\t\tko.utils.arrayForEach( todos, function(todo){\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( todo ){\r\n\t\t\t\t\t\t\t//remove from breeze cache:\r\n\t\t\t\t\t\t\ttodo.entityAspect.setDeleted();\r\n\t\t\t\t\t\t\ttodo.entityAspect.acceptChanges();\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t});\t\t\t\t\t\r\n\t\t\t\t}\t\t\r\n\t\t\t\treturn loadMoreTodos().then(generateCalendarEvents);\t//load first block with the new sort\r\n\t\t\t}, 50);\r\n\t\t}\r\n\t\t\r\n\t\tfunction loadMoreTodos(){\r\n\t\t\ttodosProcessing(true);\t\r\n\t\t\tcanLoadMoreTodos(false);\r\n\t\t\treturn datacontext.getToDosRemoteOpenAssignedToMe( myToDosQueryResult, todosSkip(), todosTake(), backendSort(), todosTotalCount ).then( todosReturned );\r\n\t\t}\r\n\t\t\t\t\r\n\t\tfunction todosReturned(){\r\n\t\t\tvar returnedCount = myToDosQueryResult()? myToDosQueryResult().length : 0;\r\n\t\t\tvar skipped = todosSkip();\r\n\t\t\tvar nextSkip = skipped + todosTake();\r\n\t\t\tif( nextSkip < todosTotalCount() && nextSkip < maxTodosCount() ){\r\n\t\t\t\ttodosSkip(nextSkip);\t\t\r\n\t\t\t\tcanLoadMoreTodos(true);\r\n\t\t\t}\t\r\n\t\t\telse{\r\n\t\t\t\tcanLoadMoreTodos(false);\r\n\t\t\t}\t\t\t\t\r\n\t\t\tif( todosTotalCount() < maxTodosCount() ){\t\t\t\r\n\t\t\t\tmaxToToDosLoaded(false);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif( returnedCount && (skipped + returnedCount) >= maxTodosCount() ){\r\n\t\t\t\t\tmaxToToDosLoaded(true);\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t\tvar todos = refreshMyTodos();\r\n\t\t\tmyToDos(todos);\r\n\t\t\ttodosProcessing(false);\r\n\t\t}\r\n\t\t\r\n\t\tfunction generateCalendarEvents(){\r\n\t\t\t//after the current user todos loaded: get them locally\r\n\t\t\t//TODO: will have to get todos by DueDate date range\t\t\t\r\n\t\t\tvar theseTodos = getCurrentUserToDos();\r\n\t\t\t//create calendar event entities to reflect these todos:\r\n            datacontext.syncCalendarEvents(theseTodos);\r\n\t\t}\r\n\r\n        function getCurrentUserInterventions() {\r\n            // Go get a list of my todos\r\n            datacontext.getInterventions(null, { StatusIds: [1], AssignedToId: session.currentUser().userId() });\r\n        }\r\n\r\n        function ModalEntity(modalShowing) {\r\n            var self = this;\r\n            self.todo = ko.observable();\r\n            self.canSaveObservable = ko.observable(true);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    var todook = false;\r\n                    if (self.todo()) {                        \r\n\t\t\t\t\t\ttodook = self.todo().isValid();\r\n                    }\r\n                    return todook && self.canSaveObservable();\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { todo: self.todo, canSave: self.canSave, showing: modalShowing  };\r\n        }\r\n\r\n        function EventModalEntity(modalShowing) {\r\n            var self = this;\r\n            self.event = ko.observable();\r\n            self.canSaveObservable = ko.observable(true);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    var todook = false;\r\n                    if (self.event()) {\r\n                        // var todotitle = !!self.todo().title();\r\n                        // var todostatus = !!self.todo().status();\r\n                        // todook = todotitle && todostatus;\r\n                    }\r\n                    // return todook && self.canSaveObservable();\r\n                    return false;\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { event: self.event, canSave: self.canSave, showing: modalShowing  };\r\n        }\r\n\r\n\t\tfunction detached() {\r\n\r\n\t\t}\r\n    });\n","define('viewmodels/home/population/index',['plugins/router', 'services/navigation', 'config.services', 'services/session', 'services/datacontext'],\r\n    function (router, navigation, servicesConfig, session, datacontext) {\r\n\r\n        var patients = ko.observableArray();\r\n        var initialized = false;\r\n        var selectedCohorts = ko.observableArray();\r\n        var showingPatients = ko.observableArray();\r\n        var currentUser = session.currentUser();\r\n\r\n\r\n        var thesePatients = {\r\n            patients: [\r\n                { \r\n                    \"id\": 1,\r\n                    \"name\": \"Billy Condo\",\r\n                    \"overdue\": false,\r\n                    \"conditions\": [6],\r\n                    \"care_gaps\": 3\r\n                },\r\n                { \r\n                    \"id\": 2,\r\n                    \"name\": \"Johnny Hairband\",\r\n                    \"overdue\": false,\r\n                    \"conditions\": [5],\r\n                    \"care_gaps\": 2\r\n                }\r\n            ]\r\n        };\r\n\r\n        //var patientsEndPoint = ko.computed(function() {\r\n        //    if (!currentUser()) {\r\n        //        return '';\r\n        //    }\r\n        //    return new servicesConfig.createEndPoint('1.0', currentUser().contracts()[0].number(), 'patient', 'Patient');\r\n        //});\r\n        \r\n        var vm = {\r\n            patients: patients,\r\n            activate: activate,\r\n            attached: attached,\r\n            currentUser: currentUser,\r\n            title: 'index'\r\n        };\r\n\r\n        return vm;\r\n        \r\n        function activate() {\r\n        }\r\n\r\n        function attached() {\r\n            if (!initialized) {\r\n                initialized = true;\r\n            }\r\n            createVenn();\r\n        }\r\n\r\n        function createVenn () {\r\n            var thisVisual = new Visualization('#visualizer', thesePatients.patients, 'care_gaps');\r\n        }\r\n\r\n    });\n","//TODO: Inject dependencies\r\ndefine('viewmodels/home/todos/index',['services/session', 'services/datacontext', 'config.services', 'models/base', 'services/local.collections', 'viewmodels/home/myhome/myhome'],\r\n    function (session, datacontext, servicesConfig, modelConfig, localCollections, myHomeIndex) {\r\n\r\n        var initialized = false;\r\n\t\tvar subscriptionTokens = [];\r\n        var catNotSet = {\r\n            id: ko.observable(''),\r\n            name: ko.observable('Not Set'),\r\n        }\r\n\r\n        var filtersHeaderOpen = ko.observable(true);\r\n\r\n        // Pointer to add todo in myhome\r\n        var addToDo = myHomeIndex.addToDo;\r\n\r\n        // Calculated thirty days ago\r\n        var thirtyDaysAgo = new Date(new Date().setDate(new Date().getDate()-30));\r\n        thirtyDaysAgo = moment(thirtyDaysAgo).format();\r\n\t\t\t\r\n\t\t//paging (skip take logic)\r\n\t\tvar maxToToDosLoaded = ko.observable(false);\r\n\t\tvar maxTodosCount = ko.observable(400); // max todos to load per view / query.\r\n\t\tvar todosTake = ko.observable(maxTodosCount()); //set the take for any server query ( one and first page design, without load more )\r\n        var todosTotalCount = ko.observable(0);\r\n\t\tvar todosProcessing = ko.observable(false);\r\n        //var interventionsProcessing = ko.observable(false);\r\n\t\tvar viewChanged = ko.observable(false);\r\n\t\tvar categoryChanged = ko.observable(false);\r\n\t\tvar priorityChanged = ko.observable(false);\r\n        // Which views (filters) are available\r\n        var views = ko.observableArray([\r\n            new View(\t//0\r\n                'interventions',\r\n                'Intervention: Assigned to Others',\r\n                [\r\n                    new modelConfig.Parameter('createdById', session.currentUser().userId(), '=='),\r\n                    new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '!='),\r\n                    new modelConfig.Parameter('statusId', '1', '==')\r\n                ],\r\n                ['duedate','description','category','patient','goal'],\r\n                'dueDate desc, startDate desc',\r\n                null,\r\n                null,\r\n                1\r\n            ),\r\n            new View(\t//1\r\n                'interventions',\r\n                'Intervention: Closed by Others',\r\n                [\r\n                    new modelConfig.Parameter('createdById', session.currentUser().userId(), '=='),\r\n                    new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '!='),\r\n                    new modelConfig.Parameter('statusId', '1', '!=')\r\n                ],\r\n                ['status-small','closeddate','description-small','category','patient','goal'],\r\n                'closedDate desc',\r\n                null,\r\n                null,\r\n                2\r\n            ),\r\n            new View(\t//2\r\n                'interventions',\r\n                'Intervention: My Closed List',\r\n                [\r\n                    new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '=='),\r\n                    new modelConfig.Parameter('statusId', '1', '!=')\r\n                ],\r\n                ['status-small','closeddate','description-small','category','patient','goal'],                 \r\n                'closedDate desc',\r\n                null,\r\n                null,\r\n                3               \r\n            ),\r\n            new View(\t//3\r\n                'interventions',\r\n                'Intervention: My Open List',\r\n                [\r\n                    new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '=='),\r\n                    new modelConfig.Parameter('statusId', '1', '==')\r\n                ],\r\n                ['duedate','description','category','patient','goal'],\r\n                'dueDate desc, startDate desc',\r\n                null,\r\n                null,\r\n                4\r\n            ),\r\n            new View(\t//4\r\n                'todos',\r\n                'To Do: Assigned to Others',\r\n                [\r\n                    new modelConfig.Parameter('createdById', session.currentUser().userId(), '=='),\r\n                    new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '!='),\t\r\n\t\t\t\t\tnew modelConfig.Parameter('assignedToId', '', '!='),\t//filter out the unassigned they have their own filter.\r\n                    new modelConfig.Parameter('statusId', '2', '!='),\r\n                    new modelConfig.Parameter('statusId', '4', '!=')\r\n                ],\r\n                ['priority-small','duedate','title-small','category','patient','assignedto'],\r\n\t\t\t\t'dueDate desc',\r\n\t\t\t\t[\r\n\t\t\t\t\tnew modelConfig.Parameter('StatusIds', [1,3]),\r\n\t\t\t\t\tnew modelConfig.Parameter('CreatedById', session.currentUser().userId()),\r\n\t\t\t\t\tnew modelConfig.Parameter('NotAssignedToId', session.currentUser().userId())\r\n\t\t\t\t],\r\n\t\t\t\t'-DueDate'\r\n            ),\r\n            new View(\t//5\r\n                'todos',\r\n                'To Do: Closed by Others',\r\n                [\r\n                    new modelConfig.Parameter('createdById', session.currentUser().userId(), '=='),\r\n                    new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '!='),\r\n\t\t\t\t\tnew modelConfig.Parameter('assignedToId', '', '!='),\t//filter out the unassigned they have their own filter.\r\n                    new modelConfig.Parameter('statusId', '1', '!='),\r\n                    new modelConfig.Parameter('statusId', '3', '!='),\r\n                    new modelConfig.Parameter('closedDate', new Date(thirtyDaysAgo), '>=')\r\n                ],\r\n                ['status-small','closedon','title-small','category','patient','assignedto'],\r\n                'closedDate desc',\r\n\t\t\t\t[\r\n\t\t\t\t\tnew modelConfig.Parameter('StatusIds', [2,4]),\r\n\t\t\t\t\tnew modelConfig.Parameter('CreatedById', session.currentUser().userId()),\r\n\t\t\t\t\tnew modelConfig.Parameter('FromDate', thirtyDaysAgo),\r\n\t\t\t\t\tnew modelConfig.Parameter('NotAssignedToId', session.currentUser().userId())\r\n\t\t\t\t],\r\n\t\t\t\t'-ClosedDate'\r\n            ),\r\n            new View(\t//6\r\n                'todos',\r\n                'To Do: My Closed List',\r\n                [\r\n                    new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '=='),\r\n                    new modelConfig.Parameter('statusId', '1', '!='),\r\n                    new modelConfig.Parameter('statusId', '3', '!='),\r\n                    new modelConfig.Parameter('closedDate', new Date(thirtyDaysAgo), '>=')\r\n                ],\r\n                ['status-small','closedon','title-small','category','patient','assignedto'],\r\n                'closedDate desc',\r\n\t\t\t\t[\r\n\t\t\t\t\tnew modelConfig.Parameter('StatusIds', [2,4]),\r\n\t\t\t\t\tnew modelConfig.Parameter('AssignedToId', session.currentUser().userId()),\r\n\t\t\t\t\tnew modelConfig.Parameter('FromDate', thirtyDaysAgo)\r\n\t\t\t\t],\r\n\t\t\t\t'-ClosedDate'\r\n            ),\r\n            new View(\t//7\r\n                'todos',\r\n                'To Do: My Open List', \r\n                [\r\n                    new modelConfig.Parameter('assignedToId', session.currentUser().userId(), '=='),\r\n                    new modelConfig.Parameter('statusId', '2', '!='),\r\n                    new modelConfig.Parameter('statusId', '4', '!=')\r\n                ],\r\n                ['priority','duedate','title','category','patient'],\r\n\t\t\t\t'dueDate desc',\r\n\t\t\t\t[ \t\r\n\t\t\t\t\tnew modelConfig.Parameter('StatusIds', [1,3]), \r\n\t\t\t\t\tnew modelConfig.Parameter('AssignedToId', session.currentUser().userId())\r\n\t\t\t\t],\r\n\t\t\t\t'-DueDate'\r\n            ), \r\n\t\t\t new View(\t//8\r\n                'todos',\r\n                'To Do: Open Unassigned', \r\n                [\r\n                    new modelConfig.Parameter('assignedToId', '', '=='),\r\n                    new modelConfig.Parameter('statusId', '2', '!='),\r\n                    new modelConfig.Parameter('statusId', '4', '!=')\r\n                ],\r\n                ['priority','duedate','title','category','patient'],\r\n\t\t\t\t'dueDate desc',\r\n\t\t\t\t[\r\n\t\t\t\t\tnew modelConfig.Parameter('StatusIds', [1,3]),\r\n\t\t\t\t\tnew modelConfig.Parameter('AssignedToId', '-1')\r\n\t\t\t\t],\r\n\t\t\t\t'-DueDate'\r\n            ),\t\t\t \r\n\t\t\t new View(\t//9\r\n                'todos',\r\n                'To Do: Closed Unassigned', \r\n                [\r\n                    new modelConfig.Parameter('assignedToId', '', '=='),\r\n                    new modelConfig.Parameter('statusId', '1', '!='),\r\n                    new modelConfig.Parameter('statusId', '3', '!=')\r\n                ],\r\n                ['priority','duedate','title','category','patient'],\r\n\t\t\t\t'dueDate desc',\r\n\t\t\t\t[\r\n\t\t\t\t\tnew modelConfig.Parameter('StatusIds', [2,4]),\r\n\t\t\t\t\tnew modelConfig.Parameter('AssignedToId', '-1'),\r\n\t\t\t\t\tnew modelConfig.Parameter('FromDate', thirtyDaysAgo)\r\n\t\t\t\t],\r\n\t\t\t\t'-DueDate'\r\n            )\r\n        ]);\r\n\r\n        // Which widget is fullscreen, which is left column\r\n        var fullScreenWidget = ko.observable();\r\n        var leftColumnOpen = ko.observable('todopanel');\r\n\r\n        // Summaries to choose from for pie chart\r\n        var availableTodoSummaries = [\r\n            new Summary('By Priority', 'priority', 'levelName'),\r\n            new Summary('By Category', 'category', 'name'),\r\n            new Summary('By Status', 'status', 'name')\r\n        ];\r\n        // Which summary is selected\r\n        var selectedTodoSummary = ko.observable(availableTodoSummaries[1]);\r\n\r\n        // Summaries to choose from for pie chart\r\n        var availableInterventionSummaries = [\r\n            new Summary('By Category', 'category', 'name'),\r\n            new Summary('By Status', 'status', 'name')\r\n        ];\r\n        // Which summary is selected\r\n        var selectedInterventionSummary = ko.observable(availableInterventionSummaries[0]);\r\n\r\n        // Indicator of processing\r\n        var todosSaving = ko.computed(datacontext.todosSaving);\r\n\r\n        // Which priorities are available to filter on\r\n        var priorities = datacontext.enums.priorities;\r\n\r\n        // Which view (filters) to apply\r\n        var selectedView = ko.observable();\r\n        // Which view was last used\r\n        var lastSelectedView = ko.observable();\r\n        // Filter down by categories\r\n        var selectedCategories = ko.observableArray();\r\n\t\tvar lastSelectedCategories = ko.observableArray([]);\r\n\t\tvar lastSelectedPriorities = ko.observableArray([]);\r\n        // Filter down by priorities\r\n        var selectedPriorities = ko.observableArray();\r\n        // Column to override the default sort\r\n        var selectedSortColumn = ko.observable();\r\n\t\tvar backendSort = ko.observable('-DueDate'); //default todo sort\r\n\t\tvar lastSort = ko.observable( backendSort() );\r\n\t\t\r\n        // Filters showing or not?\r\n        var filtersOpen = ko.observable();\r\n\r\n        // Which categories are available to filter on\r\n        var categories = ko.computed(function () {\r\n            var thesetodocats;\r\n            // If there is a selected view and it is of type todos\r\n            if (selectedView() && selectedView().type() === 'todos') {\r\n                // Use the todo categories\r\n                thesetodocats = datacontext.enums.toDoCategories();\r\n            } else {\r\n                // Else use the intervention categories\r\n                thesetodocats = datacontext.enums.interventionCategories();\r\n            }\r\n            // Make a copy of the categories list\r\n            var theseCats = thesetodocats.slice(0, thesetodocats.length);\r\n            // If there is not already a not set option,\r\n            if (theseCats.indexOf(catNotSet) === -1) {\r\n                // Add it also\r\n                theseCats.push(catNotSet);\r\n            }\r\n            return theseCats;\r\n        });\r\n\r\n        var selectedViewToken = selectedView.subscribe(function (newValue) {\r\n            // Whenever the selected view changes, clear all filters and sorting\r\n            selectedSortColumn(null);\r\n\t\t\tbackendSort(null);\r\n            if (lastSelectedView() && lastSelectedView().type() !== selectedView().type()) {\r\n                // and if so clear secondary filters\r\n                selectedCategories([]);\r\n                selectedPriorities([]);\t\t\t\t\r\n            }\r\n\t\t\tif(lastSelectedView() && lastSelectedView().name() !== selectedView().name()){\r\n\t\t\t\tviewChanged(true);\r\n\t\t\t}\r\n\t\t\tlastSelectedView(newValue);\r\n        });\r\n\t\tsubscriptionTokens.push( selectedViewToken );\r\n\t\t\r\n        // If there is selected categories, we need to filter out all the others\r\n        var activeFilters = ko.computed(function () {\r\n            var selectedcategories = selectedCategories();\r\n\t\t\tvar selectedpriorities = selectedPriorities();\r\n\t\t\tvar categoryFilterChanged = isFilterSelectionChanged( selectedCategories(), lastSelectedCategories() );            \r\n\t\t\tvar priorityFilterChanged = isFilterSelectionChanged( selectedPriorities(), lastSelectedPriorities() );\r\n\t\t\tif( categoryFilterChanged ){\r\n\t\t\t\tlastSelectedCategories([]);\r\n\t\t\t\tko.utils.arrayForEach( selectedCategories(), function( item ){\r\n\t\t\t\t\tlastSelectedCategories.push( item );\r\n\t\t\t\t});\r\n\t\t\t\tcategoryChanged(true);\r\n\t\t\t}\r\n\t\t\tif( priorityFilterChanged ){\r\n\t\t\t\tlastSelectedPriorities([]);\r\n\t\t\t\tko.utils.arrayForEach( selectedPriorities(), function( item ){\r\n\t\t\t\t\tlastSelectedPriorities.push( item );\r\n\t\t\t\t});\r\n\t\t\t\tpriorityChanged(true);\r\n\t\t\t}\r\n\t\t\tvar returnfilters = [];\r\n            // Check if there are categories selected\r\n            if (selectedcategories.length > 0) {\r\n                // Grab all the other categories\r\n                var othercats = ko.utils.arrayFilter(categories(), function (cat) {\r\n                    // Check if this category is a selected category\r\n                    var match = ko.utils.arrayFirst(selectedcategories, function (selectCat) {\r\n                        return selectCat.id() === cat.id();\r\n                    });\r\n                    // If there is a match found,\r\n                    if (match) {\r\n                        // Don't return this category\r\n                        return false;\r\n                    } else {\r\n                        // If not do return it\r\n                        return true;\r\n                    }\r\n                });\r\n                ko.utils.arrayForEach(othercats, function (cat) {\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', cat.id(), '!='));\r\n                });\r\n                // Not set is null, so only filter out nulls if that option isn't selected\r\n                var foundselectednull = false;\r\n                ko.utils.arrayForEach(selectedcategories, function (cat) {\r\n                    if (cat.id() === '') {\r\n                        foundselectednull = true;\r\n                    }\r\n                });\r\n                // If we didn't select for nulls\r\n                if (!foundselectednull) {\r\n                    // Don't return nulls either\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', '', '!='));\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', null, '!='));\r\n                }\r\n            }\r\n             // Check if there are priorities selected\r\n            if (selectedpriorities.length > 0) {\r\n                // Grab all the other priorities\r\n                var othercats = ko.utils.arrayFilter(priorities(), function (cat) {\r\n                    // Check if this priority is a selected priority\r\n                    var match = ko.utils.arrayFirst(selectedpriorities, function (selectCat) {\r\n                        return selectCat.id() === cat.id();\r\n                    });\r\n                    // If there is a match found,\r\n                    if (match) {\r\n                        // Don't return this category\r\n                        return false;\r\n                    } else {\r\n                        // If not do return it\r\n                        return true;\r\n                    }\r\n                });\r\n                ko.utils.arrayForEach(othercats, function (cat) {\r\n                    returnfilters.push(new modelConfig.Parameter('priorityId', cat.id(), '!='));\r\n                });\r\n                // Not set is null, so only filter out nulls if that option isn't selected\r\n                var foundselectednull = false;\r\n                ko.utils.arrayForEach(selectedpriorities, function (priority) {\r\n                    if (priority.id() === '0') {\r\n                        foundselectednull = true;\r\n                    }\r\n                });\r\n                // If we didn't select for nulls\r\n                if (!foundselectednull) {\r\n                    // Don't return nulls either\r\n                    returnfilters.push(new modelConfig.Parameter('priorityId', '', '!='));\r\n                    returnfilters.push(new modelConfig.Parameter('priorityId', null, '!='));\r\n                }\r\n            }\r\n            return returnfilters;\r\n        }).extend({ throttle: 50 });\r\n\r\n        // Actively showing columns\r\n        var activeColumns = ko.computed(function () {\r\n            var cols = [];\r\n            if (selectedView()) {\r\n                cols = selectedView().columns();\r\n            }\r\n            return cols;\r\n        });\r\n\t\t\r\n\t\tfunction manageTodoPaging( localCount ){\r\n\t\t\tvar totalCount = todosTotalCount();\r\n\t\t\tif( localCount < maxTodosCount() && localCount < totalCount ){\r\n\t\t\t\tmaxToToDosLoaded(false);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif( localCount >= maxTodosCount() ){\r\n\t\t\t\t\tmaxToToDosLoaded(true);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar todosReloading = ko.computed( function(){\r\n\t\t\tvar todosSaving = todosSaving ? todosSaving(): false;\r\n\t\t\tvar processing = todosProcessing ? todosProcessing() : false;\t\t\t\r\n\t\t\tvar totalCount = todosTotalCount();\r\n\t\t\tvar todos = myToDos? myToDos(): null;\t\t\t\r\n\t\t\treturn (todosSaving || processing \r\n\t\t\t\t\t|| (totalCount > 0 && todos.length == 0));\t//reloading has finished, but ko is processing the array and we need to wait a bit\r\n\t\t}).extend({ throttle: 50 });\r\n\t\t\r\n\t\tfunction getLocalTodos(){\r\n\t\t\tvar theseTodos = [];\r\n\t\t\tvar params = [];\r\n\t\t\tvar orderString = '';\r\n\t\t\t// Add these parameters to the query\r\n\t\t\tko.utils.arrayForEach(selectedView().parameters, function (param) {\r\n\t\t\t\tparams.push(param);\r\n\t\t\t});\r\n\t\t\t// If there are filters,\r\n\t\t\tif (activeFilters().length > 0) {\r\n\t\t\t\t// Add them as parameters\r\n\t\t\t\tko.utils.arrayForEach(activeFilters(), function (param) {\r\n\t\t\t\t\tparams.push(param);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// Either sort by the selected sort or the default\r\n\t\t\torderString = selectedSortColumn() ? selectedSortColumn() : selectedView().primarySort;\r\n\t\t\t// Add the second and third orders to the string\r\n\t\t\torderString = orderString + ', category.name, title';\r\n\t\t\t// Go get the todos\t\t\t\r\n\t\t\ttheseTodos = datacontext.getLocalTodos( params, orderString );\r\n\t\t\t\r\n\t\t\treturn theseTodos;\r\n\t\t}\r\n\t\t\r\n\t\tfunction isFilterSelectionChanged( selected, lastSelected ){\r\n\t\t\t//compare the current selections to prev selections\r\n\t\t\tvar changed = false;\r\n\t\t\tif( selected.length !== lastSelected.length ){\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif( selected.length == 0 && lastSelected.length == 0 ){\r\n\t\t\t\t\tchanged = false;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn false; //any change would always change the number of selected elements.\r\n\t\t\t\t\t\r\n\t\t\t\t\t//the following part may not be needed , based on the assumption that per user clicking speed,\r\n\t\t\t\t\t//\tany change would always change the number of selected elements:\r\n\t\t\t\t\t\r\n\t\t\t\t\t/*var selectedFlat = ko.utils.arrayMap(selected(), function(item){\r\n\t\t\t\t\t\treturn item.id();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar lastSelectedFlat = ko.utils.arrayMap(lastSelected(), function(item){\r\n\t\t\t\t\t\treturn item.id();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar diffs = ko.utils.compareArrays( selectedFlat, lastSelectedFlat );\r\n\t\t\t\t\tvar dups = ko.utils.arrayFilter(diffs, function(d){\r\n\t\t\t\t\t\treturn d.status == 'retained';\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif( diffs.length == dups.length && selectedFlat.length == dups.length && lastSelectedFlat.length == dups.length ){\t\t\t\t\t\r\n\t\t\t\t\t\tchanged = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tconsole.log('todosfilters selections changed');\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}*/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn changed;\r\n\t\t}\r\n\t\t\r\n\t\tvar myToDosQueryResult = ko.observableArray([]);\r\n\t\tvar myToDos = ko.observableArray([]);\r\n        var myToDosUpdater = ko.computed(function () {\r\n            var theseTodos = [];\r\n\t\t\t//subscriptions:\r\n\t\t\tvar allTodos = localCollections.todos();\r\n            var selectedview = selectedView();\r\n\t\t\tvar categoryFilterChanged = categoryChanged();\r\n\t\t\tvar priorityFilterChanged = priorityChanged();\r\n\t\t\tvar lastselectedview = lastSelectedView();\r\n            var viewchanged = viewChanged ? viewChanged() : false;\r\n\t\t\tvar bSort = backendSort() ? backendSort() : selectedView().backendSort;           \r\n\t\t\tvar processing = todosProcessing();\r\n\t\t\tif( !processing ){\r\n\t\t\t\tif (selectedview && selectedview.type() === 'todos') {\t\t\t\t\r\n\t\t\t\t\tif( ( bSort !== lastSort() && bSort !== null ) || categoryFilterChanged || priorityFilterChanged || viewchanged){\t\t\t\t\t\t\r\n\t\t\t\t\t\tlastSort( bSort ); \r\n\t\t\t\t\t\tif( categoryFilterChanged ){\r\n\t\t\t\t\t\t\tcategoryChanged(false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( priorityFilterChanged ){\r\n\t\t\t\t\t\t\tpriorityChanged(false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( viewchanged ){\r\n\t\t\t\t\t\t\tviewChanged(false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmaxToToDosLoaded(false);\t\t\t\t\t\t\r\n\t\t\t\t\t\tclearTodosCacheAndLoad();\r\n\t\t\t\t\t\ttheseTodos = [];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//refresh from local query\t\t\t\t\t\r\n\t\t\t\t\t\ttheseTodos = getLocalTodos();\r\n\t\t\t\t\t\tmanageTodoPaging(theseTodos.length);\r\n\t\t\t\t\t\ttodosProcessing(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmyToDos(theseTodos);\r\n            return theseTodos;\r\n        }).extend({ throttle: 100 });\r\n\r\n\t\t/**\r\n\t\t*\tclear all todos from localCollections and breeze cache.\r\n\t\t*\t@method\tclearTodosCacheAndLoad\r\n\t\t*/\r\n\t\tfunction clearTodosCacheAndLoad(){\r\n\t\t\tmaxToToDosLoaded(false);\r\n\t\t\t//assign empty array so todos wount be referenced from ko data binding of the views that had them showing.\t\t\t\r\n\t\t\tmyToDos([]);\r\n\t\t\ttodosProcessing(true);\r\n\t\t\tvar todos = datacontext.getLocalTodos([], null);\r\n\t\t\t//empty the collection. the todos should be cleaned out by garbage collector.\r\n\t\t\tlocalCollections.todos([]);\r\n\t\t\ttodosTotalCount(0);\t\r\n\t\t\tsetTimeout( function(){\r\n\t\t\t\t//short delay to allow the ko data binding to release references to these todos, before removing them: \r\n\t\t\t\tif( todos && todos.length > 0 ){\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tko.utils.arrayForEach( todos, function(todo){\r\n\t\t\t\t\t\tif( todo ){\r\n\t\t\t\t\t\t\t//remove from breeze cache:\r\n\t\t\t\t\t\t\ttodo.entityAspect.setDeleted();\r\n\t\t\t\t\t\t\ttodo.entityAspect.acceptChanges();\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tloadMoreTodos();\t//load first block with the new sort\r\n\t\t\t}, 50);\r\n\t\t}\r\n\t\t\r\n\t\tvar todosShowingText = ko.computed( function(){\r\n\t\t\tvar showing = ' showing ';\r\n\t\t\tvar totalCount = todosTotalCount();\r\n\t\t\tvar todos = myToDos? myToDos(): null;\r\n\t\t\tvar reloading = todosReloading ? todosReloading() : false;\r\n\t\t\tif( reloading ){\r\n\t\t\t\tshowing = 'Loading...';\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tshowing = todos.length + ' showing'\r\n\t\t\t\tif( totalCount && todos.length < totalCount ) {\r\n\t\t\t\t\tshowing += ' out of ' + totalCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn showing;\r\n\t\t}).extend({ throttle: 50 });\r\n\t\t\t\t\r\n        // My interventions\r\n\t\tvar myInterventions = ko.observableArray([]);\r\n        var myInterventionsUpdater = ko.computed(function () {            \r\n            var selectedview = selectedView();\r\n            var categoryFilterChanged = categoryChanged();\r\n            \r\n            if (selectedview && selectedview.type() === 'interventions') {                \r\n                if (viewChanged()) {\r\n                    viewChanged(false);\r\n                    loadInterventionsFromServer();\r\n                }\r\n                else if (categoryFilterChanged) {\r\n                    categoryChanged(false);\r\n                    getLocalInterventions();\r\n                }\r\n                else if (selectedSortColumn()) {\r\n                    getLocalInterventions();\r\n                }\r\n            }            \r\n        }).extend({throttle:50});\r\n\r\n        function getLocalInterventions(){\r\n            var theseInterventions = [];            \r\n\t\t\tvar params = [];\r\n\t\t\tvar orderString = '';\r\n\t\t\t// Add these parameters to the query\r\n\t\t\tko.utils.arrayForEach(selectedView().parameters, function (param) {\r\n\t\t\t\tparams.push(param);\r\n\t\t\t});\r\n\t\t\t// If there are filters,\r\n\t\t\tif (activeFilters().length > 0) {\r\n\t\t\t\t// Add them as parameters\r\n\t\t\t\tko.utils.arrayForEach(activeFilters(), function (param) {\r\n\t\t\t\t\tparams.push(param);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// Either sort by the selected sort or the default\r\n\t\t\torderString = selectedSortColumn() ? selectedSortColumn() : selectedView().primarySort;\r\n\t\t\t// Add the second and third orders to the string\r\n\t\t\torderString = orderString + ', category.name, description';\r\n\t\t\t// Go get the intervention\t\t\t\r\n\t\t\ttheseInterventions = datacontext.getInterventionsQuery(params, orderString);\r\n\t\t\tmyInterventions(theseInterventions);\t\t\t\r\n        }\r\n\r\n        var myToDosChart = ko.computed(function () {\r\n            var subscribers = myToDos();\r\n            var data = [];\r\n            var finaldata = [];\r\n            var total = 0;\r\n            data.push(new ChartToDo('Not set'));\r\n            ko.utils.arrayForEach(myToDos(), function (todo) {\r\n                var match = ko.utils.arrayFirst(data, function (dt) {\r\n                    if (todo[selectedTodoSummary().mainProperty]()) {\r\n                        return dt.name === todo[selectedTodoSummary().mainProperty]()[selectedTodoSummary().secondaryProperty]();\r\n                    } else {\r\n                        return dt.name === 'Not set';\r\n                    }\r\n                });\r\n                if (match) {\r\n                    match.count += 1;\r\n                } else {\r\n                    var newChart = new ChartToDo(todo[selectedTodoSummary().mainProperty]()[selectedTodoSummary().secondaryProperty]());\r\n                    newChart.count = 1;\r\n                    data.push(newChart);\r\n\r\n                }\r\n            });\r\n            // Get total\r\n            ko.utils.arrayForEach(data, function (dt) {\r\n                total += dt.count;\r\n            });\r\n            // Make percentages\r\n            ko.utils.arrayForEach(data, function (dt) {\r\n                // If the count is greater than zero,\r\n                if (dt.count) {\r\n                    // Calculate the percentage and push it in to the graph\r\n                    dt.percentage = dt.count / total;\r\n                    finaldata.push([dt.name, dt.percentage]);                    \r\n                }\r\n            });\r\n            return finaldata;\r\n        });\r\n\r\n        var myInterventionsChart = ko.computed(function () {\r\n            var subscribers = myInterventions();\r\n            var data = [];\r\n            var finaldata = [];\r\n            var total = 0;\r\n            data.push(new ChartToDo('Not set'));\r\n            ko.utils.arrayForEach(myInterventions(), function (intervention) {\r\n                var match = ko.utils.arrayFirst(data, function (dt) {\r\n                    if (intervention[selectedInterventionSummary().mainProperty]()) {\r\n                        return dt.name === intervention[selectedInterventionSummary().mainProperty]()[selectedInterventionSummary().secondaryProperty]();\r\n                    } else {\r\n                        return dt.name === 'Not set';\r\n                    }\r\n                });\r\n                if (match) {\r\n                    match.count += 1;\r\n                } else {\r\n                    var newChart = new ChartToDo(intervention[selectedInterventionSummary().mainProperty]()[selectedInterventionSummary().secondaryProperty]());\r\n                    newChart.count = 1;\r\n                    data.push(newChart);\r\n\r\n                }\r\n            });\r\n            // Get total\r\n            ko.utils.arrayForEach(data, function (dt) {\r\n                total += dt.count;\r\n            });\r\n            // Make percentages\r\n            ko.utils.arrayForEach(data, function (dt) {\r\n                // If the count is greater than zero,\r\n                if (dt.count) {\r\n                    // Calculate the percentage and push it in to the graph\r\n                    dt.percentage = dt.count / total;\r\n                    finaldata.push([dt.name, dt.percentage]);                    \r\n                }\r\n            });\r\n            return finaldata;\r\n        });\r\n\r\n        function ChartToDo (name) {\r\n            var self = this;\r\n            self.name = name;\r\n            self.percentage = 0;\r\n            self.count = 0;\r\n        }\r\n\r\n        // The end point to use when getting cohorts\r\n        var myToDosEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'ToDo');\r\n        });\r\n\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            activate: activate,\r\n\t\t\tdetached: detached,\r\n            title: 'Home',\r\n            todosSaving: todosSaving,\r\n            myToDos: myToDos,\r\n\t\t\ttodosShowingText: todosShowingText,\t\t\r\n\t\t\tmaxToToDosLoaded: maxToToDosLoaded,\r\n\t\t\ttodosReloading: todosReloading,\r\n            myInterventions: myInterventions,\r\n            myToDosChart: myToDosChart,\r\n            myInterventionsChart: myInterventionsChart,\r\n            availableTodoSummaries: availableTodoSummaries,\r\n            availableInterventionSummaries: availableInterventionSummaries,\r\n            selectedTodoSummary: selectedTodoSummary,\r\n            selectedInterventionSummary: selectedInterventionSummary,\r\n            filtersOpen: filtersOpen,\r\n            addToDo: addToDo,\r\n            refreshView: refreshView,\r\n            views: views,\r\n            activeColumns: activeColumns,\r\n            priorities: priorities,\r\n            categories: categories,\r\n            selectedPriorities: selectedPriorities,\r\n            selectedCategories: selectedCategories,\r\n            selectedView: selectedView,\r\n            selectedSortColumn: selectedSortColumn,\r\n            resetFilters: resetFilters,\r\n            toggleSort: toggleSort,\r\n            fullScreenWidget: fullScreenWidget,\r\n            leftColumnOpen: leftColumnOpen,\r\n            toggleFullScreen: toggleFullScreen,\r\n            toggleOpenColumn: toggleOpenColumn,\r\n            filtersHeaderOpen: filtersHeaderOpen\r\n        };\r\n\r\n        return vm;\r\n\r\n        function activate() {\r\n            if (!initialized) {\r\n                initializeViewModel();\r\n                initialized = true;\r\n            }\r\n            else {                \r\n                refreshView();\r\n\t\t\t}\r\n            return true;\r\n        }\r\n\r\n        function initializeViewModel() {\r\n\t\t\tif (session.currentUser().settings()) {\r\n\t\t\t\tvar totalQueryCount = datacontext.getSettingsParam('TotalQueryCount');\r\n\t\t\t\tif( totalQueryCount ){\r\n\t\t\t\t\t//this parameter will be the take for any server query ( one and first page design, without load more )\r\n\t\t\t\t\tmaxTodosCount( parseInt( totalQueryCount ) );\r\n\t\t\t\t\ttodosTake( maxTodosCount() );\r\n\t\t\t\t}                \r\n            }\r\n            selectedView(views()[7]);\t//open assigned to me\r\n\t\t\trefreshView();\r\n            initialized = true;\r\n            return true;\r\n        };\r\n\r\n        // Toggle which column is open\r\n        function toggleOpenColumn() {\r\n            leftColumnOpen(!leftColumnOpen());\r\n        }\r\n\r\n        // Toggle the widget to / from fullscreen\r\n        function toggleFullScreen(widgetname) {\r\n            // If this widget is already fullscreen,\r\n            if (widgetname === fullScreenWidget()) {\r\n                // Remove full screen widget\r\n                fullScreenWidget(null);\r\n            } else {\r\n                // Else, set it as the full screen widget\r\n                fullScreenWidget(widgetname);\r\n            }\r\n        }\r\n\r\n        // Reset all the filters to default state\r\n        function resetFilters () {\r\n            selectedCategories([]);\r\n            selectedPriorities([]);\t\t\t\r\n            filtersOpen(false);\r\n        }\r\n\r\n        // Toggle the active sort\r\n        function toggleSort(sender) {\r\n            // If the current column is the one to sort by\r\n            if (selectedSortColumn() && selectedSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                // If it ends in desc\r\n                if (selectedSortColumn() && selectedSortColumn().substr(selectedSortColumn().length - 4, 4) === 'desc' ) {\r\n                    // Clear the sort column, as it should be undone\r\n                    selectedSortColumn(null);\r\n\t\t\t\t\tbackendSort(null);\r\n                } else {\r\n                    // Else set it as the sort column\r\n                    selectedSortColumn(sender.sortProperty + ' desc');\r\n\t\t\t\t\tif( sender.backendSort ){\r\n\t\t\t\t\t\tbackendSort('-'+ sender.backendSort);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbackendSort(null);\r\n\t\t\t\t\t}\r\n                }\r\n            } else {\r\n                // Else set it as the new sort column\r\n                selectedSortColumn(sender.sortProperty);\r\n\t\t\t\tif( sender.backendSort ){\r\n\t\t\t\t\tbackendSort(sender.backendSort);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbackendSort(null);\r\n\t\t\t\t}\r\n            }\r\n        }\r\n\r\n\t\tfunction loadMoreTodos(){\t\r\n\t\t\tvar params = [];\r\n\t\t\tko.utils.arrayForEach( selectedView().remoteParams, function( param ) {\r\n\t\t\t\tparams[param.Property] = param.Value;\r\n\t\t\t});\r\n\t\t\tif( selectedCategories().length > 0 ){\r\n\t\t\t\tparams.CategoryIds = [];\r\n\t\t\t\tko.utils.arrayForEach( selectedCategories(), function (category) {\r\n\t\t\t\t\tparams.CategoryIds.push( category.id() );\t//sending string category ids\r\n\t\t\t\t});\r\n\t\t\t}\r\n            if( selectedPriorities().length > 0 ){\r\n\t\t\t\tparams.PriorityIds = [];\r\n\t\t\t\tko.utils.arrayForEach( selectedPriorities(), function (priority) {\r\n\t\t\t\t\tif( !isNaN(priority.id()) ){\r\n\t\t\t\t\t\tparams.PriorityIds.push( parseInt(priority.id()) );\t//sending int priority ids\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\t\t\t\r\n\t\t\tparams.Skip = 0;\r\n\t\t\tparams.Take = todosTake();\r\n\t\t\tparams.Sort = backendSort() ? backendSort() : selectedView().backendSort;\r\n\t\t\tdatacontext.getToDos( myToDosQueryResult, params, todosTotalCount ).then( todosReturned );\r\n\t\t}\r\n\t\t\r\n\t\tfunction todosReturned(){\r\n\t\t\tvar returnedCount = myToDosQueryResult()? myToDosQueryResult().length : 0;\r\n\t\t\tvar totalCount = todosTotalCount();\t\t\t\t\t\t\r\n\t\t\tif( totalCount < maxTodosCount() ){\t\t\t\r\n\t\t\t\tmaxToToDosLoaded(false);\r\n\t\t\t}\r\n\t\t\telse{\t\t\t\t\r\n\t\t\t\tif( returnedCount && returnedCount >= maxTodosCount() ){\t\r\n\t\t\t\t\tmaxToToDosLoaded(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttodosProcessing(false);\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfunction refreshTodos() {\r\n\t\t\tmaxToToDosLoaded(false);\t\t\t\t\t\r\n\t\t\tclearTodosCacheAndLoad();\r\n\t\t}\r\n        \r\n\t\tfunction refreshInterventions() {\r\n\t\t    loadInterventionsFromServer();\r\n\t\t}\r\n\r\n        //can be used when implementing paging because we need to clear old page data and push new data\r\n        function clearInterventionsCacheAndLoad(){            \r\n\t\t\t//assign empty array so interventions wount be referenced from ko data binding of the views that had them showing.\t\t\t\r\n\t\t\tmyInterventions([]);\r\n\t\t\t//interventionsProcessing(true);\r\n\t\t\tvar interventions = datacontext.getInterventionsQuery([], null);\r\n\t\t\t//empty the collection. the interventions should be cleaned out by garbage collector.\r\n\t\t\tlocalCollections.interventions([]);\t\t\t\t\r\n\t\t\tsetTimeout( function(){\r\n\t\t\t\t//short delay to allow the ko data binding to release references to these todos, before removing them: \r\n\t\t\t\tif( interventions && interventions.length > 0 ){\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tko.utils.arrayForEach( interventions, function(intervention){\r\n\t\t\t\t\t\tif( intervention ){\r\n\t\t\t\t\t\t\t//remove from breeze cache:\r\n\t\t\t\t\t\t\tintervention.entityAspect.setDeleted();\r\n\t\t\t\t\t\t\tintervention.entityAspect.acceptChanges();\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tloadInterventionsFromServer();\t//load first block with the new sort\r\n\t\t\t}, 50);\r\n        }\r\n        \r\n        function loadInterventionsFromServer(){\t\r\n            var params = {};//server side filtering object\r\n            params.InterventionFilterType = selectedView().interventionFilterType;\r\n            if (params.InterventionFilterType == 1)  {\r\n                params.CreatedById = session.currentUser().userId();\r\n                params.StatusIds = [1];\r\n            }\r\n            else if(params.InterventionFilterType == 2){\r\n                params.CreatedById = session.currentUser().userId();\r\n            }\r\n            else if (params.InterventionFilterType == 3) {\r\n                params.AssignedToId = session.currentUser().userId();                \r\n            }\r\n            else if (params.InterventionFilterType == 4) {\r\n                params.AssignedToId = session.currentUser().userId();\r\n                params.StatusIds = [1];\r\n            }\r\n\t\t\tdatacontext.getInterventions( null, params).then( interventionsReturned );\r\n\t\t}\r\n\r\n        function interventionsReturned() {            \r\n            getLocalInterventions();            \r\n\t\t}\r\n\t\t\r\n        // Force refresh from the server\r\n        function refreshView() {\r\n\t\t\tif( selectedView() && selectedView().type() == 'todos' ){\r\n\t\t\t\trefreshTodos();\r\n\t\t\t}\r\n\t\t\telse{\t\t\t    \r\n\t\t\t    refreshInterventions();\r\n\t\t\t}\t\t\t            \r\n        }\r\n\r\n        // A view to select\r\n        function View(type, name, params, cols, prisort, remoteParams, backendSort, interventionFilterType) {\r\n            var self = this;\r\n            self.type = ko.observable(type);\r\n            self.name = ko.observable(name);\r\n            //following fields are used for filtering on client side\r\n            self.parameters = params;\r\n            self.columns = ko.observableArray(cols);\r\n            self.primarySort = prisort ? prisort : 'dueDate desc';\r\n\t\t\tself.remoteParams = remoteParams;\r\n\t\t\tself.backendSort = backendSort ? backendSort : '-DueDate';\r\n            //following fields are used for filtering on server side\r\n\t\t\tself.interventionFilterType = interventionFilterType;\r\n        }\r\n        \r\n        // Summary object\r\n        function Summary(name, mainprop, secprop) {\r\n            var self = this;\r\n            self.name = name;\r\n            self.mainProperty = mainprop;\r\n            self.secondaryProperty = secprop;\r\n        }\r\n\t\t\r\n\t\tfunction detached(){\t\t\t\r\n\t\t}\t\t\r\n    });\n","//TODO: Inject dependencies\r\ndefine('viewmodels/insight/index',['services/navigation', 'services/session', 'config.services', 'services/datacontext'],\r\n    function (navigation, session, servicesConfig, datacontext) {\r\n        \r\n        var vm = {\r\n            activate: activate,\r\n            navigation: navigation,\r\n            title: 'Insight'\r\n        };\r\n\r\n        return vm;\r\n        \r\n        function activate() {\r\n            console.log('Loaded Insight index');\r\n        }\r\n\r\n    });\n","//TODO: Inject dependencies\r\ndefine('viewmodels/insight/reports/index',['services/session'],\r\n    function (session) {\r\n\r\n        // Give some initial values to speed up testing / demo'ing\r\n\r\n        var userSettings = session.currentUser().settings();\r\n        console.log(userSettings);\r\n\r\n        var activeSecondColumn = ko.observable();\r\n        var un = ko.utils.arrayFirst(userSettings, function (setting) {\r\n            console.log(setting.Key)\r\n            return setting.Key === \"ReportingUser\";\r\n        }).Value;\r\n        var org = ko.utils.arrayFirst(userSettings, function (setting) {\r\n            return setting.Key === \"ReportingOrg\";\r\n        }).Value;\r\n        var pw = ko.utils.arrayFirst(userSettings, function (setting) {\r\n            return setting.Key === \"ReportingPW\";\r\n        }).Value;\r\n        var repo = ko.utils.arrayFirst(userSettings, function (setting) {\r\n            return setting.Key === \"ReportingRepository\";\r\n        }).Value;\r\n        var userName = ko.observable(un);\r\n        var pwOrToken = ko.observable(pw);\r\n        var organization = ko.observable(org);\r\n        var reportPath = ko.observable();\r\n        var containerToLoad = ko.observable();\r\n        var repoName = ko.observable(repo);\r\n        var availableReports = ko.observableArray();\r\n\r\n        // Can the user get reports currently?\r\n        var canGetReports = ko.computed(function () {\r\n            // If there is a username, pw, and repo name they can\r\n            return userName() && pwOrToken() && repoName();\r\n        });\r\n\r\n        var fetchingReport = ko.observable();\r\n\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            activate: activate,\r\n            activeSecondColumn: activeSecondColumn,\r\n            getReportsList: getReportsList,\r\n            userName: userName,\r\n            pwOrToken: pwOrToken,\r\n            organization: organization,\r\n            canGetReports: canGetReports,\r\n            reportPath: reportPath, \r\n            containerToLoad: containerToLoad,\r\n            showDynamicReport: showDynamicReport,\r\n            repoName: repoName,\r\n            availableReports: availableReports,\r\n            fetchingReport: fetchingReport\r\n        };\r\n\r\n        return vm;\r\n        \r\n        // When we activate,\r\n        function activate() {\r\n            // Go get a list of reports from the current repo\r\n            getReportsList();\r\n            // And show the active report widget\r\n            activeSecondColumn('viewmodels/insight/widgets/active.report');\r\n            return true;\r\n        }\r\n\r\n        // Report object\r\n        function Report(data) {\r\n            var self = this;\r\n            self.Name = ko.observable(data.label);\r\n            self.Path = ko.observable(data.uri);\r\n        }\r\n\r\n        // Get a list of reports to choose to display\r\n        function getReportsList () {\r\n            visualize({\r\n                auth: {\r\n                    name: userName(),\r\n                    password: pwOrToken(),\r\n                    organization: organization()\r\n                }\r\n            }, function (v) {\r\n                v.resourcesSearch({\r\n                    folderUri: repoName(),\r\n                    recursive: false,\r\n                    success: function (repo) {\r\n                        // Clear the reports each time we get data back\r\n                        availableReports([]);\r\n                        // For each returned item,\r\n                        $.each(repo, function (index, item) {\r\n                            // If it is a report \r\n                            if (item.resourceType === \"reportUnit\") {\r\n                                // Add it to the list of available reports\r\n                                availableReports.push(new Report(item));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        // Show a dynamic report based on the current selections\r\n        function showDynamicReport () {\r\n            fetchingReport(true);\r\n            visualize({\r\n                auth: {\r\n                    name: userName(),\r\n                    password: pwOrToken(),\r\n                    organization: organization()\r\n                }\r\n            }, function (v) {\r\n                var report = v.report({\r\n                    resource: reportPath(),\r\n                    container: containerToLoad(),\r\n                    success: function () {\r\n                        fetchingReport(false);\r\n                    },\r\n                    error: function (err) {\r\n                        // Display if errors occur\r\n                        console.log(err.message);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    });\n","//TODO: Inject dependencies\r\ndefine('viewmodels/insight/widgets/active.report',['viewmodels/insight/reports/index'],\r\n    function (insightReportIndex) {\r\n\r\n        function Count(num) {\r\n            var self = this;\r\n            self.Number = num;\r\n        }\r\n\r\n        var numberOfContainers = ko.observableArray([\r\n            new Count(1),\r\n            new Count(2),\r\n            new Count(3),\r\n            new Count(4),\r\n            new Count(5)\r\n        ]);\r\n        var selectedCount = ko.observable(numberOfContainers()[0]);\r\n\r\n        function Container(name) {\r\n            var self = this;\r\n            self.Name = ko.observable(name);\r\n        }\r\n\r\n        var reportContainers = ko.computed(function () {\r\n            var thisCount = selectedCount().Number;\r\n            var thisArray = [];\r\n            for (var i = thisCount - 1; i >= 0; i--) {\r\n                thisArray.push(new Container('Container'+i+1));\r\n            };\r\n            return thisArray;\r\n        });\r\n\r\n        setActiveReportContainer(reportContainers()[0]);\r\n\r\n        var activereport = {\r\n            numberOfContainers: numberOfContainers,\r\n            selectedCount: selectedCount,\r\n            reportContainers: reportContainers,\r\n            setActiveReportContainer: setActiveReportContainer\r\n        };\r\n        return activereport;\r\n\r\n        // Set this report container as the active one to add report\r\n        function setActiveReportContainer (sender) {\r\n            insightReportIndex.containerToLoad('#' + sender.Name());\r\n        }\r\n\r\n    });\n","//TODO: Inject dependencies\r\ndefine('viewmodels/insight/widgets/reports.list',['config.services', 'services/session', 'services/datacontext', 'models/base', 'viewmodels/shell/shell'],\r\n    function (servicesConfig, session, datacontext, modelConfig, shell) {\r\n\r\n        // End point to go grab some cohorts\r\n        var cohortEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohorts', 'Cohort');\r\n        });\r\n\r\n        // End point to grab the patients from the current cohort\r\n        var currentCohortsPatientsEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohortpatients', 'Patient', { Skip: 0, Take: 5000 });\r\n        });\r\n\r\n        var cohortsList = ko.observableArray();\r\n        var selectedCohort = ko.observable();\r\n        var cohortFilter = ko.observable();\r\n        var throttledFilter = ko.computed(cohortFilter).extend({ throttle: 500 }).extend({ notify: 'always' });\r\n        var patientsList = ko.observableArray();\r\n        var selectedPatient = ko.observable();\r\n\r\n        // Have we initialized this vm already?\r\n        var initialized = false;\r\n        var selectedCohortToken;\r\n\r\n        var deleteModalShowing = ko.observable(false);\r\n        var deleteOverride = function () {\r\n            // Prompt the user to confirm deletion\r\n            var result = confirm('You are about to delete an individual.  Press OK to continue, or cancel to return without deleting.');\r\n            // If they press OK,\r\n            if (result === true) {\r\n                patientsList.remove(selectedPatient());\r\n                datacontext.deleteIndividual(selectedPatient());\r\n                // Proceed to navigate away\r\n            }\r\n            else {                    \r\n                return false;\r\n            }\r\n        }\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Delete Individual',\r\n\t\t\tentity: selectedPatient, \r\n\t\t\ttemplatePath: 'templates/patient.delete.html', \r\n\t\t\tshowing: deleteModalShowing, \r\n\t\t\tsaveOverride: null, \r\n\t\t\tcancelOverride: null, \r\n\t\t\tdeleteOverride: deleteOverride, \r\n\t\t\tclassOverride: null\r\n\t\t}\r\n        var modal = new modelConfig.modal(modalSettings);\r\n        modal.canDelete(true);\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            cohortsList: cohortsList,\r\n            selectedCohort: selectedCohort,\r\n            cohortFilter: cohortFilter,\r\n            patientsList: patientsList,\r\n            activate: activate,\r\n            choosePatient: choosePatient\r\n        };\r\n\r\n        return vm;\r\n\r\n        function choosePatient (sender) {\r\n            selectedPatient(sender);\r\n            deleteModalShowing(true);\r\n            shell.currentModal(modal);\r\n        }\r\n\r\n        function activate() {\r\n            if (!initialized) {\r\n                initializeViewModel();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function initializeViewModel() {\r\n            // Go get a list of cohorts locally\r\n            datacontext.getEntityList(cohortsList, cohortEndPoint().EntityType, cohortEndPoint().ResourcePath, null, null, false, null, 'sName').then(cohortsReturned);\r\n            // Subscribe to changes on the selected cohort to get an updated patient list when it changes\r\n            selectedCohortToken = selectedCohort.subscribe(function () {\r\n                // If there is a filter when the cohort changes, clear it\r\n                if (cohortFilter()) {\r\n                    cohortFilter(null);\r\n                }\r\n                patientsList([]);\r\n                getPatientsByCohort();\r\n            });\r\n            throttledFilterToken = throttledFilter.subscribe(function (val) {\r\n                // Get a list of patients by cohort using filter\r\n                if (selectedCohort()) {\r\n                    patientsList([]);\r\n                    getPatientsByCohort(val);\r\n                }\r\n            });\r\n            // Set initialized true so we don't accidentally re-initialize the view model\r\n            initialized = true;\r\n            return true;\r\n\r\n            function cohortsReturned() {\r\n                // Load a default cohort when cohorts are returned from the server\r\n                //selectedCohort(cohortsList()[0]);\r\n            }\r\n        };\r\n\r\n        function getPatientsByCohort(searchValue) {\r\n            var parameters = {};\r\n            // Create an object to hold the parameters\r\n            var parameters = currentCohortsPatientsEndPoint().Parameters;\r\n            // If a search value is passed in\r\n            if (searchValue) {\r\n                // Add a filter parameter onto parameters\r\n                parameters.SearchFilter = searchValue;\r\n            }\r\n            else { parameters.SearchFilter = null; }\r\n            // TODO : Add Skip and Take to the endpoint and pass it down as params\r\n            // TODO : Make sure the service is checking locally first before going out to the server to get these patients\r\n            datacontext.getEntityList(patientsList, currentCohortsPatientsEndPoint().EntityType, currentCohortsPatientsEndPoint().ResourcePath, null, selectedCohort().iD(), true, parameters);\r\n        }\r\n\r\n\r\n\r\n    });\n","define('viewmodels/patients/index',['services/navigation', 'services/datacontext', 'services/session', 'config.services', 'plugins/router'],\r\n    function (navigation, datacontext, session, servicesConfig, router) {\r\n\r\n        //#region Local Variables\r\n\r\n        var firstTime = false;\r\n\r\n        var maxPatientCount = ko.observable(50);\r\n\r\n        var throttledFilterToken = {};\r\n\r\n\t\tvar noResultsMessage =  'No records meet your search criteria';\r\n\t\tvar subscriptionTokens = [];\r\n\r\n       // var isComposed = ko.observable(false);\r\n\r\n        // Track whether the user can leave the patients pages and whether they are\r\n        var leaving = ko.observable(false);\r\n        var canLeave = ko.observable(true);\r\n\r\n        //#region cohortspanel\r\n\r\n        var cohortEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohorts', 'Cohort');\r\n        });\r\n        // How many patients to skip when doing a take\r\n        var cohortPatientsSkip = ko.observable(0);\r\n        // Flag whether additional patients can be loaded in cohorts flyout\r\n        var canLoadMoreCohortPatients = ko.observable(false);\r\n\t\tvar showNoResultsMessage = ko.observable(false);\r\n        var currentCohortsPatientsEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'cohortpatients', 'Patient', { Skip: cohortPatientsSkip(), Take: maxPatientCount() });\r\n        });\r\n        var cohortsList = ko.observableArray();\r\n        var selectedCohort = ko.observable();\r\n        var cohortFilter = ko.observable();\r\n        var throttledFilter = ko.computed(cohortFilter).extend({ throttle: 500 }).extend({ notify: 'always' });\r\n        var patientsList = ko.observableArray();\r\n\r\n        //#endregion\r\n\r\n        //#region problems\r\n\r\n        var patientProblemEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            // TODO: Update this end point\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'PatientObservation');\r\n        });\r\n\r\n        var patientSystemEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'PatientSystem');\r\n        });\r\n\r\n        var patientAllergyEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            // TODO: Update this end point\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'PatientAllergy', 'PatientAllergy');\r\n        });\r\n\r\n        // Endpoint to use for getting the current patient's programs\r\n        var patientProgramEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Program');\r\n        });\r\n\r\n        //#endregion\r\n\r\n        var contactCardEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'ContactCard');\r\n        });\r\n\r\n        var goalEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Goal');\r\n        });\r\n\r\n        var noteEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Note');\r\n        });\r\n\r\n        var careMemberEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'CareMember');\r\n        });\r\n\r\n        var ObservationsEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'PatientObservation');\r\n        });\r\n\r\n        var entityType = 'Patient';\r\n        var patientEndPoint = ko.computed(function () {\r\n            if (!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient', 'Patient');\r\n        });\r\n        var initialized = false;\r\n        var selectedCohortToken;\r\n\r\n        //#endregion\r\n\r\n        //#region Exposed Variables\r\n\r\n        var selectedPatient = ko.observable();\r\n        var isEditing = ko.observable(false);\r\n        var patientsListFlyoutOpen = ko.observable(true);\r\n        var patientDataColumnOpen = ko.observable(true);\r\n        var hasChanges = ko.computed(datacontext.hasChanges);\r\n\r\n        //#endregion\r\n\r\n        //#region Reveal the object and properties\r\n\r\n        var patientsRoute = ko.utils.arrayFirst(navigation.navRoutes(), function (route) {\r\n            return route.title === 'Individual';\r\n        });\r\n        var isComposed = ko.computed(function () {\r\n            return patientsRoute && patientsRoute.isActive();\r\n        });\r\n\r\n        var routerInstructionToken = router.activeInstruction.subscribe(function (oldvalue) {\r\n            var oldRoute = oldvalue && oldvalue.fragment ? oldvalue.fragment.substr(0, 8) : '';\r\n            if (hasChanges() && oldRoute === 'patients') {\r\n                // If they can leave but aren't already,\r\n                if (canLeave() && !leaving()) {\r\n                    // Check if they have changes and want to leave\r\n                    var canleave = checkForAnyChanges();\r\n                    if (!canleave) {\r\n                        leaving(false);\r\n                        canLeave(false);\r\n                        return false;\r\n                    } else {\r\n                        leaving(true);\r\n                        canLeave(true);\r\n                        return true;\r\n                    }\r\n                } else if (!canLeave() && !leaving()) {\r\n                    // If they already canclled leaving and aren't leaving\r\n                    // Reset the application states\r\n                    leaving(false);\r\n                    canLeave(true);\r\n                } else if (canLeave() && leaving()) {\r\n                    canLeave(true);\r\n                    leaving(false);\r\n                }\r\n            } else {\r\n                canLeave(true);\r\n                leaving(false);\r\n            }\r\n        }, null, 'beforeChange');\r\n\r\n\t\tsubscriptionTokens.push( routerInstructionToken );\r\n\r\n        var vm = {\r\n            patientsListFlyoutOpen: patientsListFlyoutOpen,\r\n            patientDataColumnOpen: patientDataColumnOpen,\r\n            canLoadMoreCohortPatients: canLoadMoreCohortPatients,\r\n\t\t\tshowNoResultsMessage: showNoResultsMessage,\r\n\t\t\tnoResultsMessage: noResultsMessage,\r\n            cohortFilter: cohortFilter,\r\n\t\t\tclearCohortFilter: clearCohortFilter,\r\n            togglePatientsColumn: togglePatientsColumn,\r\n            minimizePatientsDataColumn: minimizePatientsDataColumn,\r\n            maximizePatientsDataColumn: maximizePatientsDataColumn,\r\n            minimizePatientsListFlyoutColumn: minimizePatientsListFlyoutColumn,\r\n            maximizePatientsListFlyoutColumn: maximizePatientsListFlyoutColumn,\r\n            choosePatient: choosePatient,\r\n            patientsList: patientsList,\r\n            selectedPatient: selectedPatient,\r\n            isEditing: isEditing,\r\n            save: save,\r\n            loadMoreCohortPatients: loadMoreCohortPatients,\r\n            toggleEditing: toggleEditing,\r\n            cohortsList: cohortsList,\r\n            selectedCohort: selectedCohort,\r\n            activate: activate,\r\n            deactivate: deactivate,\r\n\t\t\tdetached: detached,\r\n            navigation: navigation,\r\n            title: 'Individual',\r\n            canDeactivate: canDeactivate,\r\n            hasChanges: hasChanges,\r\n            attached: attached,\r\n            isComposed: isComposed,\r\n            leaving: leaving,\r\n            getPatientsToDos: getPatientsToDos,\r\n            getPatientsInterventions: getPatientsInterventions,\r\n            getPatientsTasks: getPatientsTasks,\r\n            getPatientsAllergies: getPatientsAllergies,\r\n            getPatientMedications: getPatientMedications,\r\n\t\t\tgetPatientFrequencies: getPatientFrequencies\r\n        };\r\n        return vm;\r\n\r\n        //#endregion\r\n\r\n        //#region Local Functions\r\n\r\n        function attached() {\r\n            //isComposed(true);\r\n        }\r\n\r\n        function initializeViewModel() {\r\n            // Go get a list of cohorts locally\r\n            datacontext.getEntityList(cohortsList, cohortEndPoint().EntityType, cohortEndPoint().ResourcePath, null, null, false, null, 'sName').then(cohortsReturned);\r\n            // On first load show the patients list flyout and open the data column\r\n            //patientsListFlyoutOpen(true);\r\n            patientDataColumnOpen(true);\r\n            // Subscribe to changes on the selected cohort to get an updated patient list when it changes\r\n            selectedCohortToken = selectedCohort.subscribe(function () {\r\n                // Get a list of patients by cohort\r\n                canLoadMoreCohortPatients(false);\r\n\t\t\t\tshowNoResultsMessage(false);\r\n                cohortPatientsSkip(0);\r\n                // If there is a filter when the cohort changes, clear it\r\n                if (cohortFilter()) {\r\n                    cohortFilter(null);\r\n                }\r\n                patientsList([]);\r\n                getPatientsByCohort();\r\n            });\r\n\t\t\tsubscriptionTokens.push( selectedCohortToken );\r\n            throttledFilterToken = throttledFilter.subscribe(function (val) {\r\n                // Get a list of patients by cohort using filter\r\n                if (selectedCohort()) {\r\n                    canLoadMoreCohortPatients(false);\r\n\t\t\t\t\tshowNoResultsMessage(false);\r\n                    cohortPatientsSkip(0);\r\n                    patientsList([]);\r\n                    getPatientsByCohort(val);\r\n                }\r\n            });\r\n\t\t\tsubscriptionTokens.push( throttledFilterToken );\r\n\r\n            // Set the max patient count to the value of settings.TotalPatientCount, if it exists\r\n            if (session.currentUser().settings()) {\r\n\t\t\t\tvar totalPatientCount = datacontext.getSettingsParam('TotalPatientCount');\r\n\t\t\t\tif( totalPatientCount ){\r\n\t\t\t\t\tmaxPatientCount( parseInt( totalPatientCount ) );\r\n\t\t\t\t}\r\n            }\r\n            // Set initialized true so we don't accidentally re-initialize the view model\r\n            initialized = true;\r\n            return true;\r\n            function cohortsReturned() {\r\n                // Load a default cohort when cohorts are returned from the server\r\n                //selectedCohort(cohortsList()[0]);\r\n            }\r\n        };\r\n\r\n        function getPatientsByCohort(searchValue) {\r\n            var parameters = {};\r\n            // Create an object to hold the parameters\r\n            var parameters = currentCohortsPatientsEndPoint().Parameters;\r\n            // If a search value is passed in\r\n            if (searchValue) {\r\n                // Add a filter parameter onto parameters\r\n                parameters.SearchFilter = searchValue;\r\n            } else { parameters.SearchFilter = null; }\r\n\r\n\t\t\tshowNoResultsMessage(false);\r\n            // TODO : Add Skip and Take to the endpoint and pass it down as params\r\n            // TODO : Make sure the service is checking locally first before going out to the server to get these patients\r\n            datacontext.getEntityList(patientsList, currentCohortsPatientsEndPoint().EntityType, \r\n\t\t\t\t\t\tcurrentCohortsPatientsEndPoint().ResourcePath, null, selectedCohort().iD(), \r\n\t\t\t\t\t\ttrue, parameters, null, (!!'SkipMerge')).then(calculateSkipTake);\r\n        }\r\n\r\n        function calculateSkipTake() {\r\n            var totalRecordsShowing = patientsList().length;\r\n\t\t\tif( totalRecordsShowing == 0 ){\r\n\t\t\t\tshowNoResultsMessage(true);\r\n\t\t\t}\r\n            var maxPossibleRecordsShowing = cohortPatientsSkip() === 0 ? maxPatientCount() : cohortPatientsSkip() + maxPatientCount();\r\n            // If max possible records showing is greater than the total records that are showing,\r\n            if (maxPossibleRecordsShowing > totalRecordsShowing) {\r\n                // Then don't show the load more button\r\n                canLoadMoreCohortPatients(false);\r\n            } else {\r\n                // Else, show the load more button\r\n                canLoadMoreCohortPatients(true);\r\n            }\r\n            // Always reset the skip after getting more records\r\n            cohortPatientsSkip(maxPossibleRecordsShowing);\r\n        }\r\n\r\n        //#endregion\r\n\r\n        //#region External Functions\r\n\r\n        function checkForAnyChanges(patient) {\r\n            // Variable to check for changes to actions on this patient\r\n            var actionsHaveChanges = false;\r\n            var notesHaveChanges = false;\r\n            var goalsHaveChanges = false;\r\n            var todosHaveChanges = false;\r\n            if (selectedPatient()) {\r\n                // Check if the current patient has actions with unsaved changes\r\n                ko.utils.arrayForEach(selectedPatient().programs.peek(), function (program) {\r\n                    ko.utils.arrayForEach(program.modules.peek(), function (module) {\r\n                        ko.utils.arrayForEach(module.actions.peek(), function (action) {\r\n                            if (action.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                                actionsHaveChanges = true;\r\n                            }\r\n                            ko.utils.arrayForEach(action.steps.peek(), function (step) {\r\n                                if (step.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                                    actionsHaveChanges = true;\r\n                                }\r\n                                ko.utils.arrayForEach(step.responses.peek(), function (response) {\r\n                                    if (response.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                                        actionsHaveChanges = true;\r\n                                    }\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n                if (selectedPatient().goals.peek()) {\r\n                    ko.utils.arrayForEach(selectedPatient().goals.peek(), function (goal) {\r\n                        if (goal.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                            goalsHaveChanges = true;\r\n                        }\r\n                        ko.utils.arrayForEach(goal.tasks.peek(), function (task) {\r\n                            if (task.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                                goalsHaveChanges = true;\r\n                            }\r\n                        });\r\n                        ko.utils.arrayForEach(goal.barriers.peek(), function (barrier) {\r\n                            if (barrier.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                                goalsHaveChanges = true;\r\n                            }\r\n                        });\r\n                        ko.utils.arrayForEach(goal.interventions.peek(), function (intervention) {\r\n                            if (intervention.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                                goalsHaveChanges = true;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                if (selectedPatient().notes.peek()) {\r\n                    ko.utils.arrayForEach(selectedPatient().notes.peek(), function (note) {\r\n                        if (note.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n\t\t\t\t\t\t\tswitch( note.type().name().toLowerCase() ){\r\n\t\t\t\t\t\t\t\tcase 'utilization':{\r\n\t\t\t\t\t\t\t\t\tvar defaultVisitType = ko.utils.arrayFirst( datacontext.enums.visitTypes(), function (visitType) {\r\n\t\t\t\t\t\t\t\t\t\treturn visitType.isDefault();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tif( note.visitType()){\r\n                                        if (!defaultVisitType || (defaultVisitType.name()!=note.visitType().name()))     \r\n\t\t\t\t\t\t\t\t\t\tnotesHaveChanges = true;\r\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdefault:{\r\n\t\t\t\t\t\t\t\t\tif( note.text() ){\r\n\t\t\t\t\t\t\t\t\t\tnotesHaveChanges = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n                        }\r\n                    });\r\n                }\r\n                if (selectedPatient().todos.peek()) {\r\n                    ko.utils.arrayForEach(selectedPatient().todos.peek(), function (todo) {\r\n                        if (todo.entityAspect.entityState.isAddedModifiedOrDeleted() && todo.title()) {\r\n                            todosHaveChanges = true;\r\n                        }\r\n                    });\r\n                }\r\n                // If the patient's actions have changes,\r\n                if (actionsHaveChanges || notesHaveChanges || goalsHaveChanges || todosHaveChanges) {\r\n                    var message = 'You have unsaved - ';\r\n                    if (actionsHaveChanges) {\r\n                        message += '\\n-Action(s)';\r\n                    }\r\n                    if (notesHaveChanges) {\r\n                        message += '\\n-Note(s)';\r\n                    }\r\n                    if (goalsHaveChanges) {\r\n                        message += '\\n-Goal(s)';\r\n                    }\r\n                    if (todosHaveChanges) {\r\n                        message += '\\n-To Do(s)';\r\n                    }\r\n                    message += '\\nPress OK to continue, or cancel to return to the patient.';\r\n                    // Prompt the user to confirm leaving\r\n                    var result = confirm(message);\r\n                    // If they press OK,\r\n                    if (result === true) {\r\n                        return true;\r\n                        // Proceed to navigate away\r\n                    } else {\r\n                        // Cancel selecting a patient\r\n                        patientsListFlyoutOpen(false);\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n\t\tfunction clearCohortFilter(){\r\n\t\t\tcohortFilter(null);\r\n\t\t}\r\n\r\n        function choosePatient(patient) {\r\n            // Check if there are changes to this patient's actions before proceeding\r\n            // And if override parameter is set to true ignore checking for changes\r\n            if (hasChanges()) {\r\n                var canleave = checkForAnyChanges();\r\n                if (!canleave) {\r\n                    return false;\r\n                }\r\n            }\r\n            var patientId;\r\n\t\t\tpatientsListFlyoutOpen(false);\r\n            // If there is a current patient and it is equal to the patient you are trying to set to current\r\n            if ( selectedPatient() && selectedPatient() === patient ) {\r\n                // Then do nothing (this is because we don't want to do anything if\r\n                // We have already selected our patient.\r\n\t\t\t\tif(datacontext){\r\n\t\t\t\t\tgetPatientsToDos();\t//always reload since we clean the todos cache in other views when resorting or filtering\r\n\t\t\t\t}\r\n            } else if (datacontext) {\r\n                if (patient.id) {\r\n                    // Else go choose a new patient\r\n                    patientId = ko.unwrap(patient.id);\r\n                } else {\r\n                    patientId = patient;\r\n                }\r\n\r\n\t\t\t\tvar allPatientPromises = [];\r\n\t\t\t\t\t// Go select a patient by their Id.\r\n\t\t\t\t\tallPatientPromises.push( datacontext.getEntityById(selectedPatient, patientId, patientEndPoint().EntityType, patientEndPoint().ResourcePath, true));\r\n\t\t\t\t\t// Go get a list of goals for the currently selected patient\r\n\t\t\t\t\tallPatientPromises.push( datacontext.getEntityList(null, goalEndPoint().EntityType, goalEndPoint().ResourcePath + patientId + '/Goals', null, null, true, null, null, true));\r\n\t\t\t\t\t// Go get a list of observations for the currently selected patient\r\n\t\t\t\t\tallPatientPromises.push( datacontext.getEntityList(null, ObservationsEndPoint().EntityType, ObservationsEndPoint().ResourcePath + patientId + '/Observations/Current', null, null, true));\r\n\t\t\t\t\t// Go get a list of notes for the currently selected patient\r\n\t\t\t\t\tallPatientPromises.push( datacontext.getEntityList(null, noteEndPoint().EntityType, noteEndPoint().ResourcePath + patientId + '/Notes/100', null, null, true));\r\n\r\n                    //note: this is the old call and will be deprecated:\r\n\t\t\t\t\t//allPatientPromises.push( datacontext.getEntityList(null, careMemberEndPoint().EntityType, careMemberEndPoint().ResourcePath + patientId + '/CareMembers', null, null, true));\r\n\r\n\t\t\t\tQ.all( allPatientPromises ).then( patientReturned );\r\n            }\r\n\r\n            function patientReturned() {\r\n\t\t\t\tvar allPatientPromises = [];\r\n                // If we don't have the patients' programs yet,\r\n                if (selectedPatient() && selectedPatient().programs() && selectedPatient().programs().length === 0) {\r\n                    // Go get a list of programs for the currently selected patient\r\n                    allPatientPromises.push( datacontext.getEntityList(null, patientProgramEndPoint().EntityType, patientProgramEndPoint().ResourcePath + patientId + '/Programs', null, null, true) );\r\n                }\r\n                // Go get a list of patients todos\r\n                allPatientPromises.push( getPatientsToDos() );\r\n                // Go get a list of patients' interventions\r\n                allPatientPromises.push( getPatientsInterventions() );\r\n                // Go get a list of patients' tasks\r\n                allPatientPromises.push( getPatientsTasks() );\r\n                // Add the patient to the recent individuals list\r\n                allPatientPromises.push( datacontext.addPatientToRecentList(selectedPatient()) );\r\n                // Go get a list of contact cards for the currently selected patient\r\n                allPatientPromises.push( datacontext.getEntityList(null, contactCardEndPoint().EntityType, contactCardEndPoint().ResourcePath + patientId + '/Contact', null, null, true) );\r\n                // Go get a list of observations that are of type problem for the currently selected patient\r\n                allPatientPromises.push( datacontext.getEntityList(null, patientProblemEndPoint().EntityType, patientProblemEndPoint().ResourcePath + patientId + '/Observation/Problems', null, null, true) );\r\n                // Go get a list of allergies for the currently selected patient\r\n                allPatientPromises.push( getPatientsAllergies() );\r\n                // Get a list of the patients various systems\r\n                allPatientPromises.push( datacontext.getEntityList(null, patientSystemEndPoint().EntityType, patientSystemEndPoint().ResourcePath + patientId + '/PatientSystems', null, null, true) );\r\n\r\n                // Go get a list of medications for the currently selected patient\r\n                allPatientPromises.push( getPatientMedications() );\r\n\t\t\t\tallPatientPromises.push( getPatientFrequencies() );\r\n\r\n\t\t\t\t//get the care team (new api)\r\n\t\t\t\tallPatientPromises.push( datacontext.getCareTeam( null, selectedPatient().contactId() ).then( careTeamReturned ) );\r\n\t\t\t\tQ.all( allPatientPromises ).then( patientFullyLoaded );\r\n\r\n                router.navigate('#patients/' + patientId, false);\r\n            }\r\n        }\r\n\r\n\t\tfunction careTeamReturned( team ){\t\t\t\r\n\t\t}\r\n\t\t/**\r\n\t\t*\tafter all patient related calls are completed, mark the patient as loaded (they are synched with Q.all ).\r\n\t\t*\t@method patientFullyLoaded\r\n\t\t*/\r\n\t\tfunction patientFullyLoaded(){\r\n\t\t\tselectedPatient().isLoaded(true);\r\n\t\t}\r\n\r\n        function getPatientsToDos() {\r\n            // Calculated thirty days ago\r\n            var thirtyDaysAgo = new Date(new Date().setDate(new Date().getDate()-30));\r\n            thirtyDaysAgo = moment(thirtyDaysAgo).format();\r\n\r\n\t\t\tvar todosPromises = [];\r\n            // Get all open todos\r\n            todosPromises.push( datacontext.getToDos(null, { StatusIds: [1,3], PatientId: selectedPatient().id() }) );\r\n            // Get recently closed todos\r\n            todosPromises.push( datacontext.getToDos(null, { StatusIds: [2,4], PatientId: selectedPatient().id() })); //FromDate thirtyDaysAgo is missing ?! (, FromDate: thirtyDaysAgo)\r\n\t\t\treturn Q.all( todosPromises );\r\n        }\r\n\r\n        function getPatientsInterventions() {\r\n            // Calculated thirty days ago\r\n            // var thirtyDaysAgo = new Date(new Date().setDate(new Date().getDate()-30));\r\n            // thirtyDaysAgo = moment(thirtyDaysAgo).format();\r\n            // Get all open todos\r\n            return datacontext.getInterventions(null, { StatusIds: [1,2,3], PatientId: selectedPatient().id() });\r\n        }\r\n\r\n        function getPatientsTasks() {\r\n            // Get all open todos\r\n            return datacontext.getTasks(null, { StatusIds: [1,2,3,4], PatientId: selectedPatient().id() });\r\n        }\r\n\r\n        function getPatientsAllergies() {\r\n            // Get all open allergies\r\n            var patientId = selectedPatient().id();\r\n            return datacontext.getPatientAllergies(null, { StatusIds: [1,2,3,4,5,6,7] }, patientId);\r\n        }\r\n\r\n        function getPatientMedications() {\r\n            // Get all open medications\r\n            var patientId = selectedPatient().id();\r\n            return datacontext.getPatientMedications(null, { StatusIds: [1,2,3,4,5,6,7], CategoryIds: [1,2] }, patientId);\r\n        }\r\n\r\n\t\tfunction getPatientFrequencies() {\r\n            // Get all patient specific medication frequencies\r\n            var patientId = selectedPatient().id();\r\n\t\t\tvar freqPromise = Q();\r\n\t\t\tif(!selectedPatient().gotMedicationFrequencies){\r\n\t\t\t\t//remotely load this patient's custom medication frequencies:\r\n\t\t\t\tfreqPromise = datacontext.getPatientFrequencies(null, patientId, true);\r\n\t\t\t\tselectedPatient().gotMedicationFrequencies = ko.observable(true);\r\n\t\t\t}\r\n\t\t\treturn freqPromise;\r\n        }\r\n\r\n        function togglePatientsColumn() {\r\n            patientDataColumnOpen(!patientDataColumnOpen());\r\n        }\r\n\r\n        function minimizePatientsDataColumn() {\r\n            patientDataColumnOpen(false);\r\n        };\r\n\r\n        function maximizePatientsDataColumn() {\r\n            patientDataColumnOpen(true);\r\n        };\r\n\r\n        function minimizePatientsListFlyoutColumn() {\r\n            patientsListFlyoutOpen(false);\r\n        };\r\n\r\n        function maximizePatientsListFlyoutColumn() {\r\n            patientsListFlyoutOpen(true);\r\n        };\r\n\r\n        function activate(patientId) {\r\n            // isComposed(false);\r\n            if (patientId) {\r\n                choosePatient(patientId);\r\n            } else if (!selectedPatient()) {\r\n                patientsListFlyoutOpen(true);\r\n                patientDataColumnOpen(true);\r\n            }\r\n            // If the view model has not been initialized,\r\n            if (!initialized) {\r\n                // then Initialize the View Model\r\n                initializeViewModel();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function canDeactivate() {\r\n            return canLeave();\r\n            // If there are changes,\r\n            if (hasChanges()) {\r\n                var canleave = checkForAnyChanges();\r\n                if (!canleave) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function deactivate() {\r\n            patientDataColumnOpen(false);\r\n            patientsListFlyoutOpen(false);\r\n            // isComposed(false);\r\n            leaving(false);\r\n        }\r\n\r\n        function toggleEditing() {\r\n            // This method is not currently being used\r\n            isEditing(!isEditing());\r\n            if (isEditing()) {\r\n                patientDataColumnOpen(true);\r\n                patientsListFlyoutOpen(false);\r\n            }\r\n        }\r\n\r\n        function save(patient) {\r\n            // TODO : Go save this patient information\r\n            isEditing(false);\r\n        }\r\n\r\n        function loadMoreCohortPatients() {\r\n            var parameters = {};\r\n            var filter = cohortFilter();\r\n            // Create an object to hold the parameters\r\n            var parameters = currentCohortsPatientsEndPoint().Parameters;\r\n            // If a search value is passed in\r\n            if (filter) {\r\n                // Add a filter parameter onto parameters\r\n                parameters.SearchFilter = filter;\r\n            } else { parameters.SearchFilter = null; }\r\n            var newPatients = ko.observableArray();\r\n            datacontext.getEntityList(newPatients, currentCohortsPatientsEndPoint().EntityType, currentCohortsPatientsEndPoint().ResourcePath, null, selectedCohort().iD(), true, parameters)\r\n                .then(function () {\r\n                    patientsList.push.apply(patientsList, newPatients());\r\n                    calculateSkipTake();\r\n                });\r\n        }\r\n\r\n        //#endregion\r\n\r\n\t\tfunction detached(){\r\n\t\t\t// remarked ! disposing computeds on this module causes many unpredictable problems.\r\n\t\t\t// console.log('patients/index detached.');\r\n\t\t\t// ko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n                // token.dispose();\r\n            // });\r\n\t\t}\r\n    });\n","/**\r\n * data.index module manages/ hosts the data dialog\r\n *\r\n * \t@module data.index\r\n *\t@class data.index\r\n */\r\n \r\n\r\ndefine('viewmodels/patients/data/index',['plugins/router', 'services/navigation', 'config.services', 'services/session', 'services/datacontext', 'viewmodels/patients/index', 'viewmodels/shell/shell', 'models/base'],\r\n    function (router, navigation, servicesConfig, session, datacontext, patientsIndex, shell, modelConfig) {\r\n\r\n        var selectedPatient = ko.computed(function () {\r\n            return patientsIndex.selectedPatient();\r\n        });\r\n\r\n        var modalShowing = ko.observable(false);\r\n        var modalEntity = ko.observable(new ModalEntity());\r\n\r\n        // Add an additional data type of allergies\r\n        var allergiesType = { id: ko.observable(-1), name: ko.observable('Allergies') };\r\n\r\n        // Add an additional data type of allergies\r\n        var medicationsType = { id: ko.observable(-2), name: ko.observable('Medications') };\r\n\r\n        function saveAllData () {\r\n            modalEntity().activeDataType(null);\r\n            saveAllergies();\r\n            saveNewMedication();\r\n            saveDataEntry();\r\n        };\r\n        function cancelOverride () {\r\n            modalEntity().activeDataType(null);\r\n            cancelDataEntry();\r\n            patientsIndex.getPatientsAllergies();\r\n        };\r\n\r\n        function toggleModalShowing () {\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Data Entry',\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: modalEntity, \r\n\t\t\t\ttemplatePath: 'viewmodels/templates/clinical.dataentry', \r\n\t\t\t\tshowing: modalShowing, \r\n\t\t\t\tsaveOverride: saveAllData, \r\n\t\t\t\tcancelOverride: cancelOverride, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: 'modal-lg'\r\n\t\t\t}\r\n            var modal = new modelConfig.modal(modalSettings);\r\n            shell.currentModal(modal);\r\n            modalShowing(!modalShowing());\r\n        }\r\n\r\n        var dataObservations = ko.observableArray();\r\n\r\n        var activeDataType = ko.observable();\r\n        var dataTypes = ko.computed(function () {\r\n            var theseObservationTypes = datacontext.enums.observationTypes();\r\n            var thisArray = [];\r\n            ko.utils.arrayFilter(theseObservationTypes, function (type) {\r\n                if (type.name().toLowerCase() !== 'problems') {\r\n                    thisArray.push(type);\r\n                }\r\n            });\r\n            return thisArray;\r\n        }).extend({ throttle: 1 });\r\n        \r\n        var alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n\r\n        var openColumn = ko.observable();\r\n        var widgets = ko.observableArray();\r\n\r\n        var initialized = false;\r\n\r\n        function widget(data, column) {\r\n            var self = this;\r\n            self.name = ko.observable(data.name);\r\n            self.path = ko.observable(data.path);\r\n            self.isOpen = ko.observable(data.open);\r\n            self.column = column;\r\n            self.isFullScreen = ko.observable(false);\r\n        }\r\n\r\n        function column(name, open, widgets) {\r\n            var self = this;\r\n            self.name = ko.observable(name);\r\n            self.isOpen = ko.observable(open).extend({ notify: 'always' });\r\n            self.isOpen.subscribe(function () {\r\n                computedOpenColumn(self);\r\n            });\r\n            self.widgets = ko.observableArray();\r\n            $.each(widgets, function (index, item) {\r\n                self.widgets.push(new widget(item, self))\r\n            });\r\n        }\r\n\r\n        var columns = ko.observableArray([\r\n            new column('dataType', false, [{ name: 'Data Summary', path: 'patients/widgets/data.summary.html', open: true }])\r\n        ]);\r\n\r\n        var computedOpenColumn = ko.computed({\r\n            read: function () {\r\n                return openColumn();\r\n            },\r\n            write: function (value) {\r\n                // If this column is being set to closed\r\n                if (!value.isOpen()) {\r\n                    // Check if this is the open column and it's also the first column\r\n                    if (value === openColumn() && value === columns()[0]) {\r\n                        // Set the open column to be the second column\r\n                        openColumn(columns()[1]);\r\n                    }\r\n                        // Or else check if this is the open column\r\n                    else if (value === openColumn()) {\r\n                        // and Set the open column to be the first column\r\n                        openColumn(columns()[0]);\r\n                    }\r\n                }\r\n                    // If it's being set to open, just set this column to be the open column\r\n                else {\r\n                    openColumn(value);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Haaaaack alert.  Can't figure out how else to trigger observations in data.list.js to refresh yet\r\n        var needToRefreshObservations = ko.observable(false);\r\n\r\n        var vm = {\r\n            activate: activate,\r\n            attached: attached,\r\n            openColumn: openColumn,\r\n            columns: columns,\r\n            widgets: widgets,\r\n            computedOpenColumn: computedOpenColumn,\r\n            selectedPatient: selectedPatient,\r\n            alphabeticalOrderSort: alphabeticalOrderSort,\r\n            minimizeThisColumn: minimizeThisColumn,\r\n            maximizeThisColumn: maximizeThisColumn,\r\n            toggleFullScreen: toggleFullScreen,\r\n            activeDataType: activeDataType,\r\n            setActiveDataType: setActiveDataType,\r\n            dataTypes: dataTypes,\r\n            saveAllergies: saveAllergies,\r\n            saveDataEntry: saveDataEntry,\r\n            saveAllData: saveAllData,\r\n            cancelDataEntry: cancelDataEntry,\r\n            title: 'index',\r\n            addData: addData,\r\n            dataObservations: dataObservations,\r\n            needToRefreshObservations: needToRefreshObservations,\r\n            modalEntity: modalEntity,\r\n            allergiesType: allergiesType,\r\n            medicationsType: medicationsType\r\n        };\r\n\r\n        return vm;\r\n\r\n        function activate() {\r\n            // Set a local instance of selectedPatient equal to the injected patient\r\n            selectedPatient.subscribe(function (newValue) {\r\n                datacontext.checkIfAllObservationsAreLoadedYet(selectedPatient().id());\r\n                activeDataType(null);\r\n            });\r\n            openColumn(columns()[0]);\r\n        }\r\n\r\n        function attached() {\r\n            if (!initialized) {\r\n                if (selectedPatient()) {\r\n                    datacontext.checkIfAllObservationsAreLoadedYet(selectedPatient().id());\r\n                }\r\n                initialized = true;\r\n            }\r\n        }\r\n\r\n        function addData () {\r\n            toggleModalShowing();\r\n        }\r\n\r\n        function saveAllergies() {\r\n            if (selectedPatient().allergies().length === 0) {\r\n                return false;\r\n            }\r\n            // If there are any allergies that need saving\r\n            var needsSaving = ko.utils.arrayFilter(selectedPatient().allergies(), function (allergy) {\r\n                return allergy.needToSave() && allergy.isValid();\r\n            });\r\n\t\t\t\r\n            if (needsSaving.length > 0) {\r\n                datacontext.saveAllergies(needsSaving).then(saveAllergiesCompleted);\r\n\t\t\t\t\r\n\t\t\t\tvar saveAllergiesCompleted = function(data) {\r\n                    // For each saved allergy\r\n                    ko.utils.arrayForEach(data, function (allg) {\r\n                        // Make sure it is set to not be new anymore\r\n                        allg.isNew(false);\r\n                        allg.isUserCreated(false);\r\n                    });\r\n                }\r\n            }\r\n\t\t\tvar destroyThese = ko.utils.arrayFilter( selectedPatient().allergies(), function (allergy) {\r\n\t\t\t\treturn allergy.needToSave() && !allergy.isValid();\r\n\t\t\t});\r\n\t\t\tremoveDataEntries( destroyThese );\r\n        }\r\n\r\n        /**\r\n        *   saveNewMedication saves a new patient medication (insert only)\r\n        *   using child module: medication.edit\r\n        *\r\n        * \t@method saveNewMedication\r\n        */\r\n        function saveNewMedication() {\r\n\r\n            if (selectedPatient().medications().length === 0) {\r\n                return false;\r\n            }\r\n            // If there are any medications that need saving\r\n            var needsSaving = ko.utils.arrayFirst(selectedPatient().medications(), function (medication) {\r\n                return medication.needToSave() && medication.isValid();\r\n            });\r\n            if (needsSaving) {\r\n\t\t\t\tdatacontext.saveMedication(needsSaving).then(saveMedicationCompleted);\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n                var saveMedicationCompleted = function(data) {\r\n                }\r\n            }                            \r\n            else{ \r\n                cleanInvalidMedications();\r\n            }             \r\n        }\r\n        \r\n        function cleanInvalidMedications() {\r\n            var thisMedsArray = selectedPatient().medications().slice(0);\r\n            // Go through each med,\r\n            ko.utils.arrayForEach(thisMedsArray, function (med) {                \r\n                if( med.isNew() && !med.isValid() ) {\r\n                    // Delete it from the manager\r\n                    med.entityAspect.rejectChanges();\r\n                }\r\n            });\r\n        }\r\n\r\n\t\t/**\r\n\t\t*\tsaves all observations in data entry modal.\r\n\t\t*\t@method saveDataEntry\r\n\t\t*/\r\n        function saveDataEntry() {\r\n            if (selectedPatient().observations().length === 0 ) {\r\n                return false;\r\n            }\r\n            // Go save the current patients' observations\r\n            datacontext.saveObservations(selectedPatient().id()).then(saveCompleted);\r\n\r\n            function saveCompleted() {\r\n                // Clear out the standard observations\r\n                var thisArray = selectedPatient().observations().slice(0);\r\n                var deleteThese = [];\r\n                // Go through each of the observations\r\n                ko.utils.arrayForEach(thisArray, function (obs) {\r\n                    // If it's not a problem,\r\n                    if (obs.deleteFlag()) {\r\n                        deleteThese.push(obs);\r\n                    } else if (obs.type().name().toLowerCase() !== 'problems') {\r\n                        // If it is new,\r\n                        if (obs.isNew()) {                        \r\n                            // Delete all new ones\r\n                            deleteThese.push(obs);\r\n                        } else if (obs.deleteFlag()) {\r\n                            // Flagged for deletion\r\n                            deleteThese.push(obs);\r\n                        }\r\n                    } else if (obs.entityAspect.entityState.isModified() || obs.isNew()) {\r\n                        // If it is a problem that has valid changes\r\n\t\t\t\t\t\tif( obs.isValid() ){\r\n\t\t\t\t\t\t\tobs.entityAspect.acceptChanges();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobs.entityAspect.rejectChanges();\r\n\t\t\t\t\t\t\tdeleteThese.push(obs);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tobs.isNew(false);\t\t\t\t\t\t\r\n                        if (obs.deleteFlag()) {\r\n                            deleteThese .push(obs);\r\n                        }\r\n                    } else if (obs.deleteFlag()) {\r\n                        deleteThese.push(obs);\r\n                    }\r\n                });\r\n                var refreshDataPage = (deleteThese.length > 0);\r\n                // Blow the entity out of the cache\r\n                while (deleteThese.length > 0) {\r\n                    var observation = deleteThese[0];\r\n                    observation.entityAspect.setDeleted();\r\n                    observation.entityAspect.acceptChanges();\r\n                    deleteThese.splice(0, 1);\r\n                };\r\n                // Haaaaaaaack\r\n                //     Only doing this because the artifacts keep persisting in data.list\r\n                if (refreshDataPage) {\r\n                    needToRefreshObservations(true);\r\n                }\r\n                selectedPatient().observations.valueHasMutated();\r\n                // HACK : Trigger notify subscribers to go get more\r\n                activeDataType.valueHasMutated();\r\n            }\r\n        }\r\n\r\n        function cancelDataEntry() {\r\n            var thisObsArray = selectedPatient().observations().slice(0);\r\n            var thisAllgArray = selectedPatient().allergies().slice(0);\r\n            var thisMedsArray = selectedPatient().medications().slice(0);\r\n            var destroyThese = [];\r\n            //ko.utils.arrayForEach(thisArray, function (observation) {\r\n            //    // HACK : \r\n            //    // Set the date to clear to allow the UI to clear the value \r\n            //    // in the date picker control\r\n            //    observation.startDate('clear');\r\n            //});\r\n            // Go through each observation,\r\n            ko.utils.arrayForEach(thisObsArray, function (observation) {\r\n                // If the observation is new,\r\n                if (observation.isNew()) {\r\n                    // Delete it from the manager\r\n                    destroyThese.push(observation);\r\n                }\r\n\t\t\t\telse{\r\n\t\t\t\t\tobservation.entityAspect.rejectChanges();\r\n\t\t\t\t}\r\n            });\r\n            // Go through each alleg,\r\n            ko.utils.arrayForEach(thisAllgArray, function (alleg) {\r\n                // If the alleg is new,\r\n                if (alleg.isNew()) {\r\n                    // Delete it from the manager\r\n                    destroyThese.push(alleg);\r\n                }\r\n            });\r\n            // Go through each med,\r\n            ko.utils.arrayForEach(thisMedsArray, function (med) {\r\n                // If the med is new,\r\n                if (med.isNew()) {\r\n                    // Delete it from the manager\r\n                    med.entityAspect.rejectChanges();\r\n                }\r\n            });\r\n\t\t\tremoveDataEntries( destroyThese );\r\n            \r\n            // Force the observations lists' to recalculate\r\n            var thisActiveDataType = activeDataType();\r\n            activeDataType(null);\r\n            activeDataType(thisActiveDataType);\r\n        }\r\n\t\t\r\n\t\tfunction removeDataEntries( destroyThese ){\r\n\t\t\twhile (destroyThese.length > 0) {\r\n                var entity = destroyThese[0];\r\n                entity.entityAspect.setDeleted();\r\n                entity.entityAspect.acceptChanges();\r\n                destroyThese.splice(0, 1);\r\n            };\r\n\t\t}\r\n        function setActiveDataType(sender) {\r\n            activeDataType(sender);\r\n        }\r\n\r\n        function setOpenColumn(sender) {\r\n            openColumn(sender);\r\n        }\r\n\r\n        function minimizeThisColumn(sender) {\r\n            sender.column.isOpen(false);\r\n        }\r\n\r\n        function maximizeThisColumn(sender) {\r\n            sender.column.isOpen(true);\r\n        }\r\n\r\n        function toggleFullScreen(sender) {\r\n            sender.isFullScreen(!sender.isFullScreen());\r\n        }\r\n\r\n        function ModalEntity() {\r\n            var self = this;\r\n            self.activeDataType = ko.observable();\r\n            self.selectedPatient = selectedPatient;\r\n            self.showDropdown = true;\r\n            self.showActions = false;\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { selectedPatient: self.selectedPatient, activeDataType: self.activeDataType, showDropdown: self.showDropdown, showActions: self.showActions };\r\n            self.canSave = ko.observable(true);\r\n        }\r\n    });\n","define('viewmodels/patients/careplan/index',['plugins/router', 'services/navigation', 'config.services', 'models/base', 'services/session', 'services/datacontext', 'viewmodels/patients/index', 'viewmodels/patients/data/index', 'viewmodels/shell/shell'],\r\n    function (router, navigation, servicesConfig, modelConfig, session, datacontext, patientsIndex, dataIndex, shell) {\r\n        var subscriptionTokens = [];\r\n\r\n        var programsSortTwo = function (l, r) {\r\n\r\n            // Primary sort property\r\n            var p1 = l.elementStateModel().order();\r\n            var p2 = r.elementStateModel().order();\r\n\r\n            // Secondary sort property\r\n            var o1 = l.name().toLowerCase();\r\n            var o2 = r.name().toLowerCase();\r\n            \r\n            if (p1 != p2) {\r\n                if (p1 < p2) return -1;\r\n                if (p1 > p2) return 1;\r\n                return 0;\r\n            }\r\n            if (o1 < o2) return -1;\r\n            if (o1 > o2) return 1;\r\n            return 0;\r\n        };\r\n\r\n        var selectedPatientToken;\r\n\r\n        var selectedPatient = ko.computed(function () {\r\n            return patientsIndex.selectedPatient();\r\n        });\r\n\r\n        var selectedPatientsPrograms = ko.computed(function () {\r\n            var thesePrograms = [];\r\n            if (selectedPatient()) {\r\n                thesePrograms = selectedPatient().programs();\r\n                ko.utils.arrayForEach(thesePrograms, function (program) {\r\n                    // If this is the first time we see this program,\r\n                    if (!program.isOpen) {\r\n                        // Give it an isOpen property\r\n                        program.isOpen = ko.observable(false);\r\n                        // If the program has already fetched modules,\r\n                        if (program.modules().length !== 0) {\r\n                            // Open the program\r\n                            program.isOpen(true);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            return thesePrograms;\r\n        });\r\n\r\n        var alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n        var endDateSort = function (a,b) { var x = Date.parse(a.attrEndDate()); var y = Date.parse(b.attrEndDate()); if (x == y) { return 0; } if (isNaN(x) || x > y) { return -1; } if (isNaN(y) || x < y) { return 1; }}\r\n\r\n        var programsSort = function (l, r) {\r\n            return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1)\r\n        };\r\n\r\n        function ModalEntity() {\r\n            var self = this;\r\n            self.activeDataType = ko.observable();\r\n            self.selectedPatient = selectedPatient;\r\n            self.showDropdown = true;\r\n            self.showActions = false;\r\n            self.canSave = ko.observable(true);\r\n\t\t\tself.activationData = { selectedPatient: self.selectedPatient, activeDataType: self.activeDataType, showDropdown: self.showDropdown, showActions: self.showActions };\r\n        }\r\n        var modalShowing = ko.observable(false);\r\n        var modalEntity = ko.observable(new ModalEntity());\r\n        function saveOverride () {\r\n            modalEntity().activeDataType(null);\r\n            dataIndex.saveAllData();\r\n        };\r\n        function cancelOverride () {\r\n            modalEntity().activeDataType(null);\r\n            dataIndex.cancelDataEntry();\r\n        };\r\n\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Data Entry',\r\n\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\tentity: modalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/clinical.dataentry', \r\n\t\t\tshowing: modalShowing, \r\n\t\t\tsaveOverride: saveOverride, \r\n\t\t\tcancelOverride: cancelOverride, \r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: 'modal-lg'\r\n\t\t}\r\n        var modal = new modelConfig.modal(modalSettings);\r\n        function toggleModalShowing() {\t\t\t\r\n            shell.currentModal(modal);\r\n            modalShowing(!modalShowing());\r\n        }\r\n\r\n        var openColumn = ko.observable();\r\n        var widgets = ko.observableArray();\r\n\r\n        var activeAction = ko.observable();\r\n        var activeModule = ko.observable();\r\n        var activeProgram = ko.observable();\r\n\r\n        var activeWidgetWatcher = ko.computed(function () {\r\n            var activeaction = activeAction();\r\n            var activeprogram = activeProgram();\r\n            var activemodule = activeModule();\r\n            if (activeaction) {\r\n                var thisAction = activeAction();\r\n                if (thisAction && thisAction.steps().length === 0) {\r\n\t\t\t\t\tthisAction.isLoading(true);\r\n                    getStepsForAction(thisAction).then( function(data){\r\n\t\t\t\t\t\tif( thisAction.steps().length > 0 ){\r\n\t\t\t\t\t\t\tthisAction.isLoading(false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n                }                    \r\n            } else {\r\n            }\r\n        }).extend({ throttle: 25 });\r\n\r\n        var initialized = false;\r\n\r\n        var programEndPoint = ko.computed(function() {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'program', 'Program');\r\n        });\r\n\r\n        var actionEndPoint = ko.computed(function() {\r\n            if (activeAction() && selectedPatient()) {\r\n                var thisAction = activeAction();\r\n                return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + selectedPatient().id() + '/Program/' + thisAction.module().program().id() + '/Module/' + thisAction.module().id() + '/Action/' + thisAction.id(), 'Action');\r\n            }\r\n        });\r\n\r\n        var genericActionEndPoint = ko.computed(function() {\r\n            if (selectedPatient()) {\r\n                return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient');\r\n            }\r\n        });\r\n\r\n        function widget(data, column) {\r\n            var self = this;\r\n            self.name = ko.observable(data.name);\r\n            self.path = ko.observable(data.path);\r\n            self.isOpen = ko.observable(data.open);\r\n            self.column = column;\r\n            self.isFullScreen = ko.observable(false);\r\n            self.elementStateIds = data.elementStateIds;\r\n            self.sortOverride = data.sortOverride;\r\n        }\r\n\r\n        function column(name, open, widgets) {\r\n            var self = this;\r\n            self.name = ko.observable(name);\r\n            self.isOpen = ko.observable(open).extend({ notify: 'always' });\r\n            var ioToken = self.isOpen.subscribe(function() {\r\n                computedOpenColumn(self);\r\n            });\r\n            subscriptionTokens.push(ioToken);\r\n            self.widgets = ko.observableArray();\r\n            $.each(widgets, function (index, item) {\r\n                self.widgets.push(new widget(item, self))\r\n            });\r\n        }\r\n\r\n        var planColumn = ko.observable(new column('carePlan', false, [{ name: 'Active Programs', path: 'patients/widgets/careplan.html', open: true, elementStateIds: [2,3,4], sortOverride: programsSortTwo }, { name: 'Program History', path: 'patients/widgets/careplan.html', open: false, elementStateIds: [1,5,6], sortOverride: endDateSort  }]));\r\n        var detailsColumn = ko.observable(new column('actionDetails', false, [{ name: 'ActionDetails', path: 'viewmodels/patients/widgets/action.details', open: true }, { name: 'ModuleDetails', path: 'viewmodels/patients/widgets/module.details', open: true }, { name: 'ProgramDetails', path: 'viewmodels/patients/widgets/program.details', open: true }]));\r\n\r\n        var computedOpenColumn = ko.computed({\r\n            read: function () {\r\n                return openColumn();\r\n            },\r\n            write: function (value) {\r\n                // If this column is being set to closed\r\n                if (!value.isOpen()) {\r\n                    // Check if this is the open column and it's also the first column\r\n                    if (value === openColumn() && value.name() === 'carePlan') {\r\n                        // Set the open column to be the second column\r\n                        openColumn(detailsColumn());\r\n                    }\r\n                        // Or else check if this is the open column\r\n                    else if (value === openColumn()) {\r\n                        // and Set the open column to be the first column\r\n                        openColumn(planColumn());\r\n                    }\r\n                }\r\n                    // If it's being set to open, just set this column to be the open column\r\n                else {\r\n                    openColumn(value);\r\n                }\r\n            }\r\n        });\r\n\r\n        var vm = {\r\n            activate: activate,\r\n            attached: attached,\r\n            activeAction: activeAction,\r\n            activeModule: activeModule,\r\n            activeProgram: activeProgram,\r\n            openColumn: openColumn,\r\n            planColumn: planColumn,\r\n            detailsColumn: detailsColumn,\r\n            widgets: widgets,\r\n            computedOpenColumn: computedOpenColumn,\r\n            selectedPatient: selectedPatient,\r\n            selectedPatientsPrograms: selectedPatientsPrograms,\r\n            programsSortTwo: programsSortTwo,\r\n            alphabeticalOrderSort: alphabeticalOrderSort,\r\n            minimizeThisColumn: minimizeThisColumn,\r\n            maximizeThisColumn: maximizeThisColumn,\r\n            toggleFullScreen: toggleFullScreen,\r\n            modalShowing: modalShowing,\r\n            toggleModalShowing: toggleModalShowing,\r\n            getStepsForAction: getStepsForAction,\r\n            title: 'index',\r\n            toggleWidgetOpen: toggleWidgetOpen\r\n        };\r\n\r\n        return vm;\r\n\r\n        function activate() {\r\n            // If we aren't already subscribed to this patient,\r\n            if (!selectedPatientToken) {\r\n            // Set a local instance of selectedPatient equal to the injected patient\r\n                selectedPatientToken = selectedPatient.subscribe(function (newValue) {\r\n                    // Need to go get programs for the selected patient whenever selected patient changes\r\n                    //getProgramsForSelectedPatient();\r\n\r\n                    // Clear out the active showing action or program column\r\n                    activeAction(null);\r\n                    activeModule(null);\r\n                    activeProgram(null);\r\n                });\r\n                subscriptionTokens.push(selectedPatientToken);\r\n            }\r\n            openColumn(planColumn());\r\n        }\r\n\r\n        function attached() {\r\n            if (!initialized) {\r\n                initialized = true;\r\n            }\r\n        }\r\n\r\n        function detached() {\r\n          isComposed(false);\r\n          // selectedPatient.dispose();\r\n          // selectedPatientsPrograms.dispose();\r\n          // activeWidgetWatcher.dispose();\r\n          // programEndPoint.dispose();\r\n          // actionEndPoint.dispose();\r\n          // genericActionEndPoint.dispose();\r\n          // computedOpenColumn.dispose();\r\n          // ko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n          //     token.dispose();\r\n          // });\r\n        }\r\n\r\n        \r\n        function getProgramsForSelectedPatient() {\r\n            datacontext.getEntityList(null, programEndPoint().EntityType, programEndPoint().ResourcePath, null, null, false);\r\n        }\r\n\r\n        function getStepsForAction(action) {\r\n            return datacontext.getEntityList(null, actionEndPoint().EntityType, genericActionEndPoint().ResourcePath + '/' + selectedPatient().id() + '/Program/' + action.module().program().id() + '/Module/' + action.module().id() + '/Action/' + action.id(), null, null, true);\r\n        }\r\n\r\n        function minimizeThisColumn(sender) {\r\n            sender.column.isOpen(false);\r\n        }\r\n\r\n        function maximizeThisColumn(sender) {\r\n            sender.column.isOpen(true);\r\n        }\r\n\r\n        function toggleFullScreen(sender) {\r\n            sender.isFullScreen(!sender.isFullScreen());\r\n        }\r\n\r\n        // Toggle whether the widget is open or not\r\n        function toggleWidgetOpen(sender) {\r\n            // Find how many widgets are open\r\n            var openwidgets = ko.utils.arrayFilter(sender.column.widgets(), function (wid) {\r\n                return wid.isOpen();\r\n            });\r\n            // If the widget is the only open widget\r\n            if (openwidgets.length === 1 && openwidgets[0] === sender) {\r\n                // Do nothing\r\n            } else {\r\n                sender.isOpen(!sender.isOpen());\r\n            }\r\n        }\r\n    });\n","define('viewmodels/patients/goals/index',['plugins/router', 'services/navigation', 'config.services', 'models/base', 'services/session', 'services/datacontext', 'viewmodels/patients/index', 'viewmodels/shell/shell'],\r\n    function (router, navigation, servicesConfig, modelConfig, session, datacontext, patientsIndex, shell) {\r\n\r\n        var subscriptionTokens= [];\r\n\r\n        var selectedPatient = ko.computed(function () {\r\n            return patientsIndex.selectedPatient();\r\n        });\r\n\r\n        var endDateSort = function (a,b) { var x = a.endDate(); var y = b.endDate(); if (x == y) { return 0; } if (isNaN(x) || x > y) { return -1; } if (isNaN(y) || x < y) { return 1; }}\r\n\r\n        var navToken = navigation.currentRoute.subscribe(function () {\r\n            if (selectedPatient()) {\r\n                ko.utils.arrayForEach(selectedPatient().goals(), function (thisGoal) {\r\n                    if(thisGoal.isExpanded) {\r\n                        thisGoal.isExpanded(false);\r\n                        thisGoal.isOpen(false);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        subscriptionTokens.push(navToken);\r\n\r\n        var widgets = ko.observableArray();\r\n        var activeGoal = ko.observable();\r\n        var activeTask = ko.observable();\r\n        var activeIntervention = ko.observable();\r\n        var initialized = false;\r\n        var isComposed = ko.observable(true);\r\n\r\n        var newGoal = ko.observable();\r\n        var goalModalShowing = ko.observable(true);\r\n\r\n        var goalsEndPoint = ko.computed(function() {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'goal', 'Goal');\r\n        });\r\n\r\n        var goalEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Goal');\r\n        });\r\n\r\n        function widget(data, column) {\r\n            var self = this;\r\n            self.name = ko.observable(data.name);\r\n            self.path = ko.observable(data.path);\r\n            self.column = column;\r\n            self.isFullScreen = ko.observable(false);\r\n            self.statusIds = data.statusIds;\r\n            self.canAdd = ko.observable(data.canadd);\r\n            self.emptyMesssage = data.emptymessage;\r\n            self.sortOverride = data.sortoverride;\r\n            self.isOpen = ko.observable(data.open);\r\n        }\r\n\r\n        function Column(name, open, widgets) {\r\n            var self = this;\r\n            self.name = ko.observable(name);\r\n            self.widgets = ko.observableArray();\r\n            self.isOpen = ko.observable(open).extend({ notify: 'always' });\r\n            var ioToken = self.isOpen.subscribe(function() {\r\n                computedOpenColumn(self);\r\n            });\r\n            subscriptionTokens.push(ioToken);\r\n            $.each(widgets, function (index, item) {\r\n                self.widgets.push(new widget(item, self))\r\n            });\r\n        }\r\n\r\n        var goalColumn = ko.observable(new Column('goalColumn', true, [{ name: 'Active Goals', path: 'patients/widgets/goals.html', statusIds: ['1','3'], canadd: true, open: true }, { name: 'Goal History', path: 'patients/widgets/goals.html', statusIds: ['2','4'], canadd: false, open: false, emptymessage: 'No history available.', sortoverride: endDateSort }]));\r\n        var detailsColumn = ko.observable(new Column('goalDetails', false, [{ name: 'GoalDetails', path: 'viewmodels/patients/sections/goal.details', open: true }, { name: 'TaskDetails', path: 'viewmodels/patients/sections/task.details', open: true }, { name: 'InterventionDetails', path: 'viewmodels/patients/sections/intervention.details', open: true }]));\r\n        var openColumn = ko.observable();\r\n        var computedOpenColumn = ko.computed({\r\n            read: function () {\r\n                return openColumn();\r\n            },\r\n            write: function (value) {\r\n                if (!value.isOpen()) {\r\n                    if (value === openColumn() && value.name() === 'goalColumn') {\r\n                        openColumn(detailsColumn());\r\n                    } else if (value === openColumn()) {\r\n                        openColumn(goalColumn());\r\n                    }\r\n                } else {\r\n                    openColumn(value);\r\n                }\r\n            }\r\n        });\r\n\r\n        var vm = {\r\n            activate: activate,\r\n            attached: attached,\r\n            deactivate: deactivate,\r\n            detached: detached,\r\n            activeGoal: activeGoal,\r\n            activeTask: activeTask,\r\n            addEntity: addEntity,\r\n            activeIntervention: activeIntervention,\r\n            isComposed: isComposed,\r\n            computedOpenColumn: computedOpenColumn,\r\n            goalColumn: goalColumn,\r\n            detailsColumn: detailsColumn,\r\n            widgets: widgets,\r\n            minimizeThisColumn: minimizeThisColumn,\r\n            maximizeThisColumn: maximizeThisColumn,\r\n            toggleFullScreen: toggleFullScreen,\r\n            selectedPatient: selectedPatient,\r\n            cancelChanges: cancelChanges,\r\n            addGoal: addGoal,\r\n            editGoal: editGoal,\r\n            title: 'Goals',\r\n            getGoalDetails: getGoalDetails,\r\n            toggleWidgetOpen: toggleWidgetOpen\r\n        };\r\n\r\n        return vm;\r\n\r\n        function addEntity (type, goal, startDate, assignedToId) {\r\n            var thisPatientId = selectedPatient().id();\r\n\r\n            var thisGoalId = goal.id();\r\n            return datacontext.initializeEntity(null, type, thisPatientId, thisGoalId).then(entityReturned);\r\n\r\n            function entityReturned(data) {\r\n                var thisId = data.httpResponse.data.Id;\r\n                if (thisId) {\r\n                    var params = {};\r\n                    params.id = thisId;\r\n                    params.patientGoalId = thisGoalId;\r\n                    params.statusId = 1;\r\n                    if (startDate) {\r\n                        params.startDate = startDate;\r\n                    }\r\n                    if (assignedToId) {\r\n                        params.assignedToId = assignedToId;\r\n                    }\r\n                    var thisEntity = datacontext.createEntity(type, params);\r\n                    return thisEntity;\r\n                }\r\n                else {\r\n                    var thisTask = data.results[0];\r\n                    thisTask.startDate(new Date());\r\n                    thisTask.statusId(1);\r\n                    thisTask.patientGoalId(thisGoalId);\r\n                    return thisTask;\r\n                }\r\n            }\r\n        };\r\n\r\n        function editGoal(goal, msg) {\r\n            var modalEntity = ko.observable(new ModalEntity(goal));\r\n            var saveOverride = function () {\r\n                datacontext.saveGoal(modalEntity().goal);\r\n            };\r\n            var cancelOverride = function () {\r\n                var goalCancel = modalEntity().goal;\r\n                goalCancel.entityAspect.rejectChanges();\r\n                getGoalDetails(goalCancel, true);\r\n            };\r\n            msg = msg ? msg : 'Edit Goal';\r\n            var modalSettings = {\r\n                title: msg,\r\n                showSelectedPatientInTitle: true,\r\n                entity: modalEntity,\r\n                templatePath: 'viewmodels/templates/goal.edit',\r\n                showing: goalModalShowing,\r\n                saveOverride: saveOverride,\r\n                cancelOverride: cancelOverride,\r\n                deleteOverride: null,\r\n                classOverride: null\r\n            };\r\n            var modal = new modelConfig.modal(modalSettings);\r\n            goalModalShowing(true);\r\n            shell.currentModal(modal);\r\n        }\r\n\r\n        function toggleWidgetOpen(sender) {\r\n            var openwidgets = ko.utils.arrayFilter(sender.column.widgets(), function (wid) {\r\n                return wid.isOpen();\r\n            });\r\n            if (openwidgets.length === 1 && openwidgets[0] === sender) {\r\n            } else {\r\n                sender.isOpen(!sender.isOpen());\r\n            }\r\n        }\r\n\r\n        function setOpenColumn(sender) {\r\n            openColumn(sender);\r\n        }\r\n\r\n        function minimizeThisColumn(sender) {\r\n            sender.column.isOpen(false);\r\n        }\r\n\r\n        function maximizeThisColumn(sender) {\r\n            sender.column.isOpen(true);\r\n        }\r\n\r\n        function toggleFullScreen(sender) {\r\n            sender.isFullScreen(!sender.isFullScreen());\r\n        }\r\n\r\n\r\n        function addGoal() {\r\n            datacontext.initializeEntity(newGoal, 'Goal', selectedPatient().id()).then(goalReturned);\r\n            function goalReturned(data) {\r\n                var thisGoal = data.results[0];\r\n                thisGoal.statusId(1);\r\n                thisGoal.startDate(new Date(moment().format('MM/DD/YYYY')));\r\n                thisGoal.isNew(true);\r\n                thisGoal.patientId(selectedPatient().id());\r\n                editGoal(thisGoal, 'Add Goal');\r\n            }\r\n        };\r\n\r\n        function ModalEntity(goal) {\r\n            var self = this;\r\n            self.goal = goal;\r\n            self.activationData = { goal: self.goal };\r\n            self.canSave = ko.computed(function () {\r\n                return (self.goal.name() && self.goal.sourceId());\r\n            });\r\n        }\r\n\r\n        function cancelChanges() {\r\n            var thisGoal = activeGoal();\r\n            thisGoal.entityAspect.rejectChanges();\r\n            ko.utils.arrayForEach(thisGoal.tasks(), function (task) {\r\n                task.entityAspect.rejectChanges();\r\n            });\r\n            ko.utils.arrayForEach(thisGoal.barriers(), function (barrier) {\r\n                barrier.entityAspect.rejectChanges();\r\n            });\r\n            ko.utils.arrayForEach(thisGoal.interventions(), function (intervention) {\r\n                intervention.entityAspect.rejectChanges();\r\n            });\r\n        }\r\n\r\n        function activate() {\r\n            isComposed(false);\r\n            var spToken = selectedPatient.subscribe(function (newValue) {\r\n                activeGoal(null);\r\n                activeTask(null);\r\n                activeIntervention(null);\r\n            });\r\n            subscriptionTokens.push(spToken);\r\n            openColumn(goalColumn());\r\n        }\r\n\r\n        function attached() {\r\n            if (!initialized) {\r\n                initialized = true;\r\n            }\r\n            isComposed(true);\r\n        }\r\n\r\n        function deactivate() {\r\n            isComposed(false);\r\n        }\r\n\r\n        function detached() {\r\n\r\n        }\r\n\r\n        function getGoalsForSelectedPatient() {\r\n            datacontext.getEntityList(null, goalsEndPoint().EntityType, goalsEndPoint().ResourcePath, null, null, false);\r\n        }\r\n\r\n        function getGoalDetails (goal, forceReload) {\r\n            var goalId = goal.id();\r\n            var patientId = goal.patientId();\r\n            var alreadyLoaded = forceReload ? true : !goal.isLoaded;\r\n            datacontext.getEntityById(null, goalId, goalEndPoint().EntityType, goalEndPoint().ResourcePath + patientId + '/Goal/', alreadyLoaded).then(goalHasLoaded);\r\n\r\n            function goalHasLoaded (result) {\r\n                goal.isLoaded = true;\r\n            }\r\n        };\r\n\r\n    });\n","define('viewmodels/patients/history/index',['plugins/router', 'services/navigation', 'config.services', 'services/session', 'services/datacontext', 'viewmodels/patients/index', 'viewmodels/shell/shell', 'models/base'],\r\n    function (router, navigation, servicesConfig, session, datacontext, patientsIndex, shell, modelConfig) {\r\n\r\n        var selectedPatient = ko.computed(function () {\r\n            return patientsIndex.selectedPatient();\r\n        });\r\n\r\n        var descendingDateSort = function (l, r) { return (l.createdOn() == r.createdOn()) ? (l.createdOn() < r.createdOn() ? 1 : -1) : (l.createdOn() < r.createdOn() ? 1 : -1) };\r\n\r\n        var notes = ko.computed(function () {\r\n            var theseNotes = [];\r\n            if (selectedPatient()) {\r\n                theseNotes = selectedPatient().notes();\r\n            }\r\n            return theseNotes;\r\n        }).extend({ throttle: 1 });\r\n\r\n        var isOpenToken = {}, notesToken = {};\r\n\r\n        var notesToken = notes.subscribe(function () {\r\n            getNotes();\r\n        });\r\n\r\n        var groups = ko.observableArray();\r\n\t\tvar originalProgramIds = ko.observableArray([]);\r\n        var activeNote = ko.observable();\r\n\t\tvar activeNoteLoader = ko.computed(function(){\r\n\t\t\tvar note = activeNote();\r\n\t\t\tif( note && note.type() && note.type().name().toLowerCase() === 'utilization' ){\r\n\t\t\t\t//load this note if the type is utilization\r\n\t\t\t\tdatacontext.getNote( note.id(), note.patientId(), note.type().name() );\r\n\t\t\t}\r\n\t\t});\r\n        var alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n\r\n        var openColumn = ko.observable();\r\n\r\n        var initialized = false;\r\n\r\n        function widget(data, column) {\r\n            var self = this;\r\n            self.name = ko.observable(data.name);\r\n            self.path = ko.observable(data.path);\r\n            self.isOpen = ko.observable(data.open);\r\n            self.column = column;\r\n            self.isFullScreen = ko.observable(false);\r\n\t\t\tself.showEditButton = ko.computed( function(){\r\n\t\t\t\tvar item = data.contentItem;\t//reevaluate when the content entity changes\r\n\t\t\t\tvar hasContentItem = data.contentItem? data.contentItem() : false;\r\n\t\t\t\treturn data.showEdit? data.showEdit() : false;\r\n\t\t\t});\r\n\t\t\tself.showDeleteButton = ko.computed( function() {\r\n\t\t\t\treturn data.showDelete? data.showDelete(): false;\r\n\t\t\t});\r\n        }\r\n\r\n        function column(name, open, widgets) {\r\n            var self = this;\r\n            self.name = ko.observable(name);\r\n            self.isOpen = ko.observable(open).extend({ notify: 'always' });\r\n            isOpenToken = self.isOpen.subscribe(function () {\r\n                computedOpenColumn(self);\r\n            });\r\n            self.widgets = ko.observableArray();\r\n            $.each(widgets, function (index, item) {\r\n                self.widgets.push(new widget(item, self))\r\n            });\r\n        }\r\n\t\tfunction isShowEditButton(){\t\t\t\r\n\t\t\treturn activeNote && activeNote() && activeNote().isEditable();\t\t\t\r\n\t\t}\r\n        var columns = ko.observableArray([\r\n            new column('historyList', false, [{ name: 'History', path: 'patients/widgets/history.list.html', open: true }]),\r\n            new column('details', false, [{ name: 'Details', path: 'patients/widgets/history.detail.html', open: true, showEdit: isShowEditButton, showDelete: isShowEditButton, contentItem: activeNote }])\r\n        ]);\r\n\r\n        var computedOpenColumn = ko.computed({\r\n            read: function () {\r\n                return openColumn();\r\n            },\r\n            write: function (value) {\r\n                // If this column is being set to closed\r\n                if (!value.isOpen()) {\r\n                    // Check if this is the open column and it's also the first column\r\n                    if (value === openColumn() && value === columns()[0]) {\r\n                        // Set the open column to be the second column\r\n                        openColumn(columns()[1]);\r\n                    }\r\n                        // Or else check if this is the open column\r\n                    else if (value === openColumn()) {\r\n                        // and Set the open column to be the first column\r\n                        openColumn(columns()[0]);\r\n                    }\r\n                }\r\n                    // If it's being set to open, just set this column to be the open column\r\n                else {\r\n                    openColumn(value);\r\n                }\r\n            }\r\n        });\r\n\r\n\t\tvar noteModalShowing = ko.observable(true);\r\n\r\n        var vm = {\r\n            activate: activate,\r\n            selectedPatient: selectedPatient,\r\n            columns: columns,\r\n            computedOpenColumn: computedOpenColumn,\r\n            activeNote: activeNote,\r\n            setActiveNote: setActiveNote,\r\n\t\t\teditClickFunc: editNote,\r\n\t\t\tdeleteClickFunc: deleteNote,\r\n            setOpenColumn: setOpenColumn,\r\n            minimizeThisColumn: minimizeThisColumn,\r\n            maximizeThisColumn: maximizeThisColumn,\r\n            toggleFullScreen: toggleFullScreen,\r\n            groups: groups,\r\n            notes: notes,\r\n            attached: attached,\r\n            deactivate: deactivate,\r\n            compositionComplete: compositionComplete,\r\n            title: 'index'\r\n        };\r\n\r\n        return vm;\r\n\r\n        function getNotes() {\r\n            if (selectedPatient()) {\r\n                var theseNotes = notes().slice(0).sort(descendingDateSort);\r\n                theseNotes = theseNotes.slice(0, 100);\r\n                groupNotes(theseNotes);\r\n            }\r\n        }\r\n\r\n        function Group(name) {\r\n            var self = this;\r\n            self.Name = ko.observable(name);\r\n            self.Notes = ko.observableArray();\r\n        }\r\n\r\n        function groupNotes(notes) {\r\n            groups([]);\r\n            ko.utils.arrayForEach(notes, function (note) {\r\n                var thisLocalDate = note.localDate();\r\n                if (moment(thisLocalDate).isValid()) {\r\n                    var thisGroup = ko.utils.arrayFirst(groups(), function (group) {\r\n                        return group.Name() === thisLocalDate;\r\n                    });\r\n                    if (!thisGroup) {\r\n                        thisGroup = new Group(thisLocalDate);\r\n                        groups.push(thisGroup);\r\n                    }\r\n                    thisGroup.Notes.push(note);\r\n                }\r\n            });\r\n        }\r\n\r\n        function activate() {\r\n            openColumn(columns()[0]);\r\n            getNotes();\r\n        }\r\n\r\n        function attached() {\r\n            if (!initialized) {\r\n                initialized = true;\r\n            }\r\n        }\r\n\r\n        function deactivate() {\r\n            isOpenToken.dispose();\r\n            notesToken.dispose();\r\n        }\r\n\r\n        function compositionComplete() {\r\n            // After all of the composition is complete,\r\n            // If there is an active note\r\n            if (activeNote) {\r\n                // Fire it's value to trigger resizing\r\n                activeNote.valueHasMutated();\r\n            }\r\n        }\r\n\r\n        function setActiveNote(sender) {\r\n            activeNote(sender);\r\n        }\r\n\t\t//edit note:\r\n\t    function ModalEntity(note) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.note = note;\r\n\t\t\t// Object containing parameters to pass to the modal\r\n\t\t\tself.activationData = { note: self.note };\r\n\t\t\tself.canSave = ko.computed(function () {\r\n\t\t\t\treturn self.note.isValid();\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction editNote(sender){\r\n\t\t\tvar modalEntity = ko.observable(new ModalEntity(activeNote()));\r\n\t\t\tvar saveOverride = function () {\r\n\t\t\t\tvar thisNote = modalEntity().note;\r\n\t\t\t\t// If there is new content,\r\n\t\t\t\tif (thisNote && thisNote.newContent()) {\r\n\t\t\t\t\tthisNote.checkAppend();\r\n\t\t\t\t}\r\n\t\t\t  datacontext.saveNote(thisNote).then( function(){\r\n\t\t\t\t  originalProgramIds.removeAll();\r\n\t\t\t  });\r\n\t\t\t};\r\n\t\t\tvar cancelOverride = function () {\r\n\t\t\t\tvar note = activeNote();\r\n\t\t\t\tnote.entityAspect.rejectChanges();\r\n\t\t\t\t//revert to original program ids:\r\n\t\t\t\tnote.programIds.removeAll();\r\n\t\t\t\tvar progIds = note.programIds();\r\n\t\t\t\tif( originalProgramIds().length > 0){\r\n\t\t\t\t\tko.utils.arrayPushAll(progIds, originalProgramIds());\r\n\t\t\t\t\toriginalProgramIds.removeAll();\r\n\t\t\t\t}\r\n\t\t\t\tnote.newContent('');\r\n\t\t\t\t//clear the entityAspect.entityState back to Unchanged state - to hide this correction (original program id's):\r\n\t\t\t\tnote.entityAspect.setUnchanged();\r\n\t\t\t};\r\n\t\t\tvar msg = 'Edit ' + activeNote().type().name() + ' Note';\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: msg,\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: modalEntity, \r\n\t\t\t\ttemplatePath: 'viewmodels/patients/notes/index', \r\n\t\t\t\tshowing: noteModalShowing, \r\n\t\t\t\tsaveOverride: saveOverride, \r\n\t\t\t\tcancelOverride: cancelOverride, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: null\r\n\t\t\t}\r\n\t\t\tvar modal = new modelConfig.modal(modalSettings);\r\n\r\n\t\t\t//keep the original program ids\r\n\t\t\toriginalProgramIds.removeAll();\r\n\t\t\tvar progIds = originalProgramIds();\r\n\t\t\tko.utils.arrayPushAll(progIds, activeNote().programIds());\r\n\r\n\t\t\tnoteModalShowing(true);\r\n\t\t\tshell.currentModal(modal);\r\n\t\t}\r\n\r\n\t\tfunction deleteNote() {\t\t\r\n\t\t\tvar note = activeNote();\r\n\t\t\tvar thistype = note.type().name();\r\n\t\t\tvar result = confirm('You are about to delete a ' + thistype + ' note.  Press OK to continue, or cancel to return without deleting.');\r\n\t\t\t// If they press OK,\r\n\t\t\tif (result === true) {\r\n\t\t\t\tactiveNote(null);\r\n\t\t\t\tdatacontext.deleteNote( note );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n        function setOpenColumn(sender) {\r\n            openColumn(sender);\r\n        }\r\n\r\n        function minimizeThisColumn(sender) {\r\n            sender.column.isOpen(false);\r\n        }\r\n\r\n        function maximizeThisColumn(sender) {\r\n            sender.column.isOpen(true);\r\n        }\r\n\r\n        function toggleFullScreen(sender) {\r\n            sender.isFullScreen(!sender.isFullScreen());\r\n        }\r\n    });\n","define('viewmodels/patients/medications/index',['plugins/router', 'services/navigation', 'config.services', 'services/session', 'services/datacontext', 'viewmodels/patients/index', 'viewmodels/shell/shell', 'models/base', 'viewmodels/patients/data/index'],\r\n  function (router, navigation, servicesConfig, session, datacontext, patientsIndex, shell, modelConfig, dataIndex) {\r\n\r\n    var selectedPatient = ko.computed(function () {\r\n      return patientsIndex.selectedPatient();\r\n    });\r\n\r\n    var descendingDateSort = function (l, r) { return (l.createdOn() == r.createdOn()) ? (l.createdOn() < r.createdOn() ? 1 : -1) : (l.createdOn() < r.createdOn() ? 1 : -1) };\r\n\r\n    var medGroupSort = function (l, r) {\r\n      var o1 = l.medSortDate();\r\n      var o2 = r.medSortDate();\r\n\r\n      if (o1 < o2) return 1;\r\n      if (o1 > o2) return -1;\r\n      return 0;\r\n    };\r\n    var alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n\r\n    var initialized = false;\r\n\r\n    var medicationModalShowing = ko.observable(false);\r\n    var allergyModalShowing = ko.observable(false);\r\n\r\n    var MedicationGroup = function (name, firstMedication) {\r\n        var self = this;\r\n        self.name = ko.observable(name);\r\n        self.medications = ko.observableArray([firstMedication]);\r\n        self.sortedMedications = ko.computed(function () {\r\n            var results = [];\r\n            results = self.medications().sort(medGroupSort);\r\n            return results;\r\n        });\r\n        self.firstMedication = ko.computed(function () {\r\n            return self.sortedMedications()[0];\r\n        });\r\n        self.isActive = ko.observable(false);\r\n        self.isExpanded = ko.observable(false);\r\n    }\r\n\r\n    var groupedMedications = ko.computed(function () {\r\n        var medications = selectedPatient().medications();\r\n        var groups = [];\r\n        var result = [];\r\n        ko.utils.arrayForEach(medications, function (medication) {\r\n            var name = medication.name();\r\n            var isActive = medication.statusId() === '1';\r\n            var match = groups.filter(function (group) {\r\n                return group.name() === name;\r\n            })[0];\r\n            if (!match) {\r\n                var newGroup = new MedicationGroup(name, medication);\r\n                newGroup.isActive(isActive);\r\n                groups.push(newGroup);\r\n            } else {\r\n                match.medications.push(medication);\r\n                if (!match.isActive() && isActive) {\r\n                    match.isActive(true);\r\n                }\r\n            }\r\n        });\r\n        return groups;\r\n    });\r\n    var activeMedicationGroups = ko.computed(function () {\r\n      var result = [];\r\n      result = groupedMedications().filter(function (group) {\r\n        return group.isActive();\r\n      });\r\n      return result;\r\n    });\r\n    var inactiveMedicationGroups = ko.computed(function () {\r\n      var result = [];\r\n      result = groupedMedications().filter(function (group) {\r\n        return !group.isActive();\r\n      });\r\n      return result;\r\n    });\r\n\r\n    var medicationSaving = ko.computed(datacontext.medicationSaving);\r\n    var selectedSortColumn = ko.observable();\r\n    var activeMedication = ko.observable();\r\n    var activeAllergy = ko.observable();\r\n    var activeMedicationColumns = ko.computed(function () {\r\n      return ['expand','type-small','name-small','strength-small','reason','status'];\r\n    });\r\n    var toggleMedicationSort = function (sender) {\r\n      if (self.selectedSortColumn() && self.selectedSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n        if (self.selectedSortColumn() && self.selectedSortColumn().substr(self.selectedSortColumn().length - 4, 4) === 'desc' ) {\r\n          self.selectedSortColumn(null);\r\n        } else {\r\n          self.selectedSortColumn(sender.sortProperty + ' desc');\r\n        }\r\n      } else {\r\n        self.selectedSortColumn(sender.sortProperty);\r\n      }\r\n    };\r\n\r\n    function widget(data, column) {\r\n      var self = this;\r\n      self.name = ko.observable(data.name);\r\n      self.path = ko.observable(data.path);\r\n      self.isOpen = ko.observable(data.open);\r\n      self.column = column;\r\n      self.isFullScreen = ko.observable(false);\r\n      self.filtersOpen = ko.observable(true);\r\n      self.activationData = { widget: self, selectedPatient: selectedPatient, defaultSort: data.defaultSort };\r\n      self.allowAdd = data.allowAdd;\r\n      self.statusIds = data.statusIds;\r\n      self.medicationGroups = data.medicationGroups;\r\n    }\r\n\r\n    function column(name, open, widgets) {\r\n      var self = this;\r\n      self.name = ko.observable(name);\r\n      self.isOpen = ko.observable(open).extend({ notify: 'always' });\r\n      self.isOpen.subscribe(function () {\r\n        computedOpenColumn(self);\r\n      });\r\n      self.widgets = ko.observableArray();\r\n      $.each(widgets, function (index, item) {\r\n        self.widgets.push(new widget(item, self))\r\n      });\r\n    }\r\n\r\n    var medicationColumnWidgets = [\r\n        {\r\n            name: 'Allergies',\r\n            path: 'viewmodels/patients/widgets/allergies',\r\n            open: false,\r\n            statusIds: [1,2,3,4,5,6,7]\r\n        }, {\r\n            name: 'Active Medications',\r\n            path: 'viewmodels/patients/widgets/medication.groups',\r\n            open: true,\r\n            medicationGroups: activeMedicationGroups,\r\n            allowAdd: true\r\n        }, {\r\n            name: 'Inactive Medications',\r\n            path: 'viewmodels/patients/widgets/medication.groups',\r\n            open: false,\r\n            medicationGroups: inactiveMedicationGroups,\r\n            defaultSort: 'endDate desc, name'\r\n        }\r\n    ];\r\n    var medicationColumn = ko.observable(new column('medications', false, medicationColumnWidgets));\r\n    var detailsColumn = ko.observable(new column('medicationDetails', false, [{ name: 'MedicationDetails', path: 'viewmodels/patients/sections/medication.details', open: true }, { name: 'AllergyDetails', path: 'viewmodels/patients/sections/allergy.details', open: true }]));\r\n\r\n    var setActiveMedication = function (medication) {\r\n      var self = this;\r\n      self.activeMedication(medication);\r\n      self.activeAllergy(null);\r\n    };\r\n    var setActiveAllergy = function (allergy) {\r\n      var self = this;\r\n      self.activeAllergy(allergy);\r\n      self.activeMedication(null);\r\n    };\r\n    var openColumn = ko.observable();\r\n    var computedOpenColumn = ko.computed({\r\n      read: function () {\r\n        return openColumn();\r\n      },\r\n      write: function (value) {\r\n        if (!value.isOpen()) {\r\n          if (value === openColumn() && value.name() === 'medicationColumn') {\r\n            openColumn(detailsColumn());\r\n          } else if (value === openColumn()) {\r\n            openColumn(medicationColumn());\r\n          }\r\n        } else {\r\n          openColumn(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    var isComposed = ko.observable(true);\r\n\r\n    var vm = {\r\n      medicationSaving: medicationSaving,\r\n      selectedSortColumn: selectedSortColumn,\r\n      activeMedicationColumns: activeMedicationColumns,\r\n      toggleMedicationSort: toggleMedicationSort,\r\n      activate: activate,\r\n      isComposed: isComposed,\r\n      activeMedication: activeMedication,\r\n      activeAllergy: activeAllergy,\r\n      setActiveMedication: setActiveMedication,\r\n      setActiveAllergy: setActiveAllergy,\r\n      selectedPatient: selectedPatient,\r\n      computedOpenColumn: computedOpenColumn,\r\n      medicationColumn: medicationColumn,\r\n      detailsColumn: detailsColumn,\r\n      setOpenColumn: setOpenColumn,\r\n      minimizeThisColumn: minimizeThisColumn,\r\n      maximizeThisColumn: maximizeThisColumn,\r\n      editMedication: editMedication,\r\n      editAllergy: editAllergy,\r\n      toggleFullScreen: toggleFullScreen,\r\n      attached: attached,\r\n      title: 'index',\r\n      toggleWidgetOpen: toggleWidgetOpen,\r\n      addMedication: addMedication\r\n    };\r\n\r\n    return vm;\r\n\r\n    function Group(name) {\r\n      var self = this;\r\n      self.Name = ko.observable(name);\r\n      self.Notes = ko.observableArray();\r\n    }\r\n\r\n    function addMedication () {\r\n      dataIndex.addData();\r\n    };\r\n\r\n    function activate() {\r\n      var spToken = selectedPatient.subscribe(function (newValue) {\r\n        activeMedication(null);\r\n        activeAllergy(null);\r\n      });\r\n      openColumn(medicationColumn());\r\n      isComposed(false);\r\n    }\r\n\r\n    function attached() {\r\n      if (!initialized) {\r\n        initialized = true;\r\n      }\r\n      isComposed(true);\r\n    }\r\n\r\n    function detached() {\r\n      isComposed(false);\r\n    }\r\n\r\n    function editMedication(medication, msg) {\r\n        var modalEntity = ko.observable(new MedicationModalEntity(medication));\r\n        var saveOverride = function () {\r\n            datacontext.saveMedication(modalEntity().medication());\r\n        };\r\n        var cancelOverride = function () {\r\n            var medicationCancel = modalEntity().medication();\r\n            medicationCancel.entityAspect.rejectChanges();\r\n        };\r\n        msg = msg ? msg : 'Edit Medication';\r\n        var modalSettings = {\r\n            title: msg,\r\n            showSelectedPatientInTitle: true,\r\n            entity: modalEntity,\r\n            templatePath: 'viewmodels/patients/sections/medication.edit',\r\n            showing: medicationModalShowing,\r\n            saveOverride: saveOverride,\r\n            cancelOverride: cancelOverride,\r\n            deleteOverride: null,\r\n            classOverride: 'modal-lg'\r\n        };\r\n        var modal = new modelConfig.modal(modalSettings);\r\n        medicationModalShowing(true);\r\n        shell.currentModal(modal);\r\n    }\r\n\r\n    function editAllergy(allergy, msg) {\r\n        var modalEntity = ko.observable(new AllergyModalEntity(allergy));\r\n        var saveOverride = function () {\r\n            datacontext.saveAllergies([modalEntity().allergy()], 'Update').then(saveCompleted);\r\n\r\n            function saveCompleted() {\r\n                self.modalEntity().allergy().isNew(false);\r\n                self.modalEntity().allergy().isUserCreated(false);\r\n                self.modalEntity().allergy().entityAspect.acceptChanges();\r\n            }\r\n        };\r\n        var cancelOverride = function () {\r\n            var allergyCancel = modalEntity().allergy();\r\n            allergyCancel.entityAspect.rejectChanges();\r\n        };\r\n        msg = msg ? msg : 'Edit Allergy';\r\n        var modalSettings = {\r\n            title: msg,\r\n            showSelectedPatientInTitle: true,\r\n            entity: modalEntity,\r\n            templatePath: 'viewmodels/templates/allergy.edit',\r\n            showing: allergyModalShowing,\r\n            saveOverride: saveOverride,\r\n            cancelOverride: cancelOverride,\r\n            deleteOverride: null,\r\n            classOverride: 'modal-lg'\r\n        };\r\n        var modal = new modelConfig.modal(modalSettings);\r\n        allergyModalShowing(true);\r\n        shell.currentModal(modal);\r\n    }\r\n\r\n    function MedicationModalEntity(med) {\r\n      var self = this;\r\n      self.medication = ko.observable(med);\r\n      self.canSaveObservable = ko.observable(true);\r\n      self.canSave = ko.computed({\r\n        read: function () {\r\n          var medicationok = false;\r\n          if (self.medication()) {\r\n            var medicationtitle = !!self.medication().name();\r\n            var medicationstatus = !!self.medication().status();\r\n            medicationok = medicationtitle && medicationstatus;\r\n          }\r\n          return medicationok && self.canSaveObservable();\r\n        },\r\n        write: function (newValue) {\r\n          self.canSaveObservable(newValue);\r\n        }\r\n      });\r\n      self.activationData = { selectedPatient: selectedPatient, medication: self.medication, canSave: self.canSave, showing: allergyModalShowing };\r\n    }\r\n\r\n    function AllergyModalEntity(allergy) {\r\n        var self = this;\r\n        self.allergy = ko.observable(allergy);\r\n        self.canSaveObservable = ko.observable(true);\r\n        self.canSave = ko.computed({\r\n            read: function () {\r\n                var allergyok = false;\r\n                if (self.allergy()) {\r\n                    var allergytitle = !!self.allergy().allergyName();\r\n                    var allergystatus = !!self.allergy().status();\r\n                    allergyok = allergytitle && allergystatus;\r\n                }\r\n                return allergyok && self.canSaveObservable();\r\n            },\r\n            write: function (newValue) {\r\n                self.canSaveObservable(newValue);\r\n            }\r\n        });\r\n        // Object containing parameters to pass to the modal\r\n        self.activationData = { allergy: self.allergy, canSave: self.canSave, showing: allergyModalShowing  };\r\n    }\r\n\r\n    function setOpenColumn(sender) {\r\n      openColumn(sender);\r\n    }\r\n\r\n    function minimizeThisColumn(sender) {\r\n      sender.column.isOpen(false);\r\n    }\r\n\r\n    function maximizeThisColumn(sender) {\r\n      sender.column.isOpen(true);\r\n    }\r\n\r\n    function toggleFullScreen(sender) {\r\n      sender.isFullScreen(!sender.isFullScreen());\r\n    }\r\n\r\n    function refreshTodoView() {\r\n      patientsIndex.getPatientsAllergies();\r\n    }\r\n\r\n    function toggleWidgetOpen(sender) {\r\n      var openwidgets = ko.utils.arrayFilter(sender.column.widgets(), function (wid) {\r\n        return wid.isOpen();\r\n      });\r\n      if (openwidgets.length === 1 && openwidgets[0] === sender) {\r\n      } else {\r\n        sender.isOpen(!sender.isOpen());\r\n      }\r\n    }\r\n  });\n","/**\r\n*\r\n*\t@module notes.index\r\n*/\r\ndefine('viewmodels/patients/notes/index',['services/datacontext'],\r\n\tfunction (datacontext) {\r\n\r\n\t\tvar ctor = function () {\r\n\t\t\t\tvar self = this;\r\n\t\t};\r\n\r\n\t\tctor.prototype.activate = function (settings) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.settings = settings;\r\n\t\t\tself.note = self.settings.note;\r\n\t\t\tself.selectedTemplate = ko.observable();\r\n\t\t\tself.showing = ko.computed(function () { return !!self.note.type() });\r\n\t\t\tself.noteTypes = datacontext.enums.noteTypes;\r\n\t\t\tvar type = self.note.type()? \tself.note.type().name().toLowerCase() : null;\r\n\t\t\tself.templatePath = ko.computed( function(){\r\n\t\t\t\tvar type = self.note.type();\r\n\t\t\t\tvar typeName = type ? type.name().toLowerCase() : null;\r\n\t\t\t\tswitch( typeName ){\r\n\t\t\t\t\tcase 'touchpoint':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn 'viewmodels/templates/note.touchpoint.edit';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase 'utilization':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn 'viewmodels/templates/note.utilization.edit';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase null:\r\n\t\t\t\t\tcase undefined:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn 'viewmodels/templates/note.general.edit';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t});\r\n\t\t\tself.saveNote = self.settings.saveNote || function () { return false; };\r\n\t\t\tself.cancelNote = self.settings.cancelNote || function () { return false; };\r\n\t\t\tself.canSave = self.settings.canSave ? self.settings.canSave : true;\r\n\t\t\tself.showing = self.settings.showing ? self.settings.showing : true;\r\n\t\t\tself.validationErrors = ko.computed( function(){\r\n\t\t\t\tvar currentNote = self.note;\r\n\t\t\t\tvar isValid = currentNote.isValid();\r\n\t\t\t\treturn currentNote.validationErrors();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\tctor.prototype.attached = function () {\r\n\r\n\t};\r\n\r\n\treturn ctor;\r\n});\n","define('viewmodels/patients/overview/index',['services/session', 'services/datacontext', 'config.services', 'models/base', 'services/local.collections', 'viewmodels/patients/index'],\r\n    function (session, datacontext, servicesConfig, modelConfig, localCollections, patientsIndex) {\r\n\r\n        var initialized = ko.observable(false);\r\n        var subscriptionTokens = [];\r\n\r\n        // Selected patient\r\n        var selectedPatient = ko.computed(function () {\r\n          return patientsIndex.selectedPatient();\r\n        });\r\n\r\n        // Calculated thirty days ago\r\n        var thirtyDaysAgo = new Date(new Date().setDate(new Date().getDate() - 30));\r\n        thirtyDaysAgo = moment(thirtyDaysAgo).format();\r\n\r\n        // var todosListOpen = ko.observable(false);\r\n        // var interventionsListOpen = ko.observable(false);\r\n\r\n        var todosPanelOpen = ko.observable(true);\r\n        var taskPanelOpen = ko.observable(true);\r\n        var interventionsPanelOpen = ko.observable(true);\r\n        var fullScreenWidget = ko.observable();\r\n\r\n        var todoFiltersHeaderOpen = ko.observable(false);\r\n        var interventionFiltersHeaderOpen = ko.observable(false);\r\n        var taskFiltersHeaderOpen = ko.observable(false);\r\n\r\n/// Todo region\r\n\r\n        var catNotSet = {\r\n            id: ko.observable(''),\r\n            name: ko.observable('Not Set')\r\n        };\r\n\r\n        // Which view (filters) to apply\r\n        var selectedTodoView = ko.observable();\r\n        // Keep track of which index it is to keep it between patients\r\n        var selectedTodoViewIndex = ko.observable();\r\n\r\n        // Which todoViews (filters) are available\r\n        var todoViews = ko.computed(function () {\r\n            var selectedpatient = selectedPatient();\r\n            var theseviews = [];\r\n            if (selectedpatient && initialized()) {\r\n                theseviews = [\r\n                    new View('Closed To-Do List', [ new modelConfig.Parameter('patientId', selectedpatient.id(), '=='), new modelConfig.Parameter('statusId', '1', '!='), new modelConfig.Parameter('statusId', '3', '!=')], ['status-small','closedon','title','category','assignedto','priority-small'],'closedDate desc'),\r\n                    new View('Open To-Do List', [ new modelConfig.Parameter('patientId', selectedpatient.id(), '=='), new modelConfig.Parameter('statusId', '2', '!='), new modelConfig.Parameter('statusId', '4', '!=')], ['priority','duedate','title','category', 'assignedto'])];\r\n\r\n            } else {\r\n            }\r\n            return theseviews;\r\n        }).extend({ throttle: 100 });\r\n\r\n        // Clear the view if the selected patient changes\r\n        var tvToken = todoViews.subscribe(function (newValue) {\r\n            setTimeout(function () {\r\n                if (selectedTodoViewIndex() !== null && typeof selectedTodoViewIndex() != \"undefined\") {\r\n                    selectedTodoView(todoViews()[selectedTodoViewIndex()]);\r\n                } else {\r\n                    selectedTodoView(todoViews()[1]);\r\n                }\r\n            }, 200);\r\n        });\r\n        subscriptionTokens.push(tvToken);\r\n\r\n        // Indicator of processing\r\n        var todosSaving = ko.computed(datacontext.todosSaving);\r\n\r\n        // Which categories are available to filter on\r\n        var todoCategories = ko.computed(function () {\r\n            var thesetodocats = datacontext.enums.toDoCategories();\r\n            var theseCats = thesetodocats.slice(0, thesetodocats.length);\r\n            // If there is not already a not set option,\r\n            if (theseCats.indexOf(catNotSet) === -1) {\r\n                // Add it also\r\n                theseCats.push(catNotSet);\r\n            }\r\n            return theseCats;\r\n        });\r\n\r\n        // Which priorities are available to filter on\r\n        var todoPriorities = datacontext.enums.priorities;\r\n\r\n        // Filter down by categories\r\n        var selectedTodoCategories = ko.observableArray();\r\n        // Filter down by priorities\r\n        var selectedTodoPriorities = ko.observableArray();\r\n        // Column to override the default sort\r\n        var selectedTodoSortColumn = ko.observable();\r\n        // Filters showing or not?\r\n        var todoFiltersOpen = ko.observable();\r\n\r\n        var stvToken = selectedTodoView.subscribe(function (newValue) {\r\n            // Whenever the selected view changes, clear all filters and sorting\r\n            selectedTodoSortColumn(null);\r\n            if (newValue) {\r\n                selectedTodoViewIndex(todoViews().indexOf(selectedTodoView()));\r\n            }\r\n        });\r\n        subscriptionTokens.push(stvToken);\r\n\r\n        // If there is selected categories, we need to filter out all the others\r\n        var activeTodoFilters = ko.computed(function () {\r\n            var selectedcategories = selectedTodoCategories();\r\n            var selectedpriorities = selectedTodoPriorities();\r\n            var returnfilters = [];\r\n            // Check if there are categories selected\r\n            if (selectedcategories.length > 0) {\r\n                // Grab all the other categories\r\n                var othercats = ko.utils.arrayFilter(todoCategories(), function (cat) {\r\n                    // Check if this category is a selected category\r\n                    var matchingcat = ko.utils.arrayFirst(selectedcategories, function (selectCat) {\r\n                        return selectCat.id() === cat.id();\r\n                    });\r\n                    // If there is a match found,\r\n                    if (matchingcat) {\r\n                        // Don't return this category\r\n                        return false;\r\n                    } else {\r\n                        // If not do return it\r\n                        return true;\r\n                    }\r\n                });\r\n                ko.utils.arrayForEach(othercats, function (cat) {\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', cat.id(), '!='));\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', null, '!='));\r\n                });\r\n                // Not set is null, so only filter out nulls if that option isn't selected\r\n                var foundselectednull = false;\r\n                ko.utils.arrayForEach(selectedcategories, function (cat) {\r\n                    if (cat.id() === '') {\r\n                        foundselectednull = true;\r\n                    }\r\n                });\r\n                // If we didn't select for nulls\r\n                if (!foundselectednull) {\r\n                    // Don't return nulls either\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', '', '!='));\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', null, '!='));\r\n                }\r\n            }\r\n             // Check if there are priorities selected\r\n            if (selectedpriorities.length > 0) {\r\n                // Grab all the other priorities\r\n                var othercats = ko.utils.arrayFilter(todoPriorities(), function (cat) {\r\n                    // Check if this priority is a selected priority\r\n                    var match = ko.utils.arrayFirst(selectedpriorities, function (selectCat) {\r\n                        return selectCat.id() === cat.id();\r\n                    });\r\n                    // If there is a match found,\r\n                    if (match) {\r\n                        // Don't return this category\r\n                        return false;\r\n                    } else {\r\n                        // If not do return it\r\n                        return true;\r\n                    }\r\n                });\r\n                ko.utils.arrayForEach(othercats, function (cat) {\r\n                    returnfilters.push(new modelConfig.Parameter('priorityId', cat.id(), '!='));\r\n                });\r\n                // Not set is null, so only filter out nulls if that option isn't selected\r\n                var foundselectednull = false;\r\n                ko.utils.arrayForEach(selectedpriorities, function (priority) {\r\n                    if (priority.id() === '0') {\r\n                        foundselectednull = true;\r\n                    }\r\n                });\r\n                // If we didn't select for nulls\r\n                if (!foundselectednull) {\r\n                    // Don't return nulls either\r\n                    returnfilters.push(new modelConfig.Parameter('priorityId', '', '!='));   \r\n                }\r\n            }\r\n            return returnfilters;\r\n        });\r\n\r\n        // Actively showing columns\r\n        var activeTodoColumns = ko.computed(function () {\r\n            var cols = [];\r\n            if (selectedTodoView()) {\r\n                cols = selectedTodoView().columns();\r\n            }\r\n            return cols;\r\n        });\r\n\r\n        // Title \r\n        var computedTodoTitle = ko.computed(function () {\r\n            var thistitle = '';\r\n            if (selectedTodoView()) {\r\n                thistitle = selectedTodoView().name();\r\n            }\r\n            return thistitle;\r\n        });\r\n\r\n        var myToDos = ko.observableArray([]);\r\n        var myToDosUpdater = ko.computed(function () {\r\n            var theseTodos = [];\r\n            //Subscribe to localcollection todos\r\n            var allTodos = localCollections.todos();\r\n            var selectedview = selectedTodoView();\r\n            var params = [];\r\n            var orderString = '';\r\n            // Subscribe to this patient\r\n            var dummySubscription = selectedPatient();\r\n            if (selectedview) {\r\n                // Subscribe to this patient's todos\r\n                var dummySubscription = dummySubscription.todos();\r\n                // Add these parameters to the query\r\n                ko.utils.arrayForEach(selectedview.parameters, function (param) {\r\n                    params.push(param);\r\n                });\r\n                // If there are filters,\r\n                if (activeTodoFilters().length > 0) {\r\n                    // Add them as parameters\r\n                    ko.utils.arrayForEach(activeTodoFilters(), function (param) {\r\n                        params.push(param);\r\n                    });\r\n                }\r\n                // Either sort by the selected sort or the default\r\n                orderString = selectedTodoSortColumn() ? selectedTodoSortColumn() : selectedview.primarySort;\r\n                // Add the second and third orders to the string\r\n                orderString = orderString + ', category.name, title';\r\n                // Go get the todos\r\n                theseTodos = datacontext.getToDosQuery(params, orderString);\r\n                // Filter out the new todos\r\n                theseTodos = ko.utils.arrayFilter(theseTodos, function (todo) {\r\n                    return !todo.isNew() && !todo.deleteFlag();\r\n                });\r\n            }\r\n\t\t\tmyToDos(theseTodos);\r\n            return theseTodos;\r\n        }).extend({ throttle: 50 });\r\n\r\n        // Reset all the filters to default state\r\n        function resetTodoFilters () {\r\n            selectedTodoCategories([]);\r\n            selectedTodoPriorities([]);\r\n            todoFiltersOpen(false);\r\n        }\r\n\r\n        // Toggle the active sort\r\n        function toggleTodoSort(sender) {\r\n            // If the current column is the one to sort by\r\n            if (selectedTodoSortColumn() && selectedTodoSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                // If it ends in desc\r\n                if (selectedTodoSortColumn() && selectedTodoSortColumn().substr(selectedTodoSortColumn().length - 4, 4) === 'desc' ) {\r\n                    // Clear the sort column, as it should be undone\r\n                    selectedTodoSortColumn(null);\r\n                } else {\r\n                    // Else set it as the sort column\r\n                    selectedTodoSortColumn(sender.sortProperty + ' desc');\r\n                }\r\n            } else {\r\n                // Else set it as the new sort column\r\n                selectedTodoSortColumn(sender.sortProperty);\r\n            }\r\n        }\r\n\r\n        // Force refresh todos from the server\r\n        function refreshTodoView() {\t\t\t\r\n            // Get the patients' todos\r\n            patientsIndex.getPatientsToDos();\r\n        }\r\n\r\n\t\t/**\r\n\t\t*\tclear all todos from localCollections and breeze cache.\r\n\t\t*\t@method\tclearTodosCacheAndLoad\r\n\t\t*/\r\n\t\tfunction clearTodosCacheAndLoad(){\r\n\t\t\t//assign empty array so todos wount be referenced from ko data binding of the views that had them showing.\t\t\t\r\n\t\t\tmyToDos([]);\r\n\t\t\tvar todos = localCollections.todos();\r\n\t\t\t//empty the collection. the todos should be cleaned out by garbage collector.\r\n\t\t\tlocalCollections.todos([]);\r\n\t\t\treturn setTimeout( function(){\r\n\t\t\t\t//short delay to allow the ko data binding to release references to these todos, before removing them: \t\t\t\t\r\n\t\t\t\tif( todos && todos.length > 0 ){\t\t\t\t\t\r\n\t\t\t\t\tko.utils.arrayForEach( todos, function(todo){\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( todo ){\r\n\t\t\t\t\t\t\t//remove from breeze cache:\r\n\t\t\t\t\t\t\ttodo.entityAspect.setDeleted();\r\n\t\t\t\t\t\t\ttodo.entityAspect.acceptChanges();\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tpatientsIndex.getPatientsToDos();\r\n\t\t\t}, 50);\r\n\t\t}\r\n/// #Todo region\r\n\r\n\r\n\r\n\r\n\r\n/// Intervention region\r\n\r\n        // Which view (filters) to apply\r\n        var selectedInterventionView = ko.observable();\r\n        // Keep track of which index it is to keep it between patients\r\n        var selectedInterventionViewIndex = ko.observable();\r\n\r\n        // Which todoViews (filters) are available\r\n        var interventionViews = ko.computed(function () {\r\n            var selectedpatient = selectedPatient();\r\n            var theseviews = [];\r\n            if (selectedpatient && initialized()) {\r\n                theseviews = [\r\n                    new View('Closed Intervention List', [ new modelConfig.Parameter('goal.patientId', selectedpatient.id(), '=='), new modelConfig.Parameter('statusId', '1', '!=')], ['status-small','closeddate','description-small','category','goal','assignedto'], 'closedDate desc'),\r\n                    new View('Open Intervention List', [ new modelConfig.Parameter('goal.patientId', selectedpatient.id(), '=='), new modelConfig.Parameter('statusId', '1', '==')], ['dueDate','description','category','goal','assignedto'],'dueDate desc')\r\n                ]\r\n            } else {\r\n            }\r\n            return theseviews;\r\n        }).extend({ throttle: 10 });\r\n\r\n        // Clear the view if the selected patient changes\r\n        var ivToken = interventionViews.subscribe(function (newValue) {\r\n            setTimeout(function () {\r\n                if (selectedInterventionViewIndex()) {                 \r\n                    selectedInterventionView(interventionViews()[selectedInterventionViewIndex()]);\r\n                } else {\r\n                    selectedInterventionView(interventionViews()[1]);\r\n                }\r\n            }, 200);\r\n        });\r\n        subscriptionTokens.push(ivToken);\r\n\r\n        // Indicator of processing\r\n        var interventionsSaving = ko.computed(datacontext.interventionsSaving);\r\n\r\n        // Which categories are available to filter on\r\n        var interventionCategories = ko.computed(function () {\r\n            var thesetodocats = datacontext.enums.interventionCategories();\r\n            var theseCats = thesetodocats.slice(0, thesetodocats.length);\r\n            // If there is not already a not set option,\r\n            if (theseCats.indexOf(catNotSet) === -1) {\r\n                // Add it also\r\n                theseCats.push(catNotSet);\r\n            }\r\n            return theseCats;\r\n        });\r\n\r\n        // Filter down by categories\r\n        var selectedInterventionCategories = ko.observableArray();\r\n        // Column to override the default sort\r\n        var selectedInterventionSortColumn = ko.observable();\r\n        // Filters showing or not?\r\n        var interventionFiltersOpen = ko.observable();\r\n\r\n        var sivToken = selectedInterventionView.subscribe(function (newValue) {\r\n            // Whenever the selected view changes, clear all filters and sorting\r\n            selectedInterventionSortColumn(null);\r\n            if (newValue) {\r\n                selectedInterventionViewIndex(interventionViews().indexOf(selectedInterventionView()));\r\n            }\r\n        });\r\n        subscriptionTokens.push(sivToken);\r\n\r\n        // If there is selected categories, we need to filter out all the others\r\n        var activeInterventionFilters = ko.computed(function () {\r\n            var selectedcategories = selectedInterventionCategories();\r\n            var returnfilters = [];\r\n            // Check if there are categories selected\r\n            if (selectedcategories.length > 0) {\r\n                // Grab all the other categories\r\n                var othercats = ko.utils.arrayFilter(interventionCategories(), function (cat) {\r\n                    // Check if this category is a selected category\r\n                    var matchingcat = ko.utils.arrayFirst(selectedcategories, function (selectCat) {\r\n                        return selectCat.id() === cat.id();\r\n                    });\r\n                    // If there is a match found,\r\n                    if (matchingcat) {\r\n                        // Don't return this category\r\n                        return false;\r\n                    } else {\r\n                        // If not do return it\r\n                        return true;\r\n                    }\r\n                });\r\n                ko.utils.arrayForEach(othercats, function (cat) {\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', cat.id(), '!='));\r\n                });\r\n                // Not set is null, so only filter out nulls if that option isn't selected\r\n                var foundselectednull = false;\r\n                ko.utils.arrayForEach(selectedcategories, function (cat) {\r\n                    if (cat.id() === '') {\r\n                        foundselectednull = true;\r\n                    }\r\n                });\r\n                // If we didn't select for nulls\r\n                if (!foundselectednull) {\r\n                    // Don't return string empties or nulls either\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', '', '!='));\r\n                    returnfilters.push(new modelConfig.Parameter('categoryId', null, '!='));\r\n                }\r\n            }\r\n            return returnfilters;\r\n        });\r\n\r\n        // Actively showing columns\r\n        var activeInterventionColumns = ko.computed(function () {\r\n            var cols = [];\r\n            if (selectedInterventionView()) {\r\n                cols = selectedInterventionView().columns();\r\n            }\r\n            return cols;\r\n        });\r\n\r\n        // Title \r\n        var computedInterventionTitle = ko.computed(function () {\r\n            var thistitle = '';\r\n            if (selectedInterventionView()) {\r\n                thistitle = selectedInterventionView().name();\r\n            }\r\n            return thistitle;\r\n        });\r\n\r\n        // My todos\r\n        var myInterventions = ko.computed(function () {\r\n            var theseInterventions = [];\r\n            //Subscribe to localcollection todos\r\n            var allInterventions = localCollections.interventions();\r\n            var selectedview = selectedInterventionView();\r\n            var params = [];\r\n            var orderString = '';\r\n            // Subscribe to this patient\r\n            var dummySubscription = selectedPatient();\r\n            if (selectedview) {\r\n                // Subscribe to this patient's todos\r\n                var dummySubscription = dummySubscription.goals();\r\n                // Add these parameters to the query\r\n                ko.utils.arrayForEach(selectedview.parameters, function (param) {\r\n                    params.push(param);\r\n                });\r\n                // If there are filters,\r\n                if (activeInterventionFilters().length > 0) {\r\n                    // Add them as parameters\r\n                    ko.utils.arrayForEach(activeInterventionFilters(), function (param) {\r\n                        params.push(param);\r\n                    });\r\n                }\r\n                // Either sort by the selected sort or the default\r\n                orderString = selectedInterventionSortColumn() ? selectedInterventionSortColumn() : selectedview.primarySort;\r\n                // Add the second and third orders to the string\r\n                orderString = orderString + ', category.name, description';\r\n                // Go get the todos\r\n                theseInterventions = datacontext.getInterventionsQuery(params, orderString);\r\n                // Filter out the new todos\r\n                // theseInterventions = ko.utils.arrayFilter(theseInterventions, function (intervention) {\r\n                //     return !intervention.isNew() && !intervention.deleteFlag();\r\n                // });\r\n            }\r\n            return theseInterventions;\r\n        }).extend({ throttle: 50 });\r\n\r\n        // Reset all the filters to default state\r\n        function resetInterventionFilters () {\r\n            selectedInterventionCategories([]);\r\n            interventionFiltersOpen(false);\r\n        }\r\n\r\n        // Toggle the active sort\r\n        function toggleInterventionSort(sender) {\r\n            // If the current column is the one to sort by\r\n            if (selectedInterventionSortColumn() && selectedInterventionSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                // If it ends in desc\r\n                if (selectedInterventionSortColumn() && selectedInterventionSortColumn().substr(selectedInterventionSortColumn().length - 4, 4) === 'desc' ) {\r\n                    // Clear the sort column, as it should be undone\r\n                    selectedInterventionSortColumn(null);\r\n                } else {\r\n                    // Else set it as the sort column\r\n                    selectedInterventionSortColumn(sender.sortProperty + ' desc');\r\n                }\r\n            } else {\r\n                // Else set it as the new sort column\r\n                selectedInterventionSortColumn(sender.sortProperty);\r\n            }\r\n        }\r\n\r\n        // Force refresh todos from the server\r\n        function refreshInterventionView() {\r\n            // Get the patients' todos\r\n            patientsIndex.getPatientsInterventions();\r\n        }\r\n\r\n/// #Intervention region\r\n\r\n\r\n\r\n\r\n\r\n/// Task region\r\n\r\n        // Which view (filters) to apply\r\n        var selectedTaskView = ko.observable();\r\n        // Keep track of which index it is to keep it between patients\r\n        var selectedTaskViewIndex = ko.observable();\r\n\r\n        // Which todoViews (filters) are available\r\n        var taskViews = ko.computed(function () {\r\n            var selectedpatient = selectedPatient();\r\n            var theseviews = [];\r\n            if (selectedpatient && initialized()) {\r\n                theseviews = [\r\n                    new View('Closed Task List', [ new modelConfig.Parameter('goal.patientId', selectedpatient.id(), '=='), new modelConfig.Parameter('statusId', '1', '!='), new modelConfig.Parameter('statusId', '3', '!=')], ['status-small','closeddate','targetdate','description-small','targetvalue-small','goal'],'closedDate desc'),\r\n                    new View('Open Task List', [ new modelConfig.Parameter('goal.patientId', selectedpatient.id(), '=='), new modelConfig.Parameter('statusId', '2', '!='), new modelConfig.Parameter('statusId', '4', '!=')], ['startdate','targetdate','description-small','targetvalue','goal'],'targetDate')\r\n                ];\r\n            } else {\r\n\r\n            }\r\n            return theseviews;\r\n        }).extend({ throttle: 10 });\r\n\r\n        // Clear the view if the selected patient changes\r\n        var tdvToken = taskViews.subscribe(function (newValue) {\r\n            setTimeout(function () {\r\n                if (selectedTaskViewIndex()) {                 \r\n                    selectedTaskView(taskViews()[selectedTaskViewIndex()]);\r\n                } else {\r\n                    selectedTaskView(taskViews()[1]);\r\n                }\r\n            }, 200);\r\n        });\r\n        subscriptionTokens.push(tdvToken);\r\n\r\n        // Indicator of processing\r\n        var tasksSaving = ko.computed(datacontext.tasksSaving);\r\n\r\n        // Column to override the default sort\r\n        var selectedTaskSortColumn = ko.observable();\r\n        // Filters showing or not?\r\n        var taskFiltersOpen = ko.observable();\r\n\r\n        var stvToken = selectedTaskView.subscribe(function (newValue) {\r\n            // Whenever the selected view changes, clear all filters and sorting\r\n            selectedTaskSortColumn(null);\r\n            if (newValue) {\r\n                selectedTaskViewIndex(taskViews().indexOf(selectedTaskView()));\r\n            }\r\n        });\r\n        subscriptionTokens.push(stvToken);\r\n\r\n        // If there is selected categories, we need to filter out all the others\r\n        var activeTaskFilters = ko.computed(function () {\r\n            var returnfilters = [];\r\n            // Check if there are categories selected\r\n            return returnfilters;\r\n        });\r\n\r\n        // Actively showing columns\r\n        var activeTaskColumns = ko.computed(function () {\r\n            var cols = [];\r\n            if (selectedTaskView()) {\r\n                cols = selectedTaskView().columns();\r\n            }\r\n            return cols;\r\n        });\r\n\r\n        // Title \r\n        var computedTaskTitle = ko.computed(function () {\r\n            var thistitle = '';\r\n            if (selectedTaskView()) {\r\n                thistitle = selectedTaskView().name();\r\n            }\r\n            return thistitle;\r\n        });\r\n\r\n        // My todos\r\n        var myTasks = ko.computed(function () {\r\n            var theseTasks = [];\r\n            //Subscribe to localcollection todos\r\n            var allTasks = localCollections.tasks();\r\n            var selectedview = selectedTaskView();\r\n            var params = [];\r\n            var orderString = '';\r\n            // Subscribe to this patient\r\n            var dummySubscription = selectedPatient();\r\n            if (selectedview) {\r\n                // Subscribe to this patient's todos\r\n                var dummySubscription = dummySubscription.goals();\r\n                // Add these parameters to the query\r\n                ko.utils.arrayForEach(selectedview.parameters, function (param) {\r\n                    params.push(param);\r\n                });\r\n                // If there are filters,\r\n                if (activeTaskFilters().length > 0) {\r\n                    // Add them as parameters\r\n                    ko.utils.arrayForEach(activeTaskFilters(), function (param) {\r\n                        params.push(param);\r\n                    });\r\n                }\r\n                // Either sort by the selected sort or the default\r\n                orderString = selectedTaskSortColumn() ? selectedTaskSortColumn() : selectedview.primarySort;\r\n                // Add the second and third orders to the string\r\n                orderString = orderString + ', status.name, description';\r\n                // Go get the todos\r\n                theseTasks = datacontext.getTasksQuery(params, orderString);\r\n            }\r\n            return theseTasks;\r\n        }).extend({ throttle: 50 });\r\n\r\n        // Reset all the filters to default state\r\n        function resetTaskFilters () {\r\n            taskFiltersOpen(false);\r\n        }\r\n\r\n        // Toggle the active sort\r\n        function toggleTaskSort(sender) {\r\n            // If the current column is the one to sort by\r\n            if (selectedTaskSortColumn() && selectedTaskSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                // If it ends in desc\r\n                if (selectedTaskSortColumn() && selectedTaskSortColumn().substr(selectedTaskSortColumn().length - 4, 4) === 'desc' ) {\r\n                    // Clear the sort column, as it should be undone\r\n                    selectedTaskSortColumn(null);\r\n                } else {\r\n                    // Else set it as the sort column\r\n                    selectedTaskSortColumn(sender.sortProperty + ' desc');\r\n                }\r\n            } else {\r\n                // Else set it as the new sort column\r\n                selectedTaskSortColumn(sender.sortProperty);\r\n            }\r\n        }\r\n\r\n        // Force refresh todos from the server\r\n        function refreshTaskView() {\r\n            // Get the patients' todos\r\n            patientsIndex.getPatientsTasks();\r\n        }\r\n\r\n/// #Task region\r\n\r\n\r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            activate: activate,\r\n            title: 'Overview',\r\n            selectedPatient: selectedPatient,\r\n            toggleWidgetOpen: toggleWidgetOpen,\r\n            todoFiltersHeaderOpen: todoFiltersHeaderOpen,\r\n            interventionFiltersHeaderOpen: interventionFiltersHeaderOpen,\r\n            taskFiltersHeaderOpen: taskFiltersHeaderOpen,\r\n            fullScreenWidget: fullScreenWidget,\r\n            toggleFullScreen: toggleFullScreen,\r\n            toggleHeaderOpen: toggleHeaderOpen,\r\n\r\n            todosPanelOpen: todosPanelOpen,\r\n            taskPanelOpen: taskPanelOpen,\r\n            interventionsPanelOpen: interventionsPanelOpen,\r\n\r\n            myToDos: myToDos,\r\n            activeTodoColumns: activeTodoColumns,\r\n            todosSaving: todosSaving,\r\n            todoFiltersOpen: todoFiltersOpen,\r\n            resetTodoFilters: resetTodoFilters,\r\n            refreshTodoView: refreshTodoView,\r\n            todoViews: todoViews,\r\n            computedTodoTitle: computedTodoTitle,\r\n            todoPriorities: todoPriorities,\r\n            todoCategories: todoCategories,\r\n            selectedTodoPriorities: selectedTodoPriorities,\r\n            selectedTodoCategories: selectedTodoCategories,\r\n            selectedTodoView: selectedTodoView,\r\n            selectedTodoSortColumn: selectedTodoSortColumn,\r\n            toggleTodoSort: toggleTodoSort,\r\n\r\n\r\n            myInterventions: myInterventions,\r\n            activeInterventionColumns: activeInterventionColumns,\r\n            interventionsSaving: interventionsSaving,\r\n            interventionFiltersOpen: interventionFiltersOpen,\r\n            resetInterventionFilters: resetInterventionFilters,\r\n            refreshInterventionView: refreshInterventionView,\r\n            interventionViews: interventionViews,\r\n            computedInterventionTitle: computedInterventionTitle,\r\n            interventionCategories: interventionCategories,\r\n            selectedInterventionCategories: selectedInterventionCategories,\r\n            selectedInterventionView: selectedInterventionView,\r\n            selectedInterventionSortColumn: selectedInterventionSortColumn,\r\n            toggleInterventionSort: toggleInterventionSort,\r\n\r\n\r\n            myTasks: myTasks,\r\n            activeTaskColumns: activeTaskColumns,\r\n            tasksSaving: tasksSaving,\r\n            taskFiltersOpen: taskFiltersOpen,\r\n            resetTaskFilters: resetTaskFilters,\r\n            refreshTaskView: refreshTaskView,\r\n            taskViews: taskViews,\r\n            computedTaskTitle: computedTaskTitle,\r\n            selectedTaskView: selectedTaskView,\r\n            selectedTaskSortColumn: selectedTaskSortColumn,\r\n            toggleTaskSort: toggleTaskSort,\r\n\r\n            detached: detached\r\n        };\r\n\r\n        return vm;\r\n\r\n        function activate() {\r\n            if (!initialized()) {\r\n                initializeViewModel();\r\n                initialized(true);\r\n            }\r\n\t\t\tif( selectedPatient() ){\r\n\t\t\t\tclearTodosCacheAndLoad();\r\n\t\t\t}\r\n            return true;\r\n        }\r\n\r\n        function detached() {\r\n\t\t\t// remarked ! disposing computeds on this module causes many unpredictable problems.\r\n            // console.log('patients/index detached.');\r\n            // myToDosUpdater.dispose();\r\n            // selectedPatient.dispose();\r\n            // todoViews.dispose();\r\n            // todosSaving.dispose();\r\n            // todoCategories.dispose();\r\n            // activeTodoFilters.dispose();\r\n            // activeTodoColumns.dispose();\r\n            // computedTodoTitle.dispose();\r\n            // myToDos.dispose();\r\n            // interventionViews.dispose();\r\n            // interventionsSaving.dispose();\r\n            // interventionCategories.dispose();\r\n            // activeInterventionFilters.dispose();\r\n            // activeInterventionColumns.dispose();\r\n            // computedInterventionTitle.dispose();\r\n            // myInterventions.dispose();\r\n            // taskViews.dispose();\r\n            // tasksSaving.dispose();\r\n            // activeTaskFilters.dispose();\r\n            // activeTaskColumns.dispose();\r\n            // computedTaskTitle.dispose();\r\n            // myTasks.dispose();\r\n            // ko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n                // token.dispose();\r\n            // });\r\n        }\r\n\r\n        function toggleHeaderOpen (sender, widgetOpen) {\r\n            if (widgetOpen()) {\r\n                sender(!sender());    \r\n            }\r\n        }\r\n\r\n        // Toggle whether the widget is open or not\r\n        function toggleWidgetOpen(sender) {\r\n            if (sender === todosPanelOpen && (taskPanelOpen() || interventionsPanelOpen())) {\r\n                todosPanelOpen(!todosPanelOpen());\r\n                if (!todosPanelOpen()) {\r\n                    todoFiltersHeaderOpen(false);\r\n                }\r\n            } else if (sender === interventionsPanelOpen && (taskPanelOpen() || todosPanelOpen())) {\r\n                interventionsPanelOpen(!interventionsPanelOpen());\r\n                if (!interventionsPanelOpen()) {\r\n                    interventionFiltersHeaderOpen(false);\r\n                }\r\n            } else if (sender === taskPanelOpen && (interventionsPanelOpen() || todosPanelOpen())) {\r\n                taskPanelOpen(!taskPanelOpen());\r\n                if (!taskPanelOpen()) {\r\n                    taskFiltersHeaderOpen(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Toggle the widget to / from fullscreen\r\n        function toggleFullScreen(widgetname) {\r\n            // If this widget is already fullscreen,\r\n            if (widgetname === fullScreenWidget()) {\r\n                // Remove full screen widget\r\n                fullScreenWidget(null);\r\n            } else {\r\n                // Else, set it as the full screen widget\r\n                fullScreenWidget(widgetname);\r\n            }\r\n        }\r\n\r\n        function initializeViewModel() {\r\n            //refreshView();\r\n            //selectedView(views()[0]);\r\n            //initialized(true);\r\n            return true;\r\n\r\n            function todosReturned() {\r\n            }\r\n        }\r\n\r\n        // A view to select\r\n        function View(name, params, cols, prisort) {\r\n            var self = this;\r\n            self.name = ko.observable(name);\r\n            self.parameters = params;\r\n            self.columns = ko.observableArray(cols);\r\n            self.primarySort = prisort ? prisort : 'dueDate desc';\r\n        }\r\n\r\n    });\n","define('viewmodels/patients/sections/additional.observations',['models/base', 'config.services', 'services/datacontext', 'services/session'],\r\n    function (models, servicesConfig, datacontext, session) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            // A Bloodhound adapter to use when searching for addt'l obs in the typeahead\r\n        };\r\n\r\n        ctor.prototype.addNewObservation = function () {\r\n            var self = this;\r\n            var newObservation = ko.observable();\r\n            // Get observation by name\r\n            var matchedObservation = ko.utils.arrayFirst(self.additionalObservations(), function (obs) {\r\n                return obs.name() === self.selectedAdditionalObservation();\r\n            });\r\n            if (matchedObservation) {\r\n                datacontext.initializeObservation(newObservation, 'PatientObservation', matchedObservation.id(), matchedObservation.typeId(), self.selectedPatient().id()).then(dataReturned);\r\n            }\r\n            function dataReturned() {\r\n                newObservation().isNew(true);\r\n                self.additionalObservationsToEnter.push(newObservation());\r\n                self.selectedAdditionalObservation(null);\r\n            }\r\n        }\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.activeDataType = self.settings.activeDataType;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            // A list of additional observations\r\n            self.additionalObservations = ko.observableArray();\r\n            // A list of additional observations to enter data for\r\n            self.additionalObservationsToEnter = ko.observableArray();\r\n            // The selected additional observation\r\n            self.selectedAdditionalObservation = ko.observable();\r\n            self.canAdd = ko.computed(function () {\r\n                var thisValue = false;\r\n                // If a value has been selected,\r\n                if (self.selectedAdditionalObservation()) {\r\n                    // And the value matches a valid additional observation,\r\n                    var matchedObservation = ko.utils.arrayFirst(self.additionalObservations(), function (addtlObs) {\r\n                        return addtlObs.name() === self.selectedAdditionalObservation();\r\n                    });\r\n                    if (matchedObservation) {\r\n                        thisValue = true;\r\n                    }\r\n                }\r\n                return thisValue;\r\n            });\r\n            self.addtlObsBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                remote: {\r\n                    url: '%QUERY',\r\n                    transport: function (url, options, onSuccess, onError) {\r\n                        var deferred = $.Deferred();\r\n                        deferred.done(function () { onSuccess(this); });\r\n\r\n                        var filterVal = url.toLowerCase();\r\n                        var result = self.additionalObservations().filter(function (item) {\r\n                            return !!~item.name().toLowerCase().indexOf(filterVal);\r\n                        });\r\n                        deferred.resolveWith(result);\r\n                        return deferred.promise();\r\n                    }\r\n                }\r\n            });\r\n            self.addtlObsBloodhound.initialize();\r\n\r\n            self.getAdditionalObservationsById = function () {\r\n                if (self.activeDataType()) {\r\n                    // Get a list of this patient's observations\r\n                    var theseObservations = self.selectedPatient().observations();\r\n                    var tempObservations = [];\r\n                    ko.utils.arrayForEach(theseObservations, function (obs) {\r\n                        if ((obs.typeId() === self.activeDataType().id()) && (obs.standard() === false && obs.isNew())) {\r\n                            tempObservations.push(obs);\r\n                        }\r\n                    });\r\n                    self.additionalObservationsToEnter(tempObservations);\r\n                }\r\n                function dataReturned(data) {\r\n                    // Reset the search engine's cache\r\n                }\r\n            }\r\n\r\n            self.activeDataType.subscribe(function (newValue) {\r\n                // Clear the selections\r\n                self.selectedAdditionalObservation(null);\r\n\r\n                self.additionalObservations([]);\r\n                // Go get a list of the additional observations\r\n                self.getAdditionalObservations();\r\n                self.getAdditionalObservationsById();\r\n            });\r\n            // Clone an observation\r\n            self.addNew = function (sender) {\r\n                var newObservation = ko.observable();\r\n                if (moment(sender.startDate()).isValid() && sender.computedValue().value()) {\r\n                    // Go save this and initialize a new one\r\n                    return datacontext.initializeObservation(newObservation, 'PatientObservation', sender.observationId(), sender.typeId(), sender.patientId()).then(dataReturned);\r\n                }\r\n                function dataReturned() {\r\n                    // Blow up the previous value for each returned observations' values\r\n                    ko.utils.arrayForEach(newObservation().values(), function (value) {\r\n                        value.previousValue().value(null);\r\n                        value.previousValue().source(null);\r\n                        value.previousValue().startDate(null);\r\n                        value.previousValue().unit(null);\r\n                    });\r\n                    newObservation().isNew(true);\r\n                    newObservation().entityAspect.acceptChanges();\r\n                    // Get the index of the sent observation\r\n                    var senderIndex = self.additionalObservationsToEnter.indexOf(sender);\r\n                    // Add the new observation at a specific index\r\n                    self.additionalObservationsToEnter.splice(senderIndex + 1, 0, newObservation());\r\n                    // Set the new observation to null\r\n                    newObservation(null);\r\n                }\r\n            }\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n            var self = this;\r\n            if (self.additionalObservations().length === 0) {\r\n                self.getAdditionalObservations();\r\n                self.getAdditionalObservationsById();\r\n            }\r\n        };\r\n\r\n        ctor.prototype.getAdditionalObservations = function () {\r\n            var self = this;\r\n            // Don't get more observations if allergies are selected\r\n            if (self.selectedPatient() && self.activeDataType() && self.activeDataType().id() !== -1 && self.activeDataType().id() !== -2) {\r\n                var endPoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient/' + self.selectedPatient().id() + '/Observation/Type/' + self.activeDataType().id() + '/MatchLibrary/', 'Observation');\r\n                return datacontext.getEntityList(self.additionalObservations, 'Observation', endPoint.ResourcePath, 'typeId', self.activeDataType().id(), false).then(dataReturned);\r\n            }\r\n            function dataReturned() {\r\n                // Filter the observations\r\n                var nonstandardObservations = ko.utils.arrayFilter(self.additionalObservations(), function (addtl) {\r\n                    // Return only non-standard observations\r\n                    return !addtl.standard();\r\n                });\r\n                self.additionalObservations(nonstandardObservations);\r\n                // Reset the search engine's cache\r\n                self.addtlObsBloodhound.transport.constructor.resetCache();\r\n            }\r\n        }\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/additional.problem.observations',['models/base', 'config.services', 'services/datacontext', 'services/session'],\r\n    function (models, servicesConfig, datacontext, session) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            // A list of observations\r\n            self.problemObservations = ko.observableArray();\r\n            // A Bloodhound adapter to use when searching for obs in the typeahead\r\n        };\r\n\r\n        ctor.prototype.filterProblemObservations = function () {\r\n            var self = this;\r\n            var tempArray = self.problemObservations().slice(0);\r\n            // Remove items already matching a current active not-deleted problem observation\r\n            var filteredArray = ko.utils.arrayFilter(tempArray, function (obs) {\r\n                var truthy = true;\r\n                ko.utils.arrayForEach(self.selectedPatient().observations(), function (patsObs) {\r\n                    if (patsObs.state() && (patsObs.state().name().toLowerCase() === 'active') && (patsObs.name() === obs.name() && !patsObs.deleteFlag())) {\r\n                        truthy = false;\r\n                    }\r\n                });\r\n                return truthy;\r\n            });\r\n            self.problemObservations(filteredArray);\r\n            self.probObsBloodhound.transport.constructor.resetCache();\r\n        };\r\n\r\n        ctor.prototype.addNewObservation = function () {\r\n            var self = this;\r\n            datacontext.observationsSaving(true);\r\n            var newObservation = ko.observable();\r\n            // Get observation by name\r\n            var matchedObservation = ko.utils.arrayFirst(self.problemObservations(), function (obs) {\r\n                return obs.name().toLowerCase() === self.selectedObservation().toLowerCase();\r\n            });\r\n            if (matchedObservation) {\r\n                datacontext.initializeObservation(newObservation, 'PatientObservation', matchedObservation.id(), matchedObservation.typeId(), self.selectedPatient().id()).then(dataReturned);\r\n            }\r\n            function dataReturned(data) {\r\n                // If it is a new observation, set it as so so it will\r\n                // deleted from cache if changes are cancelled\r\n                newObservation().isNew(true);\r\n                self.getProblemObservations();\r\n                self.selectedObservation(null);\r\n            }\r\n        }\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            // I did not want to hard code this Id in\r\n            // But was promised that it will never change\r\n            // So reluctantly, here it is\r\n            self.problemObservationTypeId = '533d8278d433231deccaa62d';\r\n            //self.activeDataType = self.settings.activeDataType;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            // The selected observation\r\n            self.selectedObservation = ko.observable();\r\n            self.canAdd = ko.computed(function () {\r\n                var thisValue = false;\r\n                // If a value has been selected,\r\n                if (self.selectedObservation()) {\r\n                    // And the value matches a valid observation,\r\n                    var matchedObservation = ko.utils.arrayFirst(self.problemObservations(), function (addtlObs) {\r\n                        return addtlObs.name().toLowerCase() === self.selectedObservation().toLowerCase();\r\n                    });\r\n                    if (matchedObservation) {\r\n                        thisValue = true;\r\n                    }\r\n                }\r\n                if (datacontext.observationsSaving()) { thisValue = false; }\r\n                return thisValue;\r\n            });\r\n            self.probObsBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                limit: 100,\r\n                remote: {\r\n                    url: '%QUERY',\r\n                    transport: function (url, options, onSuccess, onError) {\r\n                        var deferred = $.Deferred();\r\n                        deferred.done(function () { onSuccess(this); });\r\n\r\n                        var filterVal = url.toLowerCase();\r\n                        var result = self.problemObservations().filter(function (item) {\r\n                            return !!~item.name().toLowerCase().indexOf(filterVal);\r\n                        });\r\n                        deferred.resolveWith(result);\r\n                        return deferred.promise();\r\n                    }\r\n                }\r\n            });\r\n            self.probObsBloodhound.initialize();\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n            var self = this;\r\n            if (self.problemObservations().length === 0) {\r\n                self.getProblemObservations();\r\n            }\r\n        };\r\n\r\n        ctor.prototype.getProblemObservations = function () {\r\n            var self = this;\r\n            if (self.selectedPatient()) {\r\n                // Should already have all observations in cache, no need to hit server\r\n                return datacontext.getEntityList(self.problemObservations, 'Observation', 'fakeEndPoint', 'typeId', self.problemObservationTypeId, false).then(dataReturned);\r\n            }\r\n            function dataReturned() {\r\n                // Temporary holder array\r\n                self.filterProblemObservations();\r\n            }\r\n        }\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/allergies.edit',['services/datacontext'],\r\n  function (datacontext) {\r\n\r\n    var ctor = function () {\r\n      var self = this;\r\n    };\r\n\r\n\tvar descendingDateSort = function (l, r) { return (l.createdOn() == r.createdOn()) ? (l.createdOn() < r.createdOn() ? 1 : -1) : (l.createdOn() < r.createdOn() ? 1 : -1) };\r\n\r\n    ctor.prototype.allergyTypes = ko.computed(datacontext.enums.allergyTypes);\r\n    ctor.prototype.severities = ko.computed(datacontext.enums.severities);\r\n    ctor.prototype.reactions = ko.computed(datacontext.enums.reactions);\r\n    ctor.prototype.allergySources = ko.computed(datacontext.enums.allergySources);\r\n    ctor.prototype.allergyStatuses = ko.computed(datacontext.enums.allergyStatuses);\r\n\r\n    ctor.prototype.removeAllergy = function (sender) {\r\n      sender.entityAspect.rejectChanges();\r\n      sender.deleteFlag(true);\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n      var self = this;\r\n      self.settings = settings;\r\n      self.showing = ko.computed(function () { return true; });\r\n      self.selectedPatient = self.settings.selectedPatient;\r\n      // A list of the problem allergies for this patient\r\n      self.newPatientAllergies = ko.computed(function () {\r\n        var filteredPatAllergies = [];\r\n        var patientAllergies = self.selectedPatient().allergies();\r\n        // Filter the list only to patientAllergies that are of type 'Problem'\r\n        filteredPatAllergies = ko.utils.arrayFilter(patientAllergies, function (item) {\r\n          // If the item has a type, return if it matches problem, else if there is no type return false\r\n          return !item.deleteFlag() && item.isNew();\r\n        });\r\n        return filteredPatAllergies.sort(descendingDateSort);\r\n      }).extend({ throttle: 50 });\r\n      // TODO: Remove dead code\r\n      // self.showActions = self.settings.hasOwnProperty('showActions') ? self.settings.showActions : self.showing;\r\n      // self.saveFocusProblems = self.settings.saveFocusProblems || function () { return false; };\r\n      // self.cancelFocusProblems = self.settings.cancelFocusProblems || function () { return false; };\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n\r\n    };\r\n\r\n    return ctor;\r\n  });\n","define('viewmodels/patients/sections/allergies.search',['models/base', 'config.services', 'services/datacontext', 'services/session'],\r\n    function (models, servicesConfig, datacontext, session) {\r\n\r\n        // Create an end point to use\r\n        var endpoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Search/allergy', 'AllergySearch');\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            // A list of observations\r\n            self.allergies = ko.observableArray();\r\n            // A Bloodhound adapter to use when searching for obs in the typeahead\r\n        };\r\n\r\n        ctor.prototype.filterAllergies = function () {\r\n            var self = this;\r\n            var tempArray = self.allergies().slice(0);\r\n            // Remove items already matching a current active not-deleted problem observation\r\n            var filteredArray = ko.utils.arrayFilter(tempArray, function (obs) {\r\n                var truthy = true;\r\n                ko.utils.arrayForEach(self.selectedPatient().allergies(), function (patsObs) {\r\n                    if (patsObs.state() && (patsObs.state().name().toLowerCase() === 'active') && (patsObs.name() === obs.name() && !patsObs.deleteFlag())) {\r\n                        truthy = false;\r\n                    }\r\n                });\r\n                return truthy;\r\n            });\r\n            self.allergies(filteredArray);\r\n            self.allergyBloodhound.transport.constructor.resetCache();\r\n        };\r\n\r\n        ctor.prototype.addNewAllergy = function () {\r\n            var self = this;\r\n            datacontext.allergySaving(true);\r\n            var newAllergy = ko.observable();\r\n            // Get observation by name\r\n            var matchedAllergy = ko.utils.arrayFirst(self.allergies(), function (obs) {\r\n                return obs.Name.toLowerCase() === self.trimmedAllergy().toLowerCase();\r\n            });\r\n            // If the matching allergy is found,\r\n            if (matchedAllergy) {\r\n                // Initialize an instance of it\r\n                datacontext.initializeAllergy(newAllergy, 'PatientAllergy', matchedAllergy.Id, self.selectedPatient().id()).then(dataReturned);\r\n            } else {\r\n                // Else create a new one\r\n                // Strip out the word new\r\n                var cleanedAllergy = self.trimmedAllergy().replace(' (New)','');\r\n                datacontext.allergySaving(true);\r\n                datacontext.initializeNewAllergy(cleanedAllergy).then(initializedNew);\r\n\r\n                function initializedNew(data) {\r\n                    // Get the new allergy from the results\r\n                    var createdAllergy = data.results[0];\r\n                    // Set matched allergy to an object to reference later\r\n                    matchedAllergy = { Id: createdAllergy.id(), Name: createdAllergy.name(), DisplayName: createdAllergy.name() };\r\n                    datacontext.initializeAllergy(newAllergy, 'PatientAllergy', createdAllergy.id(), self.selectedPatient().id(), true).then(dataReturned);\r\n                }\r\n            }\r\n            \r\n            function dataReturned(data) {\r\n                // If it is a new observation, set it as so so it will\r\n                // deleted from cache if changes are cancelled\r\n                newAllergy().isNew(true);\r\n                newAllergy().allergyName(matchedAllergy.Name);\r\n                datacontext.allergySaving(false);\r\n                // self.getAllergies();\r\n                self.selectedAllergy('');\r\n            }\r\n        }\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            // The selected observation\r\n            self.selectedAllergy = ko.observable('');\r\n            self.trimmedAllergy = ko.computed(function () { return self.selectedAllergy().trim()});\r\n            self.resultsMessage = ko.observable('');\r\n            self.canAdd = ko.computed(function () {\r\n                var thisValue = false;\r\n                var allergSaving = datacontext.allergySaving();\r\n                var trimAllerg = self.trimmedAllergy();\r\n                // If a value has been selected,\r\n                if (trimAllerg) {\r\n                    // And the value matches a valid observation,\r\n                    var matchedAllergy = ko.utils.arrayFirst(self.allergies(), function (retAllergy) {\r\n                        return retAllergy.Name.toLowerCase().trim() === trimAllerg.toLowerCase();\r\n                    });\r\n                    if (!matchedAllergy) {\r\n                        // Check if the allergy ends in (New),\r\n                        thisValue = trimAllerg.substr(trimAllerg.length - 5) === '(New)';\r\n                    }\r\n                    if (matchedAllergy && matchedAllergy.isDuplicate !== true) {\r\n                        thisValue = true;\r\n                    }\r\n                }\r\n                if (allergSaving) { thisValue = false; }\r\n                return thisValue;\r\n            });\r\n            self.allergyBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                limit: 17,\r\n                remote: {\r\n                    url: servicesConfig.remoteServiceName + '/' + endpoint.ResourcePath,        \r\n                    replace: function (url, query) {\r\n                        searchQuery = query;\r\n                        return url + '?Take=15&SearchTerm=' + searchQuery;\r\n                    },\r\n                    ajax: {\r\n                        beforeSend: function (jqXhr, settings) {\r\n                            jqXhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n                            jqXhr.setRequestHeader('Token', session.currentUser().aPIToken());\r\n                        },\r\n                        type: 'GET'\r\n                    },\r\n                    // Filter out what is returned from the database\r\n                    filter: function (parsedResponse) {\r\n                        // If there is a message returned,\r\n                        if (parsedResponse.Message) {\r\n                            self.resultsMessage('');\r\n                            // Set it as the results message\r\n                            self.resultsMessage(parsedResponse.Message);\r\n                        } else {\r\n                            // Else clear it\r\n                            self.resultsMessage('');\r\n                        }\r\n                        self.allergyBloodhound.clear();\r\n                        var selectedallergy = self.trimmedAllergy();\r\n                        // Check if the allergy has already been added to the individual\r\n                        var matchingPatientAllergy = ko.utils.arrayFirst(self.selectedPatient().allergies(), function (patallerg) {\r\n                            return (patallerg.allergyName().toLowerCase().trim() === selectedallergy.toLowerCase() && patallerg.status().name() === 'Active');\r\n                        });\r\n                        ko.utils.arrayForEach(parsedResponse.Allergies, function (allerg) {\r\n                            allerg.DisplayName = allerg.Name;\r\n                            // Check if the allergy has already been added to the individual\r\n                            var matchingAllergy = ko.utils.arrayFirst(self.selectedPatient().allergies(), function (patallerg) {\r\n                                return patallerg.allergyName().toLowerCase().trim() === allerg.Name.toLowerCase().trim() && patallerg.status().name() === 'Active';\r\n                            });\r\n                            if (matchingAllergy || (matchingPatientAllergy && matchingPatientAllergy.allergyName().toLowerCase().trim() === allerg.Name.toLowerCase().trim())) {\r\n                                allerg.DisplayName = '(Duplicate) ' + allerg.DisplayName;\r\n                                allerg.isDuplicate = true;\r\n                            }\r\n                        });\r\n                        self.allergies(parsedResponse.Allergies);\r\n                        var newAllergy = { Id: -1, Name: selectedallergy, DisplayName: selectedallergy + ' (New)' };\r\n                        // Check if the results match the text\r\n                        var matchingResponse = ko.utils.arrayFirst(parsedResponse.Allergies, function (allerg) {\r\n                            return allerg.Name.toLowerCase().trim() === selectedallergy.toLowerCase();\r\n                        });\r\n                        // If it doesn't match anything else, add a new one\r\n                        if (!matchingResponse && !matchingPatientAllergy) {\r\n                            parsedResponse.Allergies.push(newAllergy);\r\n                        }\r\n                        return parsedResponse.Allergies;\r\n                    },\r\n                    rateLimitWait: 500,\r\n                    cache: false\r\n                }\r\n            });\r\n            self.allergyBloodhound.initialize();\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n            var self = this;\r\n            if (self.allergies().length === 0) {\r\n                //self.getAllergies();\r\n            }\r\n        };\r\n\r\n        ctor.prototype.getAllergies = function () {\r\n            var self = this;\r\n            if (self.selectedPatient()) {\r\n                // Should already have all observations in cache, no need to hit server\r\n                //return datacontext.getEntityList(self.allergies, 'Allergy', 'fakeEndPoint', 'typeId', self.allergyTypeId, false).then(dataReturned);\r\n            }\r\n            function dataReturned() {\r\n                // Temporary holder array\r\n                self.filterAllergies();\r\n            }\r\n        }\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/allergy.details',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/medications/index', 'viewmodels/shell/shell'],\n  function (modelConfig, servicesConfig, datacontext, session, medicationsIndex, shell) {\n\n    var modalShowing = ko.observable(true);\n\n    var ctor = function () {\n      var self = this;\n    };\n\n    ctor.prototype.activate = function (settings) {\n      var self = this;\n      self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\n      self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\n      self.settings = settings;\n      self.allergy = self.settings.activeAllergy;\n      self.selectedPatient = medicationsIndex.selectedPatient;\n      self.isFullScreen = ko.observable(false);\n      self.toggleFullScreen = function () {\n        self.isFullScreen(!self.isFullScreen());\n      };\n      self.edit = function () {\n        medicationsIndex.editAllergy(self.allergy(), 'Edit Allergy');\n      }\n      self.isNotesExpanded = ko.observable(false);\n      self.delete = function () {\n        var result = confirm('You are about to delete an allergy.  Press OK to continue, or cancel to return without deleting.');\n        if (result === true) {\n          datacontext.deletePatientAllergy(self.allergy());\n          self.settings.activeAllergy(null);\n        }\n        else {\n          return false;\n        }\n      };\n    };\n\n    function save (allergy) {\n      datacontext.saveAllergy(allergy);\n    }\n\n    function cancel(item) {\n      item.entityAspect.rejectChanges();\n    }\n\n    function getAllergyDetails (allergy) {\n      medicationsIndex.getAllergyDetails(allergy, true);\n    };\n\n    function editEntity (msg, entity, path, saveoverride, canceloverride) {\n      var modalSettings = {\n        title: msg,\n        showSelectedPatientInTitle: true,\n        entity: entity,\n        templatePath: path,\n        showing: modalShowing,\n        saveOverride: saveoverride,\n        cancelOverride: canceloverride\n      }\n      var modal = new modelConfig.modal(modalSettings);\n      modalShowing(true);\n      shell.currentModal(modal);\n    }\n\n    function ModalEntity(entity) {\n      var self = this;\n      self.entity = entity;\n      self.activationData = { entity: self.entity };\n      self.canSave = ko.computed(function () {\n        var result = self.entity.isValid();\n        return result;\n      });\n    }\n\n    ctor.prototype.detached = function() {\n      var self = this;\n    }\n    return ctor;\n  });\n\n","/**\r\n*\tedit individual background dialog\r\n*\t@module background\r\n*/\r\ndefine('viewmodels/patients/sections/background',['models/base', 'services/datacontext', 'viewmodels/shell/shell'],\r\n    function (modelConfig, datacontext, shell) {\r\n\r\n        var ctor = function () {\r\n\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.background = self.selectedPatient.background;\r\n            self.backgroundModalShowing = ko.observable(false);\r\n            self.saveBackground = function () {\r\n                datacontext.saveIndividual(self.selectedPatient);\r\n            }\r\n            self.cancelBackground = function () {\r\n                self.selectedPatient.entityAspect.rejectChanges();\r\n            }\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Edit Background',\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: self.selectedPatient, \r\n\t\t\t\ttemplatePath: 'templates/background.html', \r\n\t\t\t\tshowing: self.backgroundModalShowing, \r\n\t\t\t\tsaveOverride: self.saveBackground, \r\n\t\t\t\tcancelOverride: self.cancelBackground, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: null\r\n\t\t\t}\r\n            self.modal = new modelConfig.modal(modalSettings);\r\n            self.isOpen = ko.observable(false);\r\n            self.isEditing = ko.observable(false);\r\n            self.isExpanded = ko.observable(false);\r\n            self.toggleEditing = function () {\r\n                if (self.isEditing()) {\r\n                    self.backgroundModalShowing(false);\r\n                }\r\n                else {\r\n                    shell.currentModal(self.modal);\r\n                    self.backgroundModalShowing(true);\r\n                    var editingToken = self.backgroundModalShowing.subscribe(function () {\r\n                        self.isEditing(false);\r\n                        editingToken.dispose();\r\n                    });\r\n                }\r\n                self.isEditing(!self.isEditing());\r\n                self.isOpen(true);\r\n            };\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/barrier.details',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/goals/index', 'viewmodels/shell/shell'],\r\n    function (modelConfig, servicesConfig, datacontext, session, goalsIndex, shell) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        var modalShowing = ko.observable(true);\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n            self.settings = settings;\r\n            self.barrier = self.settings.barrier;\r\n            self.computedBarrier = ko.computed(function () { return self.barrier; }).extend({ throttle: 75 });\r\n            self.isExpanded = ko.observable(false);\r\n            self.isDetailsExpanded = ko.observable(false);\r\n            self.hasDetails = ko.computed( function(){\r\n                var details = self.barrier.details();\r\n                return (details != null && details.length > 0);\r\n            });\r\n            self.toggleIsExpanded = function () {\r\n                self.isExpanded( !self.isExpanded() );\r\n            };\r\n            self.toggleDetailsExpanded = function(){\r\n                var isOpen = self.isDetailsExpanded();\r\n                var details = self.barrier.details();\r\n                if( !details && !isOpen ){\r\n                    return;\r\n                }\r\n                self.isDetailsExpanded( !self.isDetailsExpanded() );\r\n            }\r\n\r\n            self.editBarrier = function (barrier) {\r\n                var modalEntity = ko.observable(new ModalEntity(barrier, 'name'));\r\n                var saveOverride = function () {\r\n                    saveBarrier(barrier);\r\n                };\r\n                var cancelOverride = function () {\r\n                    cancel(barrier);\r\n                    getGoalDetails(barrier.goal());\r\n                };\r\n                editEntity('Edit Barrier', modalEntity, 'viewmodels/templates/barrier.edit', saveOverride, cancelOverride);\r\n            };\r\n\r\n            self.deleteBarrier = function (barrier) {\r\n                var result = confirm('You are about to delete a barrier.  Press OK to continue, or cancel to return without deleting.');\r\n                if (result === true) {\r\n                    var thisGoal = barrier.goal();\r\n                    ko.utils.arrayForEach(barrier.goal().tasks(), function (task) {\r\n                        var thisTaskBarrierId = ko.utils.arrayFirst(task.barrierIds(), function (barId) {\r\n                            return barId.id() === barrier.id();\r\n                        });\r\n                        if (thisTaskBarrierId) {\r\n                            task.barrierIds.remove(thisTaskBarrierId);\r\n\r\n                            datacontext.saveTask(task);\r\n                        }\r\n                    });\r\n                    ko.utils.arrayForEach(barrier.goal().interventions(), function (intervention) {\r\n                        var thisTaskBarrierId = ko.utils.arrayFirst(intervention.barrierIds(), function (barId) {\r\n                            return barId.id() === barrier.id();\r\n                        });\r\n                        if (thisTaskBarrierId) {\r\n                            intervention.barrierIds.remove(thisTaskBarrierId);\r\n                            datacontext.saveIntervention(intervention);\r\n                        }\r\n                    });\r\n                    barrier.entityAspect.rejectChanges();\r\n                    barrier.deleteFlag(true);\r\n                    datacontext.saveBarrier(barrier).then(saveCompleted);\r\n\r\n                    function saveCompleted() {\r\n                        if (barrier && barrier.goal()) {\r\n                            barrier.goal().barriers.remove(barrier);\r\n                        }\r\n                        if (barrier && barrier.patientGoalId) {\r\n                            barrier.patientGoalId(null);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            };\r\n        };\r\n\r\n        function editEntity (msg, entity, path, saveoverride, canceloverride) {\r\n            var modalSettings = {\r\n                title: msg,\r\n                showSelectedPatientInTitle: true,\r\n                entity: entity,\r\n                templatePath: path,\r\n                showing: modalShowing,\r\n                saveOverride: saveoverride,\r\n                cancelOverride: canceloverride,\r\n                deleteOverride: null,\r\n                classOverride: null\r\n            }\r\n            var modal = new modelConfig.modal(modalSettings);\r\n            modalShowing(true);\r\n            shell.currentModal(modal);\r\n        }\r\n\r\n        function saveBarrier (barrier) {\r\n            datacontext.saveBarrier(barrier);\r\n        }\r\n\r\n        function cancel (item) {\r\n            item.entityAspect.rejectChanges();\r\n        }\r\n\r\n        return ctor;\r\n\r\n        function getGoalDetails(goal) {\r\n            goalsIndex.getGoalDetails(goal, true);\r\n        }\r\n\r\n        function ModalEntity(entity, reqpropname) {\r\n            var self = this;\r\n            self.entity = entity;\r\n            self.activationData = { entity: self.entity };\r\n            self.canSave = ko.computed(function () {\r\n                var result = self.entity[reqpropname]();\r\n                return result;\r\n            });\r\n        }\r\n\r\n    });\n","define('viewmodels/patients/sections/basic.observations',['models/base', 'config.services', 'services/datacontext', 'services/session'],\r\n    function (models, servicesConfig, datacontext, session) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            //// A list of additional observations\r\n            self.basicObservations = ko.observableArray();\r\n            self.observationsEndPoint = ko.computed(function () {\r\n                var currentUser = session.currentUser();\r\n                if (!currentUser) {\r\n                    return '';\r\n                }\r\n                return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'PatientObservation');\r\n            });\r\n        };\r\n\r\n        ctor.prototype.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.activeDataType = self.settings.activeDataType;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.getBasicObservationsById = function () {\r\n                if (self.activeDataType()) {\r\n                    // Get a list of this patient's observations\r\n                    var theseObservations = self.selectedPatient().observations();\r\n                    // Use a temporary array to hold the new observations\r\n                    var tempObservations = [];\r\n                    // For each of the patients observations,\r\n                    ko.utils.arrayForEach(theseObservations, function (obs) {\r\n                        // If the observation is new,\r\n                        if (obs.isNew() && (obs.typeId() === self.activeDataType().id()) && (obs.standard() === true)) {\r\n                            if (tempObservations.indexOf(obs) === -1) {\r\n                                tempObservations.push(obs);   \r\n                            }\r\n                        }\r\n                    });\r\n                    // If no observations were found,\r\n                    if (tempObservations.length === 0 && self.activeDataType().name() !== 'Problems') {\r\n                        // Go initialize a bunch more\r\n                        datacontext.getEntityList(self.basicObservations, self.observationsEndPoint().EntityType, self.observationsEndPoint().ResourcePath + self.selectedPatient().id() + '/Observation', 'typeId', self.activeDataType().id(), true).then(dataReturned);\r\n                    } else {\r\n                        // Or else, set the found observations\r\n                        self.basicObservations(tempObservations);\r\n                    }\r\n                }\r\n                function dataReturned(data) {\r\n                    // For each of the observations initialized,\r\n                    ko.utils.arrayForEach(self.basicObservations(), function (obs) {\r\n                        // As long as it matches what we are looking for, (all should)\r\n                        if ((obs.typeId() === self.activeDataType().id()) && (obs.standard() === true)) {\r\n                            // Set it to new\r\n                            obs.isNew(true);\r\n                        }\r\n                    });\r\n                    // Reset the search engine's cache\r\n                }\r\n            }\r\n            //self.activeDataTypeToken = self.activeDataType.subscribe(function (newValue) {\r\n            //     self.basicObservations([]);\r\n            //     // Go get a list of care members for the currently selected patient\r\n            //     self.getBasicObservationsById();\r\n            // });\r\n            if (self.basicObservations().length === 0) {\r\n                self.getBasicObservationsById();\r\n            }\r\n            self.computedBasicObservations = ko.computed(function () {\r\n                var theseObservations = self.basicObservations();\r\n                theseObservations = ko.utils.arrayFilter(theseObservations, function(obs) {\r\n                    return obs.isNew();\r\n                });\r\n                return theseObservations.sort(self.alphabeticalNameSort)\r\n            }).extend({ throttle: 50 });\r\n            self.addNew = function (sender) {\r\n                var newObservation = ko.observable();\r\n                if (moment(sender.startDate()).isValid()) {\r\n                    // Go save this and initialize a new one\r\n                    datacontext.initializeObservation(newObservation, 'PatientObservation', sender.observationId(), sender.typeId(), sender.patientId()).then(dataReturned);                        \r\n                }\r\n                function dataReturned() {\r\n                    // Blow up the previous value for each returned observations' values\r\n                    ko.utils.arrayForEach(newObservation().values(), function (value) {\r\n                        value.previousValue().value(null);\r\n                        value.previousValue().source(null);\r\n                        value.previousValue().startDate(null);\r\n                        value.previousValue().unit(null);\r\n                    });\r\n                    newObservation().isNew(true);\r\n                    newObservation().entityAspect.acceptChanges();\r\n                    // Get the index of the sent observation\r\n                    var senderIndex = self.basicObservations.indexOf(sender);\r\n                    // Add the new observation at a specific index\r\n                    self.basicObservations.splice(senderIndex + 1, 0, newObservation());\r\n                    // Set the new observation to null\r\n                    newObservation(null);\r\n                }\r\n            }\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        ctor.prototype.detached = function () {\r\n            var self = this;\r\n            // if (self.activeDataTypeToken) {\r\n            //     self.activeDataTypeToken.dispose();\r\n            // }\r\n        };\r\n\r\n        return ctor;\r\n    });\n","/**\r\n*\tcare team management\r\n*\t@module care team index\r\n*/\r\n\r\ndefine('viewmodels/patients/team/index',['services/session', 'services/datacontext', 'viewmodels/patients/index', 'models/base', 'viewmodels/shell/shell', 'viewmodels/home/contacts/index'],\r\n    function (session, datacontext, patientsIndex, modelConfig, shell, contactsIndex) {\r\n\r\n        var fullScreenWidget = ko.observable();\r\n        var leftColumnOpen = ko.observable(true);\r\n\t\tvar activeWidgetOpen = ko.observable(true);\r\n\t\tvar inactiveWidgetOpen = ko.observable(false);\r\n\t\tvar nextId = 0;\r\n\t\t\r\n\t\tcheckDataContext();\r\n\t\t\r\n        var selectedPatient = ko.computed(function () {\r\n            return patientsIndex.selectedPatient();\r\n        });\r\n\t\t\r\n\t\tvar careMemberRoles = ko.observableArray([]);\r\n\t\tvar careMemberRolesGroup = 2;\r\n\t\tcareMemberRoles( datacontext.getContactTypes( careMemberRolesGroup, 'root' ) );\r\n\t\t\r\n\t\tvar pcmContactSubType = ko.observable( ko.utils.arrayFirst( careMemberRoles(), function( contactType ){\r\n\t\t\treturn contactType.role() == 'Primary Care Manager';\r\n\t\t}));\r\n\t\tvar pcpContactSubType = ko.observable( ko.utils.arrayFirst( careMemberRoles(), function( contactType ){\r\n\t\t\treturn contactType.name() == 'Primary Care Physician';\t//note name instead of role since theres a typo in the db...\r\n\t\t}));\r\n\t\t\r\n\t\tvar careTeam = ko.computed(function(){\r\n\t\t\tvar team = null;\r\n\t\t\tif( selectedPatient() && selectedPatient().contactCard() && selectedPatient().contactCard().careTeam && selectedPatient().contactCard().careTeam() ) {\r\n\t\t\t\tteam = selectedPatient().contactCard().careTeam();\r\n\t\t\t}\t\t\t\r\n\t\t\treturn team;\r\n\t\t}).extend({ throttle: 50 });\r\n\t\t\r\n\t\tvar careMembers = ko.computed(function(){\r\n\t\t\tvar members = [];\r\n\t\t\tvar team = careTeam();\r\n\t\t\tif ( team ) {\r\n                members = team.members();\r\n            }\r\n\t\t\treturn members;\r\n\t\t}).extend({ throttle: 50 });\r\n\t\t\r\n\t\tvar selectedCareMember = ko.observable();\r\n\t\tvar selectedPatientToken = selectedPatient.subscribe( function( newSelectedPatient ){\r\n\t\t\tselectedCareMember(null);\r\n\t\t});\r\n\t\t\r\n\t\t//widgets\r\n\t\tfunction widget(data, column) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.name = ko.observable(data.name);\r\n\t\t\tself.path = ko.observable(data.path);\r\n\t\t\tself.isOpen = ko.observable(data.open);\r\n\t\t\tself.column = column;\r\n\t\t\tself.isFullScreen = ko.observable(false);\r\n\t\t\t//self.filtersOpen = ko.observable(true);\r\n\t\t\tself.activationData = { widget: self, careMembers: careMembers, sortFunction: data.sortFunction };\r\n\t\t\tself.allowAdd = data.allowAdd;\r\n\t\t\tself.statusIds = data.statusIds;\r\n\t\t}\r\n\r\n\t\tfunction column(name, open, widgets) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.name = ko.observable(name);\r\n\t\t\t// self.isOpen = ko.observable(open).extend({ notify: 'always' });\r\n\t\t\t// self.isOpen.subscribe(function () {\r\n\t\t\t\t// computedOpenColumn(self);\r\n\t\t\t// });\r\n\t\t\tself.widgets = ko.observableArray();\r\n\t\t\t$.each(widgets, function (index, item) {\r\n\t\t\t\tself.widgets.push(new widget(item, self))\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t//Members in the Active section appear in Core (TRUE first), then Role Ascending order\r\n\t\tvar activeMembersSort = function (l, r) { \t\t\t\r\n\t\t\tif( l.core() && ! r.core() ) return -1;\r\n\t\t\tif( !l.core() && r.core() )\treturn 1;\r\n\t\t\tif( l.core() == r.core() ){\r\n\t\t\t\tvar leftRole = l.computedRoleName() ? l.computedRoleName().toLowerCase() : '';\r\n\t\t\t\tvar rightRole = r.computedRoleName() ? r.computedRoleName().toLowerCase() : '';\r\n\t\t\t\treturn leftRole == rightRole ? 0 : (leftRole > rightRole ? 1 : -1);\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t};\r\n\t\t\r\n\t\t//Members in the Inactive section appear in Updated Date Descending, Role Ascending order\r\n\t\tvar inactiveMembersSort = function (l, r) { \t\t\t\r\n\t\t\tvar leftUpdatedOn = l.updatedOn() ? l.updatedOn() : l.createdOn();\r\n\t\t\tleftUpdatedOn = moment( leftUpdatedOn ).format(\"MM/DD/YYYY\"); //date only\r\n\t\t\tvar rightUpdatedOn = r.updatedOn() ? r.updatedOn() : r.createdOn();\r\n\t\t\trightUpdatedOn = moment( rightUpdatedOn ).format(\"MM/DD/YYYY\"); //date only\r\n\t\t\tif( leftUpdatedOn == rightUpdatedOn ){\r\n\t\t\t\tvar leftRole = l.computedRoleName() ? l.computedRoleName().toLowerCase() : '';\r\n\t\t\t\tvar rightRole = r.computedRoleName() ? r.computedRoleName().toLowerCase() : '';\r\n\t\t\t\treturn leftRole == rightRole ? 0 : (leftRole > rightRole ? 1 : -1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn leftUpdatedOn < rightUpdatedOn ? 1 : -1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}; \r\n\t\t\r\n\t\tvar careTeamColumn = ko.observable(new column('careMembers', false, [\r\n\t\t\t\t\t\t{ name: 'Active Team', path: 'viewmodels/patients/widgets/careMembers', open: true, statusIds: [1] , allowAdd: true, sortFunction: activeMembersSort }, \r\n\t\t\t\t\t\t{ name: 'Team History', path: 'viewmodels/patients/widgets/careMembers', open: false, statusIds: [2,3], allowAdd: false, sortFunction: inactiveMembersSort }\r\n\t\t\t\t\t]));\r\n\t\t\r\n\t\tfunction minimizeThisColumn(sender) {\r\n            sender.column.isOpen(false);\r\n        }\r\n\r\n        function maximizeThisColumn(sender) {\r\n            sender.column.isOpen(true);\r\n        }\r\n\t\t\r\n\t\t//dialog\r\n\t\tvar modalShowing = ko.observable(false);\r\n\t\tvar modalEntity = ko.observable(new ModalEntity(modalShowing));\r\n\t\tvar newCareMember = ko.observable();\t\t\t\t\r\n\t\tvar newCareTeam = ko.observable();\r\n\t\t\r\n\t\tfunction saveAndAddAnother(){\t\t\t\r\n\t\t\tsaveOverride().then( addCareMember );\r\n\t\t\tmodalShowing(false);\r\n\t\t}\r\n\t\t\r\n\t\tfunction saveOverride () {\r\n\t\t\tif( !careTeam() ){\r\n\t\t\t\t//team has not yet been created:\r\n\t\t\t\tnewCareTeam( datacontext.createEntity('CareTeam', \r\n\t\t\t\t\t\t{ \tid: -1, \r\n\t\t\t\t\t\t\tcontactId: selectedPatient().contactCard().id(),\r\n\t\t\t\t\t\t\tcreatedById: session.currentUser().userId()\r\n\t\t\t\t\t\t}) );\r\n\t\t\t\tnewCareTeam().members = ko.observableArray();\r\n\t\t\t\tnewCareTeam().members.push( newCareMember() );\r\n\t\t\t\treturn datacontext.saveCareTeam( newCareTeam() ).then( saveTeamCompleted );\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//add/save one member to an existing team\r\n\t\t\t\t//\tnote: the new member should already be here inside members:\t\t\t\t\r\n\t\t\t\treturn datacontext.saveCareTeam( careTeam() ).then( saveTeamCompleted );\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\tfunction saveTeamCompleted( team ){\t\t\t\t\r\n\t\t\t};\t\t\t            \r\n        };\r\n\t\t\r\n        function cancelOverride () {\r\n\t\t\tmodalShowing(false);\r\n\t\t\tmodalEntity().careMember().entityAspect.rejectChanges();\t\t\t\r\n        };\r\n\t\t\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Assign Care Team',\r\n\t\t\tentity: modalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/careMember.edit', \r\n\t\t\tshowing: modalShowing, \r\n\t\t\tsaveOverride: saveOverride, \r\n\t\t\tcancelOverride: cancelOverride, \r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: 'modal-lg',\r\n\t\t\tcustomButtons: [\r\n\t\t\t\t{\tbtnEnabled: modalEntity().canSave, btnFunction: saveAndAddAnother, btnText: 'Save + New' }\r\n\t\t\t]\r\n\t\t};\r\n\t\t\r\n        var modal = new modelConfig.modal(modalSettings);\r\n\t\t\r\n\t\tfunction canAddCareMember(member){\r\n\t\t\treturn true;\t//TODO validate team role duplicates /PCM and other logic here\t\r\n\t\t}\r\n\t\t\r\n\t\tfunction ModalEntity(modalShowing) {\r\n            var self = this;\r\n            self.careMember = ko.observable();\r\n            self.canSaveObservable = ko.observable(true);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    var memberok = false;\r\n                    if (self.careMember()) {                        \r\n\t\t\t\t\t\tmemberok = self.careMember().isValid() && canAddCareMember( self.careMember() );\r\n                    }\r\n                    return memberok && self.canSaveObservable();\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { careMember: self.careMember, careTeamMembers: careMembers, \r\n\t\t\t\t\t\t\t\t\tselectedPatient: selectedPatient, careMemberRoles: careMemberRoles, \r\n\t\t\t\t\t\t\t\t\tcanSave: self.canSave, pcmContactSubType: pcmContactSubType,\r\n\t\t\t\t\t\t\t\t\tpcpContactSubType: pcpContactSubType, showing: modalShowing,\r\n\t\t\t\t\t\t\t\t\taddContactReturnedCallback: addContactReturned };\t\t\t\r\n        }\r\n\t\t\r\n\t\tfunction addContactReturned(contact){\r\n\t\t\t// called back from add contact dialog:\r\n\t\t    //back to add care member: show the screen without search. show the new created contact:\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Assign Care Team',\r\n\t\t\t\tentity: modalEntity, \r\n\t\t\t\ttemplatePath: 'viewmodels/templates/careMember.edit', \r\n\t\t\t\tshowing: modalShowing, \r\n\t\t\t\tsaveOverride: saveOverride, \r\n\t\t\t\tcancelOverride: cancelOverride, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: 'modal-lg',\r\n\t\t\t\tcustomButtons: [\r\n\t\t\t\t\t{\tbtnEnabled: modalEntity().canSave, btnFunction: saveAndAddAnother, btnText: 'Save + New' }\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar modal = new modelConfig.modal(modalSettings);\r\n\t\t\tif (contact) {\r\n                //new contact created - attach to the care member:\r\n\t\t\t\tnewCareMember().contactId(contact.id());\r\n\t\t\t\tmodalSettings.title += ' - ' + contact.fullName();\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//add contact canceled:\r\n\t\t\t\tnewCareMember().contactId(null);\t\t\t\t\r\n\t\t\t}\r\n\t\t\tmodalEntity().careMember( newCareMember() );\t\t\t\t \r\n\t\t\tshell.currentModal(modal);\r\n\t\t\tmodalShowing(true);\r\n\t\t}\r\n\t\t\r\n\t\tfunction addCareMember(){\r\n\t\t\tvar teamId = careTeam()? careTeam().id() : null;\r\n\t\t\tnewCareMember( datacontext.createEntity('CareMember', \r\n\t\t\t\t\t\t{ \tid: --nextId, \r\n\t\t\t\t\t\t\tcontactId: null,\t//no contact yet\r\n\t\t\t\t\t\t\tcareTeamId: teamId,\r\n\t\t\t\t\t\t\tdistanceUnit: 'mi',\r\n\t\t\t\t\t\t\tstatusId: 1,\t\t//active \r\n\t\t\t\t\t\t\tcore: false,\r\n\t\t\t\t\t\t\tdataSource: 'Engage',\r\n\t\t\t\t\t\t\tcreatedById: session.currentUser().userId() \r\n\t\t\t\t\t\t}) );\r\n\t\t\tnewCareMember().isNew(true);\t\t\t\r\n            modalEntity().careMember( newCareMember() );\r\n            shell.currentModal(modal);\r\n            modalShowing(true);\r\n\t\t}\r\n\t\t\r\n\t\tfunction editCareMemberContact(member){\r\n\t\t\tif( member.contact() ){\r\n\t\t\t\tcontactsIndex.editContact( member.contact() );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction editCareMember(member){\t\t\t\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Edit Care Team Member - ' + member.contact().fullName(),\r\n\t\t\t\tentity: modalEntity, \r\n\t\t\t\ttemplatePath: 'viewmodels/templates/careMember.edit', \r\n\t\t\t\tshowing: modalShowing, \r\n\t\t\t\tsaveOverride: saveOverride, \r\n\t\t\t\tcancelOverride: cancelOverride, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: 'modal-lg'\t\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar modal = new modelConfig.modal(modalSettings);\r\n\t\t\t\r\n\t\t\tmodalEntity().careMember( member );\r\n\t\t\t//show the screen without search. show the contact. \r\n            shell.currentModal(modal);\r\n            modalShowing(true);\r\n\t\t}\r\n\t\t\r\n\t\tfunction deleteCareMember(member){\r\n\t\t\tif( confirm('are you sure you want to delete the care member: ' + member.contact().fullName() + ' (' + member.computedRoleName() + ') ') ){\r\n\t\t\t\tif( member.contactId() && member.careTeamId() ){\r\n\t\t\t\t\tdatacontext.deleteCareTeamMember( member ).then( deleteCompleted );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction deleteCompleted(){\r\n\t\t\tselectedCareMember(null);\r\n\t\t}\r\n\t\t\r\n\t\tfunction activate(){\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t\t\t\r\n\t\t// Toggle the widget to / from fullscreen\r\n        function toggleFullScreen(widgetname) {\r\n            // If this widget is already fullscreen,\r\n            if (widgetname === fullScreenWidget()) {\r\n                // Remove full screen widget\r\n                fullScreenWidget(null);\r\n            } else {\r\n                // Else, set it as the full screen widget\r\n                fullScreenWidget(widgetname);\r\n            }\r\n        }\r\n\t\t\r\n\t\t\r\n\t\tfunction toggleOpenColumn() {\r\n            leftColumnOpen(!leftColumnOpen());\r\n        }\r\n\t\r\n\t\tfunction checkDataContext() {\r\n\t\t    if (!datacontext) {\r\n\t\t        datacontext = require('services/datacontext');\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\tvar showEditButton = ko.computed(function(){\r\n\t\t\tvar member = selectedCareMember();\t\t\t\r\n\t\t\tif( member && member.isEditable() ){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}).extend({ throttle: 100 });\r\n\t\t\t\t\t\r\n\t\tvar showDeleteButton = ko.computed(function(){\r\n\t\t\treturn showEditButton();\r\n\t\t}).extend({ throttle: 100 });\r\n\t\t\r\n\t\tvar selectedCareMemberName = ko.computed( function(){\r\n\t\t\tvar name = '';\r\n\t\t\tvar member = selectedCareMember();\r\n\t\t\tvar contact = member? member.contact() : null;\r\n\t\t\tif( member && contact ){\r\n\t\t\t\tname = ' - ' + contact.firstName() + ' ' + contact.lastName();\r\n\t\t\t}\r\n\t\t\treturn name;\t\t\t\r\n\t\t}).extend({ throttle: 100 }); \r\n\t\t\r\n\t\tfunction detached(){\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar isComposed = ko.observable(true);\r\n\t\t\r\n\t\tvar vm = {\r\n\t\t\tactivate: activate,\r\n\t\t\tdetached: detached,\r\n\t\t\tisComposed: isComposed,\r\n\t\t\tcareTeamColumn: careTeamColumn,\r\n\t\t\tselectedPatient: selectedPatient,\r\n\t\t\taddCareMember: addCareMember,\r\n\t\t\tshowEditButton: showEditButton,\r\n\t\t\tshowDeleteButton: showDeleteButton,\t\r\n\t\t\teditCareMember: editCareMember,\r\n\t\t\tdeleteCareMember: deleteCareMember,\r\n\t\t\teditCareMemberContact: editCareMemberContact,\r\n\t\t\tcareMembers: careMembers,\r\n\t\t\tselectedCareMember: selectedCareMember,\r\n\t\t\tselectedCareMemberName: selectedCareMemberName,\r\n\t\t\tcareMemberRoles: careMemberRoles,\r\n\t\t\tpcmContactSubType: pcmContactSubType,\r\n\t\t\tpcpContactSubType: pcpContactSubType,\r\n\t\t\ttoggleOpenColumn: toggleOpenColumn,\r\n\t\t\tfullScreenWidget: fullScreenWidget,\r\n\t\t\tleftColumnOpen: leftColumnOpen,\r\n\t\t\ttoggleFullScreen: toggleFullScreen,\r\n\t\t\tactiveWidgetOpen: activeWidgetOpen,\r\n\t\t\tminimizeThisColumn: minimizeThisColumn,\r\n            maximizeThisColumn: maximizeThisColumn\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\treturn vm;\r\n\t\t\r\n\t}\r\n);\n","/**\r\n*\tmanages the care team patient section on the left bar.\r\n*\t@module care.team\r\n*/\r\ndefine('viewmodels/patients/sections/care.team',['models/base', 'services/datacontext', 'services/session', 'viewmodels/shell/shell', 'viewmodels/patients/team/index'],\r\n    function (modelConfig, datacontext, session, shell, teamIndex) {\t\t\r\n\r\n        // var alphabeticalSort = function (l, r) {\r\n\t\t\t// if( l.contact() && !r.contact() ){\r\n\t\t\t\t// return 1;\r\n\t\t\t// }\r\n\t\t\t// if( !l.contact() && r.contact() ) return -1;\r\n\t\t\t// if( !l.contact() && !r.contact() ) return 0;\r\n\t\t\t// return (l.contact().lastName() == r.contact().lastName()) ? (l.contact().lastName() > r.contact().lastName() ? 1 : -1) : (l.contact().lastName() > r.contact().lastName() ? 1 : -1) \r\n\t\t// };\r\n\r\n\t\tvar activeMembersSort = function (l, r) { \t\t\t\r\n\t\t\tif( l.core() && ! r.core() ) return -1;\r\n\t\t\tif( !l.core() && r.core() )\treturn 1;\r\n\t\t\tif( l.core() == r.core() ){\r\n\t\t\t\tvar leftRole = l.computedRoleName() ? l.computedRoleName().toLowerCase() : '';\r\n\t\t\t\tvar rightRole = r.computedRoleName() ? r.computedRoleName().toLowerCase() : '';\r\n\t\t\t\treturn leftRole == rightRole ? 0 : (leftRole > rightRole ? 1 : -1);\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t};\r\n\t\t\r\n        var ctor = function () {\r\n\t\t\tvar self = this;\t\t\t\r\n        };\r\n        \r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            // Get the selected patient that was passed in\r\n            self.selectedPatient = settings.selectedPatient;            \r\n\t\t\t\r\n\t\t\tself.careTeam = ko.computed( function(){\r\n\t\t\t\tvar team = self.selectedPatient.contactCard() ? self.selectedPatient.contactCard().careTeam ? self.selectedPatient.contactCard().careTeam() : null : null;\r\n\t\t\t\treturn team;\r\n\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\r\n\t\t\t// Get a list of all of the care team\r\n            self.careMembers = ko.computed( function(){\r\n\t\t\t\tvar team = self.careTeam();\r\n\t\t\t\tvar members = team ? team.members() : [];\r\n\t\t\t\t// var members = ko.utils.arrayFilter( allMembers, function(member){\r\n\t\t\t\t\t// return !member.isNew() && member.contactId() && member.contact() && member.core() && member.statusId() == 1;\r\n\t\t\t\t// });\r\n\t\t\t\treturn members;\r\n\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\r\n            // The view state of the section (open or not)\r\n            self.isOpen = ko.observable(true);\r\n\t\t\t\r\n\t\t\tself.primaryCareManager = ko.computed( function(){\r\n\t\t\t\tvar team = self.careTeam();\r\n\t\t\t\tif( team ){\r\n\t\t\t\t\treturn team.primaryCareManagers().length > 0 ? team.primaryCareManagers()[0] : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.primaryCarePhysician = ko.computed( function(){\r\n\t\t\t\tvar team = self.careTeam()\r\n\t\t\t\tif( team ){\r\n\t\t\t\t\treturn team.primaryCarePhysicians().length > 0 ? team.primaryCarePhysicians()[0] : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t});\r\n\t\t\t\r\n            // Create a list of primary care team members to display in the widget\r\n            self.primaryCareTeam = ko.computed(function () {\r\n\t\t\t\tvar careMembers = self.careMembers();\t//listen to changes in assigned care members (assignedToMe returns result)                \r\n                var thisCareTeam = [];\r\n                var pcp = self.primaryCarePhysician();\r\n\t\t\t\tvar pcm = self.primaryCareManager();\r\n\t\t\t\t\r\n                // Create a filtered list of care teams,\r\n                ko.utils.arrayForEach(careMembers, function (careMember) {\r\n                    // If they are a member of the primary care team,\r\n                    if (careMember.core() && !careMember.isNew() && careMember.statusId() == 1) {\r\n\t\t\t\t\t\t//exclude pcp and pcm:\r\n\t\t\t\t\t\tif( !( pcp && careMember.id() == pcp.id() || ( pcm && careMember.id() == pcm.id() ) ) ){\r\n\t\t\t\t\t\t\tthisCareTeam.push(careMember);\r\n\t\t\t\t\t\t}\r\n                    }\r\n                });\r\n\t\t\t\tthisCareTeam = thisCareTeam.sort(activeMembersSort);\r\n                // Return the team\r\n                return thisCareTeam;\r\n            }).extend({ throttle: 50 });\r\n\t\t\t\r\n\t\t\tself.isSaving = ko.observable(false);\r\n\t\t\tself.canAssignToMe = ko.computed( function(){\r\n\t\t\t\tvar isPatientLoaded = self.selectedPatient.isLoaded();\r\n\t\t\t\tvar isSaving = self.isSaving();\r\n\t\t\t\tvar careMembers = self.careMembers();\r\n\t\t\t\tvar pcm = self.primaryCareManager();\r\n\t\t\t\tif( !pcm ){\r\n\t\t\t\t\tvar thisUserCareMember = ko.utils.arrayFirst( careMembers, function (member) {\r\n\t\t\t\t\t\t//find if the current user is in the team with pcm role:\r\n\t\t\t\t\t    return member.contactId() === session.currentUser().userId()\r\n\t\t\t\t\t\t\t\t&& member.roleId() == teamIndex.pcmContactSubType().id();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn isPatientLoaded && !isSaving && !thisUserCareMember;\r\n\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\r\n\t\t\tself.canReassignToMe = ko.computed( function () {\r\n\t\t\t\tvar careMembers = self.careMembers();\r\n\t\t\t\tvar pcm = self.primaryCareManager();\r\n\t\t\t\tvar isPatientLoaded = self.selectedPatient.isLoaded();\r\n\t\t\t\tvar isSaving = self.isSaving();\r\n\t\t\t\tif ( careMembers.length > 0 && isPatientLoaded && pcm && !isSaving ) {\r\n\t\t\t\t\t//the PCM is assigned and its not the current user\r\n\t\t\t\t\treturn pcm.contactId() != session.currentUser().userId();\r\n\t\t\t\t\t// var PCMCareManager = ko.utils.arrayFirst( careMembers, function (member) {\r\n\t\t\t\t\t\t// //find if the the current user is a member in this team, and its not the assigned(active core) pcm, and its role is PCM:\r\n\t\t\t\t\t    // return member.contactId() == session.currentUser().userId() && member.id() != pcm.id() \r\n\t\t\t\t\t\t\t// && member.contactId() != pcm.contactId()\r\n\t\t\t\t\t\t\t// && member.roleId() == pcm.roleId();\r\n\t\t\t\t\t// });\r\n\t\t\t\t\t// return ( PCMCareManager && !isSaving );\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}).extend({ throttle: 50 });\r\n\t\t\r\n            self.saveType = ko.observable();\r\n            self.saveOverride = function () { \r\n                // Get the current primary care manager\r\n                var careMemberType = ko.utils.arrayFirst(datacontext.enums.careMemberTypes(), function (cmType) {\r\n                    return cmType.name() === 'Care Manager';\r\n                });\r\n                if (careMemberType) {\r\n                    var thisMatchedCareManager = ko.utils.arrayFirst(datacontext.enums.careManagers(), function (caremanager) {\r\n                        return caremanager.id() === session.currentUser().userId();\r\n                    });\r\n                    // Grab the first primary listed care member\r\n\t\t\t\t\tvar members = self.selectedPatient.contactCard() ? self.selectedPatient.contactCard().careTeam() ? self.selectedPatient.contactCard().careTeam().members() : [] : [];\r\n                    var thisCareMember = ko.utils.arrayFirst(members, function (ctMember) {\r\n                        return ctMember.primary();\r\n                    });\r\n                    datacontext.saveCareMemberOld(thisCareMember, self.saveType());\r\n                }\r\n            };\r\n            self.cancelOverride = function () {\r\n                datacontext.cancelEntityChanges(self.selectedPatient);\r\n\t\t\t\tvar members = self.selectedPatient.contactCard() ? self.selectedPatient.contactCard().careTeam() ? self.selectedPatient.contactCard().careTeam().members() : [] : [];\r\n                ko.utils.arrayForEach(members, function (cm) {\r\n                    datacontext.cancelEntityChanges(cm);\r\n                });\r\n            };\r\n            self.editModalShowing = ko.observable(false);\r\n            self.modalEntity = ko.observable(new ModalEntity(self.selectedPatient, self.saveType));\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Edit Care Team',\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: self.modalEntity, \r\n\t\t\t\ttemplatePath: 'viewmodels/templates/care.team.edit', \r\n\t\t\t\tshowing: self.editModalShowing, \r\n\t\t\t\tsaveOverride: self.saveOverride, \r\n\t\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: null\r\n\t\t\t}\r\n            self.modal = new modelConfig.modal(modalSettings);\r\n        };\r\n\r\n        function ModalEntity(patient, savetype) {\r\n            var self = this;\r\n            self.selectedPatient = ko.observable(patient);\r\n            self.saveType = savetype;\r\n            // Create a computed property to subscribe to all of\r\n            // the patients' observations and make sure they are\r\n            // valid\r\n            self.canSaveObservable = ko.observable(false);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    return self.canSaveObservable();\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { selectedPatient: self.selectedPatient, canSave: self.canSave, saveType: self.saveType };\r\n        }\r\n\r\n\t\tctor.prototype.addCareMember = function(){\r\n\t\t\tteamIndex.addCareMember();\r\n\t\t};\r\n\t\t\r\n\t\tctor.prototype.assignToMe = function () {\r\n\t\t\t//assign the current user as a PCM role:\r\n\t\t\tvar self = this;\r\n\t\t\tvar pcmRoleId = teamIndex.pcmContactSubType().id();\r\n\t\t\tvar selectedPatient = self.selectedPatient;\r\n\t\t\tvar teamId = selectedPatient.contactCard()? selectedPatient.contactCard().careTeam() ? selectedPatient.contactCard().careTeam().id() : null : null;\r\n            var userCareManager = datacontext.getUserCareManager();\r\n\t\t\tvar userContactId = userCareManager.id();\t//the caremanager id is actually a contact id (get care managers call returns them as contacts)\r\n\t\t\tvar careTeam;\r\n\t\t\t\r\n\t\t\tfunction saveTeamCompleted( team ){\r\n\t\t\t\tif( team ){\t\t\t\t\t\r\n\t\t\t\t\t//self.selectedPatient.careTeam(team);\r\n\t\t\t\t\tself.isSaving(false);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n            if (!self.isSaving() && pcmRoleId) {\r\n\t\t\t\tself.isSaving(true);\r\n\t\t\t\tvar pcm = self.primaryCareManager();\r\n\t\t\t\tif( pcm ){\r\n\t\t\t\t\tpcm.core( false ); //retire the current pcm if it is assigned\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tvar userCareMember = ko.utils.arrayFirst( self.careMembers(), function (member) {\r\n\t\t\t\t\t//find if the the current user is a member in this team, and its not the assigned(active core) pcm, and its role is PCM:\r\n\t\t\t\t\treturn member.contactId() == session.currentUser().userId() && member.roleId() == pcmRoleId \r\n\t\t\t\t\t\t\t&& ( !member.core() || member.statusId() != 1 );\r\n\t\t\t\t});\r\n\t\t\t\tif( userCareMember ){\t\t\t\t\t\r\n\t\t\t\t\t//reassign the existing user pcm member as active core pcm:\r\n\t\t\t\t\tuserCareMember.core( true );\r\n\t\t\t\t\tuserCareMember.statusId( 1 );\r\n\t\t\t\t\tdatacontext.saveCareTeam( self.selectedPatient.contactCard().careTeam() ).then( saveTeamCompleted );\r\n\t\t\t\t}\t\r\n\t\t\t\telse{\r\n\t\t\t\t\t//create a new pcm user member\r\n\t\t\t\t\tvar newCareMember = datacontext.createEntity('CareMember', \r\n\t\t\t\t\t\t\t{ \tid: -1, \r\n\t\t\t\t\t\t\t\tcontactId: userContactId,\r\n\t\t\t\t\t\t\t\troleId: pcmRoleId,\r\n\t\t\t\t\t\t\t\tcareTeamId: teamId,\r\n\t\t\t\t\t\t\t\tdistanceUnit: 'mi',\r\n\t\t\t\t\t\t\t\tstatusId: 1,\t\t//active \r\n\t\t\t\t\t\t\t\tcore: true,\r\n\t\t\t\t\t\t\t\tdataSource: 'Engage',\r\n\t\t\t\t\t\t\t\tcreatedById: session.currentUser().userId()\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\tnewCareMember.isNew(true);\r\n                \r\n\t\t\t\t\tif( !teamId ){\r\n\t\t\t\t\t\t//team has not yet been created:\r\n\t\t\t\t\t\tcareTeam = datacontext.createEntity('CareTeam', \r\n\t\t\t\t\t\t\t\t{ \tid: -1, \r\n\t\t\t\t\t\t\t\t\tcontactId: self.selectedPatient.contactId(),\r\n\t\t\t\t\t\t\t\t\tcreatedById: session.currentUser().userId()\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tcareTeam.members = ko.observableArray();\r\n\t\t\t\t\t\tcareTeam.members.push( newCareMember );\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//add/save one member to an existing team\r\n\t\t\t\t\t\t//\tnote: the new member should already be here inside careTeam().members:\r\n\t\t\t\t\t\tcareTeam = self.selectedPatient.contactCard().careTeam();\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn datacontext.saveCareTeam( careTeam ).then( saveTeamCompleted );\r\n\t\t\t\t}\r\n            } else{\r\n\t\t\t\tconsole.log('assignToMe blocked since it is currently saving');\r\n\t\t\t}\r\n        };        \r\n\r\n        //TODO: remove/ change to new care member / care team/ member endpoints and contact types:\r\n        ctor.prototype.saveCareTeam = function (caremanagerid) {\r\n            var careManagerId = caremanagerid ? caremanagerid : session.currentUser().userId();\r\n            // Get the care manager type\r\n            var careMemberType = ko.utils.arrayFirst(datacontext.enums.careMemberTypes(), function (cmType) {\r\n                return cmType.name() === 'Care Manager';\r\n            });\r\n            if (careMemberType) {\r\n                var thisMatchedCareManager = ko.utils.arrayFirst(datacontext.enums.careManagers(), function (caremanager) {\r\n                    return caremanager.id() === careManagerId;\r\n                });\r\n                var thisCareMember = datacontext.createEntity('CareMember', { id: -1, patientId: self.selectedPatient.id(), preferredName: thisMatchedCareManager.preferredName(), typeId: careMemberType.id(), gender: 'n', primary: true, contactId: careManagerId });\r\n                datacontext.saveCareMemberOld(thisCareMember, 'Insert');\r\n            }\r\n        }\r\n\r\n        //TODO: remove this functionality\r\n        // ctor.prototype.editCareTeam = function () {\t\t\t\r\n            // // var self = this;\r\n            // // self.editModalShowing(true);\r\n            // // shell.currentModal(self.modal);\r\n        // }\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n\t\tctor.prototype.detached = function() {\r\n\t\t\tvar self = this;\r\n            //dispose computeds:\r\n\t\t\tself.primaryCareTeam.dispose();\r\n\t\t\tself.canAssignToMe.dispose();\r\n\t\t\tself.canReassignToMe.dispose();\r\n\t\t\tself.primaryCarePhysician.dispose();\r\n\t\t\tself.primaryCareManager.dispose();\r\n\t\t\t\r\n\t\t\t//dispose subscriptions:\r\n            // ko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n                // token.dispose();\r\n            // });\r\n        }\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/clinicalBackground',['models/base', 'services/datacontext', 'viewmodels/shell/shell'],\r\n    function (modelConfig, datacontext, shell) {\r\n\r\n        var ctor = function () {\r\n\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.clinicalBackground = self.selectedPatient.clinicalBackground;\r\n            self.backgroundModalShowing = ko.observable(false);\r\n            self.saveBackground = function () {\r\n                datacontext.saveIndividual(self.selectedPatient);\r\n            }\r\n            self.cancelBackground = function () {\r\n                self.selectedPatient.entityAspect.rejectChanges();\r\n            }\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Edit Clinical Background',\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: self.selectedPatient, \r\n\t\t\t\ttemplatePath: 'templates/clinicalBackground.html', \r\n\t\t\t\tshowing: self.backgroundModalShowing, \r\n\t\t\t\tsaveOverride: self.saveBackground, \r\n\t\t\t\tcancelOverride: self.cancelBackground, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: null\r\n\t\t\t}\r\n            self.modal = new modelConfig.modal(modalSettings);\r\n            self.isOpen = ko.observable(false);\r\n            self.isEditing = ko.observable(false);\r\n            self.isExpanded = ko.observable(false);\r\n            self.toggleEditing = function () {\r\n                if (self.isEditing()) {\r\n                    self.backgroundModalShowing(false);\r\n                }\r\n                else {\r\n                    shell.currentModal(self.modal);\r\n                    self.backgroundModalShowing(true);\r\n                    var editingToken = self.backgroundModalShowing.subscribe(function () {\r\n                        self.isEditing(false);\r\n                        editingToken.dispose();\r\n                    });\r\n                }\r\n                self.isEditing(!self.isEditing());\r\n                self.isOpen(true);\r\n            };\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/communications',['models/base', 'services/datacontext', 'viewmodels/shell/shell', 'viewmodels/home/contacts/index'],\r\n    function (modelConfig, datacontext, shell, contactsIndex) {\r\n        \r\n        var ctor = function () {\r\n\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.contactCard = settings.contactCard;\r\n            self.communicationModalShowing = ko.observable(false);\r\n            // Primary communication modes for this patient\r\n            self.primaryCommunications = ko.computed(function () {\r\n                // Get the primary communication types and return them\r\n                var communications = [];\r\n                var contactcard = self.contactCard();\r\n                if (contactcard) {\r\n                    var prefPhone = ko.utils.arrayFirst(contactcard.phones(), function (phone) {\r\n                        return phone.phonePreferred();\r\n                    });\r\n                    if (prefPhone) {\r\n                        prefPhone.template = 'templates/phone.html';\r\n                        communications.push(prefPhone);\r\n                    }\r\n                    var prefText = ko.utils.arrayFirst(contactcard.phones(), function (phone) {\r\n                        return phone.textPreferred();\r\n                    });\r\n                    if (prefText && prefText !== prefPhone) {\r\n                        prefText.template = 'templates/phone.html';\r\n                        communications.push(prefText);\r\n                    }\r\n                    var prefEmail = ko.utils.arrayFirst(contactcard.emails(), function (email) {\r\n                        return email.preferred();\r\n                    });\r\n                    if (prefEmail) {\r\n                        prefEmail.template = 'templates/email.html';\r\n                        communications.push(prefEmail);\r\n                    }\r\n                    var prefAddress = ko.utils.arrayFirst(contactcard.addresses(), function (address) {\r\n                        return address.preferred();\r\n                    });\r\n                    if (prefAddress) {\r\n                        prefAddress.template = 'templates/address.html';\r\n                        communications.push(prefAddress);\r\n                    }\r\n                }\r\n                // Return the list of preferred communications\r\n                return communications;\r\n            }).extend({ throttle: 25 });\r\n            // Secondary communication modes for this patient\r\n            self.secondaryCommunications = ko.computed(function () {\r\n                // Get the secondary communication types and return them\r\n                var communications = [];\r\n                var contactcard = self.contactCard();\r\n                if (contactcard) {\r\n                    // Add each phone,\r\n                    if (!contactcard.phoneOptedOut()) {\r\n                        ko.utils.arrayForEach(contactcard.phones(), function (phone) {\r\n                            // As long as it isn't primary already\r\n                            if (!phone.phonePreferred() && !phone.textPreferred() && !phone.optOut()) {\r\n                                phone.template = 'templates/phone.html';\r\n                                communications.push(phone);\r\n                            }\r\n                        });\r\n                    }\r\n                    if (contactcard.phoneOptedOut() && !contactcard.textOptedOut()) {\r\n                        ko.utils.arrayForEach(contactcard.phones(), function (phone) {\r\n                            // As long as it isn't primary already\r\n                            if (!phone.textPreferred() && phone.isText() && !phone.optOut) {\r\n                                phone.template = 'templates/phone.html';\r\n                                communications.push(phone);\r\n                            }\r\n                        });\r\n                    }\r\n                    if (!contactcard.emailOptedOut()) {\r\n                        ko.utils.arrayForEach(contactcard.emails(), function (email) {\r\n                            if (!email.preferred() && !email.optOut()) {\r\n                                email.template = 'templates/email.html';\r\n                                communications.push(email);\r\n                            }\r\n                        });\r\n                    }\r\n                    if (!contactcard.addressOptedOut()) {\r\n                        ko.utils.arrayForEach(contactcard.addresses(), function (address) {\r\n                            if (!address.preferred() && !address.optOut()) {\r\n                                address.template = 'templates/address.html';\r\n                                communications.push(address);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                // Return the list of preferred communications\r\n                return communications;\r\n            }).extend({ throttle: 25 });\r\n            // The modal to display for editing\r\n\r\n            self.isOpen = ko.observable(true);\r\n            // Why do we need this on the contactCard and in this view model?\r\n            // TODO: I deleted it from the model but I think we can reduce either this one\r\n            // or the communicationModalShowing one.\r\n            self.isEditing = ko.observable(false);\r\n\t\t\tself.editContact = function(){\r\n\t\t\t    contactsIndex.editPatientContact(self.contactCard());\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tself.isValid = ko.observable(true);\r\n        };\r\n                \r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/data.list',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/data/index', 'viewmodels/shell/shell'],\r\n    function (modelConfig, servicesConfig, datacontext, session, dataIndex, shell) {\r\n\r\n        // Service endpoint for getting history of an observation\r\n        var observationsHistoryEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'PatientObservation');\r\n        });\r\n\r\n        // Complex sort for observation groups\r\n        var groupSort = function (l, r) {\r\n            // Primary sort property\r\n            var p1 = l.parentObservation().type().name();\r\n            var p2 = r.parentObservation().type().name();\r\n\r\n            // Secondary sort property\r\n            var o1 = l.parentObservation().name().toLowerCase();\r\n            var o2 = r.parentObservation().name().toLowerCase();\r\n            \r\n            if (p1 != p2) {\r\n                if (p1 < p2) return -1;\r\n                if (p1 > p2) return 1;\r\n                return 0;\r\n            }\r\n            if (o1 < o2) return -1;\r\n            if (o1 > o2) return 1;\r\n            return 0;\r\n        };\r\n\r\n        // Sort by end date\r\n        // var endDateSort = function (l, r) { return (l.endDate() == r.endDate()) ? (l.endDate() < r.endDate() ? 1 : -1) : (l.endDate() < r.endDate() ? 1 : -1) };\r\n        var endDateSort = function (a,b) { var x = Date.parse(a.endDate()); var y = Date.parse(b.endDate()); if (x == y) { return 0; } if (isNaN(x) || x > y) { return -1; } if (isNaN(y) || x < y) { return 1; }}\r\n        // Create a constructor for this view model\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n        \r\n        // Activate callback used by router\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            // The currently selected patient\r\n            self.selectedPatient = ko.observable(self.settings.selectedPatient);\r\n            // An array of groups of observations\r\n            self.groupArray = ko.observableArray();\r\n            self.blowUpObservations = ko.computed(function () {\r\n                // Subscribe to the observable\r\n                var something = dataIndex.needToRefreshObservations();\r\n                // Set it back to false\r\n                if (dataIndex.needToRefreshObservations()) {\r\n                    dataIndex.needToRefreshObservations(false);\r\n                    self.groupArray([]);\r\n                }\r\n                return false;\r\n            })\r\n            // A computed and filtered list of the current patients observations\r\n            self.dataObservations = ko.computed(function() {\r\n                var theseObservations = self.selectedPatient().observations();                \r\n                // Filter the observations\r\n                var tempObservations = ko.utils.arrayFilter(theseObservations, function (obs) {\r\n                    // Only return the observations that are not new\r\n                    return !obs.isNew() && !obs.deleteFlag();\r\n                });\r\n                return tempObservations;\r\n            }).extend({ throttle: 50 });\r\n            // A group of the computed observations\r\n            self.dataObservationGroups = ko.computed({\r\n                read: function () {\r\n                    var theseObservations = self.dataObservations();\r\n                    theseObservationGroups = groupObservations(theseObservations);\r\n                    // For each group of observations,\r\n                    ko.utils.arrayForEach(theseObservationGroups, function (obsgrp) {\r\n                        // See if there is already a group with this name in the group array\r\n                        var thisMatchedGroup = ko.utils.arrayFirst(self.groupArray(), function (arrayGroup) {\r\n                            return arrayGroup.parentObservation() ? arrayGroup.parentObservation().name() === obsgrp.observations[0].name() : false;\r\n                        });\r\n                        // If a group doesn't yet exist,\r\n                        if (!thisMatchedGroup) {\r\n                            // Add a new group to the group of arrays\r\n                            var newGroup = new ObservationGroup(obsgrp.observations);\r\n                            self.groupArray.push(newGroup);\r\n                        } else {\r\n                            // Check if this group already has each observation\r\n                            ko.utils.arrayForEach(obsgrp.observations, function (observation) {\r\n                                // If the matched groups' observations list doesn't contain the observation already,\r\n                                if (thisMatchedGroup.observations.indexOf(observation) === -1) {\r\n                                    // Add it\r\n                                    thisMatchedGroup.observations.push(observation);\r\n                                } else {\r\n                                    // Do nothing\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                    return self.groupArray();\r\n                },\r\n                write: function (newValue) {\r\n                    // When we write to the groups, we are just blowing them up\r\n                    self.groupArray([]);\r\n                }\r\n                \r\n            }).extend({ throttle: 50 });\r\n            // We need to clean out the groups whenever the patient changes\r\n            self.selectedPatient.subscribe(function () {\r\n                self.dataObservationGroups(false);\r\n            });\r\n            // A sorted grouping of the observations \r\n            //      We sort separately to prevent re-sorting everytime a new observation is added\r\n            self.computedObservationGroups = ko.computed(function () {\r\n                var theseObsGroups = self.dataObservationGroups();\r\n                ko.utils.arrayForEach(theseObsGroups, function (group) {\r\n                    // If the group is empty\r\n                    if (group && group.length === 0) {\r\n                        // Remove it\r\n                        self.dataObservationGroups.remove(group);\r\n                    }\r\n                });\r\n                if (theseObsGroups && theseObsGroups.length > 0 ) {\r\n                    return theseObsGroups.sort(groupSort);\r\n                } else {\r\n                    return [];\r\n                }\r\n            }).extend({ throttle: 500 });\r\n            // Future story\r\n            self.removeObservation = function (obs) {\r\n                obs.deleteFlag(true);\r\n                dataIndex.saveDataEntry();\r\n            }\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n        };\r\n\r\n        ctor.prototype.toggleExpand = function (sender) {\r\n            // Toggle open or closed\r\n            sender.isOpen(!sender.isOpen());\r\n            // If it has just been set to open,\r\n            if (sender.isOpen()) {\r\n                // Check if observations have been expanded yet,\r\n                if (sender.hasBeenExpanded()) {\r\n                    // We already have history, do nothing\r\n                } else {\r\n                    // Else, set the isLoading property to true\r\n                    sender.isLoadingObs(true);\r\n                    var thisObservationId = sender.parentObservation().observationId();\r\n                    var patientId = sender.parentObservation().patientId();\r\n                    // And go get more observations\r\n                    datacontext.getEntityList(null, observationsHistoryEndPoint().EntityType, observationsHistoryEndPoint().ResourcePath + patientId + '/Observations/' + thisObservationId + '/Historical', null, null, true).then(dataReturned);\r\n                }\r\n            }\r\n\r\n            function dataReturned(data) {\r\n                // Turn off the spinner\r\n                sender.isLoadingObs(false);\r\n                sender.hasBeenExpanded(true);\r\n            }\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n\r\n        function groupObservations(observations) {\r\n            // List of observation names\r\n            var obsGroups = [];\r\n            //  Grouped observations\r\n            var roughGroups = [];\r\n            // For each of the observations,\r\n            ko.utils.arrayForEach(observations, function (obs) {\r\n                // If the group of observations doesn't already contain the name of this group,\r\n                if (obsGroups.indexOf(obs.name()) === -1) {\r\n                    // Add it\r\n                    obsGroups.push(obs.name());\r\n                }\r\n            });\r\n            // For each of the unique groups,\r\n            ko.utils.arrayForEach(obsGroups, function (group) {\r\n                // Find the matching observations,\r\n                var matchingObservations = ko.utils.arrayFilter(observations, function (obs) {\r\n                    return group === obs.name();\r\n                });\r\n                // And add the group to rough groups\r\n                roughGroups.push(new tempGroup(matchingObservations));\r\n            });\r\n            return roughGroups;\r\n            function tempGroup(obs) {\r\n                var self = this;\r\n                self.observations = obs;\r\n            }\r\n        }\r\n\r\n        // Group of observations\r\n        function ObservationGroup (observations) {\r\n            var self = this;\r\n            self.isOpen = ko.observable(false);\r\n            self.isLoadingObs = ko.observable(false);\r\n            self.hasBeenExpanded = ko.observable(false);\r\n            self.observations = ko.observableArray(observations);\r\n            self.computedObservations = ko.computed(function () {\r\n                // Force the computed to recompute when the end date changes\r\n                ko.utils.arrayForEach(self.observations(), function (obs) {\r\n                    var something = obs.endDate();\r\n                });\r\n                // Filter the results\r\n                var theseObservations = ko.utils.arrayFilter(self.observations(), function (obs) {\r\n                    // Only return those that are delete flag false\r\n                    return !obs.deleteFlag();\r\n                });\r\n                if (theseObservations.length === 0) { return []; }\r\n                theseObservations = theseObservations.sort(endDateSort);\r\n                // Remove the parent observation\r\n                return theseObservations.slice(1, theseObservations.length);\r\n            }).extend({ throttle: 50 });\r\n            self.parentObservation = ko.computed(function () {\r\n                var theseObservations = self.observations()\r\n                if (theseObservations.length === 0) { return []; }\r\n                theseObservations = theseObservations.sort(endDateSort);\r\n                var firstItem = theseObservations[0];\r\n                return firstItem;\r\n            }).extend({ throttle: 50 });\r\n        }\r\n        \r\n    });;\n","define('viewmodels/patients/sections/demographics',['durandal/app', 'viewmodels/shell/shell', 'models/base', 'services/datacontext', 'services/formatter'],\r\n\tfunction (app, shell, modelConfig, datacontext, formatter) {\r\n\r\n\t\tvar ctor = function () {\r\n\r\n\t\t};\r\n\r\n\t\tctor.prototype.activate = function (settings) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.settings = settings;\r\n\t\t\tself.selectedPatient = self.settings.selectedPatient;\r\n\t\t\tself.editModalShowing = ko.observable(false);\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Edit Individual',\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: self.selectedPatient, \r\n\t\t\t\ttemplatePath: 'templates/patient.html', \r\n\t\t\t\tshowing: self.editModalShowing,\r\n\t\t\t\tclassOverride: null\r\n\t\t\t}\r\n\t\t\tself.modal = new modelConfig.modal(modalSettings);\r\n\t\t\tself.isOpen = ko.observable(true);\r\n\t\t\tself.isEditing = ko.observable(false);\r\n\t\t\tself.toggleEditing = function () {\r\n\t\t\t\tif (self.isEditing()) {\r\n\t\t\t\t\tself.editModalShowing(false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tshell.currentModal(self.modal);\r\n\t\t\t\t\tself.editModalShowing(true);\r\n\t\t\t\t\tvar editingToken = self.editModalShowing.subscribe(function () {\r\n\t\t\t\t\t\tself.isEditing(false);\r\n\t\t\t\t\t\teditingToken.dispose();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tself.isEditing(!self.isEditing());\r\n\t\t\t\tself.isOpen(true);\r\n\t\t\t};\r\n\t\t\tself.toggleFlagged = function () {\r\n\t\t\t\t// Get the current value of the flagged attribute of the patient\r\n\t\t\t\tvar currentValue = self.selectedPatient.flagged();\r\n\t\t\t\t// Toggle the property\r\n\t\t\t\tcurrentValue = !currentValue;\r\n\t\t\t\t// And set the flagged property to the inverse\r\n\t\t\t\tself.selectedPatient.flagged(currentValue);\r\n\t\t\t\tvar flagged = currentValue ? 1 : 0;\r\n\t\t\t\tdatacontext.saveChangesToPatientProperty(self.selectedPatient, 'flagged', flagged, []);\r\n\t\t\t};\r\n\t\t\tself.showFullSSN = function () {\r\n\t\t\t\tdatacontext.getFullSSN(self.selectedPatient.id()).then(ssnReturned);\r\n\t\t\t\tfunction ssnReturned(data) {\r\n\t\t\t\t\tif(data && data.SSN){\r\n\t\t\t\t\t\tvar formattedNumber = formatter.formatSeparators(data.SSN.replace( /\\D/g, ''), 'XXX-XX-XXXX', '-');\r\n\t\t\t\t\t\talert('Full SSN: ' + formattedNumber);\r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\talert('Full SSN is not available'); //1227\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tself.canViewFullSSN = ko.computed(function () {\r\n\t\t\t\t// Always return true for now,\r\n\t\t\t\t// until permissions are added\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\r\n\t\t\tself.primaryIdLabel = ko.observable();\r\n\t\t\tself.primaryIdTitle = ko.observable();\r\n\t\t\tself.primaryIdValue = ko.observable();\r\n\t\t\tself.primaryId = ko.computed( function(){\r\n\t\t\t\tvar patient = self.selectedPatient;\r\n\t\t\t\tvar patientSystemIds = self.selectedPatient.patientSystems();\r\n\t\t\t\tvar primary = self.selectedPatient.getPrimaryPatientSystem();\r\n\t\t\t\tif(primary){\r\n\t\t\t\t\tself.primaryIdLabel( primary.system().displayLabel() );\r\n\t\t\t\t\tself.primaryIdTitle( primary.system().displayLabel() + ': '+ primary.value() );\r\n\t\t\t\t\tself.primaryIdValue( primary.value() );\r\n\t\t\t\t}\r\n\t\t\t\treturn primary;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\treturn ctor;\r\n\t});\r\n\n","/**\r\n * dropdown with \"add new\" option.\r\n * @module dropdown.w.addnew\r\n * \r\n * \r\n */\r\n\r\n\r\ndefine('viewmodels/patients/sections/dropdown.w.addnew',[],\r\n\tfunction(){\r\n        var subscriptionTokens= [];\r\n\t\t\r\n\t\t/**\r\n\t\t*\r\n\t\t*\t@class dropdown.w.addnew\r\n\t\t*/\r\n\t\tvar ctor = function () {\r\n            var self = this;\t\t\t\t\t\r\n        };\r\n\t\tctor.prototype.cancelChanges = function(data, event){\r\n\t\t\tvar self = this;\r\n\t\t\t//clear the selected value, edit box text and search text:\r\n\t\t\tif(self.newCustomValue) self.newCustomValue('');\r\n\t\t\tself.selectedValue(null);\r\n\t\t\tif(self.searchQueryText){\r\n\t\t\t\tself.searchQueryText(null);\r\n\t\t\t}\r\n\t\t\tif(!self.isEditModeOnly()){\r\n\t\t\t\t//change back to dropdown\t\t\r\n\t\t\t\tself.isCreateNew(false); \r\n\t\t\t\tself.isDropDownFocused(true);\t\t\t\t\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tctor.prototype.checkEscape = function(data, event){\r\n\t\t\tvar self = this;\r\n\t\t\tvar keyCode = event.which || event.keyCode;\r\n\t\t\tif(keyCode === 27){ //escape\t\t\t\t\r\n\t\t\t\tself.cancelChanges();\t//back to dropdown\t\t\t\t\r\n\t\t\t}\t\r\n\t\t}\r\n\t\t\r\n\t\tctor.prototype.getCustomValue = function(){\r\n\t\t\tvar self = this;\r\n\t\t\treturn self.newCustomValue? self.newCustomValue : self.selectedValue;\r\n\t\t}\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * \t@method activationData\r\n\t\t *  @param selectionLabel: string - the dropdown field label text.\r\n\t\t *  @param optionsLabel: css class name for the label (chsnsingle - label)\r\n\t\t *\t@param placeholderText: text for the field title tooltip.\r\n\t\t *  @param selectedValue: observable-string/object - to bind the selected value or the new text value. \r\n\t\t *\t@param optionTextProp: string - the property of the option object that holds the text to be presented.\r\n\t\t *\t@param optionIdValueProp: string - property name: if the selected value needs to be the value of a property of the option and not all the option object. \r\n\t\t *  @param AddNewOptionText: the add new option text will be added as an option to the dropdown. \r\n\t\t *              once selected, it will turn to a text box and remove the selection from the dom.\r\n\t\t *\t@param isAddNewOption: boolean. if true: the \"Add New\" option will be automatically added to the selectOptions.\r\n\t\t *\t\t\t\tif false: the \"Add New\" option will not be added. it is assumed that the option is already in the given selectOptions.\r\n\t\t *\t\t\t\tintention: use false when the options are breeze entities, and \"add new\" option is already there.\r\n\t\t *\t\t\t\t\t\t\tuse true when the options are just plain string array and \"add new\" is not given in it.\r\n\t\t *  @param isCreateNew: observable- bool - bind the state of the control so the parent will be aware of it.\r\n\t\t *              note: when creating a new option the medication.edit screen state gets notified. \r\n\t\t *              this allows it to call initialize for creating a new medicationMap record and attach the id as familyId on the patientMedication.\r\n\t\t *\t@param isEditModeOnly: observable/ not - bool optional: true: to lock the control showing only in edit mode.\r\n\t\t *\t\t\t\t\t\t\texample usage: rote/form/strength show as edit box in a new medication. with isEditModeOnly()=true - the cancel/escape will not turn it into dropdown.\r\n\t\t *  @param isCreateNewEnabled: observable / not observable - bool - bind to allow the parent module to control the creation of the \"add new\" option as necessary.\r\n\t\t *              note: in medication - if no medication is selected the control should be disabled.\r\n\t\t *  @param isEnabled: lets the parent module enable/disable this control.\r\n\t\t *  @param selectOptions: accepting an observable array for dropdown options - each option object has {Text, Value}\r\n\t\t *              note: this module will automatically add the AddNewOptionText option.\r\n\t\t *\t@param newCustomValue: an observable to keep/send the custom new added value to the containing parent for saving.\r\n\t\t *\t\t\t\t\tits optional to set this parameter - and only needed when the selectOptions are breeze entities.\r\n\t\t * \r\n\t\t*/\r\n        ctor.prototype.activate = function (settings) {        \t\r\n            var self = this;\r\n            //activationData:\r\n            self.selectionLabel = settings.selectionLabel;\r\n            self.optionsLabel = settings.optionsLabel;\r\n            self.placeholderText = settings.placeholderText;\r\n            self.selectedValue = settings.selectedValue;\r\n\t\t\tself.optionTextProp = settings.optionTextProp? settings.optionTextProp : 'Text';\r\n\t\t\tself.optionIdValueProp = settings.optionIdValueProp? settings.optionIdValueProp : null;\r\n            self.AddNewOptionText = settings.AddNewOptionText;\r\n\t\t\tself.isAddNewOption = settings.isAddNewOption;\r\n            self.isCreateNew = settings.isCreateNew;\r\n            self.isCreateNewEnabled = settings.isCreateNewEnabled;\r\n            self.isEnabled = settings.isEnabled;            \r\n            self.selectOptions = settings.selectOptions;\t\t\t\r\n\t\t\tself.newCustomValue = settings.newCustomValue? settings.newCustomValue : null;\r\n\t\t\tself.isSearch = true;\r\n\t\t\tself.isEditModeOnly = settings.isEditModeOnly? settings.isEditModeOnly : ko.observable(false);\r\n            //\r\n\t\t\t\r\n\t\t\tself.searchQueryText = ko.observable(); //get the typed search query from chosen search input\r\n\t\t\tself.isFocused = ko.observable();\t\t\t\r\n\t\t\tself.isDropDownFocused = ko.observable();\r\n\t\t\tself.getSelectedValueText = function(){\t\t\t\t\r\n\t\t\t\tvar text = '';\r\n\t\t\t\tif(self.selectedValue() && self.selectedValue().hasOwnProperty(self.optionTextProp)){\r\n\t\t\t\t\t//the selected value is an object\r\n\t\t\t\t\ttext = self.selectedValue()[self.optionTextProp]();\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttext = self.selectedValue();\r\n\t\t\t\t}\r\n\t\t\t\treturn text;\r\n\t\t\t}\r\n\t\t\t\r\n            var addNewOption = {};\r\n\t\t\taddNewOption[self.optionTextProp] = self.AddNewOptionText;\r\n\t\t\taddNewOption.Value = self.AddNewOptionText;\r\n\t\t\taddNewOption.id = -1;\t\t\t\r\n\t\t\t\r\n            //add \"add new\" option:\r\n            self.addNewOptionToSelection = function() {\r\n\t\t\t\tif(self.isAddNewOption){\r\n\t\t\t\t\tif( self.selectOptions && ko.utils.arrayIndexOf(self.selectOptions(), addNewOption) === -1){\r\n\t\t\t\t\t\tif(self.isCreateNewEnabled()){\r\n\t\t\t\t\t\t\tself.selectOptions.push(addNewOption);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            }\r\n\r\n            //listener: when the dropdown options populates - add the \"add new\" option if it is allowed:\r\n            var opToken = settings.selectOptions.subscribe(function(newValue){            \t\r\n            \tif(self.selectOptions() ){\r\n                    self.addNewOptionToSelection();\r\n\t            }\r\n            });\r\n\r\n            //if the dropdown options is already populated we may need to add the \"add new\" option right when activated:\r\n            if(self.selectOptions().length > 0){\r\n                self.addNewOptionToSelection();\r\n            } \r\n            subscriptionTokens.push(opToken);\r\n     \r\n            //when a selection is made - if the \"add new\" option is enabled and it was selected - change it to textbox:\r\n            var sbsToken = self.selectedValue.subscribe(function(newValue){            \t\r\n                if(self.isCreateNewEnabled()){\r\n\t\t\t\t\tvar newValueText = '';\r\n\t\t\t\t\tif(newValue && newValue.hasOwnProperty(self.optionTextProp)){\r\n\t\t\t\t\t\t//the selected value is an object\r\n\t\t\t\t\t\tnewValueText = newValue[self.optionTextProp]();\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tnewValueText = newValue;\r\n\t\t\t\t\t}\r\n                \tif(newValueText === self.AddNewOptionText){                \t\t\r\n                        if(self.isCreateNew){\r\n                            self.isCreateNew(true);  //change to text box \r\n\t\t\t\t\t\t\t//set the search query as the new custom value:\r\n\t\t\t\t\t\t\tvar query = self.searchQueryText? self.searchQueryText() : '';\t\r\n                            //delay the change since the selectedValue subscription may be still listening to its change. \r\n                            setTimeout(function(){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(self.selectedValue && !self.selectedValue.hasOwnProperty(self.optionTextProp)){\r\n\t\t\t\t\t\t\t\t\t//selectedValue, selectOptions are strings and not breeze objects.\r\n\t\t\t\t\t\t\t\t\t//in this case the selectedValue is used also as the custom value holder:\r\n\t\t\t\t\t\t\t\t\tself.selectedValue(query);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t//clear the selection (its \"-Add New\"- id = -1 for a short while)\r\n\t\t\t\t\t\t\t\t\tself.selectedValue(null);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, 5); \r\n\t\t\t\t\t\t\tif(self.newCustomValue) self.newCustomValue(query);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tself.isFocused(true);\r\n                        }                                                       \t\r\n                \t}\r\n                }\t\r\n            });\r\n            subscriptionTokens.push(sbsToken);\t\t\t\t\t\t\r\n        }\r\n\r\n        ctor.prototype.detached = function() {\r\n            \r\n            ko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n                token.dispose();\r\n            });\r\n        }\r\n\t\treturn ctor;\r\n\t});\n","define('viewmodels/patients/sections/focus.areas',['models/base', 'services/datacontext', 'services/session', 'viewmodels/shell/shell', 'viewmodels/patients/data/index'],\r\n    function (modelConfig, datacontext, session, shell, dataIndex) {\r\n\r\n        var ctor = function () {\r\n        };\r\n\r\n        ctor.prototype.alphabeticalSort = function (l, r) { return (l.name().toLowerCase() == r.name().toLowerCase()) ? (l.name().toLowerCase() > r.name().toLowerCase() ? 1 : -1) : (l.name().toLowerCase() > r.name().toLowerCase() ? 1 : -1) };\r\n        \r\n        function ModalEntity(patient) {\r\n            var self = this;\r\n            // TODO: Need to remove the modal from needing this property inherently\r\n            self.activeDataType = ko.observable();\r\n            self.selectedPatient = ko.observable(patient);\r\n            self.showDropdown = true;\r\n            self.showActions = false;\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { selectedPatient: self.selectedPatient, activeDataType: self.activeDataType, showDropdown: self.showDropdown, showActions: self.showActions };\r\n            // Create a computed property to subscribe to all of\r\n            // the patients' observations and make sure they are\r\n            // valid\r\n            self.canSave = ko.computed(function () {\r\n                var truthy = true;\r\n                var issaving = datacontext.observationsSaving();\r\n                var problemObservations = self.selectedPatient().observations();\r\n                if (problemObservations.length === 0) { truthy = false; }\r\n                ko.utils.arrayForEach(problemObservations, function (obs) {\r\n                    // If any of the observations that are problems are not valid,\r\n                    if (obs.type() && obs.type().name().toLowerCase() === 'problems' && !obs.isValid()) {\r\n                        // Set the bool to false\r\n                        truthy = false;\r\n                    }\r\n                });\r\n                // Also make sure we aren't already saving or initializing observations\r\n                if (datacontext.observationsSaving()) { truthy = false; }\r\n                return truthy;\r\n            });\r\n        }\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            //self.problems = settings.problems;\r\n            self.selectedPatient = settings.selectedPatient;\r\n            self.patientsObservations = self.selectedPatient.observations;\r\n            // Compute a list of the patients observations that are problems to display\r\n            self.problems = ko.computed(function () {\r\n                // Set a local variable to hold observations\r\n                var theseObservations = self.patientsObservations();\r\n                // Filter the array by - \r\n                var filteredObservations = ko.utils.arrayFilter(theseObservations, function (item) {\r\n                    // False by default\r\n                    var truthy = false;\r\n                    // If the observation has a type,\r\n                    if (item.type()) {\r\n                        // Check if it is a problem, don't want to hardcode but asked to do so\r\n                        if (item.type().name().toLowerCase() === 'problems') {\r\n                            // Check if the observation has a display and state\r\n                            // and if it is active and display primary or secondary (greater than 0)\r\n                            // and also make sure it isn't flagged for deletion : )\r\n                            truthy = (item.displayId() && item.state() && item.displayId() > 0 && item.state().name().toLowerCase() === 'active' && !item.deleteFlag()) ? true : false;\r\n                        }\r\n                    }\r\n                    return truthy;\r\n                });\r\n                return filteredObservations;\r\n            }).extend({ throttle: 15 });\r\n            self.isExpanded = ko.observable(false);\r\n            // Create a list of primary problems to display in the widget\r\n            self.primaryProblems = ko.computed(function () {\r\n                // Create an empty array to fill with problems\r\n                var theseProblems = [];\r\n                var searchProblems = self.problems().sort(self.alphabeticalSort);\r\n                // If not expanded limit to five\r\n                var limitToFive = (!self.isExpanded());\r\n                // Create a filtered list of problems,\r\n                ko.utils.arrayForEach(searchProblems, function (problem) {\r\n                    // If the observations display === 1 (primary),\r\n                    if (problem.display().id() === '1') {\r\n                        // If the length is less than 5 and it is not limited to 5 results,\r\n                        if (theseProblems.length < 5 || !limitToFive) {\r\n                            // Add it to the list of primary problems\r\n                            theseProblems.push(problem);\r\n                        }\r\n                    }\r\n                });\r\n                return theseProblems;\r\n            }).extend({ throttle: 15 });\r\n            // Create a list of secondary problems to display in the widget\r\n            self.secondaryProblems = ko.computed(function () {\r\n                // Create an empty array to fill with problems\r\n                var theseProblems = [];\r\n                var searchProblems = self.problems().sort(self.alphabeticalSort);\r\n                // If not expanded limit to five\r\n                var limitToFive = (!self.isExpanded());\r\n                // Create a filtered list of problems,\r\n                ko.utils.arrayForEach(searchProblems, function (problem) {\r\n                    // Where a problem level exists.  Need to change this to choose primary only later\r\n                    if (problem.display().id() === '2') {\r\n                        if (theseProblems.length < 5 || !limitToFive) {\r\n                            theseProblems.push(problem);\r\n                        }\r\n                    }\r\n                });\r\n                return theseProblems;\r\n            }).extend({ throttle: 15 });\r\n\r\n            self.focusProblemModalShowing = ko.observable(false);\r\n            self.saveProblemObservations = dataIndex.saveDataEntry;\r\n            // TODO: Fix this cancel also\r\n            self.cancelProblemObservations = function () {\r\n                // Make a list of the observation of type problem,\r\n                var problemObservations = ko.utils.arrayFilter(self.selectedPatient.observations(), function (item) {\r\n                    // If the observation has a type that is problem, add it to the list\r\n                    return (item.type() && item.type().name().toLowerCase() === 'problems');\r\n                });\r\n                var destroyThese = [];\r\n                // Go through the problem observations,\r\n                ko.utils.arrayForEach(problemObservations, function (obs) {\r\n                    // If the observation is new,\r\n                    if (obs.isNew()) {\r\n                        // Set it as deleted\r\n                        obs.deleteFlag(true);\r\n                        obs.entityAspect.acceptChanges();\r\n                        // Delete it from the manager\r\n                        destroyThese.push(obs);\r\n                    } else {\r\n                        // If not, reject it's changes\r\n                        obs.entityAspect.rejectChanges();\r\n                    }\r\n                });\r\n                while (destroyThese.length > 0) {\r\n                    var observation = destroyThese[0];\r\n                    observation.entityAspect.setDeleted();\r\n                    observation.entityAspect.acceptChanges();\r\n                    destroyThese.splice(0, 1);\r\n                };\r\n\r\n            }\r\n            self.modalEntity = ko.observable(new ModalEntity(self.selectedPatient));\r\n\t\t\t\r\n            self.isOpen = ko.observable(true);\r\n            self.isFullScreen = ko.observable(false);\r\n            self.toggleEditing = function () {\r\n\t\t\t\tvar modalSettings = {\r\n\t\t\t\t\ttitle: 'Focus Problems',\r\n\t\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\t\tentity: self.modalEntity, \r\n\t\t\t\t\ttemplatePath: 'viewmodels/templates/focusproblems', \r\n\t\t\t\t\tshowing: self.focusProblemModalShowing, \r\n\t\t\t\t\tsaveOverride: self.saveProblemObservations, \r\n\t\t\t\t\tcancelOverride: self.cancelProblemObservations,\r\n\t\t\t\t\tclassOverride: 'modal-lg'\r\n\t\t\t\t}\r\n\t\t\t\tself.modal = new modelConfig.modal(modalSettings);\r\n                shell.currentModal(self.modal);\r\n                self.focusProblemModalShowing(true);\r\n                self.isOpen(true);\r\n            };\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/goal.details',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/goals/index', 'viewmodels/shell/shell'],\r\n    function (modelConfig, servicesConfig, datacontext, session, goalsIndex, shell) {\r\n\r\n        var modalShowing = ko.observable(true);\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n            self.settings = settings;\r\n            self.goal = self.settings.activeGoal;\r\n            self.selectedPatient = goalsIndex.selectedPatient;\r\n            self.isFullScreen = ko.observable(false);\r\n            self.computedGoal = ko.computed(function () { return self.goal; }).extend({ throttle: 60 });\r\n            self.isGoalDetailsExpanded = ko.observable(false);\r\n            self.hasDetails = ko.computed( function(){\r\n                var details = self.goal() ? self.goal().details() : [];\r\n                return (details != null && details.length > 0);\r\n            });\r\n            self.toggleFullScreen = function () {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            };\r\n            self.toggleGoalDetailsExpanded = function(){\r\n                var isOpen = self.isGoalDetailsExpanded();\r\n                var details = self.goal().details();\r\n                if( !details && !isOpen ){\r\n                    return;\r\n                }\r\n                self.isGoalDetailsExpanded( !self.isGoalDetailsExpanded() );\r\n            }\r\n            self.edit = function () {\r\n                goalsIndex.editGoal(self.goal(), 'Edit Goal');\r\n            }\r\n            self.delete = function () {\r\n                var result = confirm('You are about to delete a goal.  Press OK to continue, or cancel to return without deleting.');\r\n                if (result === true) {\r\n                    datacontext.deleteGoal(self.goal());\r\n                    self.settings.activeGoal(null);\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            };\r\n            self.addBarrier = function (goal) {\r\n                goalsIndex.addEntity('Barrier', goal).then(doSomething);\r\n\r\n                function doSomething(barriers) {\r\n                    self.editBarrier(barriers, 'Add Barrier');\r\n                }\r\n            };\r\n            self.editBarrier = function (barrier, msg) {\r\n                var thisGoal = barrier.goal();\r\n                var modalEntity = ko.observable(new ModalEntity(barrier, 'name'));\r\n                var saveOverride = function () {\r\n                    saveBarrier(barrier);\r\n                };\r\n                var cancelOverride = function () {\r\n                    cancel(barrier);\r\n                    getGoalDetails(thisGoal);\r\n                };\r\n                msg = msg ? msg : 'Edit Barrier';\r\n                editEntity(msg, modalEntity, 'viewmodels/templates/barrier.edit', saveOverride, cancelOverride);\r\n            };\r\n        };\r\n\r\n        function save (goal) {\r\n            datacontext.saveGoal(goal);\r\n        }\r\n\r\n        function saveBarrier (barrier) {\r\n            barrier.checkAppend();\r\n            datacontext.saveBarrier(barrier);\r\n        }\r\n\r\n        function cancel(item) {\r\n            item.entityAspect.rejectChanges();\r\n        }\r\n\r\n        function getGoalDetails (goal) {\r\n            goalsIndex.getGoalDetails(goal, true);\r\n        };\r\n\r\n        function editEntity (msg, entity, path, saveoverride, canceloverride) {\r\n            var modalSettings = {\r\n                title: msg,\r\n                showSelectedPatientInTitle: true,\r\n                entity: entity,\r\n                templatePath: path,\r\n                showing: modalShowing,\r\n                saveOverride: saveoverride,\r\n                cancelOverride: canceloverride\r\n            }\r\n            var modal = new modelConfig.modal(modalSettings);\r\n            modalShowing(true);\r\n            shell.currentModal(modal);\r\n        }\r\n\r\n        function ModalEntity(entity) {\r\n            var self = this;\r\n            self.entity = entity;\r\n            self.activationData = { entity: self.entity };\r\n            self.canSave = ko.computed(function () {\r\n                var result = self.entity.isValid();\r\n                return result;\r\n            });\r\n        }\r\n\r\n        ctor.prototype.detached = function() {\r\n            var self = this;\r\n            self.hasDetails.dispose();\r\n            self.computedGoal.dispose();\r\n        }\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/goals',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/goals/index', 'viewmodels/shell/shell', 'durandal/activator'],\r\n    function (modelConfig, servicesConfig, datacontext, session, goalsIndex, shell, activator) {\r\n\r\n        var modalShowing = ko.observable(true);\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.token = {};\r\n            self.selectedPatientChanged = false;\r\n        };\r\n\r\n        ctor.prototype.deactivate = function () {\r\n            var self = this;\r\n            self.token.dispose();\r\n            self.computedGoals.dispose();\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.activeGoal = settings.activeGoal;\r\n            self.activeTask = settings.activeTask;\r\n            self.activeIntervention = settings.activeIntervention;\r\n            self.goalsSortTwo = function (l, r) {\r\n                var p1 = l.status().order();\r\n                var p2 = r.status().order();\r\n\r\n                var o1 = l.name().toLowerCase();\r\n                var o2 = r.name().toLowerCase();\r\n\r\n                if (p1 != p2) {\r\n                    if (p1 < p2) return -1;\r\n                    if (p1 > p2) return 1;\r\n                    return 0;\r\n                }\r\n                if (o1 < o2) return -1;\r\n                if (o1 > o2) return 1;\r\n                return 0;\r\n            };\r\n            self.settings = settings;\r\n            self.selectedPatient = goalsIndex.selectedPatient;\r\n            self.token = self.selectedPatient.subscribe(function () {\r\n                self.selectedPatientChanged = true;\r\n                self.deactivate();\r\n            });\r\n            self.statusIds = self.settings.statusIds;\r\n            self.emptyMessage = self.settings.emptyMessage ? self.settings.emptyMessage : 'No goals defined for the individual.';\r\n            self.sortOverride = self.settings.sortOverride ? self.settings.sortOverride : self.goalsSortTwo;\r\n            self.computedGoals = ko.computed({\r\n                read: function () {\r\n                    var theseGoals = ko.utils.arrayFilter(self.selectedPatient().goals(), function (thisGoal) {\r\n                        return !thisGoal.isNew() && self.statusIds.indexOf(thisGoal.statusId()) !== -1;\r\n                    });\r\n                    ko.utils.arrayForEach(theseGoals, function (goal) {\r\n                        if (!goal.isExpanded) {\r\n                            goal.isExpanded = ko.observable(false);\r\n                            goal.isOpen = ko.observable(false);\r\n                        }\r\n                        if (!goal.isNew()) {\r\n                            getGoalDetails(goal);\r\n                        }\r\n                    });\r\n                    if (theseGoals.length > 0) {\r\n                        theseGoals = theseGoals.sort(self.sortOverride);\r\n                    }\r\n                    return theseGoals;\r\n                },\r\n                disposeWhen: function () {\r\n                    return self.selectedPatientChanged;\r\n                }\r\n            }).extend({ throttle: 50 });\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n            self.addTask = function (goal) {\r\n                var startDate = new Date(moment().format('MM/DD/YYYY'));\r\n                self.addEntity('Task', goal, startDate).then(doSomething);\r\n\r\n                function doSomething(task) {\r\n                    self.editTask(task, 'Add Task');\r\n                }\r\n            };\r\n            self.addIntervention = function (goal) {\r\n                var startDate = new Date(moment().format('MM/DD/YYYY'));\r\n                self.addEntity('Intervention', goal, startDate, session.currentUser().userId()).then(doSomething);\r\n\r\n                function doSomething(intervention) {\r\n                    intervention.isNew(true);\r\n                    intervention.watchDirty();\r\n                    self.editIntervention(intervention, 'Add Intervention');\r\n                }\r\n            };\r\n            self.editIntervention = function (intervention, msg) {\r\n                var thisGoal = intervention.goal();\r\n                var modalEntity = ko.observable(new ModalEntity(intervention, 'description'));\r\n                var saveOverride = function () {\r\n                    saveIntervention(intervention);\r\n                    thisGoal.isOpen(false);\r\n                    thisGoal.isOpen(true);\r\n                };\r\n                var cancelOverride = function () {\r\n                    datacontext.cancelEntityChanges(intervention);\r\n                    getGoalDetails(thisGoal);\r\n                };\r\n                msg = msg ? msg : 'Edit Intervention';\r\n                editEntity(msg, modalEntity, 'viewmodels/templates/intervention.edit', saveOverride, cancelOverride);\r\n            };\r\n            self.editTask = function (task, msg) {\r\n                var thisGoal = task.goal();\r\n                var modalEntity = ko.observable(new ModalEntity(task, 'description'));\r\n                var saveOverride = function () {\r\n                    saveTask(task);\r\n                    thisGoal.isOpen(false);\r\n                    thisGoal.isOpen(true);\r\n                };\r\n                var cancelOverride = function () {\r\n                    datacontext.cancelEntityChanges(task);\r\n                    getGoalDetails(thisGoal);\r\n                };\r\n                msg = msg ? msg : 'Edit Task';\r\n                editEntity(msg, modalEntity, 'viewmodels/templates/task.edit', saveOverride, cancelOverride);\r\n            };\r\n        };\r\n\r\n        ctor.prototype.toggleExpand = function (sender) {\r\n            sender.isExpanded(!sender.isExpanded());\r\n            if (!sender.isOpen()) {\r\n                sender.isOpen(true);\r\n            }\r\n        };\r\n\r\n        ctor.prototype.setActiveGoal = function (goal) {\r\n            this.activeGoal(goal);\r\n            this.activeTask(null);\r\n            this.activeIntervention(null);\r\n        };\r\n\r\n        ctor.prototype.setActiveTask = function (task) {\r\n            this.activeTask(task);\r\n            this.activeGoal(null);\r\n            this.activeIntervention(null);\r\n        };\r\n\r\n        ctor.prototype.setActiveIntervention = function (intervention) {\r\n            this.activeIntervention(intervention);\r\n            this.activeGoal(null);\r\n            this.activeTask(null);\r\n        };\r\n\r\n        ctor.prototype.addEntity = function (type, goal, startDate, assignedToId) {\r\n            var self = this;\r\n            var thisPatientId = self.selectedPatient().id();\r\n            var thisGoalId = goal.id();\r\n            return datacontext.initializeEntity(null, type, thisPatientId, thisGoalId).then(entityReturned);\r\n\r\n            function entityReturned(data) {\r\n                var thisId = data.httpResponse.data.Id;\r\n                if (thisId) {\r\n                    var params = {};\r\n                    params.id = thisId;\r\n                    params.patientGoalId = thisGoalId;\r\n                    params.statusId = 1;\r\n                    if (startDate) {\r\n                        params.startDate = startDate;\r\n                    }\r\n                    if (assignedToId) {\r\n                        params.assignedToId = assignedToId;\r\n                    }\r\n                    var thisEntity = datacontext.createEntity(type, params);\r\n                    return thisEntity;\r\n                }\r\n                else {\r\n                    var thisTask = data.results[0];\r\n                    thisTask.startDate(new Date(moment().format('MM/DD/YYYY')));\r\n                    thisTask.statusId(1);\r\n                    thisTask.patientGoalId(thisGoalId);\r\n                    return thisTask;\r\n                }\r\n            }\r\n        };\r\n\r\n        return ctor;\r\n\r\n        function editEntity (msg, entity, path, saveoverride, canceloverride) {\r\n            var modalSettings = {\r\n              title: msg,\r\n              showSelectedPatientInTitle: true,\r\n              entity: entity,\r\n              templatePath: path,\r\n              showing: modalShowing,\r\n              saveOverride: saveoverride,\r\n              cancelOverride: canceloverride,\r\n              deleteOverride: null,\r\n              classOverride: null\r\n            };\r\n            var modal = new modelConfig.modal(modalSettings);\r\n            modalShowing(true);\r\n            shell.currentModal(modal);\r\n        }\r\n\r\n        function save(goal) {\r\n            datacontext.saveGoal(goal);\r\n        }\r\n\r\n        function saveIntervention (entity) {\r\n            entity.isNew(false);\r\n            datacontext.saveIntervention(entity);\r\n        }\r\n\r\n        function saveTask (entity) {\r\n            datacontext.saveTask(entity);\r\n        }\r\n\r\n        function saveGoal (entity) {\r\n            datacontext.saveGoal(entity);\r\n        }\r\n\r\n        function cancel(item) {\r\n            item.entityAspect.rejectChanges();\r\n        }\r\n\r\n        function getGoalDetails (goal) {\r\n            goalsIndex.getGoalDetails(goal);\r\n        }\r\n\r\n        function ModalEntity(entity, reqpropname) {\r\n            var self = this;\r\n            self.entity = entity;\r\n            self.activationData = { entity: self.entity };\r\n            self.canSave = ko.computed(function () {\r\n                var result = self.entity.isValid();\r\n                return result;\r\n            });\r\n        }\r\n\r\n    });\n","define('viewmodels/patients/sections/intervention.details',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/goals/index', 'viewmodels/shell/shell'],\r\n    function (modelConfig, servicesConfig, datacontext, session, goalsIndex, shell) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        var modalShowing = ko.observable(true);\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n            self.settings = settings;\r\n            self.intervention = self.settings.activeIntervention;\r\n            self.isFullScreen = ko.observable(false);\r\n            self.isDetailsExpanded = ko.observable(false);\r\n            self.hasDetails = ko.computed( function(){\r\n                var details = self.intervention() ? self.intervention().details() : [];\r\n                return (details != null && details.length > 0);\r\n            });\r\n            self.toggleFullScreen = function () {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            };\r\n            self.toggleDetailsExpanded = function(){\r\n                var isOpen = self.isDetailsExpanded();\r\n                var details = self.intervention().details();\r\n                if( !details && !isOpen ){\r\n                    return;\r\n                }\r\n                self.isDetailsExpanded( !self.isDetailsExpanded() );\r\n            };\r\n\r\n            self.addBarrier = function (intervention) {\r\n                goalsIndex.addEntity('Barrier', intervention.goal()).then(doSomething);\r\n\r\n                function doSomething(barrier) {\r\n                    var newBarrierId = datacontext.createComplexType('Identifier', { id: barrier.id() });\r\n                    self.intervention().barrierIds().push(newBarrierId);\r\n                    self.editBarrier(barrier, 'Add Barrier');\r\n                }\r\n            };\r\n\r\n            self.editBarrier = function (barrier, msg) {\r\n                var thisGoal = barrier.goal();\r\n                var modalEntity = ko.observable(new ModalEntity(barrier, 'name'));\r\n                var saveOverride = function () {\r\n                    saveBarrier(barrier)\r\n                    saveIntervention(self.intervention());\r\n                };\r\n                var cancelOverride = function () {\r\n                    cancel(barrier);\r\n                    cancel(self.intervention());\r\n                    getGoalDetails(thisGoal);\r\n                };\r\n                msg = msg ? msg : 'Edit Barrier';\r\n                editEntity(msg, modalEntity, 'viewmodels/templates/barrier.edit', saveOverride, cancelOverride);\r\n            };\r\n\r\n\r\n            self.editIntervention = function (intervention) {\r\n                getGoalDetails(intervention.goal());\r\n                var modalEntity = ko.observable(new ModalEntity(intervention, 'description'));\r\n                var saveOverride = function () {\r\n                    saveIntervention(intervention);\r\n                };\r\n                var cancelOverride = function () {\r\n                    intervention.clearDirty();\r\n                    cancel(intervention);\r\n                    getGoalDetails(intervention.goal());\r\n                };\r\n                editEntity('Edit Intervention', modalEntity, 'viewmodels/templates/intervention.edit', saveOverride, cancelOverride);\r\n            };\r\n            self.deleteIntervention = function (intervention) {\r\n                var result = confirm('You are about to delete an intervention.  Press OK to continue, or cancel to return without deleting.');\r\n                if (result === true) {\r\n                    var thisGoal = intervention.goal();\r\n                    intervention.entityAspect.rejectChanges();\r\n                    intervention.deleteFlag(true);\r\n                    datacontext.saveIntervention(intervention).then(saveCompleted);\r\n                    self.settings.activeIntervention(null);\r\n\r\n                    function saveCompleted () {\r\n                        if (intervention && intervention.goal()) {\r\n                            intervention.goal().interventions.remove(intervention);\r\n                        }\r\n                        if (intervention && intervention.patientGoalId) {\r\n                            intervention.patientGoalId(null);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            };\r\n        };\r\n\r\n        function editEntity (msg, entity, path, saveoverride, canceloverride) {\r\n            var modalSettings = {\r\n                title: msg,\r\n                showSelectedPatientInTitle: true,\r\n                entity: entity,\r\n                templatePath: path,\r\n                showing: modalShowing,\r\n                saveOverride: saveoverride,\r\n                cancelOverride: canceloverride,\r\n                deleteOverride: null,\r\n                classOverride: null\r\n            }\r\n            var modal = new modelConfig.modal(modalSettings);\r\n            modalShowing(true);\r\n            shell.currentModal(modal);\r\n        }\r\n\r\n        function saveBarrier (barrier) {\r\n            barrier.checkAppend();\r\n            datacontext.saveBarrier(barrier);\r\n        }\r\n\r\n        function saveIntervention(intervention) {\r\n            function saved(){\r\n                intervention.clearDirty();\r\n            }\r\n            intervention.checkAppend();\r\n            datacontext.saveIntervention(intervention).then(saved);\r\n        }\r\n\r\n        function cancel (item) {\r\n            item.entityAspect.rejectChanges();\r\n        }\r\n\r\n        return ctor;\r\n\r\n        function getGoalDetails(goal) {\r\n            goalsIndex.getGoalDetails(goal, true);\r\n        }\r\n\r\n        function ModalEntity(entity) {\r\n            var self = this;\r\n            self.entity = entity;\r\n            self.activationData = { entity: self.entity };\r\n\r\n            self.canSave = ko.computed(function () {\r\n                var result = self.entity.isValid();\r\n                return result;\r\n            });\r\n        }\r\n\r\n    });\n","define('viewmodels/patients/sections/medication.details',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/medications/index', 'viewmodels/shell/shell'],\n  function (modelConfig, servicesConfig, datacontext, session, medicationsIndex, shell) {\n\n    var modalShowing = ko.observable(true);\n\n    var ctor = function () {\n      var self = this;\n    };\n\n    ctor.prototype.activate = function (settings) {\n      var self = this;\n      self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\n      self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\n      self.settings = settings;\n      self.medication = self.settings.activeMedication;\n      self.selectedPatient = medicationsIndex.selectedPatient;\n      self.isFullScreen = ko.observable(false);\n      self.toggleFullScreen = function () {\n        self.isFullScreen(!self.isFullScreen());\n      };\n      self.edit = function () {\n        var isEditable = self.medication().dataSource() === 'Engage';\n        if (isEditable) {\n            medicationsIndex.editMedication(self.medication(), 'Edit Medication');\n        }\n      }\n      self.isNotesExpanded = ko.observable(false);\n      self.delete = function () {\n        var isEditable = self.medication().dataSource() === 'Engage';\n        if (isEditable) {\n            var result = confirm('You are about to delete a medication.  Press OK to continue, or cancel to return without deleting.');\n            if (result === true) {\n              datacontext.deletePatientMedication(self.medication());\n              self.settings.activeMedication(null);\n            }\n            else {\n              return false;\n            }\n        }\n      };\n      self.createdString = ko.computed(function () {\n        var result = '';\n        var medication = self.medication();\n        if (!medication) {\n            return '';\n        }\n        // var createdBy = medication.createdBy();\n        var createdOn = medication.createdOn();\n        // result += createdBy ? createdBy : '';\n        result += createdOn ? createdOn + ' on ' : '';\n        return result;\n      });\n      self.updatedString = ko.computed(function () {\n        var result = '';\n        if (!medication) {\n            return '';\n        }\n        var medication = self.medication();\n        // var updatedBy = medication.updatedBy();\n        var updatedOn = medication.updatedOn();\n        // result += updatedBy ? updatedBy : '';\n        result += updatedOn ? updatedOn + ' on ' : '';\n        return result;\n      });\n    };\n\n    function save (medication) {\n      datacontext.saveMedication(medication);\n    }\n\n    function cancel(item) {\n      item.entityAspect.rejectChanges();\n    }\n\n    function getMedicationDetails (medication) {\n      medicationsIndex.getMedicationDetails(medication, true);\n    };\n\n    function editEntity (msg, entity, path, saveoverride, canceloverride) {\n      var modalSettings = {\n        title: msg,\n        showSelectedPatientInTitle: true,\n        entity: entity,\n        templatePath: path,\n        showing: modalShowing,\n        saveOverride: saveoverride,\n        cancelOverride: canceloverride\n      }\n      var modal = new modelConfig.modal(modalSettings);\n      modalShowing(true);\n      shell.currentModal(modal);\n    }\n\n    function ModalEntity(entity) {\n      var self = this;\n      self.entity = entity;\n      self.activationData = { entity: self.entity };\n      self.canSave = ko.computed(function () {\n        var result = self.entity.isValid();\n        return result;\n      });\n    }\n\n    ctor.prototype.detached = function() {\n      var self = this;\n    }\n    return ctor;\n  });\n\n","/**\r\n * medication.edit manages patientMedication (add/edit) and also adding a new medication (medicationMap).\r\n * notes:\r\n *\t\t1. the medication name is also used as a typeahead search and this needs to be changed when we will have to redesign for\r\n *\t\t\tadding multiple medications. the preffered design is to follow allergies so that the search box is a separate tool\r\n *\t\t\tand not part of the med record binding.\r\n *\r\n * @module medication.edit\r\n * @class medication.edit\r\n */\r\n\r\ndefine('viewmodels/patients/sections/medication.edit',['models/base', 'config.services', 'services/datacontext', 'services/session'],\r\n    function (models, servicesConfig, datacontext, session) {\r\n\r\n    var subscriptionTokens= [];\r\n    var newMedPostfix = ' (New)';\r\n\r\n\t//screen state management:\r\n\tvar screenModes = {\r\n\t\tNoMedSelected: 'NoMedSelected',\r\n\t\tMedSelected: 'MedSelected',\r\n\t\tAddNewMed: 'AddNewMed',\r\n\t\tAddNewMedValues: 'AddNewMedValues'\r\n\t};\r\n\r\n    // Create an end point to use\r\n    var endpoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Search/Meds/ProprietaryNames', 'PatientMedication');\r\n\r\n    function DropDownValue (val, id) {\r\n      var self = this;\r\n      self.Text = val;\r\n\t  if(id){\r\n\t\tself.Value = id;\r\n\t  }\r\n\t  else{\r\n\t\tself.Value = val;\r\n\t  }\r\n    }\r\n\r\n    var ctor = function () {\r\n      var self = this;\r\n      self.dosageForms = ko.observableArray();\r\n      self.strengths = ko.observableArray();\r\n      self.units = ko.observableArray();\r\n      self.routes = ko.observableArray();\r\n\t  self.frequency = ko.observableArray();\r\n\r\n      self.checkForDropdownValues = function (med) {\r\n        // Check if each of the dropdowns have values that can be set to prevent nulling the values when empty\r\n        // If they are empty add the value as a possible value\r\n        if (self.dosageForms.peek().length === 0 && med && med.form.peek()) {\r\n          self.dosageForms([new DropDownValue(med.form.peek())]);\r\n        }\r\n        if (self.strengths.peek().length === 0 && med && med.strength.peek()) {\r\n          self.strengths([new DropDownValue(med.strength.peek())]);\r\n        }\r\n        if (self.routes.peek().length === 0 && med && med.route.peek()) {\r\n          self.routes([new DropDownValue(med.route.peek())]);\r\n        }\r\n      };\r\n    };\r\n\r\n    //ctor.prototype.freqHowOftens = ko.computed(datacontext.enums.freqHowOftens);\t//old freq options\r\n\r\n    ctor.prototype.freqWhens = ko.computed(datacontext.enums.freqWhens);\r\n    ctor.prototype.sources = ko.computed(datacontext.enums.allergySources);\r\n    ctor.prototype.types = ko.computed(datacontext.enums.medSuppTypes);\r\n    ctor.prototype.categories = ko.computed(datacontext.enums.medicationCategories);\r\n    ctor.prototype.statuses = ko.computed(datacontext.enums.medicationStatuses);\r\n    ctor.prototype.durationUnits = ko.computed(datacontext.enums.durationUnits);\r\n    ctor.prototype.refusalReasons = ko.computed(datacontext.enums.refusalReasons);\r\n    ctor.prototype.medicationReviews = ko.computed(datacontext.enums.medicationReviews);\r\n\r\n    ctor.prototype.removeMedication = function (sender) {\r\n      sender.entityAspect.rejectChanges();\r\n      sender.deleteFlag(true);\r\n    };\r\n\tctor.prototype.getFrequencyOptions = function (frequencies, selectedPatient){\r\n\t\treturn datacontext.getPatientFrequencies(frequencies, selectedPatient().id());\r\n\t}\r\n    ctor.prototype.activate = function (settings) {\r\n      var self = this;\r\n      self.settings = settings;\r\n      self.initialized = false;\r\n\t  self.lastMedName = '';\r\n      self.selectedPatient = self.settings.selectedPatient;\r\n      // Passed in medication\r\n      self.medication = self.settings.medication;\r\n      self.showing = ko.computed({\r\n        read: function () { return true; },\r\n      });\r\n      self.getFrequencyOptions(self.frequency, self.selectedPatient);\r\n\t  self.isCreateNewFrequencyEnabled = ko.observable(true);\r\n\r\n      /**\r\n       * computed - get/observe the new medication model object for this patient\r\n       *\r\n       * @method newPatientMedication\r\n       * @return {Object} the new patient medication for this screen\r\n       */\r\n      self.newPatientMedication = ko.computed({\r\n        read: function () {\r\n\r\n          // if a medication gets passed in, use that\r\n          if (self.medication && self.medication()) {\r\n            self.checkForDropdownValues(self.medication());\r\n            return self.medication();\r\n          } else {\r\n            // Else use the patients medications to find one\r\n            var patientMedications = self.selectedPatient().medications();\r\n            // Filter the list only to patientMedications that are new\r\n            var filteredPatMed = ko.utils.arrayFirst(patientMedications, function (item) {\r\n              // If the item has a type, return if it matches problem, else if there is no type return false\r\n              return !item.deleteFlag.peek() && item.isNew.peek();\r\n            });\r\n            self.checkForDropdownValues(filteredPatMed);\r\n            return filteredPatMed;\r\n          }\r\n        }\r\n      }).extend({ throttle: 50 });\r\n\r\n\r\n      // The selected observation\r\n      self.trimmedMedication = ko.computed({\r\n        read: function () {\r\n          var thismed = self.newPatientMedication;\r\n          if (thismed()) {\r\n            return thismed().name();\r\n          } else {\r\n            return '';\r\n          }\r\n        }\r\n      }).extend({ throttle: 75 });\r\n\r\n\t  self.trimmedForm = ko.computed({\r\n        read: function () {\r\n          var thismed = self.newPatientMedication;\r\n          if (thismed() && thismed().form()) {\r\n            return thismed().form();\r\n          } else {\r\n            return '';\r\n          }\r\n        }\r\n      }).extend({ throttle: 75 });\r\n\r\n\t  self.trimmedStrength = ko.computed({\r\n        read: function () {\r\n          var thismed = self.newPatientMedication;\r\n          if (thismed() && thismed().strength()) {\r\n            return thismed().strength();\r\n          } else {\r\n            return '';\r\n          }\r\n        }\r\n      }).extend({ throttle: 75 });\r\n\r\n      self.trimmedRoute = ko.computed({\r\n        read: function () {\r\n          var thismed = self.newPatientMedication;\r\n          if (thismed() && thismed().route()) {\r\n            return thismed().route();\r\n          } else {\r\n            return '';\r\n          }\r\n        }\r\n      }).extend({ throttle: 75 });\r\n\r\n      self.showOtherReason = ko.computed({\r\n        read: function () {\r\n          var thismed = self.newPatientMedication;\r\n          if (thismed() && thismed().refusalReason()) {\r\n            return thismed().refusalReason().name() === 'Other';\r\n          } else {\r\n            if (thismed()) {\r\n              thismed().otherRefusalReason(null);\r\n            }\r\n            return false;\r\n          }\r\n        }\r\n      }).extend({ throttle: 75 });\r\n\r\n      self.showRefusalReason = ko.computed({\r\n        read: function () {\r\n          var thismed = self.newPatientMedication;\r\n          if (thismed() && thismed().status()) {\r\n            var statusName = thismed().status().name();\r\n            var result = (statusName === 'Refused' || statusName === 'Not Done Medical');\r\n            if (!result) {\r\n              thismed().otherRefusalReason(null);\r\n              thismed().refusalReasonId(null);\r\n            }\r\n            return result;\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n      });\r\n\r\n      self.resultsMessage = ko.observable('');\r\n      if (self.medication && !self.medication()) {\r\n        // Initialize this widget\r\n        self.initializeMedSearch();\r\n      }\r\n\r\n\t  self.isDuplicate = ko.observable(false);\r\n\t  self.isAddingNewRouteValue = ko.observable(false);\r\n      self.isAddingNewFormValue = ko.observable(false);\r\n      self.isAddingNewStrengthValue = ko.observable(false);\r\n\t  self.isAddingNewFrequencyValue = ko.observable(false);\r\n      self.isCreateNewEnabled = ko.observable(false);\r\n      self.isDropdownEnabled = ko.observable(false);\r\n\t  self.isNewMedicationName = ko.observable(false);\r\n\r\n\t\t/**\r\n\t\t*\tcomputed. to allow forcing the datetimepicker control to set the start date as invalid.\r\n\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t*\t@method setInvalidStartDate\r\n\t\t*/\r\n\t  self.setInvalidStartDate = ko.computed( function(){\r\n\t\t\treturn (!self.newPatientMedication() || self.newPatientMedication() && self.newPatientMedication().validationErrorsArray().indexOf('startDate') !== -1);\r\n\t  });\r\n      self.setInvalidPrescribedDate = ko.computed( function(){\r\n            return (!self.newPatientMedication() || self.newPatientMedication() && self.newPatientMedication().validationErrorsArray().indexOf('prescribedDate') !== -1);\r\n      });\r\n      self.setInvalidOrderedDate = ko.computed( function(){\r\n            return (!self.newPatientMedication() || self.newPatientMedication() && self.newPatientMedication().validationErrorsArray().indexOf('orderedDate') !== -1);\r\n      });\r\n      self.setInvalidRxDate = ko.computed( function(){\r\n            return (!self.newPatientMedication() || self.newPatientMedication() && self.newPatientMedication().validationErrorsArray().indexOf('rxDate') !== -1);\r\n      });\r\n\t\t/**\r\n\t\t*\tcomputed. to allow forcing the datetimepicker control to set the end date as invalid.\r\n\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t*\t@method setInvalidEndDate\r\n\t\t*/\r\n\t  self.setInvalidEndDate = ko.computed( function(){\r\n\t\t\treturn (!self.newPatientMedication() || self.newPatientMedication() && self.newPatientMedication().validationErrorsArray().indexOf('endDate') !== -1);\r\n\t  });\r\n\r\n\t  if( self.newPatientMedication() && self.newPatientMedication().name() && self.newPatientMedication().canSave() ){\r\n\t\t//a med is selected, going back to medications screen\r\n\t\tself.lastMedName = self.newPatientMedication().name();\r\n\t\tself.screenMode = ko.observable(screenModes.MedSelected);\r\n\t  }\r\n\t  else{\r\n\t\tself.lastMedName = '';\r\n\t\tself.screenMode = ko.observable(screenModes.NoMedSelected);\r\n\t  }\r\n\r\n      /**\r\n       * computed - controls if the save will skip and ignor or call the api services\r\n       * the value tracks the screen mode and will allow saving only if a medication\r\n       * (new or existing) was selected from the typeahead medication name suggestions.\r\n       *\r\n       * @method canAdd\r\n       * @return boolean\r\n       */\r\n      self.canAdd = ko.computed({\r\n        read: function () {\r\n\r\n          var thisValue = false;\r\n          var medSaving = datacontext.medicationSaving();\r\n          var trimMed = self.trimmedMedication();\r\n          var patientmedications = self.selectedPatient().medications();\r\n\t\t  var mode = self.screenMode;\r\n\t\t  var isDup = self.isDuplicate();\r\n\r\n          // If a value has been selected,\r\n          if (trimMed) {\r\n              thisValue = true;\r\n          }\r\n          if(mode && mode() == screenModes.NoMedSelected){\r\n              thisValue = false;  //dont save if no medication selected or if not in add new mode\r\n          }\r\n          else{\r\n            thisValue = true;\r\n          }\r\n          // If med is already saving, return false\r\n          if (medSaving) { thisValue = false; }\r\n          if (self.newPatientMedication.peek()) {\r\n            if(isDup){\r\n                thisValue = false;\r\n            }\r\n            self.newPatientMedication().canSave(thisValue);\r\n          }\r\n          return thisValue;\r\n        }\r\n      }).extend({ throttle: 200 });\r\n\r\n\t  self.medicationBloodhound = new Bloodhound({\r\n        datumTokenizer: function (d) {\r\n          return Bloodhound.tokenizers.whitespace(d.name());\r\n        },\r\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n        limit: 17,\r\n        remote: {\r\n          url: servicesConfig.remoteServiceName + '/' + endpoint.ResourcePath,\r\n          replace: function (url, query) {\r\n            searchQuery = query;\r\n            return url + '?Take=15&Term=' + searchQuery;\r\n          },\r\n          ajax: {\r\n            beforeSend: function (jqXhr, settings) {\r\n              jqXhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n              jqXhr.setRequestHeader('Token', session.currentUser().aPIToken());\r\n            },\r\n            type: 'GET'\r\n          },\r\n          // Filter out what is returned from the database\r\n          filter: function (parsedResponse) {\r\n            // If there is a message returned (such as 15 of 1205 results),\r\n            if (parsedResponse.Message) {\r\n              self.resultsMessage('');\r\n              // Set it as the results message\r\n              self.resultsMessage(parsedResponse.Message);\r\n            } else {\r\n              // Else clear it\r\n              self.resultsMessage('');\r\n            }\r\n            self.medicationBloodhound.clear();\r\n            var selectedmedication = self.trimmedMedication().trim();\t//full trim the typed value\r\n            self.newPatientMedication().name(self.ltrim(self.newPatientMedication().name()));\t//force left trim to prevent duplicates, but allow space from the right for entering multiple words.\r\n\r\n            ko.utils.arrayForEach(parsedResponse.ProprietaryNames, function (med) {\r\n              med.DisplayName = med.Text;\r\n              // Check if the medication has already been added to the individual\r\n              var matchingMedication = ko.utils.arrayFirst(self.selectedPatient().medications(), function (patmed) {\r\n                return patmed.name().toLowerCase().trim() === med.Text.toLowerCase().trim() && patmed.statusId() == 1;\r\n              });\r\n              // Make sure this is actually a duplicate!!!!!\r\n              if ((matchingMedication && matchingMedication !== self.newPatientMedication())) {\r\n                med.DisplayName = '(Duplicate) ' + med.DisplayName;\r\n                med.isDuplicate = true;\r\n              }\r\n            });\r\n            //prepare a new medication suggestion: use the full trimmed typed value:\r\n            var newMedication = { Id: -1, Text: selectedmedication, DisplayName: selectedmedication + newMedPostfix, Value: selectedmedication };\r\n            // Check if the results match the text of the fully trimmed typed value:\r\n            var matchingResponse = ko.utils.arrayFirst(parsedResponse.ProprietaryNames, function (med) {\r\n                return med.Text.toLowerCase().trim() === selectedmedication.toLowerCase();\r\n            });\r\n            //If it doesn't match anything else, add a new one\r\n            if (!matchingResponse) {\r\n                parsedResponse.ProprietaryNames.push(newMedication);\r\n            }\r\n            return parsedResponse.ProprietaryNames;\r\n          },\r\n          rateLimitWait: 500,\r\n          cache: false\r\n        }\r\n      });\r\n\r\n\t  /**\r\n\t  *\tleft trim a string. (trimLeft() wont work on ie)\r\n\t  *\t@method self.ltrim\r\n\t  *\t@param str {string}\r\n\t  *\t@return the trimmed result string.\r\n\t  */\r\n\t  self.ltrim = function(str){\r\n\t\t\tif(str){\r\n\t\t\t\treturn str.replace(/^\\s+/, \"\");\r\n\t\t\t}\r\n\t\t\telse return str;\r\n\t  }\r\n      self.addNewOptionText = '-Add New-';\r\n\r\n      self.resetDropdowns = function () {\r\n          if(self.newPatientMedication && self.newPatientMedication()){\r\n              self.newPatientMedication().strength('');\r\n              self.newPatientMedication().form('');\r\n              self.newPatientMedication().route('');\r\n              self.newPatientMedication().familyId('');\r\n\t\t\t  self.newPatientMedication().customFrequency('');\r\n\t\t\t  self.newPatientMedication().frequency(null);\r\n\t\t\t  self.isAddingNewFrequencyValue(false);\t//frequency gets back to dropdown regardless if its new/edit med.\r\n          }\r\n          if(self.screenMode() !== screenModes.AddNewMed){\r\n              self.isAddingNewRouteValue(false);\r\n              self.isAddingNewStrengthValue(false);\r\n              self.isAddingNewFormValue(false);\r\n              if(self.screenMode() === screenModes.AddNewMedValues){\r\n                  self.screenMode(screenModes.MedSelected);\r\n\t\t\t\t  self.newPatientMedication().isCreateNewMedication(false);\r\n              }\r\n          }\r\n      };\r\n\r\n      self.clearDropdowns = function() {\r\n        self.resetDropdowns();\r\n        self.dosageForms([]);\r\n        self.strengths([]);\r\n        self.routes([]);\r\n      };\r\n\r\n      self.ignoreMedicationNameChange = function(currentName, newName){\r\n          //scenarios to ignore the medication name change:\r\n\t\t  //ignore if edit mode assignes the medication name.\r\n\t\t  //do not ignore if it was changed by the user after the medication was selected.\r\n          var ignore = false;\r\n\t\t  if(currentName === null || currentName === '' || newName === null){\r\n\t\t\t  return true;\r\n\t\t  }\r\n          if(currentName)\r\n          {\r\n              if(newName === currentName + newMedPostfix){\r\n                  ignore = true; //a new med has been selected so its not new user input typing.\r\n              }\r\n              if(newName === currentName.toUpperCase()){\r\n                  ignore = true;  //the medication name got to uppercase.\r\n              }\r\n          }\r\n          return ignore;\r\n      }\r\n\r\n      /**\r\n       * computed - tracks medication name changes and updates the screenMode value accordingly\r\n       * when a name changes by the user it will clear and disable route/form/strength dropdowns\r\n\t   *\r\n       * @method medicationNameWatcher\r\n       * @return no return value.\r\n       */\r\n\r\n      self.medicationNameWatcher = ko.computed({\r\n          read: function(){\r\n\t\t\tvar medName = self.trimmedMedication();//newPatientMedication().name();\r\n\t\t\tvar mode = self.screenMode;\r\n\t\t\tif( mode && mode() !== screenModes.NoMedSelected && self.initialized ){\r\n\t\t\t\t//we have a medication selected\r\n\t\t\t\t//track med name changes:\r\n                if(self.ignoreMedicationNameChange(self.lastMedName, medName)){\r\n                    return false;\r\n                }\r\n                self.lastMedName = medName;\r\n\t\t\t\tself.screenMode(screenModes.NoMedSelected);\r\n\t\t\t\tself.clearDropdowns();\r\n\t\t\t\tself.isCreateNewEnabled(false); //route/form/strength back to dropdown if any of them was in textbox (=add new) mode.\r\n\t\t\t\tself.isDropdownEnabled(false);\r\n\t\t\t\treturn false;\r\n            }\r\n          }\r\n      }).extend({throttle: 200});\r\n\r\n\r\n\t  self.isValidCustomOptionValue = function(optionValue){\r\n\t\t  var isValid = false;\r\n\t\t  if(optionValue && optionValue.trim().length > 0 && optionValue !== self.addNewOptionText){\r\n\t\t\t  isValid = true;\r\n\t\t  }\r\n\t\t  return isValid;\r\n\t  }\r\n\r\n\t  self.evaluateIsCreateNewMedication =  function(mode, thisMed,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAddingNewRouteValue,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAddingNewStrengthValue,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAddingNewFormValue,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tform,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrength,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\troute){\r\n\t\t    var isCustomValueCreated = null;\r\n\t\t\tif(mode === screenModes.AddNewMedValues){\r\n\t\t\t\tisCustomValueCreated = false;\r\n\t\t\t\tif(isAddingNewRouteValue === true && self.isValidCustomOptionValue(route)){\r\n\t\t\t\t\tisCustomValueCreated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(isAddingNewStrengthValue === true && self.isValidCustomOptionValue(strength)){\r\n\t\t\t\t\tisCustomValueCreated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(isAddingNewFormValue === true && self.isValidCustomOptionValue(form)){\r\n\t\t\t\t\tisCustomValueCreated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(isCustomValueCreated === true){\r\n\t\t\t\t\t//one or more of the dropdowns route/form/strength is turned to textbox -custom mode and it has a value.\r\n\t\t\t\t\t//note - some other value could be in a textbox mode but empty.\r\n\t\t\t\t\tthisMed.isCreateNewMedication(true);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthisMed.isCreateNewMedication(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn isCustomValueCreated;\r\n\t  };\r\n\r\n\t  self.medicationParameters = ko.computed(function(){\r\n\t\t\tvar thisMed = self.newPatientMedication;\r\n\t\t\tvar form = self.trimmedForm();\r\n\t\t\tvar strength = self.trimmedStrength();\r\n\t\t\tvar route = self.trimmedRoute();\r\n\t\t\tvar mode = self.screenMode;\r\n\t\t\tvar isAddingNewRouteValue = self.isAddingNewRouteValue();\r\n\t\t\tvar isAddingNewStrengthValue = self.isAddingNewStrengthValue();\r\n\t\t\tvar isAddingNewFormValue = self.isAddingNewFormValue();\r\n\r\n\t\t\tif(thisMed && mode && self.initialized){\r\n\t\t\t\tvar isCreated = self.evaluateIsCreateNewMedication(mode(), thisMed(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAddingNewRouteValue,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAddingNewStrengthValue,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisAddingNewFormValue,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tform,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstrength,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\troute);\r\n\t\t\t}\r\n\t  }).extend({ throttle: 75 });\r\n\r\n      /**\r\n\t   *\tcomputed - in editing mode of a patient medication, we may add new strength/form/route:\r\n       *  listen /track if form/strength/route dropdowns turn to \"add new\" (textbox) mode.\r\n       *  if/when one of them does:\r\n       *  \tupdate the screenMode value AddNewMedValues.\r\n       *  if any of them has a custom value entered: this means we will have to create a medicationMap record and get a familyId when saved:\r\n       * \tset isCreateNewMedication\r\n\t   *\r\n       * @method addingNewValue\r\n       * @return no return value.\r\n       */\r\n      self.addingNewValue = ko.computed({\r\n          read: function(){\r\n\t\t\t\tvar mode = self.screenMode();\r\n\t\t\t\tvar isDup = self.isDuplicate();\t\t//is duplicate selected\r\n\t\t\t\tvar isAddingNewRouteValue = self.isAddingNewRouteValue();\t//is the dropdown field turned into textbox (route)\r\n\t\t\t\tvar isAddingNewStrengthValue = self.isAddingNewStrengthValue();\t//is the dropdown field turned into textbox (strength)\r\n\t\t\t\tvar isAddingNewFormValue = self.isAddingNewFormValue();\t\t\t//is the dropdown field turned into textbox (form)\r\n\r\n\t\t\t\tif(mode === screenModes.MedSelected && isDup !== true && self.initialized){\r\n\t\t\t\t\tif(isAddingNewRouteValue === true){\r\n\t\t\t\t\t\tself.screenMode(screenModes.AddNewMedValues);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(isAddingNewStrengthValue === true){\r\n\t\t\t\t\t\tself.screenMode(screenModes.AddNewMedValues);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(isAddingNewFormValue === true){\r\n\t\t\t\t\t\tself.screenMode(screenModes.AddNewMedValues);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n          }\r\n      }).extend({ throttle: 75 });\r\n\r\n\t  self.initialMedicationValues = ko.observable({\r\n\t\t\t\tform: self.trimmedForm(),\r\n\t\t\t\tstrength: self.trimmedStrength(),\r\n\t\t\t\troute: self.trimmedRoute()\r\n\t  });\r\n\r\n\t  /**\r\n\t  * watch for any route/form/strength changes in edit medication scenario.\r\n\t  * and if any of them change from their original values - set recalculateNDC flag on patient medication.\r\n\t  *\r\n\t  * @function recalculateNDC\r\n\t  */\r\n\r\n\t  self.recalculateNDCWatcher = ko.computed(function(){\r\n\t\t  var thisStrength = self.trimmedStrength();\r\n\t\t  var thisForm = self.trimmedForm();\r\n\t\t  var thisRoute = self.trimmedRoute();\r\n\t\t  var canAdd = self.canAdd();\r\n\t\t  if (!canAdd || !self.initialized || self.newPatientMedication().isNew()) {\r\n\t\t      return false;\r\n\t\t  }\r\n\t\t  if(thisStrength !== self.initialMedicationValues().strength ||\r\n\t\t\tthisForm !== self.initialMedicationValues().form ||\r\n\t\t\tthisRoute !== self.initialMedicationValues().route){\r\n\t\t\t\tself.newPatientMedication().recalculateNDC(true);\r\n\t\t\t\treturn true;\r\n\t\t  }\r\n\t\t  else{\r\n\t\t\t  self.newPatientMedication().recalculateNDC(false);\r\n\t\t\t  return false;\r\n\t\t  }\r\n\t  }).extend({ throttle: 200 });\r\n\r\n      self.medicationBloodhound.initialize();\r\n\r\n      self.populateDropDowns = function(){\r\n          var thisMed = self.newPatientMedication();\r\n          var thisName = thisMed.name();\r\n\r\n          //set a clean search criteria:\r\n          var thisRoute = '';\r\n          var thisForm = '';\r\n          var thisStrength = '';\r\n\r\n          //if(self.screenMode() === screenModes.MedSelected){\r\n              //criteria **remarked, do not delete**:\r\n              //  the criteria can be used to restrict form/strength/route selections\r\n              //  to match existing medication combinations.\r\n              //  currently we remark it since we allow any combination to be created/ selected,\r\n              //  and back end should handle it if it does not exist yet.\r\n              // thisRoute = thisMed.route();\r\n              // thisForm = thisMed.form();\r\n              // thisStrength = thisMed.strength();\r\n          //}\r\n          if (thisMed && thisName) {\r\n            datacontext.getRemoteMedicationFields(thisMed.name(), thisRoute, thisForm, thisStrength).then(fieldsReturned);\r\n          }\r\n\r\n          function fieldsReturned(data) {\r\n\t\t\tself.isCreateNewEnabled(true);\r\n            self.isDropdownEnabled(true);\r\n            self.dosageForms(data.DosageForms);\r\n            self.strengths(data.Strengths);\r\n            self.routes(data.Routes);\r\n            self.units(data.Units);\r\n\t\t\tself.initialized = true;\r\n          }\r\n      }\r\n\r\n\t  self.initialized = true;\r\n      if(self.newPatientMedication.peek() && !self.newPatientMedication().isNew()){\r\n\t\t  //edit medication scenario:\r\n          //enable route/form/strength dropdowns\r\n          self.isDropdownEnabled(true);\r\n          //enable route/form/strength dropdowns to reveal the \"add new\" option:\r\n          self.isCreateNewEnabled(true);\r\n          //read dropdowns options related to the selected medication:\r\n          self.populateDropDowns();\r\n          //set screenMode: edit = selected\r\n          self.screenMode(screenModes.MedSelected);\r\n\t\t  //clear new medication flag\r\n\t\t  self.newPatientMedication().isCreateNewMedication(false);\r\n\t\t  self.newPatientMedication().recalculateNDC(false);\r\n\t\t  self.lastMedName = self.newPatientMedication().name();\r\n\t\t  self.initialized = false;\r\n      }\r\n\r\n\r\n      //override the typeahead selected callback:\r\n      self.overrideSelected = function (event, suggestion, dataset) {\r\n\r\n        // We can access the initialized typeahead on the element like this -\r\n        var $el = $(event.target);\r\n        // Then, like in the binding, we can make sure the change event is triggered on select no matter what\r\n        $el.change();\r\n        self.newPatientMedication().isDuplicate(false);\r\n\t\tself.isDuplicate(false);\r\n\t\tself.isNewMedicationName(false);\r\n\t\tself.newPatientMedication().isCreateNewMedication(false);\r\n\t\tself.newPatientMedication().recalculateNDC(true);\t//new medication needs to review its NDC.\r\n\t\tself.lastMedName = suggestion.Text.toUpperCase(); //keep med name so the medicationNameWatcher will ignore this change.\r\n        // Then we can grab the suggestion -\r\n        if( suggestion.Id && suggestion.Id == -1){\r\n            //this is a new med\r\n\t\t\tself.isNewMedicationName(true);\r\n            $el.typeahead('val', suggestion.Text.toUpperCase());  //workaround: since typeahead is overriding the text on blur.\r\n\t\t\t//flag to start a new medication map record\r\n\t\t\tself.newPatientMedication().isCreateNewMedication(true);\r\n\r\n            //set the screen state:\r\n            self.screenMode(screenModes.AddNewMed);\r\n            //reveal the \"-Add New-\" option in form/strength/route dropdowns:\r\n            self.isCreateNewEnabled(true);\r\n            self.isDropdownEnabled(true);\r\n            self.isAddingNewRouteValue(true);\r\n            self.isAddingNewStrengthValue(true);\r\n            self.isAddingNewFormValue(true);\r\n        }\r\n        else{\r\n          self.screenMode(screenModes.MedSelected);\r\n          if(suggestion.isDuplicate){\r\n              self.newPatientMedication().isDuplicate(true);\r\n\t\t\t  self.isDuplicate(true);\r\n          }\r\n          else{\r\n              self.populateDropDowns();\r\n          }\r\n        }\r\n      }\r\n    };\t//activate ends here\r\n\r\n    ctor.prototype.initializeMedSearch = function (name) {\r\n        var self = this;\r\n        // Check for an already created medication\r\n        var foundMed = ko.utils.arrayFirst(self.selectedPatient().medications(), function (med) {\r\n            return med.isNew();\r\n        });\r\n        if (foundMed) {\r\n        } else {\r\n          //build a blank patientmedication model for the current patient:\r\n          datacontext.initializeNewPatientMedication(self.selectedPatient(), name);\r\n        }\r\n    }\r\n\r\n    ctor.prototype.detached = function() {\r\n\t\tvar self = this;\r\n\r\n\t\t//dispose computeds:\r\n\t\t//ctor.prototype.freqHowOftens.dispose();\r\n\t\tctor.prototype.freqWhens.dispose();\r\n\t\tctor.prototype.sources.dispose();\r\n\t\tctor.prototype.types.dispose();\r\n\t\tctor.prototype.categories.dispose();\r\n\t\tctor.prototype.statuses.dispose();\r\n\t\tself.showing.dispose();\r\n\t\tself.newPatientMedication.dispose();\r\n\t\tself.trimmedMedication.dispose();\r\n\t\tself.trimmedForm.dispose();\r\n\t\tself.trimmedRoute.dispose();\r\n\t\tself.trimmedStrength.dispose();\r\n\t\tself.canAdd.dispose();\r\n\t\tself.medicationNameWatcher.dispose();\r\n\t\tself.medicationParameters.dispose();\r\n\t\tself.addingNewValue.dispose();\r\n\t\tself.recalculateNDCWatcher.dispose();\r\n\t\t//dispose subscriptions:\r\n\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n\t\t\ttoken.dispose();\r\n\t\t});\r\n    }\r\n    return ctor;\r\n  });\r\n\n","define('viewmodels/patients/sections/medications',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/careplan/index'],\r\n    function (models, servicesConfig, datacontext, session, carePlanIndex) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.contractProgramsEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser || !carePlanIndex.selectedPatient()) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + carePlanIndex.selectedPatient().id(), 'Program');\r\n        });\r\n        \r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.programs = self.selectedPatient.programs;\r\n            self.passedInSort = self.settings.sortOverride;\r\n            self.elementStateIds = self.settings.elementStateIds;\r\n            self.selectedSort = self.passedInSort ? self.passedInSort : self.alphabeticalOrderSort;\r\n            self.computedPrograms = ko.computed(function () {\r\n                var thesePrograms = [];\r\n                if (carePlanIndex.selectedPatient()) {\r\n                    thesePrograms = ko.utils.arrayFilter(carePlanIndex.selectedPatient().programs(), function (thisProgram) {\r\n                        return self.elementStateIds.indexOf(thisProgram.elementState()) !== -1;\r\n                    });\r\n                }\r\n                return thesePrograms;\r\n            });\r\n            self.activeAction = self.settings.activeAction;\r\n            self.activeProgram = self.settings.activeProgram;\r\n            self.activeModule = self.settings.activeModule;\r\n            self.setActiveAction = function (sender) {\r\n                // Only set the active action if it is enabled\r\n                if (sender.enabled() === true) {\r\n                    self.activeProgram(null);\r\n                    self.activeModule(null);\r\n                    self.activeAction(sender);\r\n                    if (sender.historicalAction && sender.historicalAction()) {\r\n                        carePlanIndex.getStepsForAction(sender.historicalAction());\r\n                    }\r\n                }\r\n            };\r\n            self.setActiveProgram = function (sender) {\r\n                // If the active program is not already the sent program,\r\n                if (self.activeProgram() !== sender) {\r\n                    // Set the active action to null so it hides,\r\n                    self.activeAction(null);\r\n                    self.activeModule(null);\r\n                    // Set the active program to the sent program,\r\n                    self.activeProgram(sender);\r\n                    // And if we don't have the program details yet,\r\n                    if (self.activeProgram().modules().length === 0) {\r\n                        //Go get the program details\r\n                        datacontext.getMelsEntityById(null, null, self.contractProgramsEndPoint().EntityType, self.contractProgramsEndPoint().ResourcePath + '/Program/' + self.activeProgram().id(), true, null).then(function () { patientsListFlyoutOpen(false); });\r\n                    }                    \r\n                }\r\n            };\r\n            self.setActiveModule = function (sender) {\r\n                // If the active program is not already the sent program,\r\n                if (self.activeModule() !== sender) {\r\n                    // Set the active action to null so it hides,\r\n                    self.activeAction(null);\r\n                    self.activeProgram(null);\r\n                    // Set the active program to the sent program,\r\n                    self.activeModule(sender);    \r\n                }\r\n            };\r\n            self.toggleOpen = function (sender) {\r\n                var thisProgram = sender;\r\n                if (!thisProgram.isOpen()) {\r\n                    thisProgram.isOpen(true);\r\n                    if (thisProgram.isOpen() && thisProgram.modules().length === 0) {\r\n                        //Go get the program details\r\n                        datacontext.getMelsEntityById(null, null, self.contractProgramsEndPoint().EntityType, self.contractProgramsEndPoint().ResourcePath + '/Program/' + thisProgram.id(), true, null);\r\n                    }\r\n                } else {\r\n                    thisProgram.isOpen(false);\r\n                }\r\n            };\r\n            self.isFullScreen = ko.observable(false);\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n            self.toggleAllExpanded = function (sender) {\r\n                // If any modules are closed,\r\n                if (!sender.allModulesOpen()) {\r\n                    // Open them all\r\n                    ko.utils.arrayForEach(sender.modules(), function (module) {\r\n                        module.isOpen(true);\r\n                    });\r\n                } else {\r\n                    // Close them all\r\n                    ko.utils.arrayForEach(sender.modules(), function (module) {\r\n                        module.isOpen(false);\r\n                    });\r\n                }\r\n            };\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/medications.search',['models/base', 'config.services', 'services/datacontext', 'services/session'],\r\n    function (models, servicesConfig, datacontext, session) {\r\n\r\n        // Create an end point to use\r\n        var endpoint = new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Search/Meds/ProprietaryNames', 'PatientMedication');\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            // A list of observations\r\n            self.medications = ko.observableArray();\r\n            self.newMedication = ko.observable();\r\n            // A Bloodhound adapter to use when searching for obs in the typeahead\r\n        };\r\n\r\n        ctor.prototype.types = ko.computed(datacontext.enums.medSuppTypes);\r\n        ctor.prototype.categories = ko.computed(datacontext.enums.medicationCategories);\r\n        ctor.prototype.statuses = ko.computed(datacontext.enums.medicationStatuses);\r\n\r\n        ctor.prototype.addNewMedication = function () {\r\n            var self = this;\r\n            datacontext.medicationSaving(true);\r\n            var createdMedication = ko.observable();\r\n            // Get observation by name\r\n            var matchedMedication = ko.utils.arrayFirst(self.medications(), function (obs) {\r\n                return obs.Text.toLowerCase() === self.trimmedMedication().toLowerCase();\r\n            });\r\n            // If the matching medication is found,\r\n            if (matchedMedication) {\r\n                // Initialize an instance of it\r\n                //datacontext.initializeMedication(newMedication, 'PatientMedication', matchedMedication.Id, self.selectedPatient().id()).then(dataReturned);\r\n                createdMedication(datacontext.initializeNewPatientMedication(self.selectedPatient()));\r\n                createdMedication.name(matchedMedication.Name);\r\n            } else {\r\n            }\r\n        }\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            // The selected observation\r\n            self.trimmedMedication = ko.computed(function () { \r\n                var thismed = self.newMedication();\r\n                if (thismed) {\r\n                    return thismed.name();\r\n                } else {\r\n                    return '';\r\n                }\r\n            });\r\n            self.resultsMessage = ko.observable('');\r\n            // Initialize this widget\r\n            self.initializeMedSearch(self.newMedication);\r\n            self.canAdd = ko.computed(function () {\r\n                var thisValue = false;\r\n                var allergSaving = datacontext.medicationSaving();\r\n                var trimAllerg = self.trimmedMedication();\r\n                var patientmedications = self.selectedPatient().medications();\r\n                var newMedicationExists = ko.utils.arrayFirst(patientmedications, function (patmed) {\r\n                    return patmed.isNew();\r\n                });\r\n                // If a value has been selected,\r\n                if (trimAllerg) {\r\n                    // And the value matches a valid observation,\r\n                    var matchedMedication = ko.utils.arrayFirst(self.medications(), function (retMedication) {\r\n                        return retMedication.Text.toLowerCase().trim() === trimAllerg.toLowerCase();\r\n                    });\r\n                    if (!matchedMedication) {\r\n                        // Check if the medication ends in (New),\r\n                        thisValue = trimAllerg.substr(trimAllerg.length - 5) === '(New)';\r\n                    }\r\n                    if (matchedMedication && matchedMedication.isDuplicate !== true) {\r\n                        thisValue = true;\r\n                    }\r\n                }\r\n                if (allergSaving || newMedicationExists) { thisValue = false; }\r\n                return thisValue;\r\n            });\r\n            self.medicationBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                limit: 17,\r\n                remote: {\r\n                    url: servicesConfig.remoteServiceName + '/' + endpoint.ResourcePath,        \r\n                    replace: function (url, query) {\r\n                        searchQuery = query;\r\n                        return url + '?Take=15&Term=' + searchQuery;\r\n                    },\r\n                    ajax: {\r\n                        beforeSend: function (jqXhr, settings) {\r\n                            jqXhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n                            jqXhr.setRequestHeader('Token', session.currentUser().aPIToken());\r\n                        },\r\n                        type: 'GET'\r\n                    },\r\n                    // Filter out what is returned from the database\r\n                    filter: function (parsedResponse) {\r\n                        // If there is a message returned,\r\n                        if (parsedResponse.Message) {\r\n                            self.resultsMessage('');\r\n                            // Set it as the results message\r\n                            self.resultsMessage(parsedResponse.Message);\r\n                        } else {\r\n                            // Else clear it\r\n                            self.resultsMessage('');\r\n                        }\r\n                        self.medicationBloodhound.clear();\r\n                        var selectedmedication = self.trimmedMedication();\r\n                        // Check if the medication has already been added to the individual\r\n                        var matchingPatientMedication = ko.utils.arrayFirst(self.selectedPatient().medications(), function (patallerg) {\r\n                            return patallerg.name().toLowerCase().trim() === selectedmedication.toLowerCase();\r\n                        });\r\n                        ko.utils.arrayForEach(parsedResponse.ProprietaryNames, function (allerg) {\r\n                            allerg.DisplayName = allerg.Text;\r\n                            // Check if the medication has already been added to the individual\r\n                            var matchingMedication = ko.utils.arrayFirst(self.selectedPatient().medications(), function (patallerg) {\r\n                                return patallerg.name().toLowerCase().trim() === allerg.Text.toLowerCase().trim();\r\n                            });\r\n                            if (matchingMedication || (matchingPatientMedication && matchingPatientMedication.name().toLowerCase().trim() === allerg.Text.toLowerCase().trim())) {\r\n                                allerg.DisplayName = '(Duplicate) ' + allerg.DisplayName;\r\n                                allerg.isDuplicate = true;\r\n                            }\r\n                        });\r\n                        self.medications(parsedResponse.ProprietaryNames);\r\n                        var newMedication = { Id: -1, Text: selectedmedication, DisplayName: selectedmedication + ' (New)' };\r\n                        // Check if the results match the text\r\n                        var matchingResponse = ko.utils.arrayFirst(parsedResponse.ProprietaryNames, function (allerg) {\r\n                            return allerg.Text.toLowerCase().trim() === selectedmedication.toLowerCase();\r\n                        });\r\n                        // If it doesn't match anything else, add a new one\r\n                        if (!matchingResponse && !matchingPatientMedication) {\r\n                            parsedResponse.ProprietaryNames.push(newMedication);\r\n                        }\r\n                        return parsedResponse.ProprietaryNames;\r\n                    },\r\n                    rateLimitWait: 500,\r\n                    cache: false\r\n                }\r\n            });\r\n            self.medicationBloodhound.initialize();\r\n        };\r\n\r\n        ctor.prototype.initializeMedSearch = function () {\r\n            var self = this;\r\n            // Check for an already created medication\r\n            var foundMed = ko.utils.arrayFirst(self.selectedPatient().medications(), function (med) {\r\n                return med.isNew();\r\n            });\r\n            if (foundMed) {\r\n                self.newMedication(foundMed);\r\n            } else {\r\n                self.newMedication(datacontext.initializeNewPatientMedication(self.selectedPatient()));\r\n            }\r\n        }\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/notes',['models/base', 'config.services', 'services/datacontext', 'services/session'],\r\n    function (models, servicesConfig, datacontext, session) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n        \r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.group = ko.observable(self.settings.group);\r\n            self.activeNote = self.settings.activeNote;\r\n            self.setActiveNote = function (sender) {\r\n                self.activeNote(sender);\r\n            };            \r\n            // Should the program be 'open' in the list?\r\n            self.isOpen = ko.observable(true);\r\n        };\r\n        \r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/problems.list',['services/datacontext'],\r\n  function (datacontext) {\r\n\r\n    var ctor = function () {\r\n      var self = this;\r\n    };\r\n\r\n    ctor.prototype.newThenAlphabeticalSort = function (l, r) {\r\n\r\n        // Primary sort property\r\n        var p1 = l.isNew() ? 0 : 1;\r\n        var p2 = r.isNew() ? 0 : 1;\r\n\r\n        // Secondary sort property\r\n        var o1 = l.name().toLowerCase();\r\n        var o2 = r.name().toLowerCase();\r\n            \r\n        if (p1 != p2) {\r\n            if (p1 < p2) return -1;\r\n            if (p1 > p2) return 1;\r\n            return 0;\r\n        }\r\n        if (o1 < o2) return -1;\r\n        if (o1 > o2) return 1;\r\n        return 0;\r\n    };\r\n\r\n    ctor.prototype.observationDisplays = ko.computed(datacontext.enums.observationDisplays);\r\n    ctor.prototype.deleteFocusProblem = function (sender) {\r\n      sender.entityAspect.rejectChanges();\r\n      sender.deleteFlag(true);\r\n    };\r\n    ctor.prototype.observationStates = ko.computed(function () {\r\n      // Find problem observation type from list\r\n      var problemType = ko.utils.arrayFirst(datacontext.enums.observationTypes(), function (type) {\r\n        return type.name() === 'Problems';\r\n      });\r\n      // Filter states down to only those who have allowed type id that contains the problem type id\r\n      var theseStates = ko.utils.arrayFilter(datacontext.enums.observationStates(), function (state) {\r\n        var truthy = false;\r\n        ko.utils.arrayForEach(state.allowedTypeIds(), function (typeId) {\r\n          // If the type is found to match,\r\n          if (typeId.id() === problemType.id()) {\r\n            // Return this state into the list\r\n            truthy = true;\r\n          }\r\n        });\r\n        return truthy;\r\n      });\r\n      return theseStates;\r\n    });\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n      var self = this;\r\n      self.settings = settings;\r\n      self.showing = ko.computed(function () { return true; });\r\n      self.selectedPatient = self.settings.selectedPatient;\r\n      // A list of the problem observations for this patient\r\n      self.computedProblemObservations = ko.computed(function () {\r\n        var filteredObservations = [];\r\n        var patientsObservations = self.selectedPatient().observations();\r\n        // Filter the list only to observations that are of type 'Problem'\r\n        filteredObservations = ko.utils.arrayFilter(patientsObservations, function (item) {\r\n          // If the item has a type, return if it matches problem, else if there is no type return false\r\n          return item.type() ? (item.type().name() === 'Problems' && !item.deleteFlag() && (item.entityAspect.entityState.isModified() || item.state().name().toLowerCase() === 'active')) : false;\r\n        }).sort(self.newThenAlphabeticalSort);\r\n        return filteredObservations;\r\n      }).extend({ throttle: 50 });\r\n      // self.showActions = self.settings.hasOwnProperty('showActions') ? self.settings.showActions : self.showing;\r\n      // self.saveFocusProblems = self.settings.saveFocusProblems || function () { return false; };\r\n      // self.cancelFocusProblems = self.settings.cancelFocusProblems || function () { return false; };\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n\r\n    };\r\n\r\n    return ctor;\r\n  });\n","define('viewmodels/patients/sections/programs',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/careplan/index'],\r\n    function (models, servicesConfig, datacontext, session, carePlanIndex) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.token = {};\r\n            self.selectedPatientChanged = false;\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n        };\r\n\r\n        ctor.prototype.deactivate = function () {\r\n            var self = this;\r\n            self.token.dispose();\r\n            self.computedPrograms.dispose();\r\n        };        \r\n\r\n        ctor.prototype.contractProgramsEndPoint = ko.computed(function () {\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser || !carePlanIndex.selectedPatient()) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient/' + carePlanIndex.selectedPatient().id(), 'Program');\r\n        });\r\n        \r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.token = carePlanIndex.selectedPatient.subscribe(function () {\r\n                self.selectedPatientChanged = true;\r\n                self.deactivate();\r\n            });\r\n            self.programs = self.selectedPatient.programs;\r\n            self.passedInSort = self.settings.sortOverride;\r\n            self.elementStateIds = self.settings.elementStateIds;\r\n            self.selectedSort = self.passedInSort ? self.passedInSort : self.alphabeticalOrderSort;\r\n            self.computedPrograms = ko.computed({\r\n                read: function () {\r\n                    var thesePrograms = [];\r\n                    if (carePlanIndex.selectedPatient()) {\r\n                        thesePrograms = ko.utils.arrayFilter(carePlanIndex.selectedPatient().programs(), function (thisProgram) {\r\n                            return self.elementStateIds.indexOf(thisProgram.elementState()) !== -1;\r\n                        });\r\n                    }\r\n                    var finalPrograms = thesePrograms.sort(self.selectedSort);\r\n                    return finalPrograms;\r\n                },\r\n                disposeWhen: function () {\r\n                    return self.selectedPatientChanged;\r\n                }\r\n            }).extend({ throttle: 25 });\r\n            self.activeAction = self.settings.activeAction;\r\n            self.activeProgram = self.settings.activeProgram;\r\n            self.activeModule = self.settings.activeModule;\r\n            self.setActiveAction = function (sender) {\r\n                // Only set the active action if it is enabled\r\n                if (sender.enabled() === true) {\r\n                    self.activeProgram(null);\r\n                    self.activeModule(null);\r\n                    self.activeAction(sender);\r\n                    if (sender.historicalAction && sender.historicalAction()) {\r\n                        carePlanIndex.getStepsForAction(sender.historicalAction());\r\n                    }\r\n                }\r\n            };\r\n            self.setActiveProgram = function (sender) {\r\n                // If the active program is not already the sent program,\r\n                if (self.activeProgram() !== sender) {\r\n                    // Set the active action to null so it hides,\r\n                    self.activeAction(null);\r\n                    self.activeModule(null);\r\n                    // Set the active program to the sent program,\r\n                    self.activeProgram(sender);\r\n                    // And if we don't have the program details yet,\r\n                    if (self.activeProgram().modules().length === 0) {\r\n                        //Go get the program details\r\n                        datacontext.getMelsEntityById(null, null, self.contractProgramsEndPoint().EntityType, self.contractProgramsEndPoint().ResourcePath + '/Program/' + self.activeProgram().id(), true, null).then(function () { patientsListFlyoutOpen(false); });\r\n                    }                    \r\n                }\r\n            };\r\n            self.setActiveModule = function (sender) {\r\n                // If the active program is not already the sent program,\r\n                if (self.activeModule() !== sender) {\r\n                    // Set the active action to null so it hides,\r\n                    self.activeAction(null);\r\n                    self.activeProgram(null);\r\n                    // Set the active program to the sent program,\r\n                    self.activeModule(sender);    \r\n                }\r\n            };\r\n            self.toggleOpen = function (sender) {\r\n                var thisProgram = sender;\r\n                if (!thisProgram.isOpen()) {\r\n                    thisProgram.isOpen(true);\r\n                    if (thisProgram.isOpen() && thisProgram.modules().length === 0) {\r\n                        //Go get the program details\r\n                        datacontext.getMelsEntityById(null, null, self.contractProgramsEndPoint().EntityType, self.contractProgramsEndPoint().ResourcePath + '/Program/' + thisProgram.id(), true, null).then(function () { });\r\n                    }\r\n                } else {\r\n                    thisProgram.isOpen(false);\r\n                }\r\n            };\r\n            self.isFullScreen = ko.observable(false);\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n            self.toggleAllExpanded = function (sender) {\r\n                // If any modules are closed,\r\n                if (!sender.allModulesOpen()) {\r\n                    // Open them all\r\n                    ko.utils.arrayForEach(sender.modules(), function (module) {\r\n                        module.isOpen(true);\r\n                    });\r\n                } else {\r\n                    // Close them all\r\n                    ko.utils.arrayForEach(sender.modules(), function (module) {\r\n                        module.isOpen(false);\r\n                    });\r\n                }\r\n            };\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/sections/recent.individuals',['services/session', 'config.services', 'services/datacontext', 'viewmodels/patients/index'], function (session, servicesConfig, datacontext, patientsIndex) {\r\n\t\r\n\tvar choosePatient = patientsIndex.choosePatient;\r\n\tvar selectedPatient = ko.computed(patientsIndex.selectedPatient);\r\n\tvar recentIndividualsList = ko.observableArray();\r\n\r\n    function activate (settings) {\r\n    }\r\n\r\n    var recentIndividuals = {\r\n        activate: activate,\r\n        choosePatient: choosePatient,\r\n        recentIndividualsList: recentIndividualsList,\r\n        selectedPatient: selectedPatient,\r\n        currentUser: session.currentUser\r\n    };\r\n    return recentIndividuals;\r\n\r\n});\n","/**\r\n*\tIndividual Status section in individual details \r\n*\t@module status\r\n*/\r\ndefine('viewmodels/patients/sections/status',['models/base', 'services/datacontext', 'viewmodels/shell/shell'],\r\n    function (modelConfig, datacontext, shell) {\r\n\t\tvar subscriptionTokens= [];\r\n        var ctor = function () {\r\n\r\n        };\r\n\t\t\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;            \t\t\t\t\t\t\t\t\t\t\t\t\r\n            self.statusModalShowing = ko.observable(false);\r\n            self.saveStatus = function () {\r\n                datacontext.saveIndividual(self.selectedPatient);\r\n            }\r\n            self.cancelStatus = function () {\r\n                self.selectedPatient.entityAspect.rejectChanges();\r\n            }\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Edit Status',\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: self.selectedPatient, \r\n\t\t\t\ttemplatePath: 'templates/patient.status.html', \r\n\t\t\t\tshowing: self.statusModalShowing, \r\n\t\t\t\tsaveOverride: self.saveStatus, \r\n\t\t\t\tcancelOverride: self.cancelStatus, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: null\r\n\t\t\t}\r\n            self.modal = new modelConfig.modal(modalSettings);\r\n            self.isOpen = ko.observable(false);\r\n            self.isEditing = ko.observable(false);\r\n            self.isExpanded = ko.observable(false);\r\n            self.toggleEditing = function () {\r\n                if (self.isEditing()) {\r\n                    self.statusModalShowing(false);\r\n                }\r\n                else {\r\n                    shell.currentModal(self.modal);\r\n                    self.statusModalShowing(true);\r\n                    var editingToken = self.statusModalShowing.subscribe(function () {\r\n                        self.isEditing(false);\r\n                        editingToken.dispose();\r\n                    });\r\n                }\r\n                self.isEditing(!self.isEditing());\r\n                self.isOpen(true);\r\n            };\r\n\t\t\t/**\r\n\t\t\t*\tcomputed. when the status is active set the reason back to null.\r\n\t\t\t*\twhen the status is set to anything other than active and the reason is null - the reason updates to \"Unknown\" (default).\r\n\t\t\t*\t@method updateStatusReason\r\n\t\t\t*/\r\n\t\t\tself.updateStatusReason = ko.computed( function(){\t\t\t\t\r\n\t\t\t\tvar statusId = self.selectedPatient.statusId();\r\n\t\t\t\tif( statusId && statusId === '1' ){\r\n\t\t\t\t\tself.selectedPatient.reasonId(null);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif( self.selectedPatient.reasonId() === null ){\r\n\t\t\t\t\t\tself.selectedPatient.setDefaultStatusReason();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\t\tctor.prototype.detached = function() { \r\n\t\t\tvar self = this;\r\n\t\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n\t\t\t\ttoken.dispose();\r\n\t\t\t});\r\n\t\t\t//computed cleanup:\r\n\t\t\tself.updateStatusReason.dispose();\t\t\t\t\r\n\t\t}\r\n        return ctor;\r\n    });\n","/**\r\n*\tmanages the display of patient system ids on the left side bar section - IDs.\r\n*\tand manages launch of the edit individual IDs screen.\r\n*\t@module system.ids\r\n*/\r\ndefine('viewmodels/patients/sections/system.ids',['services/datacontext', 'services/session', 'models/base', 'viewmodels/shell/shell'],\r\n    function (datacontext, session, modelConfig, shell) {\r\n\r\n\t\tvar ctor = function () {\r\n\t\t};\r\n\r\n\t\tctor.prototype.alphabeticalSort = function (l, r) { return (l.name().toLowerCase() == r.name().toLowerCase()) ? (l.name().toLowerCase() > r.name().toLowerCase() ? 1 : -1) : (l.name().toLowerCase() > r.name().toLowerCase() ? 1 : -1) };\r\n\r\n\t\tfunction ModalEntity( modalShowing, selectedPatient ) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.patient = ko.observable(selectedPatient);\r\n\t\t\t\tself.canSave = ko.observable();\r\n\t\t\t\tself.activationData = { selectedPatient: self.patient, showing: modalShowing, canSave: self.canSave };\r\n\t\t}\r\n\r\n\t\tfunction systemIdsSortFunc(a,b){\r\n\t\t\tif (a.system().displayLabel() && b.system().displayLabel()) {\r\n\t\t\t\tif( a.system().displayLabel() && a.system().displayLabel().toLowerCase() < b.system().displayLabel().toLowerCase() ) return -1;\r\n\t\t\t\tif( b.system().displayLabel() && a.system().displayLabel().toLowerCase() > b.system().displayLabel().toLowerCase() ) return 1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t};\r\n\r\n\t\tctor.prototype.activate = function (settings) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.settings = settings;\r\n\t\t\tself.selectedPatient = self.settings.selectedPatient;\r\n\t\t\tself.patientSystems = self.selectedPatient.patientSystems;\r\n\t\t\tself.isExpanded = ko.observable(false);\r\n\t\t\tself.showEllipsis = ko.observable(false);\r\n\t\t\tself.computedPatientSystemsDisplay = ko.computed(function () {\r\n\t\t\t\tvar systemIds = self.selectedPatient.patientSystems();\r\n\t\t\t\tvar theseIds = [];\r\n\t\t\t\tvar limitToFive = (!self.isExpanded());\r\n\t\t\t\tko.utils.arrayForEach( systemIds, function(record){\r\n\t\t\t\t\tif( Number(record.statusId()) === 1 && !record.isDeleted() ){\t//only active ids\r\n\t\t\t\t\t\tif (theseIds.length < 5 || !limitToFive) {\r\n\t\t\t\t\t\t\ttheseIds.push( record );\r\n\t\t\t\t\t\t\tself.showEllipsis(false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tself.showEllipsis(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\ttheseIds.sort( systemIdsSortFunc );\r\n\t\t\t\treturn theseIds;\r\n\t\t\t}).extend({ throttle: 15 });\r\n\t\t\t\r\n\t\t\tself.isOpen = ko.observable(false);\r\n\t\t\tself.patientSystemsModalShowing = ko.observable(false);\r\n\t\t\tself.savePatientSystems = function () {\r\n\t\t\t\tvar changes = self.processChanges();\r\n\t\t\t\tif( changes ){\r\n\t\t\t\t\t// if any deletions, wait till its deleted and only after that move on to updates / inserts\r\n\t\t\t\t\t//\treason: a primary could be deleted, in order to nominate a new primary (insert or update)\r\n\t\t\t\t\t// also - after deletions are done (if any) - if any updates - do them before inserts,\r\n\t\t\t\t\t//\tand wait untill the updates completed, before calling insert.\r\n\r\n\t\t\t\t\tif( changes.deleted.length > 0 ){\r\n\t\t\t\t\t\t//deletes\r\n\t\t\t\t\t\treturn datacontext.deletePatientSystems( changes.deleted ).then(afterDelete);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn afterDelete();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction afterDelete(){\r\n\t\t\t\t\tif( changes.updated.length > 0 ){\r\n\t\t\t\t\t\t//updates\r\n\t\t\t\t\t\treturn datacontext.savePatientSystems( changes.updated ).then( afterUpdate );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn afterUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction afterUpdate(){\r\n\t\t\t\t\tif( changes.created.length > 0 ){\r\n\t\t\t\t\t\t//inserts\r\n\t\t\t\t\t\treturn datacontext.savePatientSystems( changes.created );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn Q();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tself.cancelPatientSystems = function () {\r\n\t\t\t\tvar changes = self.processChanges();\r\n\t\t\t\tif( changes ){\r\n\t\t\t\t\tvar result = confirm('Your changes will be discarded.  Press OK to continue, or cancel to return.');\r\n\t\t\t\t\tif( result === true ){\r\n\t\t\t\t\t\t//user approved the cancel action\r\n\t\t\t\t\t\t//discard new ones\r\n\t\t\t\t\t\tko.utils.arrayForEach( changes.created, function( patSys ){\r\n\t\t\t\t\t\t\tdatacontext.detachEntity(patSys);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//undelete deleted\r\n\t\t\t\t\t\tko.utils.arrayForEach( changes.deleted, function( patSys ){\r\n\t\t\t\t\t\t\tpatSys.isDeleted(false);\r\n\t\t\t\t\t\t\tpatSys.entityAspect.rejectChanges();\t//revert possible changes done before it was deleted\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t//revert any changes\r\n\t\t\t\t\t\tko.utils.arrayForEach( changes.updated, function( patSys ){\r\n\t\t\t\t\t\t\tpatSys.entityAspect.rejectChanges();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.patientSystems.valueHasMutated();\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn false;\t//user cancelled the cancel action.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tself.processChanges = function(){\r\n\t\t\t\tvar updated = [];\r\n\t\t\t\tvar created = [];\r\n\t\t\t\tvar deleted = [];\r\n\t\t\t\tko.utils.arrayForEach( self.patientSystems(), function( patSys ){\r\n\t\t\t\t\tif( patSys.isNew() ){\r\n\t\t\t\t\t\tif( !patSys.isDeleted() ){\r\n\t\t\t\t\t\t\tcreated.push( patSys );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tconsole.log('processChanges - new and deleted should not be here.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( patSys.isDeleted() ){\r\n\t\t\t\t\t\tdeleted.push( patSys );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( patSys.entityAspect.entityState.name === 'Modified' ){\r\n\t\t\t\t\t\tupdated.push( patSys );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif( created.length || deleted.length || updated.length ){\r\n\t\t\t\t\treturn {created: created, deleted: deleted, updated: updated}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tself.modalEntityObservable = ko.observable();\r\n\t\t\tself.editSystemIds = function () {\r\n\t\t\t\tself.modalEntityObservable( new ModalEntity( self.patientSystemsModalShowing, self.selectedPatient ) );\r\n\t\t\t\tvar modalSettings = {\r\n\t\t\t\t\ttitle: 'Individual IDs',\r\n\t\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\t\tentity: self.modalEntityObservable, \r\n\t\t\t\t\ttemplatePath: 'viewmodels/templates/patient.systems', \r\n\t\t\t\t\tshowing: self.patientSystemsModalShowing, \r\n\t\t\t\t\tsaveOverride: self.savePatientSystems, \r\n\t\t\t\t\tcancelOverride: self.cancelPatientSystems, \r\n\t\t\t\t\tdeleteOverride: null, \r\n\t\t\t\t\tclassOverride: null\r\n\t\t\t\t}\r\n\t\t\t\tvar modal = new modelConfig.modal(modalSettings);\r\n\t\t\t\tshell.currentModal(modal);\r\n\t\t\t\tself.patientSystemsModalShowing(true);\r\n\t\t\t\tself.isOpen(true);\r\n\t\t\t};\r\n    \t};\r\n\r\n\t\treturn ctor;\r\n    });\r\n\n","define('viewmodels/patients/sections/task.details',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/goals/index', 'viewmodels/shell/shell'],\r\n    function (modelConfig, servicesConfig, datacontext, session, goalsIndex, shell) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        var modalShowing = ko.observable(true);\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n            self.settings = settings;\r\n            self.task = self.settings.activeTask;\r\n            self.isFullScreen = ko.observable(false);\r\n            self.isDetailsExpanded = ko.observable(false);\r\n            self.hasDetails = ko.computed( function(){\r\n                var details = self.task() ? self.task().details() : [];\r\n                return (details != null && details.length > 0);\r\n            });\r\n            self.toggleFullScreen = function () {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            };\r\n            self.toggleDetailsExpanded = function(){\r\n                var isOpen = self.isDetailsExpanded();\r\n                var details = self.task().details();\r\n                if( !details && !isOpen ){\r\n                    return;\r\n                }\r\n                self.isDetailsExpanded( !self.isDetailsExpanded() );\r\n            };\r\n\r\n            self.addBarrier = function (task) {\r\n                goalsIndex.addEntity('Barrier', task.goal()).then(doSomething);\r\n\r\n                function doSomething(barrier) {\r\n                    var newBarrierId = datacontext.createComplexType('Identifier', { id: barrier.id() });\r\n                    self.task().barrierIds().push(newBarrierId);\r\n                    self.editBarrier(barrier, 'Add Barrier');\r\n                }\r\n            };\r\n\r\n            self.editBarrier = function (barrier, msg) {\r\n                var thisGoal = barrier.goal();\r\n                var modalEntity = ko.observable(new ModalEntity(barrier, 'name'));\r\n                var saveOverride = function () {\r\n                    saveBarrier(barrier);\r\n                    saveTask(self.task());\r\n                };\r\n                var cancelOverride = function () {\r\n                    cancel(barrier);\r\n                    cancel(self.task());\r\n                    getGoalDetails(thisGoal);\r\n                };\r\n                msg = msg ? msg : 'Edit Barrier';\r\n                editEntity(msg, modalEntity, 'viewmodels/templates/barrier.edit', saveOverride, cancelOverride);\r\n            };\r\n\r\n            self.editTask = function (task) {\r\n                getGoalDetails(task.goal());\r\n                var modalEntity = ko.observable(new ModalEntity(task, 'description'));\r\n                var saveOverride = function () {\r\n                    saveTask(task)\r\n                };\r\n                var cancelOverride = function () {\r\n                    cancel(task);\r\n                    getGoalDetails(task.goal());\r\n                };\r\n                editEntity('Edit Task', modalEntity, 'viewmodels/templates/task.edit', saveOverride, cancelOverride);\r\n            };\r\n            self.deleteTask = function (task) {\r\n                var result = confirm('You are about to delete a task.  Press OK to continue, or cancel to return without deleting.');\r\n                if (result === true) {\r\n                    var thisGoal = task.goal();\r\n                    task.entityAspect.rejectChanges();\r\n                    task.deleteFlag(true);\r\n                    datacontext.saveTask(task).then(saveCompleted);\r\n                    self.settings.activeTask(null);\r\n\r\n                    function saveCompleted() {\r\n                        if (task && task.goal()) {\r\n                            task.goal().tasks.remove(task);\r\n                        }\r\n                        if (task && task.patientGoalId) {\r\n                            task.patientGoalId(null);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            };\r\n        };\r\n\r\n        function editEntity (msg, entity, path, saveoverride, canceloverride) {\r\n            var modalSettings = {\r\n                title: msg,\r\n                showSelectedPatientInTitle: true,\r\n                entity: entity,\r\n                templatePath: path,\r\n                showing: modalShowing,\r\n                saveOverride: saveoverride,\r\n                cancelOverride: canceloverride,\r\n                deleteOverride: null,\r\n                classOverride: null\r\n            }\r\n            var modal = new modelConfig.modal(modalSettings);\r\n            modalShowing(true);\r\n            shell.currentModal(modal);\r\n        }\r\n\r\n        function saveBarrier (barrier) {\r\n            barrier.checkAppend();\r\n            datacontext.saveBarrier(barrier);\r\n        }\r\n\r\n        function saveTask (task) {\r\n            task.checkAppend();\r\n            datacontext.saveTask(task);\r\n        }\r\n\r\n        function cancel (item) {\r\n            item.entityAspect.rejectChanges();\r\n        }\r\n\r\n        return ctor;\r\n\r\n        function getGoalDetails(goal) {\r\n            goalsIndex.getGoalDetails(goal, true);\r\n        }\r\n\r\n        function ModalEntity(entity, reqpropname) {\r\n            var self = this;\r\n            self.entity = entity;\r\n            self.activationData = { entity: self.entity };\r\n            self.canSave = ko.computed(function () {\r\n                var result = self.entity[reqpropname]();\r\n                return result;\r\n            });\r\n        }\r\n\r\n    });\n","define('viewmodels/patients/tabs/action.details',['services/datacontext', 'viewmodels/shell/shell', 'models/base', 'services/dataservices/programsservice'], function (datacontext, shell, modelConfig, programsService) {\r\n\r\n    ko.extenders.isShowing = function (target, value) {\r\n        target().showing = ko.observable(value);\r\n        target.subscribe(function (newValue) {\r\n            var isshowing = newValue.length > 0;\r\n            target().showing(isshowing);\r\n        });\r\n    };\r\n\r\n    var objectiveSort = function (l, r) { return (l.objective().name() == r.objective().name()) ? (l.objective().name() > r.objective().name() ? 1 : -1) : (l.objective().name() > r.objective().name() ? 1 : -1) };\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n        self.modalShowing = ko.observable(false);\r\n        self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.tab = self.settings.tab;\r\n        self.activeAction = self.settings.activeAction;\r\n        self.modalEntity().action(self.activeAction);\r\n        self.saveOverride = function () {\r\n            // If the action already has changes,\r\n            var programId = self.activeAction.module().programId();\r\n            var patientId = self.activeAction.module().program().patientId();\r\n            // Grab the element state so we can reassign it after it is saved\r\n            var elementStateId = self.activeAction.elementState();\r\n            self.activeAction.entityAspect.acceptChanges();\r\n            datacontext.savePlanElemAttr(self.activeAction, programId, patientId).then(saveCompleted);\r\n\r\n            function saveCompleted() {\r\n                // Reassign the element state\r\n                self.activeAction.elementState(elementStateId);\r\n            }\r\n        };\r\n        self.cancelOverride = function () {\r\n            // Grab the element state so we can reassign it after it is cancelled\r\n            var elementStateId = self.activeAction.elementState();            \r\n            datacontext.cancelEntityChanges(self.modalEntity().action());\r\n            self.activeAction.elementState(elementStateId);            \r\n        };\r\n        self.availableHistoricalActions = settings.availableHistoricalActions;\r\n        self.selectedHistoricalAction = settings.selectedHistoricalAction;\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Individual Attributes',\r\n\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\tentity: self.modalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/action.edit', \r\n\t\t\tshowing: self.modalShowing, \r\n\t\t\tsaveOverride: self.saveOverride, \r\n\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: null\r\n\t\t}\r\n        self.modal = new modelConfig.modal(modalSettings);\r\n        self.descriptionSectionOpen = ko.observable(false);\r\n        self.individualAttributesSectionOpen = ko.observable(true);\r\n        self.attributesSectionOpen = ko.observable(false);\r\n        self.objectivesSectionOpen = ko.observable(false);        \r\n        self.shouldBeShowing = (self.activeAction && self.activeAction.objectives()) ? self.activeAction.objectives().length > 0 : false;\r\n        self.computedObjectives = ko.computed(function () {\r\n            var theseObjectives = [];\r\n            if (self.settings.activeAction && self.settings.activeAction.objectives()) {\r\n                var theseObjectives = self.settings.activeAction.objectives().sort(objectiveSort);\r\n            }\r\n            return theseObjectives;\r\n        }).extend({ isShowing: self.shouldBeShowing });\r\n        self.historicalComputedObjectives = ko.computed(function () {\r\n            var theseObjectives = [];\r\n            if (self.settings.activeAction && self.settings.activeAction.objectives()) {\r\n                var theseObjectives = self.settings.activeAction.objectives().sort(objectiveSort);\r\n            }\r\n            return theseObjectives;\r\n        }).extend({ isShowing: self.shouldBeShowing });\r\n        self.toggleModalShowing = function ()  {\r\n            shell.currentModal(self.modal);\r\n            self.modalShowing(!self.modalShowing());\r\n        };\r\n        self.canEdit = ko.computed(function () {\r\n            var result = self.activeAction && self.activeAction.elementStateModel().name() !== 'Completed';\r\n            return result;\r\n        });\r\n    };\r\n    \r\n    return ctor;\r\n\r\n    function ModalEntity(modalShowing) {\r\n        var self = this;\r\n        self.action = ko.observable();\r\n        self.canSaveObservable = ko.observable(!datacontext.programsSaving);\r\n        self.canSave = ko.computed({\r\n            read: function () {\r\n                return !datacontext.programsSaving() && self.canSaveObservable();\r\n            },\r\n            write: function (newValue) {\r\n                self.canSaveObservable(newValue);\r\n            }\r\n        });\r\n        // Object containing parameters to pass to the modal\r\n        self.activationData = { action: self.action, canSave: self.canSave, showing: modalShowing  };\r\n    }\r\n\r\n    function checkForActionChanges(action) {\r\n        ko.utils.arrayForEach(action.steps.peek(), function (step) {\r\n            if (step.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                return true;\r\n            }\r\n            ko.utils.arrayForEach(step.responses.peek(), function (response) {\r\n                if (response.entityAspect.entityState.isAddedModifiedOrDeleted()) {\r\n                    return true;\r\n                }\r\n            });\r\n        });\r\n        return false;\r\n    }\r\n\r\n});\n","define('viewmodels/patients/tabs/action.steps',['viewmodels/shell/shell', 'viewmodels/patients/data/index', 'viewmodels/patients/careplan/index', 'models/base', 'services/datacontext'], function (shell, dataIndex, carePlanIndex, modelConfig, datacontext) {\r\n    \r\n    var ctor = function () {\r\n        var self = this;\r\n    };\r\n\r\n    ctor.prototype.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n\r\n    function ModalEntity() {\r\n        var self = this;\r\n        self.activeDataType = ko.observable();\r\n        self.selectedPatient = dataIndex.selectedPatient;\r\n        self.showDropdown = true;\r\n        self.showActions = false;\r\n        // Object containing parameters to pass to the modal\r\n        self.activationData = { selectedPatient: self.selectedPatient, activeDataType: self.activeDataType, showDropdown: self.showDropdown, showActions: self.showActions };\r\n        self.canSave = ko.observable(true);\r\n    }\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;        \r\n        self.tab = self.settings.tab;\r\n        self.activeAction = self.settings.activeAction;        \r\n        self.availableHistoricalActions = settings.availableHistoricalActions;\r\n        self.selectedHistoricalAction = settings.selectedHistoricalAction;\r\n        self.modalShowing = ko.observable(false);\r\n        self.programsSaving = ko.computed(datacontext.programsSaving);\r\n        self.modalEntity = ko.observable(new ModalEntity());\r\n        self.saveOverride = function () {\r\n            self.modalEntity().activeDataType(null);\r\n            dataIndex.saveAllData();\r\n        };\r\n        self.cancelOverride = function () {\r\n            self.modalEntity().activeDataType(null);\r\n            dataIndex.cancelDataEntry();\r\n        };\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Data Entry',\r\n\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\tentity: self.modalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/clinical.dataentry', \r\n\t\t\tshowing: self.modalShowing, \r\n\t\t\tsaveOverride: self.saveOverride, \r\n\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: 'modal-lg'\r\n\t\t}\r\n        self.modal = new modelConfig.modal(modalSettings);\r\n        self.toggleModalShowing = function () {\r\n\t\t\tshell.currentModal(self.modal);\r\n            self.modalShowing(!self.modalShowing());\r\n        }\r\n    };\r\n    \r\n    return ctor;\r\n});\n","define('viewmodels/patients/tabs/module.details',['services/datacontext', 'viewmodels/shell/shell', 'models/base'], function (datacontext, shell, modelConfig) {\r\n\r\n    ko.extenders.isShowing = function (target, value) {\r\n        target().showing = ko.observable(value);\r\n        target.subscribe(function (newValue) {\r\n            var isshowing = newValue.length > 0;\r\n            target().showing(isshowing);\r\n        });\r\n    };\r\n\r\n    var objectiveSort = function (l, r) { return (l.objective().name() == r.objective().name()) ? (l.objective().name() > r.objective().name() ? 1 : -1) : (l.objective().name() > r.objective().name() ? 1 : -1) };\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n        self.modalShowing = ko.observable(false);\r\n        self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.tab = self.settings.tab;\r\n        self.activeModule = self.settings.activeModule;\r\n        self.modalEntity().module(self.activeModule);\r\n        self.saveOverride = function () {\r\n            var inProgActs = getInProgressActions(self.activeModule);\r\n            // Accept the modules changes\r\n            self.activeModule.entityAspect.acceptChanges();\r\n            // Go through and accept changes for each action\r\n            ko.utils.arrayForEach(self.activeModule.actions(), function (act) {\r\n                act.entityAspect.acceptChanges();\r\n            });\r\n            var programId = self.activeModule.programId();\r\n            var patientId = self.activeModule.program().patientId();\r\n            datacontext.savePlanElemAttr(self.activeModule, programId, patientId).then(saveCompleted);\r\n\r\n            function saveCompleted() {\r\n                setInProgressActions(inProgActs);\r\n            }\r\n        };\r\n        self.cancelOverride = function () {\r\n            datacontext.cancelEntityChanges(self.modalEntity().module());\r\n        };\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle:'Individual Attributes' ,\r\n\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\tentity: self.modalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/module.edit', \r\n\t\t\tshowing: self.modalShowing, \r\n\t\t\tsaveOverride: self.saveOverride, \r\n\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: null\r\n\t\t}\r\n        self.modal = new modelConfig.modal(modalSettings);\r\n\r\n\r\n\r\n        self.descriptionSectionOpen = ko.observable(false);\r\n        self.individualAttributesSectionOpen = ko.observable(true);\r\n        self.attributesSectionOpen = ko.observable(false);\r\n        self.objectivesSectionOpen = ko.observable(false);        \r\n        self.shouldBeShowing = (self.activeModule && self.activeModule.objectives()) ? self.activeModule.objectives().length > 0 : false;\r\n        self.computedObjectives = ko.computed(function () {\r\n            var theseObjectives = [];\r\n            if (self.settings.activeModule && self.settings.activeModule.objectives()) {\r\n                var theseObjectives = self.settings.activeModule.objectives().sort(objectiveSort);   \r\n            }\r\n            return theseObjectives;\r\n        }).extend({ isShowing: self.shouldBeShowing });\r\n        self.toggleModalShowing = function ()  {\r\n            shell.currentModal(self.modal);\r\n            self.modalShowing(!self.modalShowing());\r\n        };        \r\n        self.canEdit = ko.computed(function () {\r\n            var result = self.activeModule && self.activeModule.elementStateModel().name() !== 'Completed';\r\n            return result;\r\n        });\r\n    };\r\n    \r\n    return ctor;\r\n\r\n    function ModalEntity(modalShowing) {\r\n        var self = this;\r\n        self.module = ko.observable();\r\n        self.canSaveObservable = ko.observable(!datacontext.programsSaving);\r\n        self.canSave = ko.computed({\r\n            read: function () {\r\n                return !datacontext.programsSaving() && self.canSaveObservable();\r\n            },\r\n            write: function (newValue) {\r\n                self.canSaveObservable(newValue);\r\n            }\r\n        });\r\n        // Object containing parameters to pass to the modal\r\n        self.activationData = { module: self.module, canSave: self.canSave, showing: modalShowing };\r\n    }\r\n\r\n    function getInProgressActions(module) {\r\n        var theseActions = ko.utils.arrayFilter(module.actions(), function (act) {\r\n            // Add actions with element state of 4\r\n            return act.elementState() === 4;\r\n        });\r\n        return theseActions;\r\n    }\r\n\r\n    function setInProgressActions(actions) {\r\n        ko.utils.arrayForEach(actions, function (act) {\r\n            if (act.elementState() !== 4) {\r\n                act.stateUpdatedOn(new moment().toISOString());\r\n                act.elementState(4);\r\n            }\r\n        });\r\n    }\r\n});\n","define('viewmodels/patients/tabs/module.objectives',[], function () {\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n    };\r\n\r\n    ko.extenders.isShowing = function (target, value) {\r\n        target().showing = ko.observable(value);\r\n        target.subscribe(function (newValue) {\r\n            var isshowing = newValue.length > 0;\r\n            target().showing(isshowing);\r\n        });\r\n    };\r\n\r\n    var objectiveSort = function (l, r) { return (l.objective().name() == r.objective().name()) ? (l.objective().name() > r.objective().name() ? 1 : -1) : (l.objective().name() > r.objective().name() ? 1 : -1) };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.tab = self.settings.tab;\r\n        self.activeProgram = self.settings.activeProgram;\r\n        // A quick variable to decide on instantiation whether it should be showing or not\r\n        self.shouldBeShowing = self.activeProgram.objectives() ? self.activeProgram.objectives().length > 0 : false;\r\n        self.computedObjectives = ko.computed(function () {\r\n            var theseObjectives = [];\r\n            if (self.settings.activeProgram && self.settings.activeProgram.objectives()) {\r\n                var theseObjectives = self.settings.activeProgram.objectives().sort(objectiveSort);   \r\n            }\r\n            return theseObjectives;\r\n        }).extend({ isShowing: self.shouldBeShowing });\r\n    };\r\n\r\n    return ctor;\r\n});\n","define('viewmodels/patients/tabs/program.details',['services/datacontext', 'viewmodels/shell/shell', 'models/base'], function (datacontext, shell, modelConfig) {\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n        self.modalShowing = ko.observable(false);\r\n        self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.tab = self.settings.tab;\r\n        self.activeProgram = self.settings.activeProgram;\r\n        self.modalEntity().program(self.activeProgram);\r\n        self.saveOverride = function () {\r\n            var inProgActs = getInProgressActions(self.activeProgram);\r\n            // Accept the modules changes\r\n            self.activeProgram.entityAspect.acceptChanges();\r\n            // Go through and accept changes for each action\r\n            ko.utils.arrayForEach(self.activeProgram.modules(), function (mod) {\r\n                ko.utils.arrayForEach(mod.actions(), function (act) {\r\n                    act.entityAspect.acceptChanges();\r\n                });\r\n            });\r\n            var programId = self.activeProgram.id();\r\n            var patientId = self.activeProgram.patientId();\r\n            datacontext.savePlanElemAttr(self.activeProgram, programId, patientId).then(saveCompleted);\r\n\r\n            function saveCompleted() {\r\n                setInProgressActions(inProgActs);\r\n            }\r\n        };\r\n        self.cancelOverride = function () {\r\n            datacontext.cancelEntityChanges(self.modalEntity().program());\r\n        };\r\n\t\tvar modalSettings = {\r\n\t\t\ttitle: 'Individual Attributes',\r\n\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\tentity: self.modalEntity, \r\n\t\t\ttemplatePath: 'viewmodels/templates/program.edit', \r\n\t\t\tshowing: self.modalShowing, \r\n\t\t\tsaveOverride: self.saveOverride, \r\n\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\tdeleteOverride: null, \r\n\t\t\tclassOverride: null\r\n\t\t}\r\n        self.modal = new modelConfig.modal(modalSettings);\r\n        self.descriptionSectionOpen = ko.observable(false);\r\n        self.individualAttributesSectionOpen = ko.observable(true);\r\n        self.attributesSectionOpen = ko.observable(false);\r\n        self.toggleModalShowing = function ()  {\r\n            shell.currentModal(self.modal);\r\n            self.modalShowing(!self.modalShowing());\r\n        };\r\n        self.canEdit = ko.computed(function () {\r\n            var result = self.activeProgram && self.activeProgram.elementStateModel().name() !== 'Completed' && self.activeProgram.elementStateModel().name() !== 'Closed';\r\n            return result;\r\n        });\r\n    };\r\n    \r\n    return ctor;\r\n\r\n    function ModalEntity(modalShowing) {\r\n        var self = this;\r\n        self.program = ko.observable();\r\n        self.canSaveObservable = ko.observable(!datacontext.programsSaving);\r\n        self.canSave = ko.computed({\r\n            read: function () {\r\n                return !datacontext.programsSaving() && self.canSaveObservable();\r\n            },\r\n            write: function (newValue) {\r\n                self.canSaveObservable(newValue);\r\n            }\r\n        });\r\n        // Object containing parameters to pass to the modal\r\n        self.activationData = { program: self.program, canSave: self.canSave, showing: modalShowing };\r\n    }\r\n\r\n    function getInProgressActions(program) {\r\n        var theseActions = [];\r\n        ko.utils.arrayForEach(program.modules(), function (mod) {\r\n            ko.utils.arrayForEach(mod.actions(), function (act) {\r\n                // Add actions with element state of 4\r\n                if (act.elementState() === 4) {\r\n                    theseActions.push(act);\r\n                }\r\n            });\r\n        });\r\n        return theseActions;\r\n    }\r\n\r\n    function setInProgressActions(actions) {\r\n        ko.utils.arrayForEach(actions, function (act) {\r\n            if (act.elementState() !== 4) {\r\n                act.stateUpdatedOn(new moment().toISOString());\r\n                act.elementState(4);\r\n            }\r\n        });\r\n    }\r\n});\n","define('viewmodels/patients/tabs/program.goals',[], function () {\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.tab = self.settings.tab;\r\n        self.activeProgram = self.settings.activeProgram;\r\n    };\r\n\r\n    return ctor;\r\n});\n","define('viewmodels/patients/tabs/program.objectives',[], function () {\r\n\r\n    var ctor = function () {\r\n        var self = this;\r\n    };\r\n\r\n    ko.extenders.isShowing = function (target, value) {\r\n        target().showing = ko.observable(value);\r\n        target.subscribe(function (newValue) {\r\n            var isshowing = newValue.length > 0;\r\n            target().showing(isshowing);\r\n        });\r\n    };\r\n\r\n    var objectiveSort = function (l, r) { return (l.objective().name() == r.objective().name()) ? (l.objective().name() > r.objective().name() ? 1 : -1) : (l.objective().name() > r.objective().name() ? 1 : -1) };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.tab = self.settings.tab;\r\n        self.activeProgram = self.settings.activeProgram;\r\n        // A quick variable to decide on instantiation whether it should be showing or not\r\n        self.shouldBeShowing = self.activeProgram.objectives() ? self.activeProgram.objectives().length > 0 : false;\r\n        self.computedObjectives = ko.computed(function () {\r\n            var theseObjectives = [];\r\n            if (self.settings.activeProgram && self.settings.activeProgram.objectives()) {\r\n                var theseObjectives = self.settings.activeProgram.objectives().sort(objectiveSort);   \r\n            }\r\n            return theseObjectives;\r\n        }).extend({ isShowing: self.shouldBeShowing });\r\n    };\r\n\r\n    return ctor;\r\n});\n","/**\r\n*\r\n*\t@module careMember.details\r\n*/\r\n\r\ndefine('viewmodels/patients/team/careMember.details',[], \r\n\tfunction(){\r\n\t\r\n\t\tvar activeDetailsTab = ko.observable('Relationship');\r\n\t\t\r\n\t\tfunction setActiveDetailsTab( name ){\r\n\t\t\tactiveDetailsTab(name);\t\r\n\t\t}\r\n\t\t\t\r\n\t\tfunction activate( settings ){\r\n\t\t\tvar self = this;\r\n\t\t\tself.careMember = settings.member;\r\n\t\t\tself.isCareMemberSelected = ko.computed( function(){\r\n\t\t\t\treturn (self.careMember && self.careMember()) ? true : false;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.primaryCommunications = ko.computed(function () {\r\n                // Get the primary communication types and return them\r\n                var communications = [];\r\n                var contactcard = self.careMember() ? self.careMember().contact() : null;\r\n                if (contactcard) {\r\n                    var prefPhone = ko.utils.arrayFirst(contactcard.phones(), function (phone) {\r\n                        return phone.phonePreferred();\r\n                    });\r\n                    if (prefPhone) {\r\n                        prefPhone.template = 'templates/phone.html';\r\n                        communications.push(prefPhone);\r\n                    }\r\n                    var prefText = ko.utils.arrayFirst(contactcard.phones(), function (phone) {\r\n                        return phone.textPreferred();\r\n                    });\r\n                    if (prefText && prefText !== prefPhone) {\r\n                        prefText.template = 'templates/phone.html';\r\n                        communications.push(prefText);\r\n                    }\r\n                    var prefEmail = ko.utils.arrayFirst(contactcard.emails(), function (email) {\r\n                        return email.preferred();\r\n                    });\r\n                    if (prefEmail) {\r\n                        prefEmail.template = 'templates/email.html';\r\n                        communications.push(prefEmail);\r\n                    }\r\n                    var prefAddress = ko.utils.arrayFirst(contactcard.addresses(), function (address) {\r\n                        return address.preferred();\r\n                    });\r\n                    if (prefAddress) {\r\n                        prefAddress.template = 'templates/address.html';\r\n                        communications.push(prefAddress);\r\n                    }\r\n                }\r\n                // Return the list of preferred communications\r\n                return communications;\r\n            }).extend({ throttle: 25 });\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tvar detailsTabs = ko.observableArray([\r\n\t\t\t\tnew Tab('Relationship', null, '/NightingaleUI/Content/images/nav_population.png', 'Phone blue small'),\r\n                new Tab('Profile', null, '/NightingaleUI/Content/images/patient_neutral_small.png', 'Phone blue small'),\r\n\t\t\t\tnew Tab('Comm', 'icon-phone blue', null)\r\n\t\t\t\t//new Tab('Professional', null, '/NightingaleUI/Content/images/settings_blue.png', 'Phone blue small')\r\n\t\t]);\r\n\t\t\r\n\t\tfunction Tab(name, cssClass, imgSource, imgAlt){\r\n\t\t\tvar self = this;\r\n\t\t\tself.name = name;\r\n\t\t\tself.cssClass = cssClass;\r\n\t\t\tself.imgSource = imgSource;\r\n\t\t\tself.imgAlt = imgAlt;\r\n\t\t\tself.isShowing = true;\r\n\t\t\t//self.hasErrors = ko.observable(false);\r\n\t\t};\r\n\t\t\r\n\t\tvar detailsTabIndex = {\r\n\t\t\tprofile: 0,\r\n\t\t\tprofessional: 1,\r\n\t\t\tcomm: 2,\r\n\t\t\trelationship: 3\r\n\t\t}\r\n\t\t\r\n\t\t//ctor.prototype.activeDetailsTab = ko.observable();\t\t\r\n\t\t//return ctor;\r\n\t\tvar vm = {\t\t\t\r\n\t\t\tactivate: activate,\r\n\t\t\tdetailsTabs: detailsTabs,\r\n\t\t\tsetActiveDetailsTab: setActiveDetailsTab,\r\n\t\t\tactiveDetailsTab: activeDetailsTab\t\t\t\r\n\t\t};\r\n\t\treturn vm;\r\n});\n","define('viewmodels/patients/widgets/action.details',['services/datacontext', 'viewmodels/patients/careplan/index'],\r\n    function (datacontext, carePlanIndex) {\r\n\r\n        function tab (name, path, activeTab) {\r\n            var self = this;\r\n            self.name = ko.observable(name);\r\n            self.path = ko.observable(path);\r\n            self.isActive = ko.computed(function () {\r\n                var thisActiveTab = activeTab();\r\n                return (thisActiveTab && thisActiveTab.name() === self.name());\r\n            });\r\n        };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.activeTab = ko.observable();\r\n            self.tabs = ko.observableArray([\r\n                new tab('Steps', 'viewmodels/patients/tabs/action.steps', self.activeTab),\r\n                new tab('Details', 'viewmodels/patients/tabs/action.details', self.activeTab)\r\n            ]);\r\n            self.actionActions = ko.observableArray([{ text: ko.observable('Repeat') }]);\r\n            self.selectedAction = ko.observable();\r\n            self.selectedHistoricalAction = ko.observable();\r\n            self.programsSaving = ko.computed(datacontext.programsSaving);\t\t\t\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.activeAction = self.settings.activeAction;\r\n            // Change tab to default tab when action changes\r\n            self.activeActionToken = self.activeAction.subscribe(function () {\r\n                self.activeTab(self.tabs()[0]);\r\n            });\r\n\t\t\tself.disableActionActions = ko.computed( function(){\r\n\t\t\t\tvar isSaving = datacontext.programsSaving();\r\n\t\t\t\tvar activeAction = self.activeAction();\r\n\t\t\t\tvar isLoading = activeAction? activeAction.isLoading() : false;\r\n\t\t\t\treturn isSaving || isLoading;\r\n\t\t\t});\r\n            self.selectedAction.subscribe(function (newValue) {\r\n                if (newValue && newValue.text() === 'Repeat') {\r\n                    if (self.activeAction().completed() && self.activeAction().module().program().elementStateModel().name() === 'In Progress' && !datacontext.programsSaving()) {\r\n                        datacontext.repeatAction(self.activeAction()).then(repeatCompleted);\r\n                        self.selectedAction(null);\r\n                    } else {\r\n                        datacontext.createAlert(0, 'The action cannot be repeated');\r\n                        self.selectedAction(null);\r\n                    }\r\n                }\r\n\r\n                function repeatCompleted() {\r\n                    var repeatedAction = datacontext.getRepeatedAction(self.activeAction());\r\n                    self.activeAction(repeatedAction);\r\n                }\r\n            });\r\n            self.availableHistoricalActions = ko.computed(function () {\r\n                var tempArray = [];\r\n                if (self.activeAction()) {\r\n                    tempArray = self.activeAction().history();\r\n                }\r\n                return tempArray;\r\n            });\r\n            self.selectedHistoricalAction(self.availableHistoricalActions()[0]);\r\n            self.availableHistoricalActionsComputed = ko.computed(function () {\r\n                // Subscribe to availableHistoricalActions\r\n                var theseactions = self.availableHistoricalActions();\r\n                if (theseactions.length > 0) {\r\n                    self.selectedHistoricalAction(theseactions[0]);                    \r\n                }\r\n                return false;\r\n            }).extend({ throttle: 50 });\r\n            self.selectedActionToken = self.selectedHistoricalAction.subscribe(function (newValue) {\r\n                // Appears to be setting the value too quickly and the new available values haven't loaded, HACK\r\n                setTimeout(function () {\r\n                    if (newValue && newValue.steps().length === 0) {\r\n                        carePlanIndex.getStepsForAction(newValue);\r\n                    }\r\n                }, 50);\r\n            });\r\n            self.isFullScreen = ko.observable(false);\r\n            self.toggleFullScreen = function () {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            };\r\n            self.setActiveTab = function (sender) {\r\n                self.activeTab(sender);\r\n            };\r\n            self.activeTab(self.tabs()[0]);\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        ctor.prototype.deactivate = function () {\r\n            var self = this;\r\n            if (self.selectedActionToken) {\r\n                self.selectedActionToken.dispose();\r\n            }\r\n            if (self.activeActionToken) {\r\n                self.activeActionToken.dispose();\r\n            }\r\n        }\r\n\t\t\r\n\t\tctor.prototype.detached = function() {\r\n\t\t\tvar self = this;\r\n\t\t\tself.availableHistoricalActionsComputed.dispose();\r\n\t\t\tself.availableHistoricalActions.dispose();\r\n\t\t\tself.disableActionActions.dispose();\r\n\t\t\tself.programsSaving.dispose();\r\n\t\t\tko.utils.arrayForEach( self.tabs, function( tab ){\r\n\t\t\t\ttab.isActive.dispose();\r\n\t\t\t});\r\n\t\t}\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/widgets/allergies',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/medications/index', 'viewmodels/shell/shell', 'viewmodels/patients/data/index', 'viewmodels/patients/index'],\r\n    function (modelConfig, servicesConfig, datacontext, session, medicationsIndex, shell, dataIndex, patientsIndex) {\r\n\r\n        // var modalShowing = ko.observable(true);\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.widget = self.settings.widget;\r\n            self.allergyTypes = ko.computed(datacontext.enums.allergyTypes);\r\n            self.selectedAllergyTypes = ko.observableArray();\r\n            self.allergyStatuses = ko.computed(datacontext.enums.allergyStatuses);\r\n            // Set the initial allergy status to be active\r\n            var initialStatus = ko.utils.arrayFirst(self.allergyStatuses(), function (algsts) {\r\n                // Only return the active status\r\n                return algsts.name() === 'Active';\r\n            });\r\n            self.selectedAllergyStatuses = ko.observableArray([initialStatus]);\r\n            self.canReset = ko.computed(function () {\r\n                var statuses = self.selectedAllergyStatuses();\r\n                var types = self.selectedAllergyTypes();\r\n                // Check if it is still in the initial state\r\n                var idsMatch = (statuses.length > 0 && '1' === statuses[0].id());\r\n                if (statuses.length === 1 && idsMatch && types.length === 0) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n            self.resetFilters = function () {\r\n                self.selectedAllergyTypes([]);\r\n                self.selectedAllergyStatuses([initialStatus]);\r\n            };\r\n            self.refreshData = function () {\r\n                patientsIndex.getPatientsAllergies();\r\n            };\r\n            self.allergySaving = ko.computed(datacontext.allergySaving);\r\n            self.selectedSortColumn = ko.observable();\r\n            self.myComputedAllergies = ko.observableArray();\r\n            self.myAllergies = ko.computed(function () {\r\n                // var theseAllergies = self.selectedPatient().allergies();\r\n                var selectedallergytypes = self.selectedAllergyTypes();\r\n                var selectedallergystatuses = self.selectedAllergyStatuses();\r\n                var selectedpatient = self.selectedPatient();\r\n                var theseAllergies = [];\r\n                //Subscribe to localcollection todos\r\n                var allAllergies = self.selectedPatient().allergies();\r\n\r\n                var orderProp = self.selectedSortColumn() ? self.selectedSortColumn() : 'allergyName';\r\n                // Add the second and third orders to the string\r\n                var finalOrderString = orderProp;\r\n                // Go get the todos\r\n                //theseAllergies = datacontext.getInterventionsQuery(params, orderProp);\r\n                var finalallergies = [];\r\n\r\n                var params = [];\r\n                params.push(new modelConfig.Parameter('patientId', selectedpatient.id(), '=='));\r\n\r\n                var patientId = self.selectedPatient().id();\r\n                finalallergies = datacontext.getPatientAllergiesQuery(params, orderProp);\r\n                // If allergy types were selected,\r\n                if (selectedallergytypes.length > 0) {\r\n                    // For each of the selected types,\r\n                    ko.utils.arrayForEach(selectedallergytypes, function (allgtypeid) {\r\n                        // Filter out allergies that don't match the type selected\r\n                        var tempAllergies = ko.utils.arrayFilter(finalallergies, function (allg) {\r\n                            var matches = ko.utils.arrayFirst(allg.allergyTypeIds(), function (ati) {\r\n                                return ati.id() === allgtypeid.id();\r\n                            })\r\n                            return !!matches;\r\n                        });\r\n                        // Check if we have already added the allergy\r\n                        ko.utils.arrayForEach(tempAllergies, function (temps) {\r\n                            // If not,\r\n                            if (theseAllergies.indexOf(temps) === -1) {\r\n                                // Add it\r\n                                theseAllergies.push(temps);\r\n                            }\r\n                        });\r\n                    });\r\n                    finalallergies = theseAllergies;\r\n                }\r\n                if (selectedallergystatuses.length !== 0) {\r\n                    finalallergies = finalallergies.filter(function (allergy) {\r\n                        var statusIdFilters = [];\r\n                        ko.utils.arrayForEach(selectedallergystatuses, function (status) {\r\n                            // params.push(new modelConfig.Parameter('statusId', status.id(), '=='));\r\n                            statusIdFilters.push(status.id());\r\n                        });\r\n                        if (statusIdFilters.indexOf(allergy.statusId()) !== -1) {\r\n                            return true;\r\n                        }\r\n                    });\r\n                }\r\n                return finalallergies;\r\n            });\r\n            self.activeAllergyColumns = ko.computed(function () {\r\n                return ['expand','name','severity-small','status'];\r\n            });\r\n            self.toggleAllergySort = function (sender) {\r\n                // If the current column is the one to sort by\r\n                if (self.selectedSortColumn() && self.selectedSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                    // If it ends in desc\r\n                    if (self.selectedSortColumn() && self.selectedSortColumn().substr(self.selectedSortColumn().length - 4, 4) === 'desc' ) {\r\n                        // Clear the sort column, as it should be undone\r\n                        self.selectedSortColumn(null);\r\n                    } else {\r\n                        // Else set it as the sort column\r\n                        self.selectedSortColumn(sender.sortProperty + ' desc');\r\n                    }\r\n                } else {\r\n                    // Else set it as the new sort column\r\n                    self.selectedSortColumn(sender.sortProperty);\r\n                }\r\n            };\r\n            self.isOpen = self.widget.isOpen;\r\n            self.isFullScreen = self.widget.isFullScreen;\r\n            self.filtersHeaderOpen = ko.observable(true);\r\n            self.filtersOpen = ko.observable(false);\r\n            self.toggleHeaderOpen = function  (sender, widgetOpen) {\r\n                if (widgetOpen()) {\r\n                    sender(!sender());\r\n                }\r\n            }\r\n            self.toggleFullScreen = function (sender) {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            }\r\n            // Toggle whether the widget is open or not\r\n            self.toggleWidgetOpen = function (sender) {\r\n                // Find how many widgets are open\r\n                var openwidgets = ko.utils.arrayFilter(self.widget.column.widgets(), function (wid) {\r\n                    return wid.isOpen();\r\n                });\r\n                // If the widget is the only open widget\r\n                if (openwidgets.length === 1 && openwidgets[0] === self.widget) {\r\n                    // Do nothing\r\n                } else {\r\n                    sender.isOpen(!sender.isOpen());\r\n                }\r\n            };\r\n            self.addAllergy = function (goal) {\r\n                dataIndex.addData();\r\n                // dataIndex.activeDataType(dataIndex.allergiesType);\r\n                // dataIndex.modalEntity().activeDataType(dataIndex.allergiesType);\r\n\r\n                function doSomething(task) {\r\n                    // Show the modal\r\n                    //self.editAllergy(task, 'Add Task');\r\n                }\r\n            };\r\n            self.editAllergy = function (task, msg) {\r\n                var thisGoal = task.goal();\r\n                // Edit this task\r\n                var modalEntity = ko.observable(new ModalEntity(task, 'description'));\r\n                var saveOverride = function () {\r\n                    saveTask(task);\r\n                };\r\n                var cancelOverride = function () {\r\n                    cancel(task);\r\n                    getGoalDetails(thisGoal);\r\n                };\r\n                msg = msg ? msg : 'Edit Task';\r\n                editEntity(msg, modalEntity, 'viewmodels/templates/task.edit', saveOverride, cancelOverride);\r\n            };\r\n        };\r\n\r\n        ctor.prototype.toggleExpand = function (sender) {\r\n            sender.isExpanded(!sender.isExpanded());\r\n            if (!sender.isOpen()) {\r\n                sender.isOpen(true);\r\n            }\r\n        };\r\n\r\n        ctor.prototype.addEntity = function (type, goal, startDate, assignedToId) {\r\n            var self = this;\r\n            var thisPatientId = self.selectedPatient().id();\r\n            var thisGoalId = goal.id();\r\n            return datacontext.initializeEntity(null, type, thisPatientId, thisGoalId).then(entityReturned);\r\n\r\n            function entityReturned(data) {\r\n                var thisId = data.httpResponse.data.Id;\r\n                if (thisId) {\r\n                    var params = {};\r\n                    params.id = thisId;\r\n                    params.patientGoalId = thisGoalId;\r\n                    params.statusId = 1;\r\n                    if (startDate) {\r\n                        params.startDate = startDate;\r\n                    }\r\n                    if (assignedToId) {\r\n                        params.assignedToId = assignedToId;\r\n                    }\r\n                    var thisEntity = datacontext.createEntity(type, params);\r\n                    return thisEntity;\r\n                }\r\n                else {\r\n                    var thisTask = data.results[0];\r\n                    thisTask.startDate(new Date());\r\n                    thisTask.statusId(1);\r\n                    thisTask.patientGoalId(thisGoalId);\r\n                    return thisTask;\r\n                }\r\n            }\r\n        };\r\n\r\n        return ctor;\r\n\r\n        function save(goal) {\r\n            datacontext.saveGoal(goal);\r\n        }\r\n\r\n        function saveIntervention(entity) {\r\n            datacontext.saveIntervention(entity);\r\n        }\r\n\r\n        function saveTask(entity) {\r\n            datacontext.saveTask(entity);\r\n        }\r\n\r\n        function saveGoal(entity) {\r\n            datacontext.saveGoal(entity);\r\n        }\r\n\r\n        function cancel(item) {\r\n            item.entityAspect.rejectChanges();\r\n        }\r\n\r\n        function getGoalDetails(goal) {\r\n            medicationsIndex.getGoalDetails(goal);\r\n        };\r\n\r\n        function ModalEntity(entity, reqpropname) {\r\n            var self = this;\r\n            self.entity = entity;\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { entity: self.entity };\r\n            // Create a computed property to subscribe to all of\r\n            // the patients' observations and make sure they are\r\n            // valid\r\n            self.canSave = ko.computed(function () {\r\n                var result = self.entity[reqpropname]();\r\n                // The active goal needs a property passed in from reqpropname\r\n                return result;\r\n            });\r\n        }\r\n\r\n        function sortAllergies (patientId, allergies, prop) {\r\n            var theseAllergies = allergies;\r\n\r\n            var finalAllergies = datacontext.singleSort(patientId, allergies, 'PatientAllergy', prop);\r\n\r\n            return finalAllergies;\r\n        }\r\n\r\n    });;\n","/**\r\n*\tcareMembers widget\r\n*\t@module careMembers\r\n*/\r\n\r\ndefine('viewmodels/patients/widgets/careMembers',['viewmodels/patients/team/index'],\r\n\tfunction( teamIndex ){\r\n\t\tvar ctor = function () {\r\n            var self = this;\r\n        };\r\n\t\t\r\n\t\tctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n\t\t\tself.widget = self.settings.widget;\r\n\t\t\tself.statusIds = self.widget.statusIds;\r\n\t\t\tself.careMembers = self.settings.careMembers;\r\n\t\t\tself.sortFunction = self.settings.sortFunction;\t\r\n\t\t\t//Members in the Active section appear in Core (TRUE first), then Role Ascending order\r\n\t\t\t//Members in the Inactive section appear in Updated Date Descending, Role Ascending order\r\n\t\t\tself.myCareMembers = ko.computed(function () {\r\n\t\t\t\t//TODO: sort order\r\n\t\t\t\tvar members = [];\r\n\t\t\t\tmembers = ko.utils.arrayFilter(self.careMembers(), function (member) {\r\n\t\t\t\t\treturn ( !member.isNew() && self.statusIds.indexOf( member.statusId() ) !== -1 );\r\n                });\r\n\t\t\t\tmembers = members.sort( self.sortFunction );\r\n\t\t\t\treturn members;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.addCareMember = teamIndex.addCareMember;\r\n\t\t\tself.selectedPatient = teamIndex.selectedPatient;\r\n\t\t\tself.isOpen = self.widget.isOpen;\r\n\t\t\tself.isFullScreen = self.widget.isFullScreen;\r\n\t\t\tself.toggleFullScreen = function (sender) {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            }\r\n\t\t\tself.toggleWidgetOpen = function (sender) {\r\n                // Find how many widgets are open\r\n                var openwidgets = ko.utils.arrayFilter(self.widget.column.widgets(), function (wid) {\r\n                    return wid.isOpen();\r\n                });\r\n                // If the widget is the only open widget\r\n                if (openwidgets.length === 1 && openwidgets[0] === self.widget) {\r\n                    // Do nothing\r\n                } else {\r\n                    sender.isOpen(!sender.isOpen());\r\n                }\r\n            };\r\n\t\t\tself.toggleOpenColumn = teamIndex.toggleOpenColumn;\r\n\t\t\tself.leftColumnOpen = teamIndex.leftColumnOpen;\t\r\n\t\t\t\t//self.leftColumnOpen();\r\n                //self.widget.column.isOpen(!self.widget.column.isOpen());\r\n            \r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tctor.prototype.detached = function(){\r\n            var self = this;\r\n            // dispose computeds:\r\n            self.myCareMembers.dispose();\r\n        }\r\n        return ctor;\r\n\t}\r\n);\n","define('viewmodels/patients/widgets/medication.groups',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/medications/index', 'viewmodels/shell/shell', 'viewmodels/patients/data/index', 'viewmodels/patients/index'],\r\n    function (modelConfig, servicesConfig, datacontext, session, medicationsIndex, shell, dataIndex, patientsIndex) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        var descendingDateSort = function (l, r) { return (l.medSortDate() == r.medSortDate()) ? (l.medSortDate() < r.medSortDate() ? 1 : -1) : (l.medSortDate() < r.medSortDate() ? 1 : -1) };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.widget = self.settings.widget;\r\n            self.defaultSort = self.settings.defaultSort;\r\n            self.medicationGroups = self.widget.medicationGroups;\r\n            self.allowAdd = self.widget.allowAdd;\r\n            self.refreshView = function () {\r\n                patientsIndex.getPatientMedications();\r\n            };\r\n            self.addMedication = function () {\r\n                dataIndex.addData();\r\n            };\r\n            self.medicationSaving = ko.computed(datacontext.medicationSaving);\r\n            self.selectedSortColumn = ko.observable();\r\n            self.activeColumns = ko.computed(function () {\r\n                return ['expand','name', 'sortdate', 'status'];\r\n            });\r\n            self.toggleSort = function (sender) {\r\n                if (self.selectedSortColumn() && self.selectedSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                    if (self.selectedSortColumn() && self.selectedSortColumn().substr(self.selectedSortColumn().length - 4, 4) === 'desc' ) {\r\n                        self.selectedSortColumn(null);\r\n                    } else {\r\n                        self.selectedSortColumn(sender.sortProperty + ' desc');\r\n                    }\r\n                } else {\r\n                    self.selectedSortColumn(sender.sortProperty);\r\n                }\r\n            };\r\n            self.isOpen = self.widget.isOpen;\r\n            self.isFullScreen = self.widget.isFullScreen;\r\n            self.filtersHeaderOpen = ko.observable(true);\r\n            self.filtersOpen = ko.observable(false);\r\n            self.toggleHeaderOpen = function  (sender, widgetOpen) {\r\n                if (widgetOpen()) {\r\n                    sender(!sender());\r\n                }\r\n            }\r\n            self.toggleOpenColumn = function () {\r\n                self.widget.column.isOpen(!self.widget.column.isOpen());\r\n            }\r\n            self.toggleFullScreen = function (sender) {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            }\r\n            self.toggleWidgetOpen = function (sender) {\r\n                var openwidgets = ko.utils.arrayFilter(self.widget.column.widgets(), function (wid) {\r\n                    return wid.isOpen();\r\n                });\r\n                if (openwidgets.length === 1 && openwidgets[0] === self.widget) {\r\n                } else {\r\n                    sender.isOpen(!sender.isOpen());\r\n                }\r\n            };\r\n            self.addMedication = function (goal) {\r\n                dataIndex.addData();\r\n            };\r\n            self.minimizeThisColumn = function () {\r\n                self.widget.column.isOpen(false);\r\n            }\r\n            self.maximizeThisColumn = function () {\r\n                self.widget.column.isOpen(true);\r\n            }\r\n\r\n        };\r\n\r\n        ctor.prototype.toggleExpand = function (sender) {\r\n            sender.isExpanded(!sender.isExpanded());\r\n            if (!sender.isOpen()) {\r\n                sender.isOpen(true);\r\n            }\r\n        };\r\n\r\n        ctor.prototype.detached = function(){\r\n            var self = this;\r\n            self.medicationSaving.dispose();\r\n            self.activeColumns.dispose();\r\n        }\r\n        return ctor;\r\n\r\n    });;\n","define('viewmodels/patients/widgets/medications',['models/base', 'config.services', 'services/datacontext', 'services/session', 'viewmodels/patients/medications/index', 'viewmodels/shell/shell', 'viewmodels/patients/data/index', 'viewmodels/patients/index'],\r\n    function (modelConfig, servicesConfig, datacontext, session, medicationsIndex, shell, dataIndex, patientsIndex) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        var typeNotSet = {\r\n            id: ko.observable(''),\r\n            name: ko.observable('Not Set')\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.widget = self.settings.widget;\r\n            self.defaultSort = self.settings.defaultSort;\r\n            // self.medSuppTypes = ko.computed(datacontext.enums.medSuppTypes);\r\n            self.selectedMedicationTypes = ko.observableArray();\r\n            self.statusIds = self.widget.statusIds;\r\n            self.allowAdd = self.widget.allowAdd;\r\n            self.resetFilters = function () {\r\n                self.selectedMedicationTypes([]);\r\n            };\r\n            self.refreshView = function () {\r\n                patientsIndex.getPatientMedications();\r\n            }\r\n            self.addMedication = function () {\r\n                dataIndex.addData();\r\n            };\r\n            self.refreshData = function () {\r\n                console.log('refresh the data');\r\n            };\r\n            self.medicationSaving = ko.computed(datacontext.medicationSaving);\r\n            self.selectedSortColumn = ko.observable();\r\n            self.myComputedMedications = ko.observableArray();\r\n            // Which categories are available to filter on\r\n            self.medSuppTypes = ko.computed(function () {\r\n                var thesetypes = datacontext.enums.medSuppTypes();\r\n                var theseTypes = thesetypes.slice(0, thesetypes.length);\r\n                // If there is not already a not set option,\r\n                if (theseTypes.indexOf(typeNotSet) === -1) {\r\n                    // Add it also\r\n                    theseTypes.push(typeNotSet);\r\n                }\r\n                return theseTypes;\r\n            });\r\n            // If there is selected categories, we need to filter out all the others\r\n            self.activeFilters = ko.computed(function () {\r\n                var selectedmedicationtypes = self.selectedMedicationTypes();\r\n                var returnfilters = [];\r\n                // for each status passed in, only query for those status ids\r\n                ko.utils.arrayForEach(self.statusIds, function (statid) {\r\n                    returnfilters.push(new modelConfig.Parameter('statusId', statid, '=='));\r\n                });\r\n                // Check if there are categories selected\r\n                if (selectedmedicationtypes.length > 0) {\r\n                    // Grab all the other categories\r\n                    var othertypes = ko.utils.arrayFilter(self.medSuppTypes(), function (medtype) {\r\n                        // Check if this category is a selected category\r\n                        var matchingtype = ko.utils.arrayFirst(selectedmedicationtypes, function (selectType) {\r\n                            return selectType.id() === medtype.id();\r\n                        });\r\n                        // If there is a match found,\r\n                        if (matchingtype) {\r\n                            // Don't return this category\r\n                            return false;\r\n                        } else {\r\n                            // If not do return it\r\n                            return true;\r\n                        }\r\n                    });\r\n                    ko.utils.arrayForEach(othertypes, function (medtype) {\r\n                        returnfilters.push(new modelConfig.Parameter('typeId', medtype.id(), '!='));\r\n                        // returnfilters.push(new modelConfig.Parameter('typeId', null, '!='));\r\n                    });\r\n                    // Not set is null, so only filter out nulls if that option isn't selected\r\n                    var foundselectednull = false;\r\n                    ko.utils.arrayForEach(selectedmedicationtypes, function (medtype) {\r\n                        if (medtype.id() === '') {\r\n                            foundselectednull = true;\r\n                        }\r\n                    });\r\n                    // If we didn't select for nulls\r\n                    if (!foundselectednull) {\r\n                        // Don't return nulls either\r\n                        returnfilters.push(new modelConfig.Parameter('typeId', '', '!='));\r\n                        returnfilters.push(new modelConfig.Parameter('typeId', null, '!='));\r\n                    }\r\n                }\r\n                return returnfilters;\r\n            });\r\n            self.myMedications = ko.computed(function () {\r\n                var selectedmedicationtypes = self.selectedMedicationTypes();\r\n                var selectedpatient = self.selectedPatient();\r\n                var theseMedications = [];\r\n                var sortDefaultProp = self.defaultSort ? self.defaultSort : 'name';\r\n                //Subscribe to localcollection todos\r\n                var allMedications = self.selectedPatient().medications();\r\n                var orderProp = self.selectedSortColumn() ? self.selectedSortColumn() : sortDefaultProp;\r\n                // Add the second and third orders to the string\r\n                var finalOrderString = orderProp;\r\n                // Go get the todos\r\n                var finalmedications = [];\r\n                var tempmedications = [];\r\n\r\n                var params = [];\r\n                params.push(new modelConfig.Parameter('patientId', selectedpatient.id(), '=='));\r\n\r\n                // If there are filters,\r\n                if (self.activeFilters().length > 0) {\r\n                    // Add them as parameters\r\n                    ko.utils.arrayForEach(self.activeFilters(), function (param) {\r\n                        params.push(param);\r\n                    });\r\n                }\r\n\r\n                if (selectedmedicationtypes.length === 1) {\r\n                    params.push(new modelConfig.Parameter('typeId', selectedmedicationtypes[0].id(), '=='));\r\n                }\r\n                var patientId = self.selectedPatient().id();\r\n                tempmedications = datacontext.getPatientMedicationsQuery(params, orderProp);\r\n                // Don't return new meds\r\n                finalmedications = ko.utils.arrayFilter(tempmedications, function (tempmed) {\r\n                    return !tempmed.isNew();\r\n                });\r\n                return finalmedications;\r\n            }).extend({ throttle: 1 });\r\n            self.activeColumns = ko.computed(function () {\r\n                return ['expand','name', 'sortdate', 'status'];\r\n            });\r\n            self.toggleSort = function (sender) {\r\n                // If the current column is the one to sort by\r\n                if (self.selectedSortColumn() && self.selectedSortColumn().indexOf(sender.sortProperty) !== -1) {\r\n                    // If it ends in desc\r\n                    if (self.selectedSortColumn() && self.selectedSortColumn().substr(self.selectedSortColumn().length - 4, 4) === 'desc' ) {\r\n                // Clear the sort column, as it should be undone\r\n                        self.selectedSortColumn(null);\r\n                    } else {\r\n                        // Else set it as the sort column\r\n                        self.selectedSortColumn(sender.sortProperty + ' desc');\r\n                    }\r\n                } else {\r\n                    // Else set it as the new sort column\r\n                    self.selectedSortColumn(sender.sortProperty);\r\n                }\r\n            };\r\n            self.isOpen = self.widget.isOpen;\r\n            self.isFullScreen = self.widget.isFullScreen;\r\n            self.filtersHeaderOpen = ko.observable(true);\r\n            self.filtersOpen = ko.observable(false);\r\n            self.toggleHeaderOpen = function  (sender, widgetOpen) {\r\n                if (widgetOpen()) {\r\n                    sender(!sender());\r\n                }\r\n            }\r\n            // Toggle which column is open\r\n            self.toggleOpenColumn = function () {\r\n                self.widget.column.isOpen(!self.widget.column.isOpen());\r\n            }\r\n            self.toggleFullScreen = function (sender) {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            }\r\n            // Toggle whether the widget is open or not\r\n            self.toggleWidgetOpen = function (sender) {\r\n                // Find how many widgets are open\r\n                var openwidgets = ko.utils.arrayFilter(self.widget.column.widgets(), function (wid) {\r\n                    return wid.isOpen();\r\n                });\r\n                // If the widget is the only open widget\r\n                if (openwidgets.length === 1 && openwidgets[0] === self.widget) {\r\n                    // Do nothing\r\n                } else {\r\n                    sender.isOpen(!sender.isOpen());\r\n                }\r\n            };\r\n            self.addMedication = function (goal) {\r\n                dataIndex.addData();\r\n            };\r\n            self.minimizeThisColumn = function () {\r\n                self.widget.column.isOpen(false);\r\n            }\r\n            self.maximizeThisColumn = function () {\r\n                self.widget.column.isOpen(true);\r\n            }\r\n\r\n        };\r\n\r\n        ctor.prototype.toggleExpand = function (sender) {\r\n            sender.isExpanded(!sender.isExpanded());\r\n            if (!sender.isOpen()) {\r\n                sender.isOpen(true);\r\n            }\r\n        };\r\n\r\n        ctor.prototype.detached = function(){\r\n            var self = this;\r\n            // dispose computeds:\r\n            self.medicationSaving.dispose();\r\n            self.medSuppTypes.dispose();\r\n            self.activeFilters.dispose();\r\n            self.myMedications.dispose();\r\n            self.activeColumns.dispose();\r\n        }\r\n        return ctor;\r\n\r\n    });;\n","define('viewmodels/patients/widgets/module.details',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        function tab (name, path, activeTab) {\r\n            var self = this;\r\n            self.name = ko.observable(name);\r\n            self.path = ko.observable(path);\r\n            self.isActive = ko.computed(function () {\r\n                var thisActiveTab = activeTab();\r\n                return (thisActiveTab && thisActiveTab.name() === self.name());\r\n            });\r\n        };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.activeTab = ko.observable();\r\n            self.tabs = ko.observableArray([\r\n                new tab('Details', 'viewmodels/patients/tabs/module.details', self.activeTab)\r\n            ]);\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.activeModule = self.settings.activeModule;\r\n            self.isFullScreen = ko.observable(false);\r\n            self.toggleFullScreen = function () {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            };\r\n            self.setActiveTab = function (sender) {\r\n                self.activeTab(sender);\r\n            };\r\n            self.activeTab(self.tabs()[0]);\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/patients/widgets/program.details',['services/datacontext', 'models/base', 'viewmodels/shell/shell'],\r\n    function (datacontext, modelConfig, shell) {\r\n\r\n        function tab (name, path, activeTab) {\r\n            var self = this;\r\n            self.name = ko.observable(name);\r\n            self.path = ko.observable(path);\r\n            self.isActive = ko.computed(function () {\r\n                var thisActiveTab = activeTab();\r\n                return (thisActiveTab && thisActiveTab.name() === self.name());\r\n            });\r\n        };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.activeTab = ko.observable();\r\n            self.tabs = ko.observableArray([\r\n                new tab('Details', 'viewmodels/patients/tabs/program.details', self.activeTab),\r\n                new tab('Objectives', 'viewmodels/patients/tabs/program.objectives', self.activeTab),\r\n            ]);\r\n            self.programActions = ko.observableArray([{ text: ko.observable('Remove') }]);\r\n            self.selectedAction = ko.observable();\r\n            self.reason = ko.observable();\r\n            self.modalShowing = ko.observable(false);\r\n            self.modalEntity = ko.observable(new ModalEntity(self.modalShowing, self.reason));\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.activeProgram = self.settings.activeProgram;\r\n            self.isFullScreen = ko.observable(false);\r\n            self.toggleFullScreen = function () {\r\n                self.isFullScreen(!self.isFullScreen());\r\n            };\r\n            self.setActiveTab = function (sender) {\r\n                self.activeTab(sender);\r\n            };\r\n            self.activeTab(self.tabs()[0]);\r\n            self.modalEntity().program(self.activeProgram());\r\n            self.cancelOverride = function () {\r\n                self.reason(null);\r\n            };\r\n            self.deleteOverride = function () {\r\n                datacontext.removeProgram(self.activeProgram(), self.reason()).then(deleteFinished).fail(deleteFailed);\r\n\r\n                function deleteFinished() {\r\n                    setTimeout(function () { location.reload(); }, 2000);\r\n                }\r\n\r\n                function deleteFailed(error) {\r\n                    console.log(error);\r\n                }\r\n            };\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Remove '+ self.activeProgram().name() ,\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: self.modalEntity, \r\n\t\t\t\ttemplatePath: 'viewmodels/templates/program.remove', \r\n\t\t\t\tshowing: self.modalShowing, \r\n\t\t\t\tsaveOverride: null, \r\n\t\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\t\tdeleteOverride: self.deleteOverride, \r\n\t\t\t\tclassOverride: null\r\n\t\t\t}\r\n            self.modal = new modelConfig.modal(modalSettings);\r\n            self.modal.canDelete(true);\r\n            self.modal.deleteText('Remove');\r\n            self.selectedAction.subscribe(function (newValue) {\r\n                if (newValue && newValue.text() === 'Remove') {\r\n                    shell.currentModal(self.modal);\r\n                    self.modalShowing(true);\r\n                    self.selectedAction(null);\r\n                }\r\n            });\r\n            self.activeProgram.subscribe(function () {\r\n                self.activeTab(self.tabs()[0]);\r\n                if (self.activeProgram()) {\r\n                    self.modalEntity().program(self.activeProgram());\r\n\t\t\t\t\tvar modalSettings = {\r\n\t\t\t\t\t\ttitle: 'Remove '+ self.activeProgram().name() ,\r\n\t\t\t\t\t\tentity: self.modalEntity, \r\n\t\t\t\t\t\ttemplatePath: 'viewmodels/templates/program.remove', \r\n\t\t\t\t\t\tshowing: self.modalShowing, \r\n\t\t\t\t\t\tsaveOverride: null, \r\n\t\t\t\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\t\t\t\tdeleteOverride: self.deleteOverride, \r\n\t\t\t\t\t\tclassOverride: null\r\n\t\t\t\t\t}\r\n                    self.modal = new modelConfig.modal(modalSettings);\r\n                    self.modal.canDelete(true);\r\n                    self.modal.deleteText('Remove');\r\n                }\r\n            });\r\n        };\r\n\r\n            ctor.prototype.attached = function () {\r\n\r\n            };\r\n\r\n            function ModalEntity(modalShowing, reason) {\r\n                var self = this;\r\n                self.program = ko.observable();\r\n                self.canSave = ko.computed(function () {\r\n                    return !datacontext.programsSaving();\r\n                });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { program: self.program, showing: modalShowing, reason: reason };\r\n        }\r\n\r\n        return ctor;\r\n    });\n","//TODO: Inject dependencies\r\ndefine('viewmodels/populations/index',['plugins/router'],\r\n    function (router) {\r\n        // Internal properties and functions\r\n       \r\n        // Reveal the bindable properties and functions\r\n        var vm = {\r\n            activate: activate,\r\n            goBack: goBack,\r\n            title: 'populations'\r\n        };\r\n\r\n        return vm;\r\n        \r\n        function activate (id, querystring) {\r\n            //TODO: Initialize lookup data here.\r\n\r\n            //TODO: Get the data for this viewmodel, return a promise.\r\n        }\r\n\r\n        function goBack(complete) {\r\n            router.navigateBack();\r\n        }\r\n    });\n","define('viewmodels/programdesigner/designer/index',['services/navigation'],\r\n    function (navigation) {\r\n\r\n        var widgets = ko.observableArray();\r\n        var initialized = false;\r\n\r\n        var columns = ko.computed(function () {\r\n            var self = this;\r\n            self.columns = navigation.currentSubRoute().columns;\r\n            ko.utils.arrayForEach(self.columns, function (thisColumn) {\r\n                var theseWidgets = [];\r\n                ko.utils.arrayForEach(thisColumn.widgets, function (thisWidget) {\r\n                    thisWidget.column = thisColumn;\r\n                    theseWidgets.push(thisWidget);\r\n                });\r\n                thisColumn.activeWidgets = ko.observableArray(theseWidgets);\r\n            });\r\n            return self.columns;\r\n        });\r\n\r\n        var computedOpenColumn = ko.observable();\r\n\r\n        var vm = {\r\n            activate: activate,\r\n            attached: attached,\r\n            computedOpenColumn: computedOpenColumn,\r\n            columns: columns,\r\n            widgets: widgets,\r\n            title: 'index'\r\n        };\r\n\r\n        return vm;\r\n\r\n        function activate() {\r\n        }\r\n\r\n        function attached() {\r\n            if (!initialized) {\r\n                initialized = true;\r\n            }\r\n        }\r\n    });\n","define('viewmodels/programdesigner/index',['services/session', 'services/navigation'],\r\n    function (session, navigation) {\r\n        \r\n        // Create an entity type and service end point to use when getting that type\r\n        var entityType = 'Program';\r\n        // Create an endPoint to pass to the data context to decide where to get your data from\r\n        var endPoint = ko.computed(function () {\r\n            // Get the current user\r\n            var currentUser = session.currentUser();\r\n            // Check if it has a value\r\n            if (!currentUser) {\r\n                // If not, return nothing\r\n                return '';\r\n            }\r\n            return 'NG/1.0/Contract/' + session.currentUser().contracts()[0].number() + '/program/';\r\n        });\r\n        // List of patients to bind to the left side flyout on patients pages\r\n        var modulesList = ko.observableArray();\r\n        // Who is the currently viewed patient\r\n        var currentModule = ko.observable();\r\n        var initialized = false;\r\n\r\n        var modulesListFlyoutOpen = ko.observable(false);\r\n\r\n        var vm = {\r\n            modulesListFlyoutOpen: modulesListFlyoutOpen,\r\n            modulesList: modulesList,\r\n            currentModule: currentModule,\r\n            navigation: navigation,\r\n            activate: activate,\r\n            title: 'Program Designer'\r\n        };\r\n\r\n        return vm;\r\n\r\n        function chooseModule(module) {\r\n            // TODO : Check if patient was passed in\r\n            if (!module.iD) {\r\n                // If not, create an ID property to use to find a patient\r\n                module.iD = ko.observable('');\r\n            }\r\n            // Check if dataContext exists in the global namespace (It should if datacontext.js has been loaded)\r\n            if (datacontext) {\r\n                var programId = ko.unwrap(module.iD);\r\n                datacontext.getEntityById(currentModule, programId, entityType, endPoint(), true).then(getEntityList);\r\n            }\r\n            else {\r\n            }\r\n        }\r\n\r\n        function getEntityList() {\r\n            // Get a list of programs (false means don't get from server)\r\n            datacontext.getEntityList(modulesList, entityType, endPoint(), null, null, false);\r\n        }\r\n\r\n        function activate() {\r\n            // If the view model has not been initialized, \r\n            if (!initialized) {\r\n                // Then initialize the view model\r\n                initializeViewModel();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function initializeViewModel() {\r\n            // then Initialize the View Model\r\n            return true;\r\n        };\r\n\r\n    });\n","define('viewmodels/programdesigner/widgets/modulewidget',[],\r\n    function () {\r\n\r\n        var ctor = function () {\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.settings.isOpen = ko.observable();\r\n            self.settings.isFullScreen = ko.observable(false);\r\n            self.toggleWidgetOpen = function () {\r\n                self.settings.isOpen(!self.settings.isOpen());\r\n            };\r\n            self.toggleFullScreen = function () {\r\n                self.settings.isFullScreen(!self.settings.isFullScreen());\r\n            };\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/programdesigner/widgets/programwidget',[],\r\n    function () {\r\n\r\n        var ctor = function () {\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.settings.isOpen = ko.observable();\r\n            self.settings.isFullScreen = ko.observable(false);\r\n            self.toggleWidgetOpen = function () {\r\n                self.settings.isOpen(!self.settings.isOpen());\r\n            };\r\n            self.toggleFullScreen = function () {\r\n                self.settings.isFullScreen(!self.settings.isFullScreen());\r\n            };\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/shell/quickadd/assign',['models/base', 'config.services', 'services/datacontext', 'services/session'],\r\n    function (modelConfig, servicesConfig, datacontext, session) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            // Categories to show in the category dropdown\r\n            self.categories = ko.observableArray();\r\n            // Category that is selected in the category dropdown\r\n            self.selectedCategory = ko.observable();\r\n            // Contract Programs to show in the program dropdown\r\n            self.contractPrograms = ko.observableArray();\r\n            // Program that is selected in the program dropdown\r\n            self.selectedProgram = ko.observable();\r\n            self.isSaving = ko.observable();\r\n        };\r\n\r\n        function Category(id, name) {\r\n            var self = this;\r\n            self.Id = ko.observable(id);\r\n            self.Name = ko.observable(name);\r\n        }\r\n\r\n        ctor.prototype.contractProgramsEndPoint = ko.computed(function () {\r\n            //var self = this;\r\n            var currentUser = session.currentUser();\r\n            if (!currentUser) {\r\n                return '';\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'programs/active', 'ContractProgram');\r\n        });\r\n\r\n        ctor.prototype.createCategories = function () {\r\n            var self = this;\r\n            self.categories.push(new Category(1, 'Programs'));\r\n            self.selectedCategory(self.categories()[0]);\r\n        };\r\n\r\n        ctor.prototype.getContractProgramsByCategory = function () {\r\n            var self = this;\r\n            if (self.contractProgramsEndPoint()) {\r\n                datacontext.getEntityList(self.contractPrograms, self.contractProgramsEndPoint().EntityType, self.contractProgramsEndPoint().ResourcePath, null, null, true, { ContractNumber: session.currentUser().contracts()[0].number() }, 'name');\r\n            }\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = settings.data.selectedPatient;\r\n            self.isShowing = self.settings.data.isShowing;\r\n            self.cancelAssign = function () {\r\n                self.selectedProgram(null);\r\n                self.isShowing(false);\r\n            };\r\n            self.startDate = ko.observable(new moment());\r\n            self.saveAssign = function () {\r\n                if (self.selectedProgram()) {\r\n                    self.isSaving(true);\r\n\t\t\t\t\tfunction programAssigned() {\r\n                        self.isShowing(false);\r\n                        self.isSaving(false);\r\n                        self.selectedProgram(null);\r\n                    }\r\n                    datacontext.saveChangesToPatientProperty(self.selectedPatient, 'Programs', null, [new modelConfig.Parameter('ContractProgramId', self.selectedProgram().id())])\r\n\t\t\t\t\t\t\t\t.then(programAssigned);                    \r\n                }\r\n            };\r\n            self.canSave = ko.computed(function () {\r\n                return self.selectedProgram() && !self.isSaving();\r\n            });\r\n            self.selectedCategory.subscribe(function () {\r\n                self.getContractProgramsByCategory();\r\n            });\r\n            self.createCategories();\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/shell/quickadd/notes',['models/base', 'config.services', 'services/datacontext', 'services/session', 'services/navigation', 'viewmodels/patients/index', 'viewmodels/patients/history/index'],\r\n\tfunction (modelConfig, servicesConfig, datacontext, session, navigation, patientIndex, historyIndex) {\r\n\r\n\t\tvar ctor = function () {\r\n\t\t\tvar self = this;\r\n\t\t\t\t// Note that is used when creating a new note\r\n\t\t\t\tself.newNote = ko.observable();\r\n\t\t\t\t// Touchpoint note\r\n\t\t\t\tself.newTouchPoint = ko.observable();\r\n\t\t\t\tself.newUtilization = ko.observable();\r\n\r\n\t\t\t\t// Are we currently saving\r\n\t\t\t\tself.newTouchPointToken = {};\r\n\t\t\t\tself.isSaving = ko.observable();\r\n\t\t\t\t// Available note types\r\n\t\t\t\tself.noteTypes = datacontext.enums.noteTypes;\r\n\t\t\t\t// Find the touchpoint type,\r\n\t\t\t\tvar touchpointType = ko.utils.arrayFirst(self.noteTypes(), function (type) {\r\n\t\t\t\t\treturn type.name().toLowerCase() === 'touchpoint';\r\n\t\t\t\t});\r\n\t\t\t\tself.selectedNoteType = ko.observable();\r\n\t\t\t\tif (touchpointType) {\r\n\t\t\t\t\tself.selectedNoteType(touchpointType);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Which note type should be showing\r\n\t\t\t\t\tself.selectedNoteType(self.noteTypes()[1]);\r\n\t\t\t\t}\r\n\t\t\t\t// Active note type path to show\r\n\t\t\t\tself.activeNoteType = ko.computed(function () {\r\n\t\t\t\t\t// Value to return\r\n\t\t\t\t\tvar returnValue = '';\r\n\t\t\t\t\t// Get the type name\r\n\t\t\t\t\tvar typename = self.selectedNoteType().name().toLowerCase();\r\n\t\t\t\t\tswitch( typename ){\r\n\t\t\t\t\t\tcase 'touchpoint':{\r\n\t\t\t\t\t\t// Show the touchpoint template\r\n\t\t\t\t\t\treturnValue = 'shell/quickadd/touchpoint.note.html';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcase 'utilization':{\r\n\t\t\t\t\t\t\treturnValue = 'shell/quickadd/utilization.note.html';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefault:{\r\n\t\t\t\t\t\t\t// Else always show the general\r\n\t\t\t\t\t\t\treturnValue = 'shell/quickadd/general.note.html';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\treturn returnValue;\r\n\t\t\t});\r\n\t\t\t// Available properties of a note\r\n\t\t\tself.methods = datacontext.enums.noteMethods;\r\n\t\t\tself.whos = datacontext.enums.noteWhos;\r\n\t\t\tself.sources = datacontext.enums.noteSources;\r\n\t\t\tself.outcomes = datacontext.enums.noteOutcomes;\r\n\t\t\t//utilization note lookups:\r\n\t\t\tself.visitTypes = datacontext.enums.visitTypes;\r\n\t\t\tself.utilizationSources = datacontext.enums.utilizationSources;\r\n\t\t\tself.dispositions = datacontext.enums.dispositions;\r\n\t\t\tself.utilizationLocations = datacontext.enums.utilizationLocations;\r\n\r\n\t\t\t// TODO: REMOVE THESE ONCE IS DEFAULT IS SET\r\n\t\t\tself.defaultOutcome = ko.utils.arrayFirst(self.outcomes(), function (outcome) {\r\n\t\t\t\treturn outcome.isDefault();\r\n\t\t\t});\r\n\t\t\tself.defaultMethod = ko.utils.arrayFirst(self.methods(), function (method) {\r\n\t\t\t\treturn method.isDefault();\r\n\t\t\t});\r\n\t\t\tself.defaultWho = ko.utils.arrayFirst(self.whos(), function (who) {\r\n\t\t\t\treturn who.isDefault();\r\n\t\t\t});\r\n\t\t\tself.defaultSource = ko.utils.arrayFirst(self.sources(), function (source) {\r\n\t\t\t\treturn source.isDefault();\r\n\t\t\t});\r\n\t\t\tself.defaultVisitType = ko.utils.arrayFirst(self.visitTypes(), function (visitType) {\r\n\t\t\t\treturn visitType.isDefault();\r\n\t\t\t});\r\n\t\t\tself.defaultUtilizationSource = ko.utils.arrayFirst(self.utilizationSources(), function (utilizationSource) {\r\n\t\t\t\treturn utilizationSource.isDefault();\r\n\t\t\t});\r\n\t\t\tself.defaultDisposition = ko.utils.arrayFirst(self.dispositions(), function (disposition) {\r\n\t\t\t\treturn disposition.isDefault();\r\n\t\t\t});\r\n\t\t\tself.defaultUtilizationLocation = ko.utils.arrayFirst(self.utilizationLocations(), function (location) {\r\n\t\t\t\treturn location.isDefault();\r\n\t\t\t});\r\n\r\n\t\t\t// Content area toggling for a touchpoint\r\n\t\t\tself.tpContentOpen = ko.observable(true);\r\n\t\t\tself.tpDetailsOpen = ko.observable(false);\r\n\t\t\tself.tpLastNotesOpen = ko.observable(false);\r\n\t\t\t// Content area toggling for a note\r\n\t\t\tself.gnContentOpen = ko.observable(true);\r\n\t\t\tself.gnLastNotesOpen = ko.observable(true);\r\n\t\t\t// Content area toggling for a utilization\r\n\t\t\tself.utContentOpen = ko.observable(true);\r\n\t\t\tself.utDetailsOpen = ko.observable(true);\r\n\t\t\tself.utLastNotesOpen = ko.observable(false);\r\n\r\n\t\t};\r\n\r\n\t\tctor.prototype.contractProgramsEndPoint = ko.computed(function () {\r\n\t\t\t//var self = this;\r\n\t\t\tvar currentUser = session.currentUser();\r\n\t\t\tif (!currentUser) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\treturn new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'programs/active', 'ContractProgram');\r\n\t\t});\r\n\r\n\t\tctor.prototype.createNewNote = function () {\r\n\t\t\tvar self = this;\r\n\t\t\t// Find a general note type id\r\n\t\t\tvar generalNoteType = ko.utils.arrayFirst(self.noteTypes(), function (type) {\r\n\t\t\t\treturn type.name().toLowerCase() === 'general';\r\n\t\t\t});\r\n\t\t\t// Set the newNote obs to a new note entity\r\n\t\t\tself.newNote(datacontext.createEntity('Note',\r\n\t\t\t{\r\n\t\t\t\tid: self.thisNoteId(),\r\n\t\t\t\tpatientId: self.selectedPatient().id(),\r\n\t\t\t\ttypeId: generalNoteType.id(),\r\n\t\t\t\tdataSource: \"Engage\"\r\n\t\t\t}));\r\n\t\t\tself.newNote().watchDirty();\r\n\t\t};\r\n\r\n\t\tctor.prototype.createNewUtilization = function () {\r\n\t\t\tvar self = this;\r\n\t\t\t// Find a utilization note type id\r\n\t\t\tvar utilizationNoteType = ko.utils.arrayFirst(self.noteTypes(), function (type) {\r\n\t\t\t\treturn type.name().toLowerCase() === 'utilization';\r\n\t\t\t});\r\n\t\t\tself.newUtilization(datacontext.createEntity('Note',\r\n\t\t\t\t{ \tid: self.thisUtilizationId(),\r\n\t\t\t\t\tpatientId: self.selectedPatient().id(),\r\n\t\t\t\t\tadmitted: false,\r\n\t\t\t\t\ttypeId: utilizationNoteType.id(),\r\n\t\t\t\t\tvisitType: self.defaultVisitType,\r\n\t\t\t\t\tutilizationSource: self.defaultUtilizationSource,\r\n\t\t\t\t\tdisposition: self.defaultDisposition,\r\n\t\t\t\t\tutilizationLocation: self.defaultUtilizationLocation,\r\n\t\t\t\t\tdataSource: \"Engage\"\r\n\t\t\t\t}));\r\n\t\t\tself.newUtilization().watchDirty();\r\n\t\t};\r\n\r\n\t\tctor.prototype.createNewTouchPoint = function () {\r\n\t\t\tvar self = this;\r\n\t\t\t// Find a touchpoint note type id\r\n\t\t\tvar touchpointNoteType = ko.utils.arrayFirst(self.noteTypes(), function (type) {\r\n\t\t\t\treturn type.name().toLowerCase() === 'touchpoint';\r\n\t\t\t});\r\n\t\t\tself.newTouchPoint(datacontext.createEntity('Note',\r\n\t\t\t{\r\n\t\t\t\tid: self.thisTouchPointId(),\r\n\t\t\t\tpatientId: self.selectedPatient().id(),\r\n\t\t\t\tcontactedOn: new moment().format(),\r\n\t\t\t\toutcome: self.defaultOutcome,\r\n\t\t\t\tmethod: self.defaultMethod,\r\n\t\t\t\tsource: self.defaultSource,\t\t\t\t\r\n\t\t\t\twho: self.defaultWho,\r\n\t\t\t\ttypeId: touchpointNoteType.id(),\r\n\t\t\t\tvalidatedIdentity: false,\r\n\t\t\t\tdataSource: \"Engage\"\r\n\t\t\t}));\r\n\t\t\t// If new touch points' date changes\r\n\t\t\tself.newTouchPointToken = self.newTouchPoint().contactedOn.subscribe(function (newValue) {\r\n\t\t\t\t// If there is no new value,\r\n\t\t\t\tif (!newValue) {\r\n\t\t\t\t\t// Reset to now\r\n\t\t\t\t\tvar thisnow = new moment().format();\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tself.newTouchPoint().contactedOn(thisnow);\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tself.newTouchPoint().watchDirty();\r\n\t\t};\r\n\r\n\t\tctor.prototype.getContractProgramsByCategory = function () {\r\n\t\t\tvar self = this;\r\n\t\t\tif (self.contractProgramsEndPoint()) {\r\n\t\t\t\tdatacontext.getEntityList(self.contractPrograms, self.contractProgramsEndPoint().EntityType, self.contractProgramsEndPoint().ResourcePath, null, null, true, { ContractNumber: session.currentUser().contracts()[0].number() }, 'name');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tctor.prototype.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n\t\tctor.prototype.alphabeticalDateSort = function (l, r) { return (l.createdOn() == r.createdOn()) ? (l.createdOn() < r.createdOn() ? 1 : -1) : (l.createdOn() < r.createdOn() ? 1 : -1) };\r\n\r\n\t\tctor.prototype.activate = function (settings) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.settings = settings;\r\n\t\t\tself.selectedPatient = settings.data.selectedPatient;\r\n\t\t\t// What id should we use for the note (must be unique)\r\n\t\t\tself.thisNoteId = ko.computed(function () {\r\n\t\t\t\treturn self.selectedPatient().notes().length * -1;\r\n\t\t\t});\r\n\t\t\t// What id should we use for the touchpoint note (must be unique)\r\n\t\t\tself.thisTouchPointId = ko.computed(function () {\r\n\t\t\t\treturn self.thisNoteId() - 100;\r\n\t\t\t});\r\n\t\t\t// utilization note id\r\n\t\t\tself.thisUtilizationId = ko.computed(function () {\r\n\t\t\t\treturn self.thisTouchPointId() - 100;\r\n\t\t\t});\r\n\t\t\tself.isShowing = self.settings.data.isShowing;\r\n\t\t\tself.cancel = function () {\r\n\t\t\t\tif( self.newNote() ){\r\n\t\t\t\t\tself.newNote().entityAspect.rejectChanges();\r\n\t\t\t\t\tself.createNewNote();\r\n\t\t\t\t}\r\n\t\t\t\tif( self.newTouchPoint() ){\r\n\t\t\t\t\tself.newTouchPoint().entityAspect.rejectChanges();\r\n\t\t\t\t\t// If there is a new touch point subscription,\r\n\t\t\t\t\tif (self.newTouchPointToken) {\r\n\t\t\t\t\t\t// Dispose of it\r\n\t\t\t\t\t\tself.newTouchPointToken.dispose();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.createNewTouchPoint();\r\n\t\t\t\t}\r\n\t\t\t\tif( self.newUtilization() ){\r\n\t\t\t\t\tself.newUtilization().entityAspect.rejectChanges();\r\n\t\t\t\t\tself.createNewUtilization();\r\n\t\t\t\t}\r\n\t\t\t\tself.isShowing(false);\r\n\t\t\t};\r\n\r\n\t\t\tself.availablePrograms = ko.computed(function () {\r\n\t\t\t\tvar computedPrograms = [];\r\n\t\t\t\tif (self.selectedPatient()) {\r\n\t\t\t\t\tvar thesePrograms = self.selectedPatient().programs.slice(0).sort(self.alphabeticalNameSort);\r\n\t\t\t\t\tko.utils.arrayForEach(thesePrograms, function (program) {\r\n\t\t\t\t\t\tif (program.elementState() !== 6 && program.elementState() !== 1 && program.elementState() !== 5) {\r\n\t\t\t\t\t\t\tcomputedPrograms.push(program);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn computedPrograms;\r\n\t\t\t});\r\n\t\t\tself.startDate = ko.observable(new moment());\r\n\t\t\tself.saveNote = function () {\r\n\t\t\t\tif (self.newNote()) {\r\n\t\t\t\t\t// Set the properties of the note before saving\r\n\t\t\t\t\tself.newNote().patientId(self.selectedPatient().id());\r\n\t\t\t\t\tself.isSaving(true);\r\n\t\t\t\t\tself.newNote().createdById(session.currentUser().userId());\r\n\t\t\t\t\tself.newNote().createdOn(new Date());\r\n\t\t\t\t\t// Make sure the selected note type is set\r\n\t\t\t\t\tself.newNote().typeId(self.selectedNoteType().id());\r\n\t\t\t\t\tdatacontext.saveNote(self.newNote()).then(noteSaved);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tfunction noteSaved() {\r\n\t\t\t\tself.isShowing(false);\r\n\t\t\t\tself.newNote(null);\r\n\t\t\t\tself.isSaving(false);\r\n\t\t\t\tself.createNewNote();\r\n\t\t\t}\r\n\t\t\tself.saveTouchPoint = function () {\r\n\t\t\t\tfunction saved() {\r\n\t\t\t\t\tself.isShowing(false);\r\n\t\t\t\t\tself.newTouchPoint(null);\r\n\t\t\t\t\tself.isSaving(false);\r\n\t\t\t\t\tself.createNewTouchPoint();\r\n\t\t\t\t}\r\n\t\t\t\tif (self.newTouchPoint()) {\r\n\t\t\t\t\tself.newTouchPoint().patientId(self.selectedPatient().id());\r\n\t\t\t\t\tself.isSaving(true);\r\n\t\t\t\t\tself.newTouchPoint().createdById(session.currentUser().userId());\r\n\t\t\t\t\tself.newTouchPoint().createdOn(new Date());\r\n\t\t\t\t\tdatacontext.saveNote(self.newTouchPoint()).then(saved);\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tself.saveUtilization = function(){\r\n\t\t\t\tfunction saved() {\r\n\t\t\t\t\tself.isShowing(false);\r\n\t\t\t\t\tself.newUtilization().clearDirty();\r\n\t\t\t\t\tself.newUtilization(null);\r\n\t\t\t\t\tself.isSaving(false);\r\n\t\t\t\t\tself.createNewUtilization();\r\n\t\t\t\t}\r\n\t\t\t\tif (self.newUtilization()) {\r\n\t\t\t\t\tself.newUtilization().patientId(self.selectedPatient().id());\r\n\t\t\t\t\tself.isSaving(true);\r\n\t\t\t\t\tdatacontext.saveNote(self.newUtilization()).then(saved);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tself.selectedPatient.subscribe(function () {\r\n\t\t\t\tself.cancel();\r\n\t\t\t\thistoryIndex.activeNote(null);\r\n\t\t\t});\r\n\t\t\tself.viewDetails = function (sender) {\r\n\t\t\t\tself.isShowing(false);\r\n\t\t\t\t// Get the history subroute\r\n\t\t\t\tvar thisSubRoute = ko.utils.arrayFirst(navigation.currentRoute().config.settings.pages, function (page) {\r\n\t\t\t\t\treturn page.title === 'history';\r\n\t\t\t\t});\r\n\t\t\t\tnavigation.setSubRoute(thisSubRoute);\r\n\t\t\t\thistoryIndex.activeNote(sender);\r\n\t\t\t};\r\n\t\t\tself.gotoHistory = function () {\r\n\t\t\t\t// Get the history subroute\r\n\t\t\t\tself.isShowing(false);\r\n\t\t\t\tvar thisSubRoute = ko.utils.arrayFirst(navigation.currentRoute().config.settings.pages, function (page) {\r\n\t\t\t\t\treturn page.title === 'history';\r\n\t\t\t\t});\r\n\t\t\t\tnavigation.setSubRoute(thisSubRoute);\r\n\t\t\t};\r\n\t\t\tself.canSave = ko.computed(function () {\r\n\t\t\t\treturn self.newNote() && !self.isSaving() && self.newNote().isValid();\r\n\t\t\t});\r\n\t\t\tself.canSaveTouchPoint = ko.computed(function () {\r\n\t\t\t\t//subscribe to the condition variables: (this fixes a firefox issue)\r\n\t\t\t\tvar hasNewTouchPoint = self.newTouchPoint()? true : false;\r\n\t\t\t\tvar isSaving = self.isSaving();\r\n\t\t\t\tif(self.newTouchPoint()){\t\t\t\t\t\r\n\t\t\t\t\tvar text = self.newTouchPoint().text();\r\n\t\t\t\t\tvar contactedOn = self.newTouchPoint().contactedOn();\r\n\t\t\t\t}\r\n\t\t\t\treturn self.newTouchPoint() && !self.isSaving() && self.newTouchPoint().text() && self.newTouchPoint().contactedOn();\r\n\t\t\t});\r\n\t\t\tself.canSaveUtilization = ko.computed(function () {\r\n\t\t\t\t//subscribe to the condition variables: (this fixes a firefox issue)\t\t\t\t\r\n\t\t\t\tvar hasNewUtilization = self.newUtilization()? true : false;\r\n\t\t\t\tvar isSaving = self.isSaving();\t\t\t\t\r\n\t\t\t\treturn self.newUtilization() && !self.isSaving() && self.newUtilization().isValid() && self.newUtilization().visitType();\r\n\t\t\t});\r\n\t\t\tself.createNewNote();\r\n\t\t\tself.createNewTouchPoint();\r\n\t\t\tself.createNewUtilization();\r\n\t\t\tself.lastThreeNotes = ko.computed(function () {\r\n\t\t\t\tvar theseNotes = self.selectedPatient().notes().sort(self.alphabeticalDateSort);\r\n\t\t\t\tvar lastNotes = [];\r\n\t\t\t\tko.utils.arrayForEach(theseNotes, function (note) {\r\n\t\t\t\t\tif (lastNotes.length < 3 && !note.entityAspect.entityState.isAdded()) {\r\n\t\t\t\t\t\tlastNotes.push(note);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lastNotes;\r\n\t\t\t});\r\n\t\t\tpatientIndex.leaving.subscribe(function (newValue) {\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\tself.cancel();\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tctor.prototype.attached = function () {\r\n\t\t};\r\n\r\n\t\treturn ctor;\r\n\t});  \n","define('viewmodels/shell/quickadd/quickaddpopover',['models/base', 'viewmodels/patients/index'],\r\n    function (modelConfig, patientsIndex) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.selectedPatient = ko.computed(patientsIndex.selectedPatient);\r\n        };\r\n\r\n        ctor.prototype.createQuickAddSections = function () {\r\n            var self = this;\r\n            self.quickAddSections.push(new modelConfig.quickAddSection('notes', 'Notes', 'icon-notes', 'viewmodels/shell/quickadd/notes'));\r\n            self.quickAddSections.push(new modelConfig.quickAddSection('todo', 'To Do', 'icon-notes', 'viewmodels/shell/quickadd/todo'));\r\n            self.quickAddSections.push(new modelConfig.quickAddSection('assign', 'Assign', 'icon-assign-patient', 'viewmodels/shell/quickadd/assign'));\r\n            self.activeQuickAddTab(self.quickAddSections()[0]);\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.isShowing = ko.observable(false);\r\n            // Sections to show in the quick add popover\r\n            self.quickAddSections = ko.observableArray();\r\n            self.activeQuickAddTab = ko.observable();\r\n            self.createQuickAddSections();\r\n            self.setActiveTab = function (tab) {\r\n                self.activeQuickAddTab(tab);\r\n            };\r\n            self.patientIsSelected = ko.computed(function () {\r\n                if (self.selectedPatient()) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        };\r\n        \r\n        ctor.prototype.attached = function () {\r\n            var self = this;\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/shell/quickadd/todo',['models/base', 'config.services', 'services/datacontext', 'services/session', 'services/navigation', 'services/local.collections', 'viewmodels/patients/index'],\r\n    function (modelConfig, servicesConfig, datacontext, session, navigation, localCollections, patientIndex) {\r\n\r\n        var alphabeticalSort = function (l, r) { return (l.preferredName() == r.preferredName()) ? (l.preferredName() > r.preferredName() ? 1 : -1) : (l.preferredName() > r.preferredName() ? 1 : -1) };\r\n\r\n        var alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            // Note that is used when creating a new note\r\n            self.newTodo = ko.observable();\r\n            self.isSaving = ko.observable();\r\n            self.categories = ko.computed(datacontext.enums.toDoCategories);\r\n            self.statuses = ko.computed(datacontext.enums.goalTaskStatuses);\r\n            self.priorities = ko.computed(datacontext.enums.priorities);\r\n            self.careManagers = datacontext.enums.careManagers;\r\n            self.savable = ko.observable(true);\r\n        };\r\n\r\n        function ErrorMsg(msg) {\r\n            var self = this;\r\n            self.Message = msg;\r\n        }\r\n\r\n        ctor.prototype.createNewTodo = function () {\r\n            var self = this;\r\n            var patientId;\r\n            // The following shouldn't be needed\r\n            if (self.selectedPatient) {\r\n                patientId = self.selectedPatient().id();\r\n            } else {\r\n                patientId = self.selectedPatient().id();\r\n            }\r\n            if (patientId) {\r\n                // Create a local version of this patient\r\n                var thisPatient = self.selectedPatient();\r\n                // Create a patient to use\r\n                var patientDetailsEntity = ko.observable();\r\n                datacontext.checkForEntityLocally(patientDetailsEntity, thisPatient.id(), 'ToDoPatient');\r\n                // If a local patient details object wasn't found,\r\n                if (!patientDetailsEntity()) {\r\n                    patientDetailsEntity(datacontext.createEntity('ToDoPatient', { id: thisPatient.id(), firstName: thisPatient.firstName(), lastName: thisPatient.lastName(), middleName: thisPatient.middleName(), suffix: thisPatient.suffix(), preferredName: thisPatient.preferredName() }));\r\n                }\r\n                // Create a new todo\r\n                self.newTodo(datacontext.createEntity('ToDo', { id: -2, statusId: 1, priorityId: 0, createdById: session.currentUser().userId(), assignedToId: session.currentUser().userId(), patientId: patientId, patientDetails: patientDetailsEntity() }));\r\n            } else {\r\n                // Create a new todo\r\n                self.newTodo(datacontext.createEntity('ToDo', { id: -2, statusId: 1, priorityId: 0, createdById: session.currentUser().userId(), assignedToId: session.currentUser().userId(), patientId: patientId }));                \r\n            }\r\n            self.newTodo().isNew(true);\r\n\t\t\tself.newTodo().watchDirty();\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.selectedPatient = settings.data.selectedPatient;\r\n            // Track whether there is a patient or not\r\n            self.noPatient = ko.computed(function () {\r\n                if (self.newTodo()) {\r\n                    // Return true or false only, not the object\r\n                    return !!self.newTodo().patientId();   \r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n            self.thisTodoId = ko.computed(function () {\r\n                return self.selectedPatient().todos().length * -1;\r\n            });\r\n            self.isShowing = self.settings.data.isShowing;\r\n            self.cancel = function () {\r\n                self.newTodo().entityAspect.rejectChanges();\r\n\t\t\t\tself.newTodo().clearDirty();\r\n                self.createNewTodo();\r\n                self.isShowing(false);\r\n            };\r\n            self.availablePrograms = ko.computed(function () {\r\n                var computedPrograms = [];\r\n                if (self.selectedPatient() && self.newTodo() && self.newTodo().patient()) {\r\n                    var thesePrograms = self.selectedPatient().programs.slice(0).sort(self.alphabeticalNameSort);\r\n                    ko.utils.arrayForEach(thesePrograms, function (program) {\r\n                        if (program.elementState() !== 6 && program.elementState() !== 1 && program.elementState() !== 5) {\r\n                            computedPrograms.push(program);\r\n                        }\r\n                    });\r\n                }\r\n                return computedPrograms;\r\n            });\t\t\t\r\n            \r\n            self.startDate = ko.observable(new moment());\r\n            self.save = function () {\r\n                datacontext.saveToDo(self.newTodo(), 'Insert').then(saveCompleted);\r\n\r\n                function saveCompleted(todo) {\r\n\t\t\t\t\ttodo.clearDirty();\r\n                    todo.isNew(false);\r\n                    self.isShowing(false);\r\n                    todo.entityAspect.acceptChanges();\r\n                    localCollections.todos.push(self.todo);\r\n                    self.createNewTodo();\r\n                }\r\n            };\r\n            self.selectedPatient.subscribe(function () {\r\n                self.cancel();\r\n            });\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    return self.newTodo() && !self.isSaving() && self.newTodo().isValid() && self.savable() && !datacontext.todosSaving();\r\n                },\r\n                write: function (newValue) {\r\n                    self.savable(newValue);\r\n                }\r\n            });\r\n            self.removeAssignment = function () {\r\n                self.newTodo().assignedTo(null);\r\n                self.assignedToDisplay('');\r\n            };\r\n            self.removeAssociation = function () {\r\n                // Remove the association to the patient\r\n                self.newTodo().patientId(null);\r\n                // If patient has been removed: clear all associated programs (if any):\r\n                if (self.newTodo() && self.newTodo().programIds().length > 0 && !self.newTodo().patientId()) {                    \r\n                    self.newTodo().programIds.removeAll();\t\t\t\t\t\r\n                }\r\n            };\r\n\t\t\tself.removeUserAssociation = function () {                \r\n\t\t\t\tself.removeAssignment();\t\t\t\t\t\t\t\t\t\r\n            };\r\n            self.createNewTodo();\r\n            // Set the displayed value to the current assign to\r\n            self.assignedToDisplay = ko.observable((self.newTodo() && self.newTodo().assignedTo()) ? self.newTodo().assignedTo().preferredName() : '');\r\n            self.assignedToDisplay.subscribe(function (newValue) {\r\n                // else, Find the care manager that matches\r\n                var matchedCareManager = ko.utils.arrayFirst(self.careManagers(), function (cm) {\r\n                    return cm.preferredName() === newValue;\r\n                });\r\n                // If a match is found,\r\n                if (matchedCareManager) {\r\n                    self.newTodo().assignedTo(matchedCareManager);\r\n                } else {\r\n                    console.log('No match found');\r\n                }\r\n            });\r\n            self.checkForMatch = function () {\r\n                return self.assignedToDisplay() === (self.newTodo().assignedTo() ? self.newTodo().assignedTo().preferredName() : '');                \r\n            };\r\n            self.validMatch = ko.computed(function () {\r\n                var result = false;\r\n                if (self.newTodo()) {\r\n                    // Check if it matches a valid value\r\n                    result = self.checkForMatch();\r\n                    // If there is an invalid value,\r\n                    if (!result) {\r\n                        // if the assign to id has been changed,\r\n                        if (self.newTodo() && self.newTodo().assignedToId()) {\r\n                            // Reset the value\r\n                            self.assignedToDisplay((self.newTodo() && self.newTodo().assignedTo()) ? self.newTodo().assignedTo().preferredName() : '');\r\n                            self.assignedToDisplay.valueHasMutated();\r\n                            // And check again\r\n                            result = self.checkForMatch();\r\n                        } else {\r\n                        }\r\n                    }\r\n                }\r\n                // Enable or disable the can save state\r\n                self.canSave(result);\r\n                return result;\r\n            }).extend({ throttle: 25 });\r\n            self.careManagersBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                remote: {\r\n                    url: '%QUERY',\r\n                    transport: function (url, options, onSuccess, onError) {\r\n                        var theseCareManagers = self.careManagers().sort(alphabeticalSort);\r\n                        var deferred = $.Deferred();\r\n                        deferred.done(function () { onSuccess(this); });\r\n\r\n                        var filterVal = url.toLowerCase();\r\n                        var result = theseCareManagers.filter(function (item) {\r\n                            if (item && item.firstLastOrPreferredName) {\r\n                                return !!~item.firstLastOrPreferredName().toLowerCase().indexOf(filterVal);\r\n                            }\r\n                            return false;\r\n                        });\r\n                        deferred.resolveWith(result);\r\n                        return deferred.promise();\r\n                    }\r\n                },\r\n                limit: 25\r\n            });\r\n            self.careManagersBloodhound.initialize();\r\n            patientIndex.leaving.subscribe(function (newValue) {\r\n                if (newValue) {\r\n                    self.cancel();\r\n                } else {\r\n                }\r\n            });\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/shell/sidebar',[],\r\n    function () {\r\n        \r\n    });\n","define('viewmodels/templates/action.edit',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var alphabeticalSort = function (l, r) { return (l.preferredName() == r.preferredName()) ? (l.preferredName() > r.preferredName() ? 1 : -1) : (l.preferredName() > r.preferredName() ? 1 : -1) };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.action = self.settings.action;\r\n            self.canSave = self.settings.canSave;\r\n            self.showing = self.settings.showing;\r\n            self.careManagers = datacontext.enums.careManagers;\r\n            // Set the displayed value to the current assign to\r\n            self.assignToDisplay = ko.observable((self.action() && self.action().assignTo()) ? self.action().assignTo().preferredName() : '');\r\n            self.assignToDisplay.subscribe(function (newValue) {\r\n                // else, Find the care manager that matches\r\n                var matchedCareManager = ko.utils.arrayFirst(self.careManagers(), function (cm) {\r\n                    return cm.preferredName() === newValue;\r\n                });\r\n                // If a match is found,\r\n                if (matchedCareManager) {\r\n                    self.action().assignTo(matchedCareManager);\r\n                } else {\r\n                    console.log('No match found');\r\n                }\r\n            });\r\n            self.checkForMatch = function () {\r\n                return self.assignToDisplay() === (self.action().assignTo() ? self.action().assignTo().preferredName() : '');                \r\n            }\r\n            self.removeAssignment = function () {\r\n                self.action().assignTo(null);\r\n                self.assignToDisplay('');\r\n            }\r\n            self.validMatch = ko.computed(function () {\r\n                var result = false;\r\n                if (self.action()) {\r\n                    // Check if it matches a valid value\r\n                    result = self.checkForMatch();\r\n                    // If there is an invalid value,\r\n                    if (!result) {\r\n                        // if the assign to id has been changed,\r\n                        if (self.action() && self.action().assignToId()) {\r\n                            // Reset the value\r\n                            self.assignToDisplay((self.action() && self.action().assignTo()) ? self.action().assignTo().preferredName() : '');\r\n                            self.assignToDisplay.valueHasMutated();\r\n                            // And check again\r\n                            result = self.checkForMatch();\r\n                        } else {\r\n                            // Else clear the value\r\n                            self.removeAssignment();\r\n                        }\r\n                    }\r\n                }\r\n                // Enable or disable the can save state\r\n                self.canSave(result);\r\n                return result;\r\n            }).extend({ throttle: 25 });\r\n            self.careManagersBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                remote: {\r\n                    url: '%QUERY',\r\n                    transport: function (url, options, onSuccess, onError) {\r\n                        var theseCareManagers = self.careManagers().sort(alphabeticalSort);\r\n                        var deferred = $.Deferred();\r\n                        deferred.done(function () { onSuccess(this); });\r\n\r\n                        var filterVal = url.toLowerCase();\r\n                        var result = theseCareManagers.filter(function (item) {\r\n                            if (item && item.firstLastOrPreferredName) {\r\n                                return !!~item.firstLastOrPreferredName().toLowerCase().indexOf(filterVal);\r\n                            }\r\n                            return false;\r\n                        });\r\n                        deferred.resolveWith(result);\r\n                        return deferred.promise();\r\n                    }\r\n                },\r\n                limit: 25\r\n            });\r\n            self.careManagersBloodhound.initialize();\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/allergies.panel',['services/session', 'services/datacontext', 'config.services', 'viewmodels/shell/shell', 'models/base', 'viewmodels/patients/index', 'viewmodels/patients/medications/index'],\r\n    function (session, datacontext, servicesConfig, shell, modelConfig, patientsIndex, medicationsIndex) {\r\n\r\n        var ctor = function () {\r\n    \t\tvar self = this;\r\n    \t\tself.descendingDateSort = function (l, r) { return (l.dueDate() == r.dueDate()) ? (l.dueDate() < r.dueDate() ? 1 : -1) : (l.dueDate() < r.dueDate() ? 1 : -1) };\r\n\t        self.allergySort = function (l, r) {\r\n\t            // Primary sort property\r\n\t            var p1 = l.status() ? l.status().id() : '';\r\n\t            var p2 = r.status() ? r.status().id() : '';\r\n\r\n\t            // Secondary sort property\r\n\t            var o1 = l.name();\r\n\t            var o2 = r.name();\r\n\r\n\t            if (p1 != p2) {\r\n\t                if (p1 < p2) return 1;\r\n\t                if (p1 > p2) return -1;\r\n\t                return 0;\r\n\t            }\r\n\t            if (o1 < o2) return 1;\r\n\t            if (o1 > o2) return -1;\r\n\t            return 0;\r\n\t        };\r\n            self.modalShowing = ko.observable(false);\r\n            self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n    \t}\r\n\r\n        // All the available columns\r\n    \tvar allColumns = [\r\n            new Column('expand', '', 'span1 ellipsis filters', '', true),\r\n            new Column('priority', 'Priority', 'span2 ellipsis', 'priority.id'),\r\n    \t\tnew Column('status', 'Status', 'span2 ellipsis', 'statusId'),\r\n            new Column('priority-small', 'Priority', 'span1 ellipsis', 'priority.id'),\r\n            new Column('status-small', '', 'span1 ellipsis', 'statusId'),\r\n    \t\tnew Column('patient', 'Individual','span2 ellipsis', 'patientDetails.lastName'),\r\n    \t\tnew Column('type', 'Type','span3', 'type.name', true),\r\n            new Column('type-small', 'Type','span2', 'type.name', true),\r\n    \t\tnew Column('name', 'Allergy','span6 ellipsis', 'allergyName'),\r\n            new Column('name-small', 'Allergy','span3 ellipsis', 'allergyName'),\r\n            new Column('severity', 'Severity','span4 ellipsis', 'severity.name'),\r\n            new Column('severity-small', 'Severity','span3 ellipsis', 'severity.name'),\r\n    \t\tnew Column('duedate', 'Due Date','span2 ellipsis', 'dueDate'),\r\n    \t\tnew Column('assignedto', 'Assigned To','span2 ellipsis', 'assignedTo.preferredName'),\r\n            new Column('startdate', 'Date','span2 ellipsis', 'startDate'),\r\n            new Column('startdate-small', 'Date','span1 ellipsis', 'startDate'),\r\n            new Column('updatedon', 'Date','span2 ellipsis', 'updatedOn'),\r\n            new Column('updatedon-small', 'Date', 'span1 ellipsis', 'updatedOn')\r\n    \t];\r\n\r\n        var patientEndPoint = ko.computed(function () {\r\n            if(!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient', 'Patient');\r\n        });\r\n\r\n        // Endpoint to use for getting the current patient's programs\r\n        var patientProgramEndPoint = ko.computed(function () {\r\n            if(!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Program');\r\n        });\r\n\r\n        ctor.prototype.activate = function (data) {\r\n    \t\tvar self = this;\r\n    \t\tself.allergies = data.allergies;\r\n\t\t\tself.selectedPatient = data.selectedPatient;\r\n            self.selectedSortColumn = data.selectedSortColumn;\r\n            self.toggleSort = data.toggleSort;\r\n            self.canSort = data.canSort ? data.canSort : false;\r\n            self.activeAllergy = medicationsIndex.activeAllergy;\r\n            self.saveOverride = function () {\r\n                // Edit Existing Allergy: Save it if its valid. if not - cancel any chages (silently !)\r\n\t\t\t\tif ( self.modalEntity().allergy().isValid() ){\r\n\t\t\t\t\tdatacontext.saveAllergies([self.modalEntity().allergy()], 'Update').then(saveCompleted);\r\n\t\t\t\t} else{\r\n\t\t\t\t\tself.cancelOverride()\r\n\t\t\t\t}\r\n\r\n                function saveCompleted() {\r\n                    self.modalEntity().allergy().isNew(false);\r\n                    self.modalEntity().allergy().isUserCreated(false);\r\n                    self.modalEntity().allergy().entityAspect.acceptChanges();\r\n                }\r\n            };\r\n            self.cancelOverride = function () {\r\n                datacontext.cancelEntityChanges(self.modalEntity().allergy());\r\n                patientsIndex.getPatientsAllergies();\r\n            };\r\n\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle: 'Edit Allergy',\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: self.modalEntity,\r\n\t\t\t\ttemplatePath: 'viewmodels/templates/allergy.edit',\r\n\t\t\t\tshowing: self.modalShowing,\r\n\t\t\t\tsaveOverride: self.saveOverride,\r\n\t\t\t\tcancelOverride: self.cancelOverride,\r\n\t\t\t\tdeleteOverride: null,\r\n\t\t\t\tclassOverride: 'modal-lg'\r\n\t\t\t}\r\n            self.modal = new modelConfig.modal(modalSettings);\r\n    \t\t// A list of columns to display\r\n    \t\tself.columns = ko.computed(function () {\r\n    \t\t\tvar tempcols = [];\r\n    \t\t\tvar thesecols = data.columns();\r\n    \t\t\tko.utils.arrayForEach(thesecols, function (col) {\r\n    \t\t\t\tvar matchingCol = findColumnByName(col);\r\n    \t\t\t\tif (matchingCol) {\r\n    \t\t\t\t\ttempcols.push(matchingCol);\r\n    \t\t\t\t}\r\n    \t\t\t});\r\n                // If no columns are found, show a default set of columns\r\n                if (!tempcols) {\r\n                    tempcols = ['status','patient','category','title','duedate'];\r\n                }\r\n    \t\t\treturn tempcols;\r\n    \t\t});\r\n            self.setActiveAllergy = function (allergy) {\r\n                medicationsIndex.setActiveAllergy(allergy);\r\n            };\r\n    \t\tself.editAllergy = function (allergy) {\r\n                // Set the allergy\r\n                self.modalEntity().allergy(allergy);\r\n                // Set the current modal\r\n                shell.currentModal(self.modal);\r\n                // Show it\r\n                self.modalShowing(true);\r\n    \t\t}\r\n    \t\tself.computedAllergies = ko.computed(function () {\r\n    \t\t\tko.utils.arrayForEach(self.allergies(), function (td) {\r\n                    // If there is no edit function\r\n    \t\t\t\tif (!td.edit) {\r\n    \t\t\t\t\ttd.edit = function () {\r\n    \t\t\t\t\t\tself.editAllergy(td);\r\n    \t\t\t\t\t}\r\n    \t\t\t\t}\r\n                    if (!td.setActiveAllergy) {\r\n                        td.setActiveAllergy = function () {\r\n                            self.setActiveAllergy(td);\r\n                        }\r\n                    }\r\n                    // If there is no isExpanded property\r\n                    if (!td.isExpanded) {\r\n                        td.isExpanded = ko.observable(false);\r\n                    }\r\n    \t\t\t});\r\n                return self.allergies();\r\n    \t\t});\r\n    \t}\r\n\r\n    \tfunction findColumnByName(name) {\r\n    \t\tvar match = ko.utils.arrayFirst(allColumns, function (allcol) {\r\n    \t\t\treturn allcol.name.toLowerCase() === name.toLowerCase();\r\n    \t\t});\r\n    \t\tif (!match) {\r\n    \t\t\tconsole.log('bad column name used - ', name);\r\n    \t\t}\r\n    \t\treturn match;\r\n    \t}\r\n\r\n    \tfunction Column(name, displayname, cssclass, sortprop, disablesort) {\r\n    \t\tvar self = this;\r\n    \t\tself.name = name;\r\n    \t\tself.displayName = displayname;\r\n            // If the name contains small,\r\n            if (name.substr(name.length - 5, 5) === 'small') {\r\n                self.path = 'views/templates/allergy.' + name.substr(0, name.length - 6) + '.html';\r\n            } else {\r\n                self.path = 'views/templates/allergy.' + name + '.html';\r\n            }\r\n    \t\tself.cssClass = cssclass;\r\n            self.sortProperty = sortprop;\r\n            self.canSort = disablesort ? false : true;\r\n    \t}\r\n\r\n    \treturn ctor;\r\n\r\n        function ModalEntity(modalShowing) {\r\n            var self = this;\r\n            self.allergy = ko.observable();\r\n            self.canSaveObservable = ko.observable(true);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    var allergyok = false;\r\n                    if (self.allergy()) {\r\n                        var allergytitle = !!self.allergy().allergyName();\r\n                        var allergystatus = !!self.allergy().status();\r\n                        allergyok = allergytitle && allergystatus;\r\n                    }\r\n                    return allergyok && self.canSaveObservable();\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { allergy: self.allergy, canSave: self.canSave, showing: modalShowing  };\r\n        }\r\n\r\n\t});\n","define('viewmodels/templates/allergy.edit',['services/datacontext'],\r\n  function (datacontext) {\r\n\r\n    var ctor = function () {\r\n      var self = this;\r\n    };\r\n\r\n    ctor.prototype.allergyTypes = ko.computed(datacontext.enums.allergyTypes);\r\n    ctor.prototype.severities = ko.computed(datacontext.enums.severities);\r\n    ctor.prototype.reactions = ko.computed(datacontext.enums.reactions);\r\n    ctor.prototype.allergySources = ko.computed(datacontext.enums.allergySources);\r\n    ctor.prototype.allergyStatuses = ko.computed(datacontext.enums.allergyStatuses);\r\n\r\n    ctor.prototype.removeAllergy = function (sender) {\r\n      sender.entityAspect.rejectChanges();\r\n      sender.deleteFlag(true);\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n      var self = this;\r\n      self.settings = settings;\r\n      self.showing = ko.computed(function () { return true; });\r\n      self.selectedPatient = self.settings.selectedPatient;\r\n      self.allergy = self.settings.allergy;\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n\r\n    };\r\n\r\n    return ctor;\r\n  });\n","define('viewmodels/templates/barrier.edit',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n\t\t\tself.existingDetailsOpen = ko.observable(false);\r\n\t\t\tself.toggleOpen = function () {\r\n\t\t\t\tself.existingDetailsOpen(!self.existingDetailsOpen());\r\n\t\t\t};\r\n            self.barrier = self.settings.entity;\r\n            self.isNew = self.barrier.goal().isNew;\r\n            self.barrierStatuses = datacontext.enums.barrierStatuses;\r\n            self.barrierCategories = datacontext.enums.barrierCategories;\r\n            self.canSave = self.settings.canSave ? self.settings.canSave : true;\r\n            self.showing = self.settings.showing ? self.settings.showing : true;\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/care.team.edit',['services/datacontext'],\r\n  function (datacontext) {\r\n\r\n      var alphabeticalSort = function (l, r) { return (l.preferredName() == r.preferredName()) ? (l.preferredName() > r.preferredName() ? 1 : -1) : (l.preferredName() > r.preferredName() ? 1 : -1) };\r\n\r\n      var ctor = function () {\r\n          var self = this;\r\n      };\r\n\r\n      ctor.prototype.careManagers = ko.computed(datacontext.enums.careManagers);\r\n      // ctor.prototype.deleteFocusProblem = function (sender) {\r\n      //     sender.entityAspect.rejectChanges();\r\n      //     sender.deleteFlag(true);\r\n      // };\r\n      // ctor.prototype.observationStates = ko.computed(function () {\r\n      //     // Find problem observation type from list\r\n      //     var problemType = ko.utils.arrayFirst(datacontext.enums.observationTypes(), function (type) {\r\n      //         return type.name() === 'Problems';\r\n      //     });\r\n      //     // Filter states down to only those who have allowed type id that contains the problem type id\r\n      //     var theseStates = ko.utils.arrayFilter(datacontext.enums.observationStates(), function (state) {\r\n      //         return state.allowedTypeIds().indexOf(problemType.id()) !== -1;\r\n      //     });\r\n      //     return theseStates;\r\n      // });\r\n\r\n      ctor.prototype.activate = function (settings) {\r\n          var self = this;\r\n          self.settings = settings;\r\n          self.showing = ko.computed(function () { return true; });\r\n          self.selectedPatient = ko.computed(self.settings.selectedPatient);\r\n          self.canSave = self.settings.canSave;\r\n          self.saveType = self.settings.saveType;\r\n          self.primaryCareManager = ko.computed(function () {\r\n            var matchedCareManager = ko.utils.arrayFirst(self.selectedPatient().careMembers(), function (cm) {\r\n              return cm.primary();\r\n            });\r\n            return matchedCareManager;\r\n          });\r\n          self.newAssignedTo = ko.observable();\r\n          self.careManagers = datacontext.enums.careManagers;\r\n          // Set the displayed value to the current assign to\r\n          self.assignToDisplay = ko.observable();\r\n          self.assignToDisplay.subscribe(function (newValue) {\r\n              // else, Find the care manager that matches\r\n              var matchedCareManager = ko.utils.arrayFirst(self.careManagers(), function (cm) {\r\n                  return cm.preferredName() === newValue;\r\n              });\r\n              // If a match is found,\r\n              if (matchedCareManager) {\r\n                // If we already have a primary,\r\n                if (self.primaryCareManager()) {\r\n                  // Overwrite it\r\n                  self.primaryCareManager().preferredName(matchedCareManager.preferredName());\r\n                  self.primaryCareManager().gender('n');\r\n                  self.primaryCareManager().contactId(matchedCareManager.id());\r\n                  self.saveType('Update');\r\n                } else {\r\n                  // Get the care manager type\r\n                  var careMemberType = ko.utils.arrayFirst(datacontext.enums.careMemberTypes(), function (cmType) {\r\n                      return cmType.name() === 'Care Manager';\r\n                  });\r\n                  // Else, create a new one\r\n                  var thisCareMember = datacontext.createEntity('CareMember', { id: -1, patientId: self.selectedPatient().id(), preferredName: matchedCareManager.preferredName(), typeId: careMemberType.id(), gender: 'n', primary: true, contactId: matchedCareManager.id() });\r\n                  self.saveType('Insert');\r\n                }\r\n                self.canSave(true);\r\n                // self.action().assignTo(matchedCareManager);\r\n              } else {\r\n                console.log('No match found');\r\n              }\r\n          });\r\n          self.checkForMatch = function () {\r\n              return self.assignToDisplay() === (self.primaryCareManager() ? self.primaryCareManager().preferredName() : '');                \r\n          }\r\n          // self.removeAssignment = function () {\r\n          //     self.primaryCareManager()(null);\r\n          //     self.assignToDisplay('');\r\n          // }\r\n          self.validMatch = ko.computed(function () {\r\n              var result = false;\r\n              if (self.primaryCareManager()) {\r\n                  // Check if it matches a valid value\r\n                  result = self.checkForMatch();\r\n                  // If there is an invalid value,\r\n                  if (!result) {\r\n                      // if the assign to id has been changed,\r\n                      if (self.primaryCareManager() && self.primaryCareManager().id()) {\r\n                          // Reset the value\r\n                          self.assignToDisplay(self.primaryCareManager() ? self.primaryCareManager().preferredName() : '');\r\n                          self.assignToDisplay.valueHasMutated();\r\n                          // And check again\r\n                          result = self.checkForMatch();\r\n                      } else {\r\n                          // Else clear the value\r\n                          self.removeAssignment();\r\n                      }\r\n                  }\r\n              }\r\n              // Enable or disable the can save state\r\n              self.canSave(result);\r\n              return result;\r\n          }).extend({ throttle: 25 });\r\n          self.careManagersBloodhound = new Bloodhound({\r\n              datumTokenizer: function (d) {\r\n                  return Bloodhound.tokenizers.whitespace(d.name());\r\n              },\r\n              queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n              remote: {\r\n                  url: '%QUERY',\r\n                  transport: function (url, options, onSuccess, onError) {\r\n                      var theseCareManagers = self.careManagers().sort(alphabeticalSort);\r\n                      var deferred = $.Deferred();\r\n                      deferred.done(function () { onSuccess(this); });\r\n\r\n                      var filterVal = url.toLowerCase();\r\n                      var result = theseCareManagers.filter(function (item) {\r\n                          if (item && item.firstLastOrPreferredName) {\r\n                                return !!~item.firstLastOrPreferredName().toLowerCase().indexOf(filterVal);\r\n                            }\r\n                            return false;\r\n                      });\r\n                      deferred.resolveWith(result);\r\n                      return deferred.promise();\r\n                  }\r\n              },\r\n              limit: 25\r\n          });\r\n          self.careManagersBloodhound.initialize();\r\n          // A list of the problem observations for this patient\r\n          // self.computedProblemObservations = ko.computed(function () {\r\n          //     var filteredObservations = [];\r\n          //     var patientsObservations = self.selectedPatient().observations();\r\n          //     // Filter the list only to observations that are of type 'Problem'\r\n          //     filteredObservations = ko.utils.arrayFilter(patientsObservations, function (item) {\r\n          //         // If the item has a type, return if it matches problem, else if there is no type return false\r\n          //         return item.type() ? (item.type().name() === 'Problems' && !item.deleteFlag() && (item.entityAspect.entityState.isModified() || item.state().name().toLowerCase() === 'active')) : false;\r\n          //     }).sort(self.newThenAlphabeticalSort);\r\n          //     return filteredObservations;\r\n          // }).extend({ throttle: 50 });\r\n          // self.showActions = self.settings.hasOwnProperty('showActions') ? self.settings.showActions : self.showing;\r\n          // self.saveFocusProblems = self.settings.saveFocusProblems || function () { return false; };\r\n          // self.cancelFocusProblems = self.settings.cancelFocusProblems || function () { return false; };\r\n      };\r\n\r\n      ctor.prototype.attached = function () {\r\n\r\n      };\r\n\r\n      return ctor;\r\n  });\n","/**\r\n*\tadd /edit care member dialog module*\t\r\n*\t@module careMember.edit\r\n*/\r\ndefine('viewmodels/templates/careMember.edit',[ 'services/datacontext', 'services/local.collections', 'viewmodels/home/contacts/index' ],\r\n\tfunction( datacontext, localCollections, contactsIndex ){\r\n\r\n\t\tvar subscriptionTokens = [];\t\t\r\n\t\tvar newId = 0;\t\t\r\n\t\tvar frequencies = datacontext.enums.careMemberFrequency;\r\n\t\tvar careMemberStatuses = datacontext.enums.careMemberStatuses;\r\n\t\t\t\t\r\n\t\tfunction search( settings ){\r\n\t\t\tvar self = this;\r\n\t\t\tself.criteriaFirstName = ko.observable();\r\n\t\t\tself.criteriaLastName = ko.observable();\t\t\t\r\n\t\t\tself.criteriaContactTypeId = ko.observable();\r\n\t\t\tself.criteriaContactSubTypes = ko.observableArray();\r\n\t\t\tself.criteriaContactStatuses = ko.observableArray();\r\n\t\t\tself.searching = ko.observable(false);\r\n\t\t\tself.totalCount = ko.observable(0);\r\n\t\t\tself.noResultsFound = ko.observable(false);\r\n\t\t\tself.myContactSearchResults = ko.observableArray([]);\r\n\t\t\tself.selectedContact = settings.selectedContact;\r\n\t\t\t\r\n\t\t\tself.canSearchContacts = ko.computed( function(){\r\n\t\t\t\tvar canSearch = false;\r\n\t\t\t\tvar firstName = self.criteriaFirstName();\r\n\t\t\t\tvar lastName = self.criteriaLastName();\r\n\t\t\t\t//var statuses = self.criteriaContactStatuses();\r\n\t\t\t\tvar subTypes = self.criteriaContactSubTypes();\r\n\t\t\t\tvar searching = self.searching? self.searching() : false;\r\n\t\t\t\tif( subTypes.length > 0 ){\r\n\t\t\t\t\tcanSearch = true;// type/s are selected\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif( firstName && firstName.trim().length > 0 && lastName && lastName.trim().length > 0 ){\r\n\t\t\t\t\t\tcanSearch = true;\t//first and last name\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcanSearch = canSearch && !searching;\t//block until search returned\r\n\t\t\t\treturn canSearch;\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\r\n\t\t\tself.defaultContactType = ko.observable();\r\n\t\t\tself.findDefaultContactType = function( contactTypes ){\r\n\t\t\t\tvar defaultType = null;\r\n\t\t\t\tvar types = ko.utils.arrayFilter( contactTypes(), function(node){\r\n\t\t\t\t\treturn node.name() == 'Person';\r\n\t\t\t\t});\r\n\t\t\t\tif( types && types.length > 0 ){\r\n\t\t\t\t\tdefaultType = types[0];\r\n\t\t\t\t}\r\n\t\t\t\treturn defaultType;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar allContactTypes = ko.observableArray([]);\r\n\t\t\tvar contactTypeGroupId = 1;\r\n\t\t\tvar contactTypes = ko.observableArray([]);\r\n\t\t\tself.initialized = false;\r\n\t\t\tself.contactStatuses = datacontext.enums.contactStatuses;\r\n\t\t\tself.init = function(){\r\n\t\t\t\tcontactTypes( datacontext.getContactTypes( contactTypeGroupId, 'root' ) );\r\n\t\t\t\tif( !self.defaultContactType() ){\r\n\t\t\t\t\tself.defaultContactType( self.findDefaultContactType(contactTypes) )\r\n\t\t\t\t}\r\n\t\t\t\tself.criteriaContactTypeId( self.defaultContactType().id() );\r\n\t\t\t\t\r\n\t\t\t\tvar typesList = datacontext.getContactTypes( contactTypeGroupId, false );\r\n\t\t\t\tallContactTypes(typesList);\r\n\t\t\t\t\r\n\t\t\t\t//var contactStatuses = datacontext.enums.contactStatuses;\r\n\t\t\t\t\r\n\t\t\t\tvar activeStatuses = ko.utils.arrayFilter( self.contactStatuses(), function(status){\r\n\t\t\t\t\treturn status.name() == 'Active';\r\n\t\t\t\t});\r\n\t\t\t\tif( activeStatuses.length ){\r\n\t\t\t\t\tself.criteriaContactStatuses.push( activeStatuses[0] );\r\n\t\t\t\t}\r\n\t\t\t\tself.initialized = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.contactsReturned = ko.observableArray([]);\r\n\t\t\t\r\n\t\t\tfunction getContactTypeChildren( typeId ){\r\n\t\t\t\tvar subTypes = ko.utils.arrayFilter( allContactTypes(), function(item){\r\n\t\t\t\t\treturn ( item.parentId() && item.parentId() == typeId ) \r\n\t\t\t\t});\r\n\t\t\t\treturn subTypes;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.contactSubTypes = ko.computed( function(){\r\n\t\t\t\t//return children of selected type\r\n\t\t\t\tvar subTypes = [];\r\n\t\t\t\tvar typeId = self.criteriaContactTypeId();\r\n\t\t\t\tif( typeId ){\r\n\t\t\t\t\tsubTypes = getContactTypeChildren( typeId );\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn subTypes;\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\r\n\t\t\tself.canLoadMoreContacts = ko.observable(false);\r\n\t\t\tself.maxContactsLoaded = ko.observable(false);\r\n\t\t\t\r\n\t\t\tself.resetFilters = function(){\r\n\t\t\t\t// if( !defaultContactType() ){\r\n\t\t\t\t\t// defaultContactType( findDefaultContactType(contactTypes) )\r\n\t\t\t\t// }\r\n\t\t\t\t//criteriaContactTypeId( defaultContactType().id() );\r\n\t\t\t\tself.criteriaContactSubTypes([]);\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t//set active status as selected in the criteria as default:\t\t\t\t\t\t\r\n\t\t\t\t// criteriaContactStatuses([]);\r\n\t\t\t\t// if( activeContactStatus() ){\r\n\t\t\t\t\t// criteriaContactStatuses.push(activeContactStatus());\r\n\t\t\t\t// }\r\n\t\t\t\tself.criteriaFirstName(null);\r\n\t\t\t\tself.criteriaLastName(null);\r\n\t\t\t\tself.myContactSearchResults([]);\r\n\t\t\t\tself.contactsReturned([]);\r\n\t\t\t\tself.canLoadMoreContacts(false);\r\n\t\t\t\tself.maxContactsLoaded(false);\r\n\t\t\t\tself.noResultsFound(false);\r\n\t\t\t\tself.selectedContact(null);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.showResetFilters = ko.computed( function(){\t\t\t\t\r\n\t\t\t\tvar show = false;\r\n\t\t\t\tvar criteriaFirstName = self.criteriaFirstName();\r\n\t\t\t\tvar criteriaLastName = self.criteriaLastName();\r\n\t\t\t\tvar criteriaContactSubTypes = self.criteriaContactSubTypes();\r\n\t\t\t\tif( criteriaContactSubTypes.length == 0 ){\r\n\t\t\t\t\t//no subtypes\t\t\t\t\t\t\t\r\n\t\t\t\t\tif( !criteriaFirstName && !criteriaLastName ){\r\n\t\t\t\t\t\tshow = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tshow = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn show;\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\r\n\t\t\tself.contactsShowingText = ko.computed( function(){\r\n\t\t\t\tvar text = '';\r\n\t\t\t\tvar myContactSearchResults = self.myContactSearchResults();\r\n\t\t\t\tvar totalQueryCount = self.totalCount();\r\n\t\t\t\tif( myContactSearchResults.length ){\r\n\t\t\t\t\ttext = ' - ' + myContactSearchResults.length + ' showing';\r\n\t\t\t\t}\r\n\t\t\t\tif( myContactSearchResults.length < totalQueryCount ){\r\n\t\t\t\t\ttext += ' out of ' + totalQueryCount;\r\n\t\t\t\t}\r\n\t\t\t\treturn text;\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\r\n\t\t\tself.contactsTake = ko.observable(100);\t//TODO: read params on init\r\n\t\t\tself.contactsSkip = ko.observable(0);\r\n\t\t\tself.maxContactsCount = ko.observable(400);\r\n\t\t\t\r\n\t\t\tself.showResultsHeader = ko.computed( function(){\r\n\t\t\t\tvar myContactSearchResults = self.myContactSearchResults();\r\n\t\t\t\treturn (myContactSearchResults.length > 0);\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\r\n\t\t\tfunction loadContacts(){\r\n\t\t\t\r\n\t\t\t\tvar params = {\r\n\t\t\t\t\t\t\tcontactTypeIds: [],\r\n\t\t\t\t\t\t\tcontactSubTypeIds: [],\r\n\t\t\t\t\t\t\tcontactStatuses: [],\r\n\t\t\t\t\t\t\tfirstName: self.criteriaFirstName()? self.criteriaFirstName().trim() : null,\r\n\t\t\t\t\t\t\tlastName: self.criteriaLastName()? self.criteriaLastName().trim() : null,\r\n\t\t\t\t\t\t\tfilterType: 'StartsWith',\r\n\t\t\t\t\t\t\ttake: self.contactsTake(),\r\n\t\t\t\t\t\t\tskip: self.contactsSkip()\r\n\t\t\t\t};\r\n\t\t\t\tparams.contactTypeIds.push( self.criteriaContactTypeId() );\r\n\t\t\t\tko.utils.arrayForEach( self.criteriaContactSubTypes(), function(subType){\r\n\t\t\t\t\tparams.contactSubTypeIds.push( subType.id() );\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tko.utils.arrayForEach( self.criteriaContactStatuses(), function(status){\r\n\t\t\t\t\t\r\n\t\t\t\t\t//the search API wants the status enum NAME/s.\r\n\t\t\t\t\t//need to find the selected status as its enum object, since when multiselect selection values are clicked,\r\n\t\t\t\t\t//they are returned as type \"Identifier\", and dont have the \"name\" prop\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar statusObjects = ko.utils.arrayFilter( self.contactStatuses(), function(statusEnum){\r\n\t\t\t\t\t\treturn statusEnum.id() == status.id();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif( statusObjects.length > 0 ){\r\n\t\t\t\t\t\t//the selected status object now has the \"name\" prop that we need\r\n\t\t\t\t\t\tparams.contactStatuses.push( statusObjects[0].name() );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tself.contactsReturned([]);\r\n\t\t\t\treturn datacontext.getContacts( self.contactsReturned, params, self.totalCount, 'ContactCarememberSearch' ).then( self.getContactsReturned );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.getContactsReturned = function(list){\r\n\t\t\t\tvar searchResults = self.myContactSearchResults();\r\n\t\t\t\tko.utils.arrayPushAll( searchResults, self.contactsReturned() );\r\n\t\t\t\tself.myContactSearchResults.valueHasMutated();\r\n\t\t\t\tvar skipped = self.contactsSkip();\r\n\t\t\t\tvar nextSkip = skipped + self.contactsTake();\r\n\t\t\t\tif( nextSkip < self.totalCount() && nextSkip < self.maxContactsCount() ){\r\n\t\t\t\t\tself.contactsSkip( nextSkip );\r\n\t\t\t\t\tself.canLoadMoreContacts( true );\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tself.canLoadMoreContacts( false );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif( self.myContactSearchResults().length >= self.maxContactsCount() ){\r\n\t\t\t\t\tself.maxContactsLoaded( true );\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tself.maxContactsLoaded( false );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif( self.totalCount() == 0 ){\r\n\t\t\t\t\t//show no results message\r\n\t\t\t\t\tself.noResultsFound( true );\r\n\t\t\t\t}\r\n\t\t\t\t//allow the search button\r\n\t\t\t\tself.searching(false);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction clearCacheAndLoad(){\r\n\t\t\t\tself.searching(true);\r\n\t\t\t\tself.noResultsFound(false);\t\t\t\r\n\t\t\t\tvar contacts = datacontext.getLocalContacts('ContactCarememberSearch');\t\t\t\r\n\t\t\t\tself.myContactSearchResults([]);\r\n\t\t\t\tself.totalCount(0);\r\n\t\t\t\tself.contactsSkip(0);\r\n\t\t\t\tself.selectedContact(null);\r\n\t\t\t\tsetTimeout( function(){\r\n\t\t\t\t\t//short delay to allow the ko data binding to release references to these contacts, before removing them: \r\n\t\t\t\t\tif( contacts && contacts.length > 0 ){\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tko.utils.arrayForEach( contacts, function(contact){\r\n\t\t\t\t\t\t\tif( contact ){\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//remove from breeze cache:\r\n\t\t\t\t\t\t\t\tcontact.entityAspect.setDeleted();\r\n\t\t\t\t\t\t\t\tcontact.entityAspect.acceptChanges();\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\tloadContacts();\t//load first block with the new sort\r\n\t\t\t\t}, 50);\r\n\t\t\t}\r\n\t\t\tself.searchContacts = function(){\r\n\t\t\t\tclearCacheAndLoad();\r\n\t\t\t}\r\n\t\t\tself.loadMoreContacts = function(){\r\n\t\t\t\tloadContacts();\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\tself.selectContact = function( contact ){\t\t\t\t\r\n\t\t\t\tself.selectedContact(contact);\r\n\t\t\t}\r\n\t\t}\t//contactSearch\r\n\t\t\r\n\t\tvar selectedContact = ko.observable();\r\n\t\tvar contactSearch = new search( {selectedContact: selectedContact} );\r\n\t\tcontactSearch.init();\r\n\t\t\t\r\n\t\tfunction activate( settings ){\r\n\t\t\tvar self = this;\r\n\t\t\tself.showing = settings.showing;\r\n\t\t\tself.careMember = settings.careMember;\r\n\t\t\tself.careTeamMembers = settings.careTeamMembers;\r\n\t\t\tself.selectedPatient = settings.selectedPatient;\r\n\t\t\t//self.selectedContact = ko.observable();\r\n\t\t\tself.careMemberRoles = settings.careMemberRoles;\r\n\t\t\tself.pcmContactSubType = settings.pcmContactSubType;\r\n\t\t\tself.pcpContactSubType = settings.pcpContactSubType;\r\n\t\t\tself.addContactReturnedCallback = settings.addContactReturnedCallback;\r\n\t\t\tself.editMode = ko.observable(false);\r\n\t\t\tif( self.careMember().isNew() ){\r\n\t\t\t\t//add new\r\n\t\t\t\tif( self.careMember().contact() ){\r\n\t\t\t\t\t//add new got back from creating a new contact\r\n\t\t\t\t\tself.selectedContact( self.careMember().contact() );\t\t\t\t\t\r\n\t\t\t\t\tself.editMode(true);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\t//add new\r\n\t\t\t\t\tself.selectedContact(null);\r\n\t\t\t\t\tvar contactSelectedToken = self.selectedContact.subscribe( function(contact){\r\n\t\t\t\t\t\tif( contact ){\r\n\t\t\t\t\t\t\t//assign selected contact from search results to the member:\r\n\t\t\t\t\t\t\tself.careMember().contactId( contact.id() );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tself.careMember().contactId( null );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsubscriptionTokens.push( contactSelectedToken );\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t//edit\r\n\t\t\t\tself.careMember().entityAspect.rejectChanges();\r\n\t\t\t\tself.selectedContact( self.careMember().contact() );\t\t\t\t\t\r\n\t\t\t\tself.editMode(true);\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\tself.contactSubTypes = contactSearch.contactSubTypes;\r\n\t\t\t\r\n\t\t\tself.canAddContact = ko.computed( function(){\t\t\t\t\r\n\t\t\t\tvar showResults = contactSearch? contactSearch.showResultsHeader() : false;\r\n\t\t\t\tvar editMode = self.editMode();\r\n\t\t\t\tvar noResultsFound = contactSearch.noResultsFound();\r\n\t\t\t\treturn ( showResults && !editMode ) || noResultsFound;\t\t\t\t\r\n\t\t\t}).extend({throttle: 100});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tself.contactAlreadyAssigned = ko.observable(false);\r\n\t\t\t\r\n\t\t\tself.validateCareMember = ko.computed( function(){\r\n\t\t\t\t// in addition to care member isValid, test validation rules related to the patient / current or new member / team here, \r\n\t\t\t\t// and send hese errors to careMember.isValid\r\n\t\t\t\t\r\n\t\t\t\tvar selectedContact = self.selectedContact();\r\n\t\t\t\tvar selectedPatient = self.selectedPatient();\r\n\t\t\t\tvar teamMembers = self.careTeamMembers();\r\n\t\t\t\tvar roleId = self.careMember().roleId();\r\n\t\t\t\tvar core = self.careMember().core();\r\n\t\t\t\tvar statusId = self.careMember().statusId();\r\n\t\t\t\tvar activeStatusId = contactsIndex.activeContactStatus()? contactsIndex.activeContactStatus().id() : null;\r\n\t\t\t\tvar customRoleName = self.careMember().customRoleName();\r\n\t\t\t\tvar errors = [];\r\n\t\t\t\t\r\n\t\t\t\t//dont allow a patient to assigned as a member in his own team:\r\n\t\t\t\tvar patientContactId = selectedPatient ? selectedPatient.contactId() : null;\r\n\t\t\t\tif( selectedContact && patientContactId && patientContactId == selectedContact.id() ){\t\t\t\t\t\t\r\n\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t{ PropName: 'contact', Message: 'a patient cannot be assigned as a member of his own care team.' }\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif( !selectedContact ){\r\n\t\t\t\t\tself.contactAlreadyAssigned( false );\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\telse if( teamMembers.length ){\r\n\t\t\t\t\t//check for duplicate contact:\r\n\t\t\t\t\tvar dup = ko.utils.arrayFirst( teamMembers, function(member){\r\n\t\t\t\t\t\treturn (member.id() != self.careMember().id()) && member.statusId() == activeStatusId && \r\n\t\t\t\t\t\t\t\tmember.contactId() == selectedContact.id();\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif( dup ){\r\n\t\t\t\t\t\tvar roleName = dup.computedRoleName();\r\n\t\t\t\t\t\tif( roleName ){\r\n\t\t\t\t\t\t\troleName = '(' + roleName + ')';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tself.contactAlreadyAssigned( 'This contact is already assigned '+ roleName );\t//not a validation error\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// errors.push(\r\n\t\t\t\t\t\t\t// { PropName: 'contact', Message: 'The contact:' + selectedContact.fullName() + ' is already assigned' });\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\t\t\t\t\t\t\r\n\t\t\t\t\t\tself.contactAlreadyAssigned( false );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t//check if core pcp/pcm has already assigned and active:\r\n\t\t\t\t\tif( roleId && roleId != -1 && core && statusId == activeStatusId && self.careMember().careTeam() ){\r\n\t\t\t\t\t\tvar pcPhysicians = self.careMember().careTeam().primaryCarePhysicians();\r\n\t\t\t\t\t\tvar pcp = ko.utils.arrayFirst( pcPhysicians, function(p){\r\n\t\t\t\t\t\t\treturn p.id() != self.careMember().id();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar pcManagers = self.careMember().careTeam().primaryCareManagers();\r\n\t\t\t\t\t\tvar pcm = ko.utils.arrayFirst( pcManagers, function(p){\r\n\t\t\t\t\t\t\treturn p.id() != self.careMember().id();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tdup = null;\r\n\t\t\t\t\t\tif( pcp && pcp.roleId() == roleId ){\r\n\t\t\t\t\t\t\tdup = pcp;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if( pcm && pcm.roleId() == roleId ){\r\n\t\t\t\t\t\t\tdup = pcm;\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\tif( dup ){\r\n\t\t\t\t\t\t\tvar duplicateRoleName = 'this role';\r\n\t\t\t\t\t\t\tvar toDupName = '';\r\n\t\t\t\t\t\t\tif( dup.roleId() == self.pcmContactSubType().id() ){\r\n\t\t\t\t\t\t\t\tduplicateRoleName = self.pcmContactSubType().role();\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if( dup.roleId() == self.pcpContactSubType().id() ){\r\n\t\t\t\t\t\t\t\tduplicateRoleName = self.pcpContactSubType().role();\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif( dup.contact() && dup.contact().fullName() ){\r\n\t\t\t\t\t\t\t\ttoDupName = ' as: ' + dup.contact().fullName();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\terrors.push(\r\n\t\t\t\t\t\t\t\t\t{ PropName: 'contact', Message: duplicateRoleName + ' is already assigned' + toDupName });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tself.careMember().careTeamValidationErrors( errors );\r\n\t\t\t\treturn false;\r\n\t\t\t}).extend({ throttle: 250 });\r\n\t\t\t\t\t\t\r\n\t\t\tself.computedRoles = ko.computed( function(){\r\n\t\t\t\tvar roles = [];\r\n\t\t\t\tvar selectedContact = self.selectedContact();\r\n\t\t\t\tvar careMemberRoles = self.careMemberRoles();\r\n\t\t\t\tif( careMemberRoles && careMemberRoles.length > 0 ){\r\n\t\t\t\t\tko.utils.arrayForEach( careMemberRoles, function( contactType ){\r\n\t\t\t\t\t\troles.push( contactType );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t    //add the selected contact specific roles based on his contact types\r\n\t\t\t\t//\trole is the role of the lowest contact type that exist in the contact sub type combination (sub type / specialty / sub specialty).\r\n\t\t\t\t//\tselect the first role of the selected contact as default member role.\r\n\t\t\t\t//\r\n\t\t\t\tvar defaultRoleId = null;\t\r\n\t\t\t\tif( selectedContact && selectedContact.contactSubTypes && selectedContact.contactSubTypes().length ){\r\n\t\t\t\t\t//console.log( selectedContact.fullName() + ' : ' + selectedContact.detailedSubTypes() );\r\n\t\t\t\t\tko.utils.arrayForEach( selectedContact.contactSubTypes(), function( subType ){\r\n\t\t\t\t\t\t//roles are the lowest types in a type combination:\r\n\t\t\t\t\t\tif( subType.subSpecialtyIds().length ){\r\n\t\t\t\t\t\t\tko.utils.arrayForEach( subType.subSpecialtyIds(), function(sub){\r\n\t\t\t\t\t\t\t\tvar contactType = datacontext.getContactTypeLookupById( sub.id() );\r\n\t\t\t\t\t\t\t\tif( contactType && contactType.length > 0 ){\r\n\t\t\t\t\t\t\t\t\troles.push( contactType[0] );\r\n\t\t\t\t\t\t\t\t\tif( !defaultRoleId ){\r\n\t\t\t\t\t\t\t\t\t\tdefaultRoleId = sub.id();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if( subType.specialtyId() ){\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar specialty = datacontext.getContactTypeLookupById( subType.specialtyId() );\r\n\t\t\t\t\t\t\tif( specialty && specialty.length ){\r\n\t\t\t\t\t\t\t\troles.push( specialty[0] );\r\n\t\t\t\t\t\t\t\tif( !defaultRoleId ){\r\n\t\t\t\t\t\t\t\t\tdefaultRoleId = subType.specialtyId();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if( subType.subTypeId() ){\r\n\t\t\t\t\t\t\tvar contactSubType = datacontext.getContactTypeLookupById( subType.subTypeId() );\r\n\t\t\t\t\t\t\tif( contactSubType && contactSubType.length ){\r\n\t\t\t\t\t\t\t\troles.push( contactSubType[0] );\r\n\t\t\t\t\t\t\t\tif( !defaultRoleId ){\r\n\t\t\t\t\t\t\t\t\tdefaultRoleId = subType.subTypeId();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif( defaultRoleId && self.careMember().isNew() ){\r\n\t\t\t\t\t//let the roles dropdown ko - dom content update before setting the default role\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tself.careMember().roleId( defaultRoleId );\r\n\t\t\t\t\t}, 20);\t\r\n\t\t\t\t}\r\n\t\t\t\troles.push({name: '- Other -', role: '- Other -', id: -1});\r\n\t\t\t\treturn roles;\r\n\t\t\t}).extend({ throttle: 250 });\r\n\t\t\t\r\n\t\t\tself.showCustomRole = ko.computed( function(){\r\n\t\t\t\tvar roleId = self.careMember().roleId();\r\n\t\t\t\treturn roleId == -1;\t// - Other - option selected\r\n\t\t\t}).extend({ throttle: 250 });\r\n\t\t\t\r\n\t\t\tself.existingNotesOpen = ko.observable(false);\r\n\t\t\tself.toggleOpen = function () {\r\n\t\t\t\tself.existingNotesOpen(!self.existingNotesOpen());\r\n\t\t\t};\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\tself.createNewContact = function(){\t\t\t\t\r\n\t\t\t\t//go to add contact dialog, save and come back with a contact.\r\n\t\t\t\tvar firstName = contactSearch.criteriaFirstName();\r\n\t\t\t\tif( firstName && firstName.trim() ){\r\n\t\t\t\t\tfirstName = firstName.trim();\r\n\t\t\t\t}\r\n\t\t\t\tvar lastName = contactSearch.criteriaLastName();\r\n\t\t\t\tif( lastName && lastName.trim() ) {\r\n\t\t\t\t\tlastName = lastName.trim();\r\n\t\t\t\t}\r\n\t\t\t\tcontactsIndex.addContact( 'CareMember', null, self.addContactReturnedCallback, firstName, lastName );\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tfunction detached(){\r\n\t\t\tvar self = this;\r\n            //dispose computeds\r\n\t\t\tself.validateCareMember.dispose();\r\n\t\t\tself.computedRoles.dispose();\r\n\t\t\tself.canAddContact.dispose();\r\n\t\t\tself.showCustomRole.dispose();\t\t\t\r\n\t\t\tcontactSearch.resetFilters();\t\t\t\r\n\t\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n                token.dispose();\r\n            });\r\n\t\t\tsubscriptionTokens = [];\r\n\t\t}\r\n\t\tvar vm = {\r\n\t\t\tactivate: activate,\r\n\t\t\tdetached: detached,\r\n\t\t\tfrequencies: frequencies,\r\n\t\t\tcareMemberStatuses: careMemberStatuses,\r\n\t\t\t\r\n\t\t\tselectedContact: selectedContact,\r\n\t\t\tcontactSearch: contactSearch\r\n\t\t}\r\n\t\treturn vm;\t\t\r\n\t}\r\n);\n","/**\r\n*\r\n* \t@module careMembers.panel\r\n*/\r\n\r\ndefine('viewmodels/templates/careMembers.panel',['viewmodels/patients/team/index', 'services/datacontext'],\r\n\tfunction(teamIndex, datacontext){\r\n\t\tvar ctor = function(){\r\n\t\t\tvar self = this;\r\n\t\t};\r\n\t\t\r\n\t\tvar activeCareMemberStatus = 1;\r\n\t\tvar inActiveCarememberStatus = 2;\r\n\t\t\r\n\t\tctor.prototype.activate = function (data) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.careMembers = data.careMembers;\r\n\t\t\tself.selectedCareMember = teamIndex.selectedCareMember;\r\n\t\t\tself.selectCareMember = function( member ){\r\n\t\t\t\tself.selectedCareMember( member );\r\n\t\t\t}\r\n\t\t\tself.setCore = function( member ){\r\n\t\t\t\t//team validation single active core pcp/pcm \r\n\t\t\t\tvar error = null;\r\n\t\t\t\tif( member.statusId() == activeCareMemberStatus ){\r\n\t\t\t\t\terror = validateMemberRole( member );\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\tif( error ){\r\n\t\t\t\t\talert( error );\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tmember.core(true);\r\n\t\t\t\t\tsaveMember( member );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tself.clearCore = function( member ){\r\n\t\t\t\tmember.core( false );\r\n\t\t\t\tsaveMember( member );\r\n\t\t\t}\r\n\t\t\tself.activate = function( member ){\r\n\t\t\t\t//team validation single active core pcp/pcm\r\n\t\t\t\tvar error = null;\r\n\t\t\t\tif( member.core() ){\r\n\t\t\t\t\terror = validateMemberRole( member );\r\n\t\t\t\t}\r\n\t\t\t\tif( error ){\r\n\t\t\t\t\talert( error );\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tmember.statusId( activeCareMemberStatus );\r\n\t\t\t\t\tsaveMember( member );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tself.deactivate = function( member ){\r\n\t\t\t\tmember.statusId( inActiveCarememberStatus );\r\n\t\t\t\tsaveMember( member );\r\n\t\t\t}\r\n\t\t\tself.editCareMember = function( member ){\r\n\t\t\t\tteamIndex.editCareMember( member );\r\n\t\t\t}\r\n\t\t\tself.deleteCareMember = function( member ){\r\n\t\t\t\tteamIndex.deleteCareMember( member );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tfunction validateMemberRole( member ){\r\n\t\t\t//assuming the member is active statusId and core, \r\n\t\t\t//check if there is already pcm / pcp assigned in the members team:\r\n\t\t\tvar error = null;\r\n\t\t\tvar toDupName = '';\r\n\t\t\tif( member.roleId() == teamIndex.pcmContactSubType().id() ){\r\n\t\t\t\tvar pcManagers = member.careTeam().primaryCareManagers();\r\n\t\t\t\tvar pcm = ko.utils.arrayFirst( pcManagers, function(p){\r\n\t\t\t\t\treturn p.id() != member.id();\r\n\t\t\t\t});\r\n\t\t\t\tif( pcm ){\r\n\t\t\t\t\terror = teamIndex.pcmContactSubType().role();\r\n\t\t\t\t\tif( pcm.contact() && pcm.contact().fullName() ){\r\n\t\t\t\t\t\ttoDupName = ' as: ' + pcm.contact().fullName();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if( member.roleId() == teamIndex.pcpContactSubType().id() ){\r\n\t\t\t\tvar pcPysicians = member.careTeam().primaryCarePhysicians();\r\n\t\t\t\tvar pcp = ko.utils.arrayFirst( pcPysicians, function(p){\r\n\t\t\t\t\treturn p.id() != member.id(); \r\n\t\t\t\t});\r\n\t\t\t\tif( pcp ){\r\n\t\t\t\t\terror = teamIndex.pcpContactSubType().role();\r\n\t\t\t\t\tif( pcp.contact() && pcp.contact().fullName() ){\r\n\t\t\t\t\t\ttoDupName = ' as: ' + pcp.contact().fullName();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( error ){\r\n\t\t\t\terror += ' is already assigned' + toDupName;\r\n\t\t\t}\t\t\t\r\n\t\t\treturn error;\r\n\t\t}\r\n\t\t\r\n\t\tfunction saveMember( member ){\r\n\t\t\treturn datacontext.saveCareTeamMember( member );\r\n\t\t}\t\t\r\n\t\t\r\n\t\treturn ctor;\r\n\t}\r\n);\n","define('viewmodels/templates/clinical.dataentry',['services/datacontext', 'viewmodels/patients/data/index'],\r\n    function (datacontext, dataIndex) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.activeDataType = self.settings.activeDataType;\r\n            self.showing = ko.computed(function () { return !!self.activeDataType() });\r\n            self.selectedPatient = self.settings.selectedPatient;\r\n            self.selectedTemplate = ko.observable();\r\n            self.saveDataEntry = self.settings.saveDataEntry || function () { return false; };\r\n            self.cancelDataEntry = self.settings.cancelDataEntry || function () { return false; };\r\n            self.dataTypes = ko.computed(function () {\r\n                var theseObservationTypes = datacontext.enums.observationTypes().slice(0);\r\n                if (theseObservationTypes.indexOf(dataIndex.allergiesType) === -1) {\r\n                    theseObservationTypes.push(dataIndex.allergiesType);\r\n                }\r\n                if (theseObservationTypes.indexOf(dataIndex.medicationsType) === -1) {\r\n                    theseObservationTypes.push(dataIndex.medicationsType);\r\n                }\r\n                return theseObservationTypes;\r\n            });\r\n            self.templates = ko.computed(function () {\r\n                var theseTypes = self.dataTypes();\r\n                var tempArray = [];\r\n                ko.utils.arrayForEach(theseTypes, function (type) {\r\n                    // If it isn't the problem type,\r\n                    if (type.name().toLowerCase().indexOf('problems') === -1 && type.name() !== 'Allergies' && type.name() !== 'Medications') {\r\n                        tempArray.push(new Template(type.name(), 'viewmodels/patients/sections/basic.observations', 'viewmodels/patients/sections/additional.observations'));\r\n                    } else if (type.name().toLowerCase().indexOf('problems') !== -1) {\r\n                        // Or if it is a problem type,\r\n                        tempArray.push(new Template(type.name(), 'viewmodels/patients/sections/additional.problem.observations', 'viewmodels/patients/sections/problems.list'));\r\n                    } else if (type.name().toLowerCase().indexOf('allergies') !== -1) {\r\n                        // Or if it is an allergy type,\r\n                        tempArray.push(new Template(type.name(), 'viewmodels/patients/sections/allergies.search', 'viewmodels/patients/sections/allergies.edit'));\r\n                    } else {\r\n                        // else it must be medications\r\n                        tempArray.push(new Template(type.name(), 'viewmodels/patients/sections/medications.search', 'viewmodels/patients/sections/medication.edit'));\r\n                    }\r\n                });\r\n                return tempArray;\r\n            });\r\n            self.computedActiveDataType = ko.computed({\r\n                read: function () {\r\n                    return self.activeDataType();\r\n                },\r\n                write: function (newValue) {\r\n                    self.activeDataType(newValue);\r\n                    // If the new value is not null,\r\n                    if (newValue) {\r\n                        // Find a match,\r\n                        var matchingTemplate = ko.utils.arrayFirst(self.templates(), function (template) {\r\n                            return template.typeName === newValue.name();\r\n                        });\r\n                        // And set it to the selected template\r\n                        self.selectedTemplate(matchingTemplate);   \r\n                    } else {\r\n                        // Or else if it is null set selected template to null\r\n                        self.selectedTemplate(newValue);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n\r\n        function Template(name, pathone, pathtwo) {\r\n            var self = this;\r\n            self.typeName = name;\r\n            self.firstSection = new Section(pathone);\r\n            self.secondSection = new Section(pathtwo);\r\n        }\r\n\r\n        function Section(path) {\r\n            var self = this;\r\n            self.path = path;\r\n        }\r\n\r\n    });\n","/**\r\n*\tadd /edit contact dialog module that will be used from the new home->contacts tab\r\n*\tthis module composes templates/contactcard.html inside the dialog\r\n*\t@module contact.edit\r\n*/\r\ndefine('viewmodels/templates/contact.edit',[ 'services/datacontext', 'services/local.collections', 'viewmodels/home/contacts/index' ],\r\n\tfunction( datacontext, localCollections, contactsIndex ){\r\n\r\n\t\tvar ctor = function () {\r\n            var self = this;\t\t\t\t\t\r\n        };\r\n\t\t\r\n\t\tvar subscriptionTokens = [];\r\n\t\tvar contactTypeGroupId = 1;\t\t\r\n\t\tvar newId = 0;\r\n\t\tctor.prototype.tabs = contactsIndex.tabs;\r\n\t\tvar tabIndex = contactsIndex.tabIndex;\r\n\t\t\r\n\t\tctor.prototype.activate = function( settings ){\r\n\t\t\tvar self = this;\r\n\t\t\tself.showing = settings.showing;\r\n\t\t\tself.contactCard = settings.contactCard;\r\n\t\t\tself.daysOfWeek = datacontext.enums.daysOfWeek;\r\n\t\t\tself.timesOfDay = datacontext.enums.timesOfDay;\r\n\t\t\tself.timeZones = datacontext.enums.timeZones;\r\n\t\t\tself.addressTypes = datacontext.enums.addressTypes;\r\n\t\t\tself.stateList = datacontext.enums.states;\r\n\t\t\tself.languages = datacontext.enums.languages;\r\n\t\t\tself.emailTypes = datacontext.enums.emailTypes;\r\n\t\t\tself.phoneTypes = datacontext.enums.phoneTypes;\r\n\t\t\tself.genders = datacontext.enums.genders;\r\n\t\t\tself.deceasedStatuses = datacontext.enums.deceasedStatuses;\t\t\t\r\n\t\t\tself.contactStatuses = datacontext.enums.contactStatuses;\r\n\t\t\tself.saveFunction = settings.saveFunction ? settings.saveFunction : null;\r\n\t\t\tself.allContactTypes = contactsIndex.allContactTypes;\r\n\t\t\t\r\n\t\t\tif( self.contactCard().isNew() ){\r\n\t\t\t\t\r\n\t\t\t\t//check for duplicate only when creating new:\r\n\t\t\t\t\r\n\t\t\t\tvar firstNameToken = self.contactCard().firstName.subscribe( function( newValue ){\r\n\t\t\t\t\tvar firstName = newValue;\r\n\t\t\t\t\tvar lastName = self.contactCard().lastName();\r\n\t\t\t\t\tself.checkDuplicateContact( firstName, lastName );\r\n\t\t\t\t});\r\n\t\t\t\tsubscriptionTokens.push( firstNameToken );\r\n\t\t\t\t\r\n\t\t\t\tvar lastNameToken = self.contactCard().lastName.subscribe( function( newValue ){\r\n\t\t\t\t\tvar lastName = newValue;\t\t\t\t\r\n\t\t\t\t\tvar firstName = self.contactCard().firstName();\t\t\t\t\r\n\t\t\t\t\tself.checkDuplicateContact( firstName, lastName );\r\n\t\t\t\t});\r\n\t\t\t\tsubscriptionTokens.push( lastNameToken );\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\tself.checkDuplicateContact = function( firstName, lastName ){\r\n\t\t\t\tvar contactTypeId = self.contactCard().contactTypeId();\r\n\t\t\t\tself.contactCard().isDuplicate( false );\r\n\t\t\t\tself.contactCard().isDuplicateTested(false);\r\n\t\t\t\tif( lastName ){\r\n\t\t\t\t\tlastName = lastName.trim();\r\n\t\t\t\t}\r\n\t\t\t\tif( firstName ){\r\n\t\t\t\t\tfirstName = firstName.trim();\r\n\t\t\t\t}\r\n\t\t\t\tif( contactTypeId && firstName && lastName ){\r\n\t\t\t\t\tvar params = {\r\n\t\t\t\t\t\tcontactTypeIds: [],\r\n\t\t\t\t\t\tcontactSubTypeIds: null,\r\n\t\t\t\t\t\tfirstName: firstName,\r\n\t\t\t\t\t\tlastName: lastName,\r\n\t\t\t\t\t\tfilterType: 'ExactMatch',\r\n\t\t\t\t\t\ttake: 50,\r\n\t\t\t\t\t\tskip: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tparams.contactTypeIds.push( self.contactCard().contactTypeId() );\r\n\t\t\t\t\treturn datacontext.getContacts( null, params ).then( self.contactsReturned );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\tself.contactsReturned = function( contacts ){\r\n\t\t\t\tif( contacts && contacts.length > 0 ){\r\n\t\t\t\t\tself.contactCard().isDuplicate( true );\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tself.contactCard().isDuplicateTested( true );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.tabErrorsUpdater = ko.computed(function(){\r\n\t\t\t\tvar phoneErrors = self.contactCard().phoneValidationErrors().length;\t\t\t\t\r\n\t\t\t\tif( phoneErrors ){\t\t\t\t\t\r\n\t\t\t\t\tself.tabs()[tabIndex.phone].hasErrors(true);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tself.tabs()[tabIndex.phone].hasErrors(false);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar isDuplicateProfile = self.contactCard().isDuplicate();\r\n\t\t\t\tvar profileErrors = self.contactCard().profileValidationErrors().length;\r\n\t\t\t\tif( profileErrors || isDuplicateProfile ){\r\n\t\t\t\t\tself.tabs()[tabIndex.profile].hasErrors(true);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tself.tabs()[tabIndex.profile].hasErrors(false);\r\n\t\t\t\t}\r\n\t\t\t}).extend({ throttle: 100 });\r\n\t\t\t\r\n\t\t\t//contact type permutations editor:\t\r\n\t\t\tself.isDuplicateSubType = ko.observable(false);\r\n\t\t\tself.selectedSubType = ko.observable();\r\n\t\t\tself.selectedSpecialty = ko.observable();\r\n\t\t\tself.selectedSubSpecialties = ko.observableArray([]);\r\n\t\t\t\t\t\t\r\n\t\t\tself.contactSubTypes = ko.computed( function(){\r\n\t\t\t\t//return children of selected type\r\n\t\t\t\tvar subTypes = [];\r\n\t\t\t\tvar typeId = self.contactCard().contactTypeId();\r\n\t\t\t\tself.selectedSubType(null);\r\n\t\t\t\tself.selectedSpecialty(null);\r\n\t\t\t\tself.selectedSubSpecialties([]);\t\t\t\t\r\n\t\t\t\tif( typeId ){\r\n\t\t\t\t\tsubTypes = getContactTypeChildren( typeId );\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn subTypes;\r\n\t\t\t}).extend({ throttle: 20 });\r\n\t\t\t\r\n\t\t\tself.contactSpecialties = ko.computed( function(){\r\n\t\t\t\t//return children of selected sub type\r\n\t\t\t\tvar specialties = [];\r\n\t\t\t\tvar subTypeId = self.selectedSubType() ? self.selectedSubType() : null;\t\t\t\t\r\n\t\t\t\tself.selectedSpecialty(null);\r\n\t\t\t\tself.selectedSubSpecialties([]);\r\n\t\t\t\tif( subTypeId ){\r\n\t\t\t\t\tspecialties = getContactTypeChildren( subTypeId );\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn specialties;\r\n\t\t\t}).extend({ throttle: 20 });\r\n\t\t\t\r\n\t\t\tself.contactSubSpecialties = ko.computed( function(){\r\n\t\t\t\t//return children of selected specialty\r\n\t\t\t\tvar subSpecialties = [];\r\n\t\t\t\tvar specialtyId = self.selectedSpecialty() ? self.selectedSpecialty() : null;\t\t\t\t\r\n\t\t\t\tself.selectedSubSpecialties([]);\r\n\t\t\t\tif( specialtyId ){\r\n\t\t\t\t\tsubSpecialties = getContactTypeChildren( specialtyId );\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn subSpecialties;\r\n\t\t\t}).extend({ throttle: 20 });\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\tself.checkDuplicateSubType = function(){\r\n\t\t\t\t//ENG-207: verify that the subtype combination does not exist\r\n\t\t\t\t//\tif the combination already exist, show a message somehow and block the \"Add\"\t\t\t\t\r\n\t\t\t\t// not tested yet:\r\n\t\t\t\tvar sub = {\t\t\t\t\t\r\n\t\t\t\t\tsubTypeId: self.selectedSubType(), \r\n\t\t\t\t\tspecialtyId: self.selectedSpecialty()? self.selectedSpecialty() : null,\r\n\t\t\t\t\tsubSpecialtyIds: []\r\n\t\t\t\t};\r\n\t\t\t\t//add the selected subSpecialtyIds:\r\n\t\t\t\tko.utils.arrayForEach( self.selectedSubSpecialties(), function(subspecial){\r\n\t\t\t\t\tsub.subSpecialtyIds.push( subspecial );\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tvar duplicates = ko.utils.arrayFilter(self.contactCard().contactSubTypes(), function(subt){\r\n\t\t\t\t\tvar dup = false;\r\n\t\t\t\t\tif( sub.subTypeId == subt.subTypeId() ){\r\n\t\t\t\t\t\tdup = true;\t//same subTypeId\r\n\t\t\t\t\t\tif( sub.specialtyId && subt.specialtyId() ){\r\n\t\t\t\t\t\t\tif(sub.specialtyId == subt.specialtyId() ){\r\n\t\t\t\t\t\t\t\tdup = true;\t//same specialtyId\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tdup = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t//specialtyId is not mandatory:\t\r\n\t\t\t\t\t\t\tif( sub.specialtyId || subt.specialtyId() ){\r\n\t\t\t\t\t\t\t\tdup = false;\t//one side has specialtyId, one does not.\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tdup = true;\t//both sides dont have specialtyId\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(dup){\r\n\t\t\t\t\t\t\t//verify the subSpecialty\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif( sub.subSpecialtyIds.length == subt.subSpecialtyIds().length && subt.subSpecialtyIds().length == 0 ){\r\n\t\t\t\t\t\t\t\tdup = true; //no subSpecialties selected on both sides\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tif( sub.subSpecialtyIds.length != subt.subSpecialtyIds().length ){\r\n\t\t\t\t\t\t\t\t\tdup = false; //different lengths\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tko.utils.arrayForEach( subt.subSpecialtyIds(), function (subSpecialtyId){\r\n\t\t\t\t\t\t\t\t\t\tif( dup ){\r\n\t\t\t\t\t\t\t\t\t\t\tvar subDups = ko.utils.arrayFilter(sub.subSpecialtyIds, function(subsid){ \r\n\t\t\t\t\t\t\t\t\t\t\t\treturn subsid.id() == subSpecialtyId.id()\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tif( subDups.length == 0 ){\r\n\t\t\t\t\t\t\t\t\t\t\t\tdup = false;\t\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\treturn dup;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tself.isDuplicateSubType( duplicates && duplicates.length > 0 );\r\n\t\t\t\treturn self.isDuplicateSubType();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.showInvalidSubSpecialties = ko.computed( function(){\r\n\t\t\t\tvar subSpecialties = self.selectedSubSpecialties();\r\n\t\t\t\tvar isDuplicateSubType = self.isDuplicateSubType();\r\n\t\t\t\treturn isDuplicateSubType && subSpecialties && subSpecialties.length;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tself.showInvalidSpecialty = ko.computed( function(){\r\n\t\t\t\tvar specialty = self.selectedSpecialty();\r\n\t\t\t\tvar isDuplicateSubType = self.isDuplicateSubType();\r\n\t\t\t\treturn isDuplicateSubType && specialty;\r\n\t\t\t}); \r\n\t\t\t\r\n\t\t\tself.canAddContactSubType = ko.computed( function(){\r\n\t\t\t\tvar contactType = self.contactCard().contactTypeId();\r\n\t\t\t\tvar selectedSubType = self.selectedSubType();\r\n\t\t\t\tvar selectedSubSpecialties = self.selectedSubSpecialties();\r\n\t\t\t\tvar isDuplicateSubType = self.checkDuplicateSubType();\r\n\t\t\t\treturn contactType && selectedSubType && !isDuplicateSubType;// && !disableAddContactSubType;\r\n\t\t\t}).extend({ throttle: 50 });\r\n\t\t\t\r\n\t\t\tself.addContactSubType = function(){\t\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t//after subtype permutation validation ok:\r\n\t\t\t\t//create the subType combination object:\r\n\t\t\t\tvar subType = datacontext.createComplexType( 'ContactSubType', //createEntity\r\n\t\t\t\t{ \r\n\t\t\t\t\tid: --newId, \r\n\t\t\t\t\tsubTypeId: self.selectedSubType(), \r\n\t\t\t\t\tspecialtyId: self.selectedSpecialty()? self.selectedSpecialty() : null//,\r\n\t\t\t\t});\r\n\t\t\t\t//add the selected subSpecialtyIds:\r\n\t\t\t\tko.utils.arrayForEach( self.selectedSubSpecialties(), function(sub){\r\n\t\t\t\t\tsubType.subSpecialtyIds.push( sub );\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t//attach the subType to the collection:\r\n\t\t\t\tself.contactCard().contactSubTypes.push(subType);\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t//clear controls:\r\n\t\t\t\tself.selectedSubType(null);\r\n\t\t\t\tself.selectedSpecialty(null);\r\n\t\t\t\tself.selectedSubSpecialties([]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.removeContactSubType = function(subType){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t//remove it from the contactCard\r\n\t\t\t\tself.contactCard().contactSubTypes.remove( subType );\r\n\t\t\t}\r\n\t\t\tself.getSubSpecialtyIds = function(){\r\n\t\t\t\tvar ids = [];\r\n\t\t\t\tko.utils.arrayForEach( self.selectedSubSpecialties(), function(item){\r\n\t\t\t\t\tids.push( { id: item.id() });\r\n\t\t\t\t});\r\n\t\t\t\treturn ids;\r\n\t\t\t}\r\n\t\t\tself.getSubSpecialties = function() {\r\n\t\t\t\tvar subs = [];\r\n\t\t\t\tko.utils.arrayForEach( self.selectedSubSpecialties(), function(item){\r\n\t\t\t\t\tsubs.push( item );\r\n\t\t\t\t});\r\n\t\t\t\treturn subs;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.contactTypes = contactsIndex.contactTypes;\t\t\t\r\n\t\t\tself.contactTypesShowing = ko.observable(true);\r\n\t\t\t\r\n\t\t\tif( self.contactCard().isNew() ){\r\n\t\t\t\tself.contactCard().contactTypeId( contactsIndex.defaultContactType().id() );\r\n\t\t\t\t//check for dups when the first / last name assigned externally ( care member contact search criteria, for example )\r\n\t\t\t\tif( self.contactCard().firstName() || self.contactCard().lastName() ){\r\n\t\t\t\t\tself.checkDuplicateContact( self.contactCard().firstName(), self.contactCard().lastName() );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tself.setActiveTab = contactsIndex.setActiveTab;\r\n\t\t\t\r\n\t\t\tif( self.contactCard() && self.contactCard().activeTab() && self.contactCard().activeTab() == 'General' ){\r\n\t\t\t\t\r\n\t\t\t\t//hide the profile tab.\r\n\t\t\t\tself.tabs()[tabIndex.profile].isShowing = false;\r\n\t\t\t\t//hide the contact type dropdown\r\n\t\t\t\tself.contactTypesShowing(false);\t\r\n\t\t\t}else{\r\n\t\t\t\tself.tabs()[tabIndex.profile].isShowing = true;\r\n\t\t\t\tself.contactTypesShowing(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.forceSave = function(){\r\n\t\t\t\t//save despite having dups:\r\n\t\t\t\tif( self.saveFunction ){\r\n\t\t\t\t\tself.saveFunction();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tself.contactCard().saveChanges();\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tself.contactCard().isDuplicate(false);\r\n\t\t\t\tself.contactCard().isDuplicateTested(true);\r\n\t\t\t\tself.showing(false);\r\n\t\t\t}\r\n\t\t\tself.contactCard().clearDirty();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tfunction getContactTypeChildren( typeId ){\r\n\t\t\treturn contactsIndex.getContactTypeChildren( typeId );\r\n\t\t\t// var subTypes = ko.utils.arrayFilter( allContactTypes(), function(item){\r\n\t\t\t\t// return ( item.parentId() && item.parentId() == typeId ) \r\n\t\t\t// });\r\n\t\t\t// return subTypes;\r\n\t\t}\r\n\t\t\r\n\t\t// function findDefaultContactType( contactTypes ){\r\n\t\t\t// var defaultType = null;\r\n\t\t\t// var types = ko.utils.arrayFilter( contactTypes(), function(node){\r\n\t\t\t\t// return node.name() == 'Person';\r\n\t\t\t// });\r\n\t\t\t// if( types && types.length > 0 ){\r\n\t\t\t\t// defaultType = types[0];\r\n\t\t\t// }\r\n\t\t\t// return defaultType;\r\n\t\t// };\r\n\t\t\r\n\t\tctor.prototype.detached = function(){\r\n\t\t\tvar self = this;\t\t\t\r\n\t\t\tself.tabErrorsUpdater.dispose();\r\n\t\t\tself.contactSubTypes.dispose();\r\n\t\t\tself.contactSpecialties.dispose();\r\n\t\t\tself.contactSubSpecialties.dispose();\r\n\t\t\tself.canAddContactSubType.dispose();\r\n\t\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n                token.dispose();\r\n            });\r\n\t\t\tsubscriptionTokens = [];\r\n\t\t}\r\n\t\treturn ctor;\t\t\r\n\t}\r\n);\n","/**\r\n*\teditable date and time controls with masking and validation\r\n*\tnote the subscriptionTokens are managed per instance of a datetimepicker.\r\n*\tif this is not done the subscriptions of other live instances are cleared when the first one is detached.\r\n*\t@module datetimePicker\r\n*/\r\ndefine('viewmodels/templates/datetimepicker',['durandal/composition','services/dateHelper', 'services/formatter'], \r\n\tfunction(composition, dateHelper, formatter){\r\n\t\t\t\r\n\tvar self = this;\t\r\n\t\r\n\tvar ctor = function () {\t\t\r\n    };\r\n\t\r\n\tctor.prototype.compositionComplete = function(view, parent){\r\n\t\tvar self = this;\r\n\t\tself.dateElm = $(view).find(\"[name='\" + self.dateName +\"']\");\r\n\t\tbindEditableDate( self.dateElm, self.dateStr );\r\n\t\tif( self.isDatepicker ){\t\t\t\r\n\t\t\tself.dateElm.datepicker(self.datepickerOptions);\r\n\t\t\tif( self.observableDateTime()  && moment( self.observableDateTime() ).isValid() ){ \r\n\t\t\t\tvar observableMoment = moment.utc(self.observableDateTime());\r\n\t\t\t\t//set the initial date to the datepicker\r\n\t\t\t\tobservableMoment.local(); //move from utc to local time\r\n\t\t\t\tvar strDate = observableMoment.format('MM/DD/YYYY');\t\t\t\t\t\r\n\t\t\t\tself.dateElm.datepicker(\"setDate\", strDate);\r\n\t\t\t}\r\n\t\t\t//handle disposal (if KO removes by the template binding)\r\n\t\t\tko.utils.domNodeDisposal.addDisposeCallback(self.dateElm, function () {\r\n\t\t\t\tself.dateElm.datepicker(\"destroy\");\t\t\t\t\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// If there is a datepicker options with a mindate that is an observable,\r\n\t\t\tif (self.dynoptions && self.dynoptions.minDate && ko.isObservable(self.dynoptions.minDate)) {\r\n\t\t\t\tif (self.dynoptions.minDate()) {\r\n\t\t\t\t\t// Set it on initialization\r\n\t\t\t\t\tvar initMinDate = moment(self.dynoptions.minDate());\r\n\t\t\t\t\tif( initMinDate.isValid() ){\r\n\t\t\t\t\t\tself.dateElm.datepicker(\"option\", \"minDate\", initMinDate.toDate() );\r\n\t\t\t\t\t}                        \r\n\t\t\t\t}\r\n\t\t\t\t// Subscribe to the value\r\n\t\t\t\tvar minDateToken = self.dynoptions.minDate.subscribe(function (newValue) {\r\n\t\t\t\t   var newMinDate = moment(newValue);\r\n\t\t\t\t\tif( newMinDate.isValid() ){\r\n\t\t\t\t\t\tvar date = self.observableDateTime();\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( !date || moment(date).isValid() && !moment(date).isBefore(newMinDate) ){\t//dont set mindate if current value is out of range, since datepicker will also update the current date to the new minDate. \r\n\t\t\t\t\t\t\tself.dateElm.datepicker(\"option\", \"minDate\", newMinDate.toDate() );\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tself.subscriptionTokens.push(minDateToken);\r\n\t\t\t}\r\n\t\t\t // If there is a datepicker dynoptions with a mindate that is an observable,\r\n\t\t\tif (self.dynoptions && self.dynoptions.maxDate && ko.isObservable(self.dynoptions.maxDate)) {\r\n\t\t\t\tif (self.dynoptions.maxDate()) {\r\n\t\t\t\t\t// Set it on initialization\r\n\t\t\t\t\tvar initMaxDate = moment( self.dynoptions.maxDate() );\r\n\t\t\t\t\tif( initMaxDate.isValid() ){\r\n\t\t\t\t\t\tself.dateElm.datepicker(\"option\", \"maxDate\", initMaxDate.toDate() );\t\r\n\t\t\t\t\t}                        \r\n\t\t\t\t}\t\t\t \r\n\t\t\t\tvar maxDateToken = self.dynoptions.maxDate.subscribe(function (newValue) {\t\t\t\t\t\t\r\n\t\t\t\t\tvar newMaxDate = moment(newValue);\r\n\t\t\t\t\tif( newMaxDate.isValid() ){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar date = self.observableDateTime();\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif( !date || moment(date).isValid() && !moment(date).isAfter(newMaxDate) ){\t//dont set maxdate if current value is out of range, since datepicker will also update the current date to the new minDate. \r\n\t\t\t\t\t\t\tself.dateElm.datepicker(\"option\", \"maxDate\", newMaxDate.toDate() );\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tself.subscriptionTokens.push(maxDateToken);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\tself.timeElm = $(view).find(\"[name='\"+ self.timeName +\"']\");\r\n\t\t// if( self.showTime ){\r\n\t\t\t// self.timeElm[0].value = thisMoment.format('HH:mm');\r\n\t\t// }\r\n\t};\r\n\t\r\n\tctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n\t\tself.subscriptionTokens = [];\t//correct management of tokens per instance of a datetimepicker \r\n\t\t//date\r\n\t\tself.dateName = self.settings.dateName ? self.settings.dateName : 'date';\t\t\r\n\t\tself.showDate = self.settings.showDate !== undefined ? self.settings.showDate : true;\r\n\t\tself.dateCss = self.settings.dateCss ? self.settings.dateCss : \"\";\r\n\t\tself.observableDateTime = self.settings.observableDateTime;\r\n\t\tself.emptyDateIsValid = true;\r\n\t\tself.dateErrors = self.settings.dateErrors;\r\n\t\tself.showInvalid = self.settings.showInvalid ? self.settings.showInvalid : false;\r\n\t\tself.showInvalidTime = self.settings.showInvalidTime ? self.settings.showInvalidTime : false;\r\n\t\tself.isDatepicker = self.settings.isDatepicker !== false ? true : false;\r\n\t\tself.datepickerOptions = self.settings.datepickerOptions || {};\r\n\t\tself.dynoptions = self.settings.datepickerDynamicOptions || {};\r\n\t\tself.minDate = self.settings.minDate ? self.settings.minDate : null;\r\n\t\tself.maxDate = self.settings.maxDate ? self.settings.maxDate : null;\r\n\t\t\r\n\t\t//time\r\n\t\tself.timeName = self.settings.timeName ? self.settings.timeName : 'time';\r\n\t\tself.showTime = self.settings.showTime ? self.settings.showTime : false;\r\n\t\tself.timeCss = self.settings.timeCss ? self.settings.timeCss : \"\";\r\n\r\n\t\t//\r\n\t\tself.dateStr = ko.observable();\r\n\t\tself.timeStr = ko.observable();\r\n\t\tif( self.showDate ){\r\n\t\t\tvar observableMoment = moment( self.observableDateTime() );\r\n\t\t\tif( observableMoment.isValid() ){\r\n\t\t\t\tself.dateStr( observableMoment.format('MM/DD/YYYY') );\r\n\t\t\t}\r\n\t\t}\r\n\t\tself.isDisableTime = ko.computed( function(){\r\n\t\t\tvar result = false;\t\t\t\r\n\t\t\tif( self.showTime && self.showDate ){\r\n\t\t\t\tvar observableDateTime = self.observableDateTime();\r\n\t\t\t\tresult = !observableDateTime;\r\n\t\t\t}\r\n\t\t\telse if( self.ShowTime ){\r\n\t\t\t\tresult = false;\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t});\r\n\t\t\r\n\t\tif( self.showTime && Modernizr.inputtypes.time ){\r\n\t\t\tvar observableMoment = moment( self.observableDateTime() );\r\n\t\t\tif( observableMoment.isValid() ){\r\n\t\t\t\tself.timeStr( observableMoment.format('HH:mm') );\r\n\t\t\t}\r\n\t\t}\r\n\t\tself.isValidDate = ko.computed( function(){\r\n\t\t\tvar enteredDateStr = self.dateStr();\t\t\t\r\n\t\t\tvar dateError = dateHelper.isInvalidDate(enteredDateStr, {minDate: self.minDate, maxDate: self.maxDate},!self.emptyDateIsValid);\r\n\t\t\tvar errorsList = [];\r\n\t\t\tif( dateError != null ){\t\t\t\t\r\n\t\t\t\terrorsList.push(dateError);\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\tself.dateErrors( errorsList );\t\t\t\r\n\t\t\treturn ( errorsList.length === 0 ); \t\t\t\r\n\t\t});\r\n\t\tself.disableTime = ko.computed( function(){\r\n\t\t\treturn !self.observableDateTime();\r\n\t\t});\r\n\r\n\t\tself.datetimeWatcher = ko.computed( function(){\r\n\t\t\tvar enteredDateStr = self.dateStr();\r\n\t\t\tvar enteredTimeStr = self.timeStr();\r\n\t\t\tif( !self.showDate ){\r\n\t\t\t\t//a time control without related date control got some time value\r\n\t\t\t\tif( enteredTimeStr ){\r\n\t\t\t\t\tif( !enteredDateStr ){\t\r\n\t\t\t\t\t\t//seed the datetime value\r\n\t\t\t\t\t\tself.dateStr('1/1/1970');\r\n\t\t\t\t\t\tenteredDateStr = self.dateStr();\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif( Modernizr.inputtypes.time ){\t\t\t\t\t\t\r\n\t\t\t\t\t\t//clear the datetime value\r\n\t\t\t\t\t\tself.dateStr(null);\r\n\t\t\t\t\t\tenteredDateStr = null;\r\n\t\t\t\t\t\tself.observableDateTime(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( dateHelper.isValidDate(enteredDateStr) ){\r\n\t\t\t\tvar observableMoment;\r\n\t\t\t\tvar enteredMoment = moment(enteredDateStr);\t\r\n\t\t\t\tvar needsUpdate = false;\r\n\t\t\t\tif( self.observableDateTime() ){\r\n\t\t\t\t\tobservableMoment = moment(self.observableDateTime());\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif( !dateHelper.isSameDate(observableMoment, enteredMoment) ){\t\t\t\t\t\r\n\t\t\t\t\t\tobservableMoment = dateHelper.setDateValue( enteredMoment, observableMoment );\r\n\t\t\t\t\t\tneedsUpdate = true;\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( self.showTime && Modernizr.inputtypes.time ){\r\n\t\t\t\t\t\tif( enteredTimeStr ){\r\n\t\t\t\t\t\t\tvar time = parseTime( enteredTimeStr )\r\n\t\t\t\t\t\t\tif( time && ( observableMoment.hour() !== time.hour || observableMoment.minute() !== time.minute ) ){\r\n\t\t\t\t\t\t\t\t//time has changed - update observable\r\n\t\t\t\t\t\t\t\tobservableMoment.hour( time.hour );\r\n\t\t\t\t\t\t\t\tobservableMoment.minute( time.minute );\r\n\t\t\t\t\t\t\t\tneedsUpdate = true;\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tif( self.showDate ){\r\n\t\t\t\t\t\t\t\tself.timeStr( observableMoment.format('HH:mm') );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t//time only control, the time was cleared.\r\n\t\t\t\t\t\t\t\tself.observableDateTime(null);\r\n\t\t\t\t\t\t\t\tself.timeStr(null);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( needsUpdate ){\r\n\t\t\t\t\t\tself.observableDateTime( observableMoment.toISOString() );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif( self.showTime && Modernizr.inputtypes.time && enteredTimeStr ){\r\n\t\t\t\t\t\tvar time = parseTime( enteredTimeStr )\r\n\t\t\t\t\t\tif( time && ( enteredMoment.hour() !== time.hour || enteredMoment.minute() !== time.minute ) ){\r\n\t\t\t\t\t\t\t//time has changed - update observable\r\n\t\t\t\t\t\t\tenteredMoment.hour( time.hour );\r\n\t\t\t\t\t\t\tenteredMoment.minute( time.minute );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.observableDateTime( enteredMoment.toISOString() );\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tif( self.observableDateTime() && !enteredDateStr && self.showDate ){\r\n\t\t\t\t\tself.observableDateTime(null); \t//the date field was cleared\r\n\t\t\t\t\tself.dateElm.datepicker(\"setDate\", null);\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t});\r\n\t\t\t\t\r\n\t};\r\n\t\r\n\tfunction parseTime( timeStr ){\r\n\t\tvar result = null;\r\n\t\tvar parsed = false;\r\n\t\tif( timeStr ){\r\n\t\t\tvar parts = timeStr.split(':');\r\n\t\t\tif( parts && parts.length == 2 ){\r\n\t\t\t\tvar hour = 0, minute = 0;\r\n\t\t\t\tif( !isNaN(parts[0]) ){\r\n\t\t\t\t\thour = Number( parts[0] );\r\n\t\t\t\t}\r\n\t\t\t\tif( !isNaN(parts[1]) ){\r\n\t\t\t\t\tminute = Number( parts[1] );\r\n\t\t\t\t\tparsed = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if( parts[1].length > 0 && parts[1].indexOf(' ') > 0 && ( parts[1].indexOf(\"AM\") !== -1 || parts[1].indexOf(\"PM\") !== -1 ) ){\r\n\t\t\t\t\tvar tails = parts[1].split(' ');\r\n\t\t\t\t\tif( tails && tails.length > 1 ){\r\n\t\t\t\t\t\tif( !isNaN( tails[0] ) ){\r\n\t\t\t\t\t\t\tminute = Number( tails[0] );\r\n\t\t\t\t\t\t\tparsed = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( tails[1] && tails[1].indexOf(\"PM\") !== -1 ){\r\n\t\t\t\t\t\t\tif( hour < 12 ){\r\n\t\t\t\t\t\t\t\thour = hour + 12;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( parsed ){\r\n\t\t\tresult = {hour: hour, minute: minute};\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tfunction bindEditableDate( element, observable ){\r\n\t\telement.attr('maxlength', 10);\r\n\t\telement.attr('placeholder', \"MM/DD/YYYY\");\r\n\t\telement.attr('title', \"MM/DD/YYYY\");\r\n\t\t\r\n\t\t//masking: start: prevent typing non numerics:\r\n\t\telement.on('keypress', function(e){\r\n\t\t\tvar key = e.which || e.keyCode;\r\n\t\t\tif( (key < 48 || key > 57) && key !== 47 && key !== 116 && key !== 8 && key !== 9 && key !== 37 && key !== 39 && key !== 46 && !(key == 118 && e.ctrlKey) ){\t//exclude 47(/), 116 (=F5), 9(=tab) , 37,39 (<-, ->)\t\\\\&& key !== 8, 8(=bkspc)\r\n\t\t\t\te.preventDefault();\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t//mask: optimize / auto complete year YYYY\r\n\t\telement.on('blur', function(){\r\n\t\t\tvar date = element.val();\r\n\t\t\tif(date){\t\t\t\t\t\r\n\t\t\t\tdate = formatter.date.optimizeDate( date );\r\n\t\t\t\tdate = formatter.date.optimizeYear( date );\r\n\t\t\t\t//console.log('date is blurred ! and optimized to:' + date);\r\n\t\t\t\tif( date !== element.val() ){\r\n\t\t\t\t\telement.val(date);\r\n\t\t\t\t}\t\r\n\t\t\t\tif( observable() !== date ){\r\n\t\t\t\t\tobservable(date);\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif( observable() ){\r\n\t\t\t\t\tobservable(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\t\r\n\t\t//mask: MM/DD/....\r\n\t\telement.on('keydown paste', function(e){\r\n\t\t\tsetTimeout(function(){\t\t\t\t\t\t\r\n\t\t\t\tvar key = e.which || e.keyCode;\t\t\t\t\t\t\r\n\t\t\t\tvar date = element.val();\r\n\t\t\t\t//hide the datepicker if binded: while typing we may have fields movements due to validation errors going on and off.\r\n\t\t\t\t//\tthe picker is not needed when typing and its position is fixed.\r\n\t\t\t\tif( element.datepicker ){\r\n\t\t\t\t\telement.datepicker( \"hide\" ); //TODO: show/hide on arrow down/ up / enter\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\tif( e.shiftKey || e.ctrlKey || key == 37 || key == 39 || key == 9 || key == 35 || key == 36 || key === 46 || key == 8 ){ //exclude <- , ->, Tab, home, end //|| key == 8 (bkspc)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\tvar position = element[0].selectionStart;\r\n\t\t\t\tif( date ){ \r\n\t\t\t\t\t//do the mask:\r\n\t\t\t\t\tif( e.type === 'paste'){\r\n\t\t\t\t\t\tdate = date.replace( /\\D/g, '');\t//clean any separators before re-formatting\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar newDate = date;\r\n\t\t\t\t\tif( position == date.length || e.type === 'paste' || date.replace( /\\D/g, '').length >= 8 ){\r\n\t\t\t\t\t\tnewDate = formatter.date.optimizeDate(date);\r\n\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\tif( newDate && newDate !== date || e.type === 'paste'){\r\n\t\t\t\t\t\telement.val(newDate);\t\t\t\t\t\t\r\n\t\t\t\t\t\tobservable(newDate);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t}, 5);\r\n\t\t});\t\t\t\r\n\t}\r\n\tctor.prototype.detached = function() { \r\n\t\tvar self = this;\r\n\t\tko.utils.arrayForEach(self.subscriptionTokens, function (token) {\r\n\t\t\ttoken.dispose();\r\n\t\t});\r\n\t\tself.subscriptionTokens = [];\t//tokens collection per instance of a datetimepicker \r\n\t\t//computed cleanup:\r\n\t\tself.datetimeWatcher.dispose();\r\n\t\tself.disableTime.dispose();\r\n\t\tself.isValidDate.dispose();\t\t\t\r\n\t}\r\n    return ctor;\r\n});\n","define('viewmodels/templates/event.details',['services/datacontext', 'services/navigation', 'plugins/router'],\r\n    function (datacontext, navigation, router) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.event = self.settings.event;\r\n            self.canSave = self.settings.canSave;\r\n            self.showing = self.settings.showing;\r\n            self.btnMsg = ko.computed(function () {\r\n                var thisValue = 'Go to Individual';\r\n                // // If it is an intervention,\r\n                // if (self.event && self.event() && self.event().type().name() === 'Intervention') {\r\n                    // thisValue = '';\r\n                // } else {\r\n                    // thisValue = 'Go to Individual';\r\n                // } \r\n                return thisValue;\r\n            });\r\n            self.gotoSource = function () {\r\n                // If it is an intervention,\r\n                if (self.event && self.event() && self.event().type().name() === 'Intervention') {\r\n                    self.showing(false);\r\n                    router.navigate('#patients/' + self.event().patientId());\r\n                    // // Make sure we go to the patient's overview page\r\n                    navigation.indexOverride(0);\r\n                } else {\r\n                    self.showing(false);\r\n                    // Else it is a todo so navigate to the patient anyway\r\n                    router.navigate('#patients/' + self.event().patientId());\r\n                    // // Make sure we go to the patient's overview page\r\n                    navigation.indexOverride(0);\r\n                }\r\n            };\t\t\t\r\n\t\t\tself.hasTimes = ko.computed( function(){\r\n\t\t\t\treturn self.event && self.event() && self.event().hasTimes(); \r\n\t\t\t});\r\n            self.hasPatient = ko.computed(function () {\r\n                return !!self.event().patientId();\r\n            });\r\n        };\r\n\t\t\r\n\t\t\t\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/focusproblems',['services/datacontext'],\r\n  function (datacontext) {\r\n\r\n    var ctor = function () {\r\n      var self = this;\r\n    };\r\n\r\n    ctor.prototype.newThenAlphabeticalSort = function (l, r) {\r\n\r\n        // Primary sort property\r\n        var p1 = l.isNew() ? 0 : 1;\r\n        var p2 = r.isNew() ? 0 : 1;\r\n\r\n        // Secondary sort property\r\n        var o1 = l.name().toLowerCase();\r\n        var o2 = r.name().toLowerCase();\r\n            \r\n        if (p1 != p2) {\r\n            if (p1 < p2) return -1;\r\n            if (p1 > p2) return 1;\r\n            return 0;\r\n        }\r\n        if (o1 < o2) return -1;\r\n        if (o1 > o2) return 1;\r\n        return 0;\r\n    };\r\n\r\n    ctor.prototype.observationDisplays = ko.computed(datacontext.enums.observationDisplays);\r\n    ctor.prototype.deleteFocusProblem = function (sender) {\r\n      sender.entityAspect.rejectChanges();\r\n      sender.deleteFlag(true);\r\n    };\r\n    ctor.prototype.observationStates = ko.computed(function () {\r\n      // Find problem observation type from list\r\n      var problemType = ko.utils.arrayFirst(datacontext.enums.observationTypes(), function (type) {\r\n        return type.name() === 'Problems';\r\n      });\r\n      // Filter states down to only those who have allowed type id that contains the problem type id\r\n      var theseStates = ko.utils.arrayFilter(datacontext.enums.observationStates(), function (state) {\r\n        return state.allowedTypeIds().indexOf(problemType.id()) !== -1;\r\n      });\r\n      return theseStates;\r\n    });\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n      var self = this;\r\n      self.settings = settings;\r\n      self.showing = ko.computed(function () { return true; });\r\n      self.selectedPatient = ko.computed(self.settings.selectedPatient);\r\n      // A list of the problem observations for this patient\r\n      self.computedProblemObservations = ko.computed(function () {\r\n        var filteredObservations = [];\r\n        var patientsObservations = self.selectedPatient().observations();\r\n        // Filter the list only to observations that are of type 'Problem'\r\n        filteredObservations = ko.utils.arrayFilter(patientsObservations, function (item) {\r\n          // If the item has a type, return if it matches problem, else if there is no type return false\r\n          return item.type() ? (item.type().name() === 'Problems' && !item.deleteFlag() && (item.entityAspect.entityState.isModified() || item.state().name().toLowerCase() === 'active')) : false;\r\n        }).sort(self.newThenAlphabeticalSort);\r\n        return filteredObservations;\r\n      }).extend({ throttle: 50 });\r\n      self.showActions = self.settings.hasOwnProperty('showActions') ? self.settings.showActions : self.showing;\r\n      self.saveFocusProblems = self.settings.saveFocusProblems || function () { return false; };\r\n      self.cancelFocusProblems = self.settings.cancelFocusProblems || function () { return false; };\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n\r\n    };\r\n\r\n    return ctor;\r\n  });\n","define('viewmodels/templates/goal.edit',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.goal = self.settings.goal;\r\n\t\t\tself.existingDetailsOpen = ko.observable(false);\r\n\t\t\tself.toggleOpen = function () {\r\n\t\t\t\tself.existingDetailsOpen(!self.existingDetailsOpen());\r\n\t\t\t};\r\n            self.focusAreas = datacontext.enums.focusAreas;\r\n            self.sources = datacontext.enums.sources;\r\n            self.goalTaskStatuses = datacontext.enums.goalTaskStatuses;            \r\n            self.goalTypes = datacontext.enums.goalTypes;\r\n            self.availablePrograms = ko.computed(function () {\r\n                var computedPrograms = [];\r\n                if (self.goal.patient()) {\r\n                    var thesePrograms = self.goal.patient().programs.slice(0).sort(self.alphabeticalNameSort);\r\n                    ko.utils.arrayForEach(thesePrograms, function (program) {\r\n                        if (program.elementState() !== 6 && program.elementState() !== 1 && program.elementState() !== 5) {\r\n                            computedPrograms.push(program);\r\n                        }\r\n                    });\r\n                }\r\n                return computedPrograms;\r\n            });\r\n            self.canSave = self.settings.canSave ? self.settings.canSave : true;\r\n            self.showing = self.settings.showing ? self.settings.showing : true;\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/intervention.edit',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.alphabeticalSort = function (l, r) { return (l.preferredName() == r.preferredName()) ? (l.preferredName() > r.preferredName() ? 1 : -1) : (l.preferredName() > r.preferredName() ? 1 : -1) };\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.intervention = ko.unwrap(self.settings.entity);\r\n            // Decides whether we can change status or not\r\n            self.isNew = (self.intervention && self.intervention.goal()) ? self.intervention.goal().isNew : function () { return false; };\r\n\t\t\tself.existingDetailsOpen = ko.observable(false);\r\n\t\t\tself.toggleOpen = function () {\r\n\t\t\t\tself.existingDetailsOpen(!self.existingDetailsOpen());\r\n\t\t\t};\r\n            self.careManagers = ko.computed(function () {\r\n                var theseCareManagers =  datacontext.enums.careManagers()\r\n                return theseCareManagers.sort(self.alphabeticalSort);\r\n            });\r\n            self.computedBarriers = ko.computed(self.intervention.goal().barriers);\r\n            self.interventionStatuses = datacontext.enums.interventionStatuses;\r\n            self.interventionCategories = datacontext.enums.interventionCategories;\r\n            self.careManagers = datacontext.enums.careManagers;\r\n            self.canSave = self.settings.canSave ? self.settings.canSave : true;\r\n            self.showing = self.settings.showing ? self.settings.showing : true;\r\n            // Set the displayed value to the current assign to\r\n            self.assignedToDisplay = ko.observable((self.intervention && self.intervention.assignedTo()) ? self.intervention.assignedTo().preferredName() : '');\r\n            self.assignedToDisplay.subscribe(function (newValue) {\r\n                // else, Find the care manager that matches\r\n                var matchedCareManager = ko.utils.arrayFirst(self.careManagers(), function (cm) {\r\n                    return cm.preferredName() === newValue;\r\n                });\r\n                // If a match is found,\r\n                if (matchedCareManager) {\r\n                    self.intervention.assignedTo(matchedCareManager);\r\n                } else {\r\n                }\r\n            });\r\n            self.checkForMatch = function () {\r\n                return self.assignedToDisplay() === (self.intervention.assignedTo() ? self.intervention.assignedTo().preferredName() : '');\r\n            };\r\n            self.removeAssignment = function () {\r\n                self.intervention.assignedTo(null);\r\n                self.assignedToDisplay('');\r\n            };\r\n            self.validMatch = ko.computed(function () {\r\n                var result = false;\r\n                if (self.intervention) {\r\n                    // Check if it matches a valid value\r\n                    result = self.checkForMatch();\r\n                    // If there is an invalid value,\r\n                    if (!result) {\r\n                        // if the assign to id has been changed,\r\n                        if (self.intervention && self.intervention.assignedToId()) {\r\n                            // Reset the value\r\n                            self.assignedToDisplay((self.intervention && self.intervention.assignedTo()) ? self.intervention.assignedTo().preferredName() : '');\r\n                            self.assignedToDisplay.valueHasMutated();\r\n                            // And check again\r\n                            result = self.checkForMatch();\r\n                        } else {\r\n                            // Else clear the value\r\n                            self.removeAssignment();\r\n                        }\r\n                    }\r\n                }\r\n                // Enable or disable the can save state\r\n                self.canSave = result;\r\n                return result;\r\n            }).extend({ throttle: 25 });\r\n            self.careManagersBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                remote: {\r\n                    url: '%QUERY',\r\n                    transport: function (url, options, onSuccess, onError) {\r\n                        var theseCareManagers = self.careManagers().sort(self.alphabeticalSort);\r\n                        var deferred = $.Deferred();\r\n                        deferred.done(function () { onSuccess(this); });\r\n\r\n                        var filterVal = url.toLowerCase();\r\n                        var result = theseCareManagers.filter(function (item) {\r\n                            if (item && item.firstLastOrPreferredName) {\r\n                                return !!~item.firstLastOrPreferredName().toLowerCase().indexOf(filterVal);\r\n                            }\r\n                            return false;\r\n                        });\r\n                        deferred.resolveWith(result);\r\n                        return deferred.promise();\r\n                    }\r\n                },\r\n                limit: 25\r\n            });\r\n            self.careManagersBloodhound.initialize();\r\n\t\t\t/**\r\n\t\t\t*\tcomputed. to allow forcing the datetimepicker control to set the due date as invalid.\r\n\t\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t\t*\t@method setInvalidDueDate\r\n\t\t\t*/\r\n\t\t\tself.setInvalidDueDate = ko.computed( function(){\r\n\t\t\t\treturn ( self.intervention && self.intervention.validationErrorsArray().indexOf('dueDate') !== -1);\r\n\t\t\t});\r\n\t\t\t/**\r\n\t\t\t*\tcomputed. to allow forcing the datetimepicker control to set the start date as invalid.\r\n\t\t\t*\tthis is needed when the date is valid but range is wrong.\r\n\t\t\t*\t@method setInvalidStartDate\r\n\t\t\t*/\r\n\t\t\tself.setInvalidStartDate = ko.computed( function(){\r\n\t\t\t\treturn ( self.intervention && self.intervention.validationErrorsArray().indexOf('StartDate') !== -1);\r\n\t\t\t});\r\n\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/intervention.panel',['services/session', 'services/datacontext', 'config.services', 'viewmodels/shell/shell', 'models/base', 'plugins/router', 'services/navigation'],\r\n    function (session, datacontext, servicesConfig, shell, modelConfig, router, navigation) {\r\n\r\n        var goalEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Goal');\r\n        });\r\n\r\n        var ctor = function () {\r\n    \t\tvar self = this;\r\n    \t\tself.descendingDateSort = function (l, r) { return (l.dueDate() == r.dueDate()) ? (l.dueDate() < r.dueDate() ? 1 : -1) : (l.dueDate() < r.dueDate() ? 1 : -1) };\r\n\t        self.interventionSort = function (l, r) {\r\n\t            // Primary sort property\r\n\t            var p1 = l.category() ? l.category().name() : '';\r\n\t            var p2 = r.category() ? r.category().name() : '';\r\n\r\n\t            // Secondary sort property\r\n\t            var o1 = l.title();\r\n\t            var o2 = r.title();\r\n\t            \r\n\t            if (p1 != p2) {\r\n\t                if (p1 < p2) return 1;\r\n\t                if (p1 > p2) return -1;\r\n\t                return 0;\r\n\t            }\r\n\t            if (o1 < o2) return 1;\r\n\t            if (o1 > o2) return -1;\r\n\t            return 0;\r\n\t        };\r\n            self.modalShowing = ko.observable(false);\r\n            self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n    \t}\r\n\r\n        // All the available columns\r\n    \tvar allColumns = [\r\n    \t\tnew Column('status', 'Status', 'span2', 'status.id'),\r\n            new Column('status-small', 'Status', 'span1', 'status.id'),\r\n    \t\tnew Column('patient', 'Individual','span2', 'patientDetails.lastName'),\r\n    \t\tnew Column('category', 'Category','span2', 'category.name'),\r\n            new Column('category-small', 'Category','span1', 'category.name'),\r\n    \t\tnew Column('description', 'Title','span3', 'description'),\r\n            new Column('description-small', 'Title','span2', 'description'),\r\n            new Column('goal', 'Goal','span3', 'goalName'),\r\n    \t\tnew Column('duedate', 'Due Date','span2', 'dueDate'),\t\t\t\r\n    \t\tnew Column('assignedto', 'Assigned To','span2', 'assignedTo.preferredName'),\r\n            new Column('closeddate', 'Closed Date','span2', 'closedDate'),\r\n            new Column('closeddate-small', 'Closed Date','span1', 'closedDate'),\r\n            new Column('updatedon', 'Date','span2', 'updatedOn'),\r\n            new Column('updatedon-small', 'Date', 'span1', 'updatedOn')\r\n    \t];\r\n        \r\n        var patientEndPoint = ko.computed(function () {\r\n            if(!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient', 'Patient');\r\n        });\r\n\r\n        // Endpoint to use for getting the current patient's programs\r\n        var patientProgramEndPoint = ko.computed(function () {\r\n            if(!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Program');\r\n        });\r\n    \t\r\n        ctor.prototype.activate = function (data) {\r\n    \t\tvar self = this;\r\n    \t\tself.interventions = data.interventions;\r\n            self.selectedSortColumn = data.selectedSortColumn;\r\n            self.toggleSort = data.toggleSort;\r\n            self.canSort = data.canSort ? data.canSort : false;\r\n            self.saveOverride = function () {\r\n                // If patient has been removed and program ids are still there\r\n                if (self.modalEntity().intervention() && self.modalEntity().intervention().barrierIds().length > 0 && !self.modalEntity().intervention().computedPatient().id()) {\r\n                    // Go through each one,\r\n                    ko.utils.arrayForEach(self.modalEntity().intervention().barrierIds(), function (progId) {\r\n                        // And remove it\r\n                        self.modalEntity().intervention().barrierIds.remove(progId);\r\n                    });\r\n                }\r\n                datacontext.saveIntervention(self.modalEntity().intervention(), 'Update');\r\n                //.then(saveCompleted);\r\n\r\n                function saveCompleted() {\r\n                    self.modalEntity().intervention().isNew(false);\r\n                    self.modalEntity().intervention().entityAspect.acceptChanges();\r\n                }\r\n            };\r\n            self.cancelOverride = function () {\r\n\t\t\t\tvar intervention = self.modalEntity().intervention();\r\n                datacontext.cancelEntityChanges(intervention);\r\n            };\r\n\t\t\t\r\n    \t\t// A list of columns to display\r\n    \t\tself.columns = ko.computed(function () {\r\n    \t\t\tvar tempcols = [];\r\n    \t\t\tvar thesecols = data.columns();\r\n    \t\t\tko.utils.arrayForEach(thesecols, function (col) {\r\n    \t\t\t\tvar matchingCol = findColumnByName(col);\r\n    \t\t\t\tif (matchingCol) {\r\n    \t\t\t\t\ttempcols.push(matchingCol);\r\n    \t\t\t\t}\r\n    \t\t\t});\r\n                // If no columns are found, show a default set of columns\r\n                if (!tempcols) {\r\n                    tempcols = ['status','patient','category','title','duedate'];\r\n                }\r\n    \t\t\treturn tempcols;\r\n    \t\t});\r\n    \t\tself.editIntervention = function (intervention) {\r\n                // If there is an associated patient object,\r\n                if (intervention && intervention.patientId()) {\r\n                    // Go get the program details, if not already loaded\r\n                    // if (intervention.goal() && intervention.goal().patient() && intervention.goal().patient().programs().length === 0) {\r\n                    //     datacontext.getEntityList(null, patientProgramEndPoint().EntityType, patientProgramEndPoint().ResourcePath + intervention.patientId() + '/Programs', null, null, true).then(loadModalCompleted);\r\n                    // } else {\r\n                        // Go select a patient by their Id.\r\n                        datacontext.getEntityById(null, intervention.patientId(), patientEndPoint().EntityType, patientEndPoint().ResourcePath, true).then(function () {\r\n                            // Go grab the goal details\r\n                            getGoalDetails(intervention.patientGoalId(), intervention.computedPatient().id()).then(loadModalCompleted);\r\n                            // And get their programs\r\n                            datacontext.getEntityList(null, patientProgramEndPoint().EntityType, patientProgramEndPoint().ResourcePath + intervention.patientId() + '/Programs', null, null, true);\r\n                        });\r\n                    //}\r\n                // } else {\r\n                //     // Already loaded everything, load it up\r\n                //     loadModalCompleted();\r\n                }\r\n\r\n                function loadModalCompleted () {\r\n\t\t\t\t\tvar modalSettings = {\r\n\t\t\t\t\t\ttitle: 'Edit Intervention',\r\n\t\t\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\t\t\trelatedPatientName: intervention.computedPatient().fullName,\r\n\t\t\t\t\t\tentity:self.modalEntity , \r\n\t\t\t\t\t\ttemplatePath: 'viewmodels/templates/intervention.edit', \r\n\t\t\t\t\t\tshowing: self.modalShowing, \r\n\t\t\t\t\t\tsaveOverride: self.saveOverride, \r\n\t\t\t\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\t\t\t\tdeleteOverride: null, \r\n\t\t\t\t\t\tclassOverride: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.modal = new modelConfig.modal(modalSettings);\r\n                    self.modalEntity().intervention(intervention);\r\n                    shell.currentModal(self.modal);\r\n                    self.modalShowing(true);\r\n                }\r\n    \t\t};\r\n    \t\tself.computedInterventions = ko.computed(function () {\r\n    \t\t\tko.utils.arrayForEach(self.interventions(), function (td) {\r\n                    // Make sure all interventions have an edit function\r\n    \t\t\t\tif (!td.edit) {\r\n    \t\t\t\t\ttd.edit = function () {\r\n    \t\t\t\t\t\tself.editIntervention(td);\r\n    \t\t\t\t\t}\r\n    \t\t\t\t}\r\n                    if (!td.gotoGoal) {\r\n                        td.gotoGoal = function () {\r\n                            // If we are already in the context of the patient\r\n                            if (navigation.currentRoute() && navigation.currentRoute().config.title === 'Individual') {\r\n                                // Get the goals subroute\r\n                                var thisSubRoute = ko.utils.arrayFirst(navigation.currentRoute().config.settings.pages, function (page) {\r\n                                    return page.title === 'goals';\r\n                                });\r\n                                // And set the new sub route\r\n                                navigation.setSubRoute(thisSubRoute);\r\n                            } else {\r\n                                // Else navigate to the patient\r\n                                router.navigate('#patients/' + td.computedPatient().id());  \r\n                                navigation.indexOverride(1);                                \r\n                            }\r\n                        };\r\n                    }\r\n    \t\t\t});\r\n                return self.interventions();\r\n    \t\t});\r\n    \t}\r\n\r\n        // The view has detached so remove all subscriptions\r\n        ctor.prototype.detached = function () {\r\n            var self = this;\r\n            // Clear out all of the subscriptions to dispose of this properly\r\n            goalEndPoint.dispose();\r\n            patientEndPoint.dispose();\r\n            patientProgramEndPoint.dispose();\r\n            //self.modalEntity().canSave.dispose();\r\n            self.columns.dispose();\r\n            self.computedInterventions.dispose();\r\n        };\r\n\r\n        function getGoalDetails (goalId, patientId) {\r\n            return datacontext.getEntityById(null, goalId, goalEndPoint().EntityType, goalEndPoint().ResourcePath + patientId + '/Goal/', true);\r\n        };\r\n\r\n    \tfunction findColumnByName(name) {\r\n    \t\tvar match = ko.utils.arrayFirst(allColumns, function (allcol) {\r\n    \t\t\treturn allcol.name.toLowerCase() === name.toLowerCase();\r\n    \t\t});\r\n    \t\tif (!match) {\r\n    \t\t\tconsole.log('bad column name used - ', name);\r\n    \t\t}\r\n    \t\treturn match;\r\n    \t}\r\n\r\n    \tfunction Column(name, displayname, cssclass, sortprop) {\r\n    \t\tvar self = this;\r\n    \t\tself.name = name;\r\n    \t\tself.displayName = displayname;\r\n            // If the name contains small,\r\n            if (name.substr(name.length - 5, 5) === 'small') {\r\n                self.path = 'views/templates/intervention.' + name.substr(0, name.length - 6) + '.html';\r\n            } else {\r\n                self.path = 'views/templates/intervention.' + name + '.html';                \r\n            }\r\n    \t\tself.cssClass = cssclass;\r\n            self.sortProperty = sortprop;\r\n    \t}\r\n\r\n    \treturn ctor;\r\n\r\n        function ModalEntity(modalShowing) {\r\n            var self = this;\r\n            self.intervention = ko.observable();\r\n            self.canSaveObservable = ko.observable(true);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    var isValid = false;\r\n                    if (self.intervention()) {\r\n\t\t\t\t\t\tisValid = self.intervention().isValid();                        \r\n                    }\r\n                    return isValid && self.canSaveObservable();\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { entity: self.intervention, canSave: self.canSave, showing: modalShowing  };\r\n        }\r\n\r\n\t});\n","define('viewmodels/templates/medication.groups.panel',['services/session', 'services/datacontext', 'config.services', 'viewmodels/shell/shell', 'models/base', 'viewmodels/patients/medications/index', 'durandal/app'],\r\n  function (session, datacontext, servicesConfig, shell, modelConfig, medicationsIndex, app) {\r\n\r\n    var nameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n\r\n    var ctor = function () {\r\n      var self = this;\r\n      self.modalShowing = ko.observable(false);\r\n      self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n    }\r\n\r\n    ctor.prototype.activate = function (data) {\r\n      var self = this;\r\n      self.medicationGroups = data.medicationGroups;\r\n      self.selectedSortColumn = data.selectedSortColumn;\r\n      self.toggleSort = data.toggleSort;\r\n      self.canSort = data.canSort ? data.canSort : false;\r\n      self.activeMedication = medicationsIndex.activeMedication;\r\n\r\n      self.saveOverride = function () {\r\n        var medication = self.modalEntity().medication();\r\n        if( medication.needToSave() ){\r\n          if( medication.isValid() ){\r\n            datacontext.saveMedication(self.modalEntity().medication(), 'Update').then(saveCompleted);\r\n          } else{\r\n            medication.entityAspect.rejectChanges();\r\n          }\r\n        }\r\n\r\n        function saveCompleted() {\r\n          self.modalEntity().medication().isEditing(false);\r\n          self.modalEntity().medication().isNew(false);\r\n          self.modalEntity().medication().isUserCreated(false);\r\n          self.modalEntity().medication().entityAspect.acceptChanges();\r\n        }\r\n      };\r\n\r\n      self.cancelOverride = function () {\r\n        self.modalEntity().medication().isEditing(false);\r\n        datacontext.cancelEntityChanges(self.modalEntity().medication());\r\n      };\r\n\r\n      var modalSettings = {\r\n        title: 'Edit Medication',\r\n        showSelectedPatientInTitle: true,\r\n        entity: self.modalEntity,\r\n        templatePath: 'viewmodels/patients/sections/medication.edit',\r\n        showing: self.modalShowing,\r\n        saveOverride: self.saveOverride,\r\n        cancelOverride: self.cancelOverride,\r\n        deleteOverride: null,\r\n        classOverride: 'modal-lg'\r\n      };\r\n      self.modal = new modelConfig.modal(modalSettings);\r\n      self.setActiveMedication = function (medication) {\r\n        medicationsIndex.setActiveMedication(medication);\r\n      };\r\n      self.editMedication = function (medication) {\r\n        medication.isEditing(true);\r\n        self.modalEntity().medication(medication);\r\n        shell.currentModal(self.modal);\r\n        self.modalShowing(true);\r\n      }\r\n      self.computedMedicationGroups = ko.computed(function () {\r\n        ko.utils.arrayForEach(self.medicationGroups(), function (group) {\r\n          ko.utils.arrayForEach(group.medications(), function (med) {\r\n            if (!med.edit) {\r\n              med.edit = function () {\r\n                self.editMedication(med);\r\n              }\r\n            }\r\n            if (!med.setActiveMedication) {\r\n              med.setActiveMedication = function () {\r\n                self.setActiveMedication(med);\r\n              }\r\n            }\r\n          });\r\n          if (!group.isExpanded) {\r\n            group.isExpanded = ko.observable(false);\r\n          }\r\n        });\r\n        return self.medicationGroups().sort(nameSort);\r\n      });\r\n    }\r\n\r\n    return ctor;\r\n\r\n    function ModalEntity(modalShowing) {\r\n      var self = this;\r\n      self.medication = ko.observable();\r\n      self.canSaveObservable = ko.observable(true);\r\n      self.canSave = ko.computed({\r\n        read: function () {\r\n          var medicationok = false;\r\n          if (self.medication()) {\r\n            var medicationtitle = !!self.medication().name();\r\n            var medicationstatus = !!self.medication().status();\r\n            medicationok = medicationtitle && medicationstatus;\r\n          }\r\n          return medicationok && self.canSaveObservable();\r\n        },\r\n        write: function (newValue) {\r\n          self.canSaveObservable(newValue);\r\n        }\r\n      });\r\n      self.activationData = { selectedPatient: medicationsIndex.selectedPatient, medication: self.medication, canSave: self.canSave, showing: modalShowing  };\r\n    }\r\n  });\r\n\n","define('viewmodels/templates/medications.panel',['services/session', 'services/datacontext', 'config.services', 'viewmodels/shell/shell', 'models/base', 'viewmodels/patients/medications/index', 'durandal/app'],\r\n  function (session, datacontext, servicesConfig, shell, modelConfig, medicationsIndex, app) {\r\n\r\n    var ctor = function () {\r\n      var self = this;\r\n      self.descendingDateSort = function (l, r) { return (l.dueDate() == r.dueDate()) ? (l.dueDate() < r.dueDate() ? 1 : -1) : (l.dueDate() < r.dueDate() ? 1 : -1) };\r\n      self.medicationSort = function (l, r) {\r\n        var p1 = l.status() ? l.status().id() : '';\r\n        var p2 = r.status() ? r.status().id() : '';\r\n\r\n        var o1 = l.name();\r\n        var o2 = r.name();\r\n\r\n        if (p1 != p2) {\r\n          if (p1 < p2) return 1;\r\n          if (p1 > p2) return -1;\r\n          return 0;\r\n        }\r\n        if (o1 < o2) return 1;\r\n        if (o1 > o2) return -1;\r\n        return 0;\r\n      };\r\n      self.modalShowing = ko.observable(false);\r\n      self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n    }\r\n\r\n    var allColumns = [\r\n    new Column('expand', '', 'span1 ellipsis filters', '', true),\r\n    new Column('priority', 'Priority', 'span2 ellipsis', 'priority.id'),\r\n    new Column('status', 'Status', 'span2 ellipsis', 'statusId'),\r\n    new Column('priority-small', 'Priority', 'span1 ellipsis', 'priority.id'),\r\n    new Column('status-small', '', 'span1 ellipsis', 'statusId'),\r\n    new Column('patient', 'Individual','span2 ellipsis', 'patientDetails.lastName'),\r\n    new Column('type', 'Type','span2', 'type.name', true),\r\n    new Column('type-small', 'Type','span1', 'type.name', true),\r\n    new Column('name', 'Medication','span6 ellipsis', 'name'),\r\n    new Column('name-small', 'Medication','span2 ellipsis', 'name'),\r\n    new Column('strength', 'Strength','span3 ellipsis', 'strength'),\r\n    new Column('strength-small', 'Strength','span2 ellipsis', 'strength'),\r\n    new Column('reason', 'Reason','span4 ellipsis', 'reason.name'),\r\n    new Column('reason-small', 'Reason','span3 ellipsis', 'reason.name'),\r\n    new Column('duedate', 'Due Date','span2 ellipsis', 'dueDate'),\r\n    new Column('assignedto', 'Assigned To','span2 ellipsis', 'assignedTo.preferredName'),\r\n    new Column('startdate', 'Date','span2 ellipsis', 'startDate'),\r\n    new Column('sortdate', 'Date','span2 ellipsis', 'medSortDate', true),\r\n    new Column('startdate-small', 'Date','span1 ellipsis', 'startDate'),\r\n    new Column('updatedon', 'Date','span2 ellipsis', 'updatedOn'),\r\n    new Column('updatedon-small', 'Date', 'span1 ellipsis', 'updatedOn')\r\n    ];\r\n\r\n    var patientEndPoint = ko.computed(function () {\r\n      if(!session.currentUser()) {\r\n        return false;\r\n      }\r\n      return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient', 'Patient');\r\n    });\r\n\r\n    ctor.prototype.activate = function (data) {\r\n      var self = this;\r\n      self.medications = data.medications;\r\n      self.selectedSortColumn = data.selectedSortColumn;\r\n      self.toggleSort = data.toggleSort;\r\n      self.canSort = data.canSort ? data.canSort : false;\r\n      self.activeMedication = medicationsIndex.activeMedication;\r\n\r\n      self.saveOverride = function () {\r\n        var medication = self.modalEntity().medication();\r\n        if( medication.needToSave() ){\r\n          if( medication.isValid() ){\r\n            datacontext.saveMedication(self.modalEntity().medication(), 'Update').then(saveCompleted);\r\n          } else{\r\n            medication.entityAspect.rejectChanges();\r\n          }\r\n        }\r\n\r\n        function saveCompleted() {\r\n          self.modalEntity().medication().isEditing(false);\r\n          self.modalEntity().medication().isNew(false);\r\n          self.modalEntity().medication().isUserCreated(false);\r\n          self.modalEntity().medication().entityAspect.acceptChanges();\r\n        }\r\n      };\r\n\r\n      self.cancelOverride = function () {\r\n        self.modalEntity().medication().isEditing(false);\r\n        datacontext.cancelEntityChanges(self.modalEntity().medication());\r\n      };\r\n\r\n      var modalSettings = {\r\n        title: 'Edit Medication',\r\n        showSelectedPatientInTitle: true,\r\n        entity: self.modalEntity,\r\n        templatePath: 'viewmodels/patients/sections/medication.edit',\r\n        showing: self.modalShowing,\r\n        saveOverride: self.saveOverride,\r\n        cancelOverride: self.cancelOverride,\r\n        deleteOverride: null,\r\n        classOverride: 'modal-lg'\r\n      }\r\n      self.modal = new modelConfig.modal(modalSettings);\r\n      self.columns = ko.computed(function () {\r\n        var tempcols = [];\r\n        var thesecols = data.columns();\r\n        ko.utils.arrayForEach(thesecols, function (col) {\r\n          var matchingCol = findColumnByName(col);\r\n          if (matchingCol) {\r\n            tempcols.push(matchingCol);\r\n          }\r\n        });\r\n        if (!tempcols) {\r\n          tempcols = ['status','patient','category','title','duedate'];\r\n        }\r\n        return tempcols;\r\n      });\r\n      self.setActiveMedication = function (medication) {\r\n        medicationsIndex.setActiveMedication(medication);\r\n      };\r\n      self.editMedication = function (medication) {\r\n        medication.isEditing(true);\r\n        self.modalEntity().medication(medication);\r\n        shell.currentModal(self.modal);\r\n        self.modalShowing(true);\r\n      }\r\n      self.computedMedications = ko.computed(function () {\r\n        ko.utils.arrayForEach(self.medications(), function (td) {\r\n          if (!td.edit) {\r\n            td.edit = function () {\r\n              self.editMedication(td);\r\n            }\r\n          }\r\n          if (!td.setActiveMedication) {\r\n            td.setActiveMedication = function () {\r\n              self.setActiveMedication(td);\r\n            }\r\n          }\r\n          if (!td.isExpanded) {\r\n            td.isExpanded = ko.observable(false);\r\n          }\r\n        });\r\n        return self.medications();\r\n      });\r\n    }\r\n\r\n    function findColumnByName(name) {\r\n      var match = ko.utils.arrayFirst(allColumns, function (allcol) {\r\n        return allcol.name.toLowerCase() === name.toLowerCase();\r\n      });\r\n      if (!match) {\r\n        console.log('bad column name used - ', name);\r\n      }\r\n      return match;\r\n    }\r\n\r\n    function Column(name, displayname, cssclass, sortprop, disablesort) {\r\n      var self = this;\r\n      self.name = name;\r\n      self.displayName = displayname;\r\n      if (name.substr(name.length - 5, 5) === 'small') {\r\n        self.path = 'views/templates/medication.' + name.substr(0, name.length - 6) + '.html';\r\n      } else {\r\n        self.path = 'views/templates/medication.' + name + '.html';\r\n      }\r\n      self.cssClass = cssclass;\r\n      self.sortProperty = sortprop;\r\n      self.canSort = disablesort ? false : true;\r\n    }\r\n\r\n    return ctor;\r\n\r\n    function ModalEntity(modalShowing) {\r\n      var self = this;\r\n      self.medication = ko.observable();\r\n      self.canSaveObservable = ko.observable(true);\r\n      self.canSave = ko.computed({\r\n        read: function () {\r\n          var medicationok = false;\r\n          if (self.medication()) {\r\n            var medicationtitle = !!self.medication().name();\r\n            var medicationstatus = !!self.medication().status();\r\n            medicationok = medicationtitle && medicationstatus;\r\n          }\r\n          return medicationok && self.canSaveObservable();\r\n        },\r\n        write: function (newValue) {\r\n          self.canSaveObservable(newValue);\r\n        }\r\n      });\r\n      self.activationData = { selectedPatient: medicationsIndex.selectedPatient, medication: self.medication, canSave: self.canSave, showing: modalShowing  };\r\n    }\r\n\r\n  });\n","define('viewmodels/templates/module.edit',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var alphabeticalSort = function (l, r) { return (l.preferredName() == r.preferredName()) ? (l.preferredName() > r.preferredName() ? 1 : -1) : (l.preferredName() > r.preferredName() ? 1 : -1) };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.module = self.settings.module;\r\n            self.canSave = self.settings.canSave;\r\n            self.showing = self.settings.showing;\r\n            self.careManagers = datacontext.enums.careManagers;\r\n            // Set the displayed value to the current assign to\r\n            self.assignToDisplay = ko.observable((self.module() && self.module().assignTo()) ? self.module().assignTo().preferredName() : '');\r\n            self.assignToDisplay.subscribe(function (newValue) {\r\n                // else, Find the care manager that matches\r\n                var matchedCareManager = ko.utils.arrayFirst(self.careManagers(), function (cm) {\r\n                    return cm.preferredName() === newValue;\r\n                });\r\n                // If a match is found,\r\n                if (matchedCareManager) {\r\n                    self.module().assignTo(matchedCareManager);\r\n                } else {\r\n                    console.log('No match found');\r\n                }\r\n            });\r\n            self.showing.subscribe(function (newValue) {\r\n                // If the user closes the modal without saving,\r\n                if (!newValue) {\r\n                    // If the assigned to has been cleared out,\r\n                    if (!self.module().assignToId()) {\r\n                        // Clear the values so it clears the text box on next load\r\n                        self.assignToDisplay('');\r\n                    }\r\n                }\r\n            });\r\n            self.checkForMatch = function () {\r\n                return self.assignToDisplay() === (self.module().assignTo() ? self.module().assignTo().preferredName() : '');                \r\n            }\r\n            self.removeAssignment = function () {\r\n                self.module().assignTo(null);\r\n                self.assignToDisplay('');\r\n            }\r\n            self.validMatch = ko.computed(function () {\r\n                var result = false;\r\n                if (self.module()) {\r\n                    // Check if it matches a valid value\r\n                    result = self.checkForMatch();\r\n                    // If there is an invalid value,\r\n                    if (!result) {\r\n                        // If the assign to id has been cleared,\r\n                        if (self.module() && self.module().assignToId()) {\r\n                            // Reset the value\r\n                            self.assignToDisplay((self.module() && self.module().assignTo()) ? self.module().assignTo().preferredName() : '');\r\n                            self.assignToDisplay.valueHasMutated();\r\n                            // And check again\r\n                            result = self.checkForMatch();\r\n                        } else {\r\n                            self.removeAssignment();\r\n                        }\r\n                    }\r\n                }\r\n                // Enable or disable the can save state\r\n                self.canSave(result);\r\n                return result;\r\n            }).extend({ throttle: 25 });\r\n            self.careManagersBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                remote: {\r\n                    url: '%QUERY',\r\n                    transport: function (url, options, onSuccess, onError) {\r\n                        var theseCareManagers = self.careManagers().sort(alphabeticalSort);\r\n                        var deferred = $.Deferred();\r\n                        deferred.done(function () { onSuccess(this); });\r\n\r\n                        var filterVal = url.toLowerCase();\r\n                        var result = theseCareManagers.filter(function (item) {\r\n                            if (item && item.firstLastOrPreferredName) {\r\n                                return !!~item.firstLastOrPreferredName().toLowerCase().indexOf(filterVal);\r\n                            }\r\n                            return false;\r\n                        });\r\n                        deferred.resolveWith(result);\r\n                        return deferred.promise();\r\n                    }\r\n                },\r\n                limit: 25\r\n            });\r\n            self.careManagersBloodhound.initialize();\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","/**\r\n*\r\n*\t@module note.general.edit\r\n*/\r\ndefine('viewmodels/templates/note.general.edit',['services/datacontext'],\r\n\tfunction (datacontext) {\r\n\r\n\tvar datacontext;\r\n\r\n\t\t\tvar ctor = function () {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tself.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n\t\t\t\tself.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n\t\t\t\tself.existingContentOpen = ko.observable(false);\r\n\t\t\t\tself.toggleOpen = function () {\r\n\t\t\t\t\tself.existingContentOpen(!self.existingContentOpen());\r\n\t\t\t\t};\r\n\t\t\t};\r\n\r\n\t\t\tctor.prototype.activate = function (settings) {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tself.settings = settings;\r\n\t\t\t\tself.note = self.settings.note;\r\n\t\t\t\tself.availablePrograms = ko.computed(function () {\r\n\t\t\t\t\tvar computedPrograms = [];\r\n\t\t\t\t\tif (self.note.patient()) {\r\n\t\t\t\t\t\tvar thesePrograms = self.note.patient().programs.slice(0).sort(self.alphabeticalNameSort);\r\n\t\t\t\t\t\tko.utils.arrayForEach(thesePrograms, function (program) {\r\n\t\t\t\t\t\t\tif (program.elementState() !== 6 && program.elementState() !== 1 && program.elementState() !== 5) {\r\n\t\t\t\t\t\t\t\t\tcomputedPrograms.push(program);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn computedPrograms;\r\n\t\t\t\t});\r\n\t\t\t\tself.programString = ko.computed(function () {\r\n\t\t\t\t\tcheckDataContext();\r\n\t\t\t\t\tvar thisString = '';\r\n\t\t\t\t\tvar note = self.note;\r\n\t\t\t\t\tvar theseProgramIds = note.programIds();\r\n\t\t\t\t\tif (note.patient() && note.patient().programs()) {\r\n\t\t\t\t\t\tvar thesePrograms = note.patient().programs();\r\n\t\t\t\t\t\tko.utils.arrayForEach(theseProgramIds, function (program) {\r\n\t\t\t\t\t\t\tvar thisProgram = ko.utils.arrayFirst(thesePrograms, function (programEnum) {\r\n\t\t\t\t\t\t\t\treturn programEnum.id() === program.id();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthisString += thisProgram ? thisProgram.name() + ', ' : '';\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// If the string is longer than zero,\r\n\t\t\t\t\t\tif (thisString.length > 0) {\r\n\t\t\t\t\t\t\t// Remove the trailing comma and space\r\n\t\t\t\t\t\t\tthisString = thisString.substr(0, thisString.length - 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (thisString.length === 0) {\r\n\t\t\t\t\t\tthisString = 'None';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn thisString;\r\n\t\t\t\t});\r\n\t\t\t\tself.canSave = self.settings.canSave ? self.settings.canSave : true;\r\n\t\t\t\tself.showing = self.settings.showing ? self.settings.showing : true;\r\n\t\t\t};\r\n\r\n\t\tfunction checkDataContext() {\r\n\t\t\t\tif (!datacontext) {\r\n\t\t\t\t\t\tdatacontext = require('services/datacontext');\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\t\t\tctor.prototype.attached = function () {\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn ctor;\r\n\t\t});\n","/**\r\n*\r\n*\t@module\tnote.touchpoint.edit\r\n*/\r\ndefine('viewmodels/templates/note.touchpoint.edit',['services/datacontext'],\r\n\tfunction (datacontext) {\r\n\r\n\t\tvar ctor = function () {\r\n\t\t\tvar self = this;\r\n\t\t\tself.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n\t\t\tself.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n\t\t\t// Available properties of a note\r\n\t\t\tself.methods = datacontext.enums.noteMethods;\r\n\t\t\tself.whos = datacontext.enums.noteWhos;\r\n\t\t\tself.sources = datacontext.enums.noteSources;\r\n\t\t\tself.outcomes = datacontext.enums.noteOutcomes;\r\n\t\t\tself.existingContentOpen = ko.observable(false);\r\n\t\t\tself.toggleOpen = function () {\r\n\t\t\t\tself.existingContentOpen(!self.existingContentOpen());\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tctor.prototype.activate = function (settings) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.settings = settings;\r\n\t\t\tself.note = self.settings.note;\r\n\t\t\tself.focusAreas = datacontext.enums.focusAreas;\r\n\r\n\t\t\tself.availablePrograms = ko.computed(function () {\r\n\t\t\t\tvar computedPrograms = [];\r\n\t\t\t\tif (self.note.patient()) {\r\n\t\t\t\t\tvar thesePrograms = self.note.patient().programs.slice(0).sort(self.alphabeticalNameSort);\r\n\t\t\t\t\tko.utils.arrayForEach(thesePrograms, function (program) {\r\n\t\t\t\t\t\tif (program.elementState() !== 6 && program.elementState() !== 1 && program.elementState() !== 5) {\r\n\t\t\t\t\t\t\tcomputedPrograms.push(program);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn computedPrograms;\r\n\t\t\t});\r\n\t\t\tself.canSave = self.settings.canSave ? self.settings.canSave : true;\r\n\t\t\tself.showing = self.settings.showing ? self.settings.showing : true;\r\n\t\t};\r\n\r\n\t\tctor.prototype.attached = function () {\r\n\r\n\t\t};\r\n\r\n\t\treturn ctor;\r\n\t}); \n","/**\r\n*\tedit utilization dialog screen\r\n*\t@module\tnote.utilization.edit\r\n*/\r\ndefine('viewmodels/templates/note.utilization.edit',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var ctor = function () {\r\n          var self = this;\r\n          self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n          self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n\t\t\t\t\t// Available properties of a note\r\n\t\t\t\t\tself.visitTypes = datacontext.enums.visitTypes;\r\n\t\t\t\t\tself.utilizationSources = datacontext.enums.utilizationSources;\r\n\t\t\t\t\tself.dispositions = datacontext.enums.dispositions;\r\n\t\t\t\t\tself.utilizationLocations = datacontext.enums.utilizationLocations;\r\n\t\t\t\t\tself.existingContentOpen = ko.observable(false);\r\n\t\t\t\t\tself.toggleOpen = function () {\r\n\t\t\t\t\t\tself.existingContentOpen(!self.existingContentOpen());\r\n\t\t\t\t\t};\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.note = self.settings.note;\r\n\r\n            self.availablePrograms = ko.computed(function () {\r\n                var computedPrograms = [];\r\n                if (self.note.patient()) {\r\n                    var thesePrograms = self.note.patient().programs.slice(0).sort(self.alphabeticalNameSort);\r\n                    ko.utils.arrayForEach(thesePrograms, function (program) {\r\n                        if (program.elementState() !== 6 && program.elementState() !== 1 && program.elementState() !== 5) {\r\n                            computedPrograms.push(program);\r\n                        }\r\n                    });\r\n                }\r\n                return computedPrograms;\r\n            });\r\n            self.canSave = false; //this is temporary. TODO:  self.settings.canSave ? self.settings.canSave : true;\r\n            self.showing = self.settings.showing ? self.settings.showing : true;\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/observation.add',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var ctor = function () {\r\n        \tvar self = this;\r\n        };\r\n        \r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.observation = self.settings.observation;\r\n            self.addNew = self.settings.addNew;\r\n            self.canAdd = ko.computed(function () {\r\n                if (self.observation && self.observation.computedValue() && self.observation.startDate()) {\r\n                    return (!!self.observation.computedValue().value() && moment(self.observation.startDate()).isValid());\r\n                }\r\n            });\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n        \r\n        return ctor;\r\n    });\n","define('viewmodels/templates/observation.bloodpressure.add',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var ctor = function () {\r\n        \tvar self = this;\r\n        };\r\n        \r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.observation = self.settings.observation;\r\n            self.diastolicObservationValue = ko.computed(function () {\r\n                var diastolic = ko.utils.arrayFirst(self.observation.values(), function (value) {\r\n                    return value.text().indexOf('Diast') !== -1;\r\n                });\r\n                if (diastolic) {\r\n                    return diastolic;\r\n                }\r\n                return null;\r\n            });\r\n            self.systolicObservationValue = ko.computed(function () {\r\n                var systolic = ko.utils.arrayFirst(self.observation.values(), function (value) {\r\n                    return value.text().indexOf('Sys') !== -1;\r\n                });\r\n                if (systolic) {\r\n                    return systolic;\r\n                }\r\n                return null;\r\n            });\r\n            self.customBPString = ko.computed(function () {\r\n                var thisString = '';\r\n                if (self.diastolicObservationValue() && self.systolicObservationValue()) {\r\n                    // Create a string from it\r\n                    var diasvalue = self.diastolicObservationValue().previousValue().value();\r\n                    var systvalue = self.systolicObservationValue().previousValue().value();\r\n                    var value = (!!diasvalue && !!systvalue) ? systvalue + '/' + diasvalue : '';\r\n                    var startdate = moment(self.diastolicObservationValue().previousValue().startDate()).format('MM/DD/YYYY');\r\n                    var unit = self.diastolicObservationValue().previousValue().unit();\r\n                    var source = self.diastolicObservationValue().previousValue().source();\r\n                    thisString = value ? value + ' ' + unit : '';\r\n                    thisString = moment(startdate).isValid() ? (thisString ? thisString + ' on ' + startdate : startdate) : thisString;\r\n                    thisString = source ? thisString + ' (' + source + ')' : thisString;\r\n                }\r\n                return thisString;\r\n            });\r\n            self.canAdd = ko.computed(function () {\r\n                if (!!self.observation && !!self.diastolicObservationValue() && !!self.systolicObservationValue()) {\r\n                    return (!!self.diastolicObservationValue().value() && !!self.systolicObservationValue().value() && moment(self.observation.startDate()).isValid());\r\n                }\r\n                return false;\r\n            });\r\n            self.addNew = self.settings.addNew;\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n        \r\n        return ctor;\r\n    });\n","/**\r\n*\tpatient status dialog module\r\n*\t@module patient.status\r\n*/\r\ndefine('viewmodels/templates/patient.status',['services/datacontext'],\r\n  function (datacontext) {\r\n\r\n    var ctor = function () {\r\n      var self = this;\r\n    };\r\n\t\r\n\tctor.prototype.patientStatuses = ko.computed(datacontext.enums.patientStatuses);\r\n\tctor.prototype.patientStatusReasons = ko.computed(datacontext.enums.patientStatusReasons);\r\n\t\r\n    ctor.prototype.activate = function (settings) {\r\n      var self = this;\r\n      self.settings = settings;\r\n      self.showing = ko.computed(function () { return true; });\r\n      self.selectedPatient = ko.computed(self.settings.selectedPatient);\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n\r\n    };\r\n\r\n\tctor.prototype.detached = function() { \r\n\t\tvar self = this;\r\n\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n\t\t\ttoken.dispose();\r\n\t\t});\r\n\t\t//computed cleanup:\r\n\t\tself.showing.dispose();\t\r\n\t\tself.selectedPatient.dispose();\r\n\t}\r\n\t\r\n    return ctor;\r\n  });\n","/**\r\n*\tmodal dialog internal module, works from parent module: system.ids.\r\n*\tthis module manages the logics and internals of individual (patient) ids.\r\n*\t@module patient.systems\r\n*/\r\ndefine('viewmodels/templates/patient.systems',['services/datacontext'],\r\n\tfunction (datacontext) {\r\n\r\n    function alphabeticalNameSort (l, r) { return (l.displayLabel().toLowerCase() == r.displayLabel().toLowerCase()) ? (l.displayLabel().toLowerCase() > r.displayLabel().toLowerCase() ? 1 : -1) : (l.displayLabel().toLowerCase() > r.displayLabel().toLowerCase() ? 1 : -1) };\r\n    var DUPLICATE_MESSAGE = 'This individual ID combination of System and Value already exists';\r\n\tvar ADD_DUPLICATE_MESSAGE = 'Can\\'t add this individual ID combination of System and Value since it already exists';\r\n\t\r\n\t\tvar ctor = function () {\r\n\t\t\tvar self = this;\r\n\t\t\tself.newSystemId = ko.observable();\r\n\t\t\tself.systems = ko.computed(function(){\r\n\t\t\t\tvar systems = datacontext.enums.systems()\r\n\t\t\t\tconsole.log(systems);\r\n\t\t\t\tvar theseSystems = systems.sort(alphabeticalNameSort);\r\n\t\t\t\treturn theseSystems;\r\n\t\t\t});\r\n\t\t\tself.patientSystemStatuses = datacontext.enums.patientSystemStatus;\r\n\r\n\t\t\tself.primarySystem = ko.utils.arrayFirst( self.systems(), function( system ){\r\n\t\t\t\treturn (system.primary() === true);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tfunction newThenAlphabeticalSort(a, b) {\r\n\r\n\t\t\t// Primary sort property\r\n\t\t\tvar p1 = a.isNew() ? 0 : 1;\r\n\t\t\tvar p2 = b.isNew() ? 0 : 1;\r\n\t\t\tif (p1 != p2) {\r\n\t\t\t\tif (p1 < p2) return -1;\r\n\t\t\t\tif (p1 > p2) return 1;\r\n\t\t\t}\r\n\t\t\tif (p1 === 0 && p2 === 0){\r\n\t\t\t\t// 2'nd sort prop for new entries - show new ones at the top as they are added:\r\n\t\t\t\tif( a.id() < b.id() ) return 1; //as negative the id is - its a fresher one\r\n\t\t\t\tif( a.id() > b.id() ) return -1;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t// 3'rd sort property\r\n\t\t\tvar o1 = a.system().displayLabel().toLowerCase();\r\n\t\t\tvar o2 = b.system().displayLabel().toLowerCase();\r\n\t\t\tif (o1 < o2) return -1;\r\n\t\t\tif (o1 > o2) return 1;\r\n\t\t\treturn 0;\r\n\t\t};\r\n\r\n\t\tctor.prototype.activate = function (settings) {\r\n\t\t\tvar self = this;\r\n\t\t\tself.settings = settings;\r\n\t\t\tself.showing = ko.computed(function () { return true; });\r\n\t\t\tself.selectedPatient = self.settings.selectedPatient;\r\n\t\t\tself.canSave = self.settings.canSave;\r\n\r\n\t\t\tself.patientSystems = ko.computed( function(){\r\n\t\t\t\tvar result = [];\r\n\t\t\t\tvar patient = self.selectedPatient;\r\n\t\t\t\tvar systemIds = patient().patientSystems();\r\n\t\t\t\tresult = patient().patientSystems();\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\r\n\t\t\tself.newPatientSystemIdValue = ko.observable();\r\n\t\t\tself.newSelectedSystem = ko.observable();\r\n\t\t\tself.addNewDuplicate = ko.observable();\r\n\r\n\t\t\t/**\r\n\t\t\t*\tvalidation errors for the add new id area only\r\n\t\t\t*\t@method newIdValidationErrors\r\n\t\t\t*/\r\n\t\t\tself.newIdValidationErrors = ko.computed( function(){\r\n\t\t\t\tvar value = self.newPatientSystemIdValue();\r\n\t\t\t\tvar system = self.newSelectedSystem();\r\n\t\t\t\tvar systemIds = self.patientSystems();\r\n\t\t\t\tvar errors = [];\r\n\t\t\t\tif( !value && !system ){\r\n\t\t\t\t\t//dont show any errors if the user didnt fill in a value or selected a system\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\tif( !value ){\r\n\t\t\t\t\terrors.push({PropName: 'newValue', Message: 'a new Value is required'});\r\n\t\t\t\t}\r\n\t\t\t\telse if( !value.trim().length ){\r\n\t\t\t\t\terrors.push({PropName: 'newValue', Message: 'a new Value cannot be blank'});\r\n\t\t\t\t}\r\n\t\t\t\tif( !system ){\r\n\t\t\t\t\terrors.push({PropName: 'newSystem', Message: 'a new System is required'});\r\n\t\t\t\t}\r\n\t\t\t\tself.addNewDuplicate(null);\r\n\t\t\t\tif( value && value.trim().length && system ){\r\n\t\t\t\t\t//verify no dups\r\n\t\t\t\t\tvar dup = ko.utils.arrayFirst( systemIds, function(patSys){\r\n\t\t\t\t\t\treturn (patSys.isDeleted() === false && patSys.value().trim().toLowerCase() === value.trim().toLowerCase() \r\n\t\t\t\t\t\t\t\t&& patSys.systemId().toLowerCase() === system.id().toLowerCase());\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif( dup ){\r\n\t\t\t\t\t\terrors.push({PropName: 'newValue', Message: ADD_DUPLICATE_MESSAGE });\r\n\t\t\t\t\t\tself.addNewDuplicate(dup);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn errors;\r\n\t\t\t});\r\n\r\n\t\t\tself.canAddNewPatientSystem = ko.computed( function(){\r\n\t\t\t\tvar value = self.newPatientSystemIdValue();\r\n\t\t\t\tvar system = self.newSelectedSystem();\r\n\t\t\t\tvar errors = self.newIdValidationErrors();\r\n\t\t\t\treturn (value && value.trim() && system && errors.length === 0);\r\n\t\t\t});\r\n\r\n\t\t\tself.hasPrimarySelected = function(){\r\n\t\t\t\t//look for non deleted primary item:\r\n\t\t\t\tvar primary = ko.utils.arrayFirst( self.patientSystems(), function( systemIdRecord ){\r\n\t\t\t\t\treturn ( systemIdRecord.primary() && ( systemIdRecord.isDeleted() === false ));\r\n\t\t\t\t});\r\n\t\t\t\treturn primary;\r\n\t\t\t}\r\n\r\n\t\t\tself.validationErrors = ko.computed( function(){\r\n\t\t\t\tvar patient = self.selectedPatient;\r\n\t\t\t\tvar systemIds = self.patientSystems();\r\n\t\t\t\tvar errors = [];\r\n\t\t\t\tvar duplicates = [];\r\n\t\t\t\tko.utils.arrayForEach( systemIds, function( patSys, pos ){\r\n\t\t\t\t\tif( patSys.isDeleted() ) return;\r\n\t\t\t\t\tif( !patSys.isValid() ){\r\n\t\t\t\t\t\tisValid = false;\r\n\t\t\t\t\t\tko.utils.arrayForEach( patSys.validationErrors(), function( err ){\r\n\t\t\t\t\t\t\terrors.push( err );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tko.utils.arrayForEach(systemIds, function(sysId, index){\r\n\t\t\t\t\t\tif ( sysId.isDeleted() !== false ){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( index === pos ){\r\n\t\t\t\t\t\t\treturn;\t//self\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( sysId.systemId().toLowerCase() === patSys.systemId().toLowerCase() \r\n\t\t\t\t\t\t\t&& sysId.value().trim().toLowerCase() === patSys.value().trim().toLowerCase() ){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tduplicates.push(sysId);\t\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\tif (self.addNewDuplicate()) {\r\n\t\t\t\t\terrors.push({PropName: 'newValue', Message: ADD_DUPLICATE_MESSAGE });\r\n\t\t\t\t}\r\n\t\t\t\tif( duplicates.length > 0 ){\r\n\t\t\t\t\tvar oneMessage = false;\r\n\t\t\t\t\tko.utils.arrayForEach( duplicates, function(dup){\r\n\t\t\t\t\t\t//highlight all duplicates. show only one error message: \r\n\t\t\t\t\t\tif( !oneMessage ){\r\n\t\t\t\t\t\t\toneMessage = true;\r\n\t\t\t\t\t\t\terrors.push({ PropName: 'value', Message: DUPLICATE_MESSAGE, Id: dup.id() });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\terrors.push({ PropName: 'value', Message: '', Id: dup.id() });\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn errors;\r\n\t\t\t});\r\n\r\n\t\t\tself.validationErrorsArray = ko.computed(function () {\r\n\t\t\t\tvar thisArray = [];\r\n\t\t\t\tvar validationErrors = self.validationErrors();\r\n\t\t\t\tvar canSave = true;\r\n\t\t\t\tko.utils.arrayForEach( validationErrors, function (error) {\r\n\t\t\t\t\tthisArray.push(error.PropName);\r\n\t\t\t\t\t// if it's new, don't block\r\n\t\t\t\t\t// TODO: Need to refactor this to be compliant with messages\r\n\t\t\t\t\tif (error.PropName !== 'newSystem' && error.PropName !== 'newValue' && error.PropName !== '') {\r\n\t\t\t\t\t\tcanSave = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tself.canSave(canSave);\r\n\t\t\t\treturn thisArray;\r\n\t\t\t});\r\n\r\n\t\t\tself.setPrimary = function( patientSystem ){\r\n\t\t\t\t//clear all other\r\n\t\t\t\tko.utils.arrayForEach( self.selectedPatient().patientSystems(), function( systemIdRecord ){\r\n\t\t\t\t\tsystemIdRecord.primary(false);\r\n\t\t\t\t});\r\n\t\t\t\tpatientSystem.primary(true);\r\n\t\t\t}\r\n\r\n\t\t\tself.canAddId = ko.computed(function () {\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\r\n\t\t\tself.computedEditSystemIds = ko.computed(function () {\r\n\t\t\t\tvar patientSystems = self.selectedPatient().patientSystems();\r\n\t\t\t\tvar theseIds = ko.utils.arrayFilter( patientSystems, function( patSys ){\r\n\t\t\t\t\treturn !patSys.isDeleted();\r\n\t\t\t\t});\r\n\t\t\t\treturn theseIds.sort( newThenAlphabeticalSort );\r\n\t\t\t}).extend({ throttle: 50 });//, notify: 'always'\r\n\r\n\t\t\tself.newIdValidationErrorsArray = ko.computed( function(){\r\n\t\t\t\tvar thisArray = [];\r\n\t\t\t\tko.utils.arrayForEach( self.newIdValidationErrors(), function(error){\r\n\t\t\t\t\tthisArray.push( error.PropName );\r\n\t\t\t\t});\r\n\t\t\t\treturn thisArray;\r\n\t\t\t});\r\n\r\n\t\t\tself.isInvalidProp = function( patientSystemId, propName ){\r\n\t\t\t\t//propName: 'value' / 'system'\r\n\t\t\t\tvar patientSystemPropertyHasError = ko.utils.arrayFirst( self.validationErrors(), function(error){\r\n\t\t\t\t\treturn ( error.Id === patientSystemId && error.PropName === propName );\r\n\t\t\t\t});\r\n\t\t\t\treturn patientSystemPropertyHasError || (self.addNewDuplicate() && self.addNewDuplicate().id() === patientSystemId);\r\n\t\t\t}\r\n\r\n\t\t\tself.createNewId = function () {\r\n\t\t\t\tvar newId = (self.selectedPatient().patientSystems().length + 100)*-1;\r\n\t\t\t\tvar primary = false;\r\n\t\t\t\tif( self.primarySystem && self.primarySystem.id() === self.newSelectedSystem().id() && !self.hasPrimarySelected() ){\r\n\t\t\t\t\t//user selected a primary system in the added item, and there is no primary item in the list:\r\n\t\t\t\t\tprimary = true;\r\n\t\t\t\t}\r\n\t\t\t\tvar entity = datacontext.createEntity('PatientSystem',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: newId,\r\n\t\t\t\t\t\tpatientId: self.selectedPatient().id(),\r\n\t\t\t\t\t\tsystem: self.newSelectedSystem(),\r\n\t\t\t\t\t\tvalue: self.newPatientSystemIdValue(),\r\n\t\t\t\t\t\tdataSource: 'Engage',\r\n\t\t\t\t\t\tstatusId: '1',\r\n\t\t\t\t\t\tprimary: primary\r\n\t\t\t\t\t});\r\n\t\t\t\tif( entity ){\r\n\t\t\t\t\tentity.isNew(true);\r\n\t\t\t\t\t//self.newPatientSystem(entity);\r\n\t\t\t\t\tself.newSelectedSystem(null);\r\n\t\t\t\t\tself.newPatientSystemIdValue(null);\r\n\t\t\t\t} else{\r\n\t\t\t\t\tconsole.log('createNewId - datacontext.createEntity did not return an entity.');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tself.deletePatientSystemId = function( patientSystem ){\r\n\t\t\t\tpatientSystem.isDeleted(true);\r\n\t\t\t\tpatientSystem.primary(false);\r\n\t\t\t\tif( !isNaN(patientSystem.id()) && patientSystem.id() < 0 ){\r\n\t\t\t\t\t//fresh newly added now deleted before it was saved: completely remove the entity:\r\n\t\t\t\t\tdatacontext.detachEntity(patientSystem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn ctor;\r\n\t});\r\n\n","define('viewmodels/templates/program.edit',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var alphabeticalSort = function (l, r) { return (l.preferredName() == r.preferredName()) ? (l.preferredName() > r.preferredName() ? 1 : -1) : (l.preferredName() > r.preferredName() ? 1 : -1) };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.program = self.settings.program;\r\n            self.canSave = self.settings.canSave;\r\n            self.showing = self.settings.showing;\r\n            self.careManagers = datacontext.enums.careManagers;\r\n            // Set the displayed value to the current assign to\r\n            self.assignToDisplay = ko.observable((self.program() && self.program().assignTo()) ? self.program().assignTo().preferredName() : '');\r\n            self.assignToDisplay.subscribe(function (newValue) {\r\n                // else, Find the care manager that matches\r\n                var matchedCareManager = ko.utils.arrayFirst(self.careManagers(), function (cm) {\r\n                    return cm.preferredName() === newValue;\r\n                });\r\n                // If a match is found,\r\n                if (matchedCareManager) {\r\n                    self.program().assignTo(matchedCareManager);\r\n                } else {\r\n                    console.log('No match found');\r\n                }\r\n            });\r\n            self.showing.subscribe(function (newValue) {\r\n                // If the user closes the modal without saving,\r\n                if (!newValue) {\r\n                    // If the assigned to has been cleared out,\r\n                    if (!self.program().assignToId()) {\r\n                        // Clear the values so it clears the text box on next load\r\n                        self.assignToDisplay('');\r\n                    }\r\n                }\r\n            });\r\n            self.checkForMatch = function () {\r\n                return self.assignToDisplay() === (self.program().assignTo() ? self.program().assignTo().preferredName() : '');                \r\n            }            \r\n            self.removeAssignment = function () {\r\n                self.program().assignTo(null);\r\n                self.assignToDisplay('');\r\n            }\r\n            self.validMatch = ko.computed(function () {\r\n                var result = false;\r\n                if (self.program()) {\r\n                    // Check if it matches a valid value\r\n                    result = self.checkForMatch();\r\n                    // If there is an invalid value,\r\n                    if (!result) {\r\n                        // If the assign to id has been cleared,\r\n                        if (self.program() && self.program().assignToId()) {\r\n                            // Reset the value\r\n                            self.assignToDisplay((self.program() && self.program().assignTo()) ? self.program().assignTo().preferredName() : '');\r\n                            self.assignToDisplay.valueHasMutated();\r\n                            // And check again\r\n                            result = self.checkForMatch();\r\n                        } else {\r\n                            // Else clear the value\r\n                            self.removeAssignment();\r\n                        }\r\n                    }\r\n                }\r\n                // Enable or disable the can save state\r\n                self.canSave(result);\r\n                return result;\r\n            }).extend({ throttle: 25 });\r\n            self.careManagersBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                remote: {\r\n                    url: '%QUERY',\r\n                    transport: function (url, options, onSuccess, onError) {\r\n                        var theseCareManagers = self.careManagers().sort(alphabeticalSort);\r\n                        var deferred = $.Deferred();\r\n                        deferred.done(function () { onSuccess(this); });\r\n                        var filterVal = url.toLowerCase();\r\n                        var result = theseCareManagers.filter(function (item) {\r\n                            if (item && item.firstLastOrPreferredName) {\r\n                                return !!~item.firstLastOrPreferredName().toLowerCase().indexOf(filterVal);\r\n                            }\r\n                            return false;\r\n                        });\r\n                        deferred.resolveWith(result);\r\n                        return deferred.promise();\r\n                    }\r\n                },\r\n                limit: 25\r\n            });\r\n            self.careManagersBloodhound.initialize();\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/program.remove',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var alphabeticalSort = function (l, r) { return (l.preferredName() == r.preferredName()) ? (l.preferredName() > r.preferredName() ? 1 : -1) : (l.preferredName() > r.preferredName() ? 1 : -1) };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.program = self.settings.program;\r\n            self.showing = self.settings.showing;\r\n            self.reason = self.settings.reason;\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/task.edit',['services/datacontext'],\r\n    function (datacontext) {\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n            self.alphabeticalNameSort = function (l, r) { return (l.name() == r.name()) ? (l.name() > r.name() ? 1 : -1) : (l.name() > r.name() ? 1 : -1) };\r\n            self.alphabeticalOrderSort = function (l, r) { return (l.order() == r.order()) ? (l.order() > r.order() ? 1 : -1) : (l.order() > r.order() ? 1 : -1) };\r\n        };\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.task = ko.unwrap(self.settings.entity);\r\n\t\t\tself.existingDetailsOpen = ko.observable(false);\r\n\t\t\tself.toggleOpen = function () {\r\n\t\t\t\tself.existingDetailsOpen(!self.existingDetailsOpen());\r\n\t\t\t};\r\n            self.goalTaskStatuses = datacontext.enums.goalTaskStatuses;\r\n            // Decides whether we can change status or not\r\n            self.isNew = (self.task && self.task.goal()) ? self.task.goal().isNew : function () { return false; };\r\n            self.computedBarriers = ko.computed(self.task.goal().barriers);\r\n            self.canSave = self.settings.canSave ? self.settings.canSave : true;\r\n            self.showing = self.settings.showing ? self.settings.showing : true;\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\r\n        return ctor;\r\n    });\n","define('viewmodels/templates/task.panel',['services/session', 'services/datacontext', 'config.services', 'viewmodels/shell/shell', 'models/base', 'plugins/router', 'services/navigation'],\r\n    function (session, datacontext, servicesConfig, shell, modelConfig, router, navigation) {\r\n\r\n        var goalEndPoint = ko.computed(function () {\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Goal');\r\n        });\r\n\r\n        var ctor = function () {\r\n    \t\tvar self = this;\r\n    \t\tself.descendingDateSort = function (l, r) { return (l.dueDate() == r.dueDate()) ? (l.dueDate() < r.dueDate() ? 1 : -1) : (l.dueDate() < r.dueDate() ? 1 : -1) };\r\n\t        self.taskSort = function (l, r) {\r\n\t            // Primary sort property\r\n\t            var p1 = l.category() ? l.category().name() : '';\r\n\t            var p2 = r.category() ? r.category().name() : '';\r\n\r\n\t            // Secondary sort property\r\n\t            var o1 = l.title();\r\n\t            var o2 = r.title();\r\n\t            \r\n\t            if (p1 != p2) {\r\n\t                if (p1 < p2) return 1;\r\n\t                if (p1 > p2) return -1;\r\n\t                return 0;\r\n\t            }\r\n\t            if (o1 < o2) return 1;\r\n\t            if (o1 > o2) return -1;\r\n\t            return 0;\r\n\t        };\r\n            self.modalShowing = ko.observable(false);\r\n            self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n    \t}\r\n\r\n        // All the available columns\r\n    \tvar allColumns = [\r\n    \t\tnew Column('status', 'Status', 'span2', 'status.id'),\r\n            new Column('status-small', 'Status', 'span1', 'status.id'),\r\n    \t\tnew Column('patient', 'Individual','span2', 'patientDetails.lastName'),\r\n            new Column('targetvalue', 'Target Value', 'span2', 'targetValue'),\r\n            new Column('targetvalue-small', 'Target Value', 'span1', 'targetValue'),\r\n    \t\tnew Column('description', 'Title','span4', 'description'),\r\n            new Column('description-small', 'Title','span3', 'description'),\r\n            new Column('goal', 'Goal','span3', 'goalName'),\r\n    \t\tnew Column('startdate', 'Start Date','span2', 'startDate'),\r\n            new Column('closeddate', 'Closed Date','span2', 'closedDate'),\r\n            new Column('targetdate', 'Target Date','span2', 'targetDate'),\r\n            new Column('statusdate', 'Status Date','span2', 'statusDate'),\r\n    \t\tnew Column('assignedto', 'Assigned To','span2', 'assignedTo.preferredName'),\r\n            new Column('closedon', 'Date','span2', 'closedDate'),\r\n            new Column('closedon-small', 'Date','span1', 'closedDate'),\r\n            new Column('updatedon', 'Date','span2', 'updatedOn'),\r\n            new Column('updatedon-small', 'Date', 'span1', 'updatedOn')\r\n    \t];\r\n        \r\n        var patientEndPoint = ko.computed(function () {\r\n            if(!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient', 'Patient');\r\n        });\r\n\r\n        // Endpoint to use for getting the current patient's programs\r\n        var patientProgramEndPoint = ko.computed(function () {\r\n            if(!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Program');\r\n        });\r\n    \t\r\n        ctor.prototype.activate = function (data) {\r\n    \t\tvar self = this;\r\n    \t\tself.tasks = data.tasks;\r\n            self.selectedSortColumn = data.selectedSortColumn;\r\n            self.toggleSort = data.toggleSort;\r\n            self.canSort = data.canSort ? data.canSort : false;\r\n            self.saveOverride = function () {\r\n\t\t\t\tself.modalEntity().task().checkAppend();\r\n                datacontext.saveTask(self.modalEntity().task(), 'Update');\r\n\r\n                function saveCompleted() {\r\n                    //self.modalEntity().task().isNew(false);\r\n                    self.modalEntity().task().entityAspect.acceptChanges();\r\n                }\r\n            };\r\n            self.cancelOverride = function () {\r\n\t\t\t\tvar task = self.modalEntity().task();\r\n                datacontext.cancelEntityChanges(task);\r\n            };\r\n\t\t\tvar modalSettings = {\r\n\t\t\t\ttitle:'Edit Task' ,\r\n\t\t\t\tshowSelectedPatientInTitle: true,\r\n\t\t\t\tentity: self.modalEntity, \r\n\t\t\t\ttemplatePath: 'viewmodels/templates/task.edit', \r\n\t\t\t\tshowing: self.modalShowing, \r\n\t\t\t\tsaveOverride: self.saveOverride, \r\n\t\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\t\tdeleteOverride: null, \r\n\t\t\t\tclassOverride: null\r\n\t\t\t}\r\n            self.modal = new modelConfig.modal(modalSettings);\r\n    \t\t// A list of columns to display\r\n    \t\tself.columns = ko.computed(function () {\r\n    \t\t\tvar tempcols = [];\r\n    \t\t\tvar thesecols = data.columns();\r\n    \t\t\tko.utils.arrayForEach(thesecols, function (col) {\r\n    \t\t\t\tvar matchingCol = findColumnByName(col);\r\n    \t\t\t\tif (matchingCol) {\r\n    \t\t\t\t\ttempcols.push(matchingCol);\r\n    \t\t\t\t}\r\n    \t\t\t});\r\n                // If no columns are found, show a default set of columns\r\n                if (!tempcols) {\r\n                    tempcols = ['status','patient','category','title','duedate'];\r\n                }\r\n    \t\t\treturn tempcols;\r\n    \t\t});\r\n    \t\tself.editTask = function (task) {\r\n                // If there is an associated patient object,\r\n                if (task && task.goal() && task.goal().patientId()) {\r\n                    // Go get the program details, if not already loaded\r\n                    if (task.goal() && task.goal().patient() && task.goal().patient().programs().length === 0) {\r\n                        // Always get goal details\r\n                        getGoalDetails(task.patientGoalId(), task.patientId()).then(loadModalCompleted);\r\n                        // datacontext.getEntityList(null, patientProgramEndPoint().EntityType, patientProgramEndPoint().ResourcePath + task.patientId() + '/Programs', null, null, true).then(loadModalCompleted);\r\n                    } else {\r\n                        // No matter what!\r\n                        getGoalDetails(task.patientGoalId(), task.patientId()).then(loadModalCompleted);\r\n                    }\r\n                } else {\r\n                    // Already loaded everything, load it up\r\n                    loadModalCompleted();\r\n                }\r\n\r\n                function loadModalCompleted () {\r\n                    self.modalEntity().task(task);\r\n                    shell.currentModal(self.modal);\r\n                    self.modalShowing(true);\r\n                }\r\n    \t\t}\r\n    \t\tself.computedTasks = ko.computed(function () {\r\n    \t\t\tko.utils.arrayForEach(self.tasks(), function (td) {\r\n                    // Make sure all Tasks have an edit function\r\n    \t\t\t\tif (!td.edit) {\r\n    \t\t\t\t\ttd.edit = function () {\r\n    \t\t\t\t\t\tself.editTask(td);\r\n    \t\t\t\t\t}\r\n                    if (!td.gotoGoal) {\r\n                        td.gotoGoal = function () {\r\n                            // Get the goals subroute\r\n                            var thisSubRoute = ko.utils.arrayFirst(navigation.currentRoute().config.settings.pages, function (page) {\r\n                                return page.title === 'goals';\r\n                            });\r\n                            navigation.setSubRoute(thisSubRoute);\r\n                        };\r\n                    }\r\n    \t\t\t\t}\r\n    \t\t\t});\r\n                return self.tasks();\r\n    \t\t});\r\n    \t};\r\n\r\n        // The view has detached so remove all subscriptions\r\n        ctor.prototype.detached = function () {\r\n            var self = this;\r\n            // Clear out all of the subscriptions to dispose of this properly\r\n            goalEndPoint.dispose();\r\n            patientEndPoint.dispose();\r\n            patientProgramEndPoint.dispose();\r\n            //self.modalEntity().canSave.dispose();\r\n            self.columns.dispose();\r\n            self.computedTasks.dispose();\r\n        };\r\n\r\n        function getGoalDetails (goalId, patientId) {\r\n            return datacontext.getEntityById(null, goalId, goalEndPoint().EntityType, goalEndPoint().ResourcePath + patientId + '/Goal/', true);\r\n        }\r\n\r\n    \tfunction findColumnByName(name) {\r\n    \t\tvar match = ko.utils.arrayFirst(allColumns, function (allcol) {\r\n    \t\t\treturn allcol.name.toLowerCase() === name.toLowerCase();\r\n    \t\t});\r\n    \t\tif (!match) {\r\n    \t\t}\r\n    \t\treturn match;\r\n    \t}\r\n\r\n    \tfunction Column(name, displayname, cssclass, sortprop) {\r\n    \t\tvar self = this;\r\n    \t\tself.name = name;\r\n    \t\tself.displayName = displayname;\r\n            // If the name contains small,\r\n            if (name.substr(name.length - 5, 5) === 'small') {\r\n                self.path = 'views/templates/task.' + name.substr(0, name.length - 6) + '.html';\r\n            } else {\r\n                self.path = 'views/templates/task.' + name + '.html';                \r\n            }\r\n    \t\tself.cssClass = cssclass;\r\n            self.sortProperty = sortprop;\r\n    \t}\r\n\r\n    \treturn ctor;\r\n\r\n        function ModalEntity(modalShowing) {\r\n            var self = this;\r\n            self.task = ko.observable();\r\n            self.canSaveObservable = ko.observable(true);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    var taskok = false;\r\n                    if (self.task()) {\r\n                        var taskdesc = !!self.task().description();\r\n                        taskok = taskdesc;\r\n                    }\r\n                    return taskok && self.canSaveObservable();\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { entity: self.task, canSave: self.canSave, showing: modalShowing  };\r\n        }\r\n\r\n\t});\n","/**\r\n*\ttodo details edit / add view\r\n*\t@module todo.edit \r\n*\t@class todo.edit\r\n*/\r\ndefine('viewmodels/templates/todo.edit',['services/datacontext', 'services/local.collections'],\r\n    function (datacontext, localCollections) {\r\n\t\t\r\n\t\tvar subscriptionTokens= [];\r\n        var alphabeticalSort = function (l, r) { return (l.preferredName() == r.preferredName()) ? (l.preferredName() > r.preferredName() ? 1 : -1) : (l.preferredName() > r.preferredName() ? 1 : -1) };\r\n\r\n        var ctor = function () {\r\n            var self = this;\r\n        };\r\n\r\n        function ErrorMsg(msg) {\r\n            var self = this;\r\n            self.Message = msg;\r\n        }\r\n\r\n        ctor.prototype.activate = function (settings) {\r\n            var self = this;\r\n            self.settings = settings;\r\n            self.todo = self.settings.todo;\t\t\r\n            self.canSave = self.settings.canSave;\r\n            self.showing = self.settings.showing;\r\n            self.careManagers = datacontext.enums.careManagers;\r\n            self.toDoCategories = datacontext.enums.toDoCategories;\r\n            self.statuses = datacontext.enums.goalTaskStatuses;\r\n            self.priorities = datacontext.enums.priorities;\r\n            self.errors = ko.computed(function () {\r\n                var errorlist = [];\r\n                // Make sure it has a title\r\n                var thistitle = self.todo().title();\r\n                if (!thistitle) {\r\n                    errorlist.push(new ErrorMsg(\"'Title' is required\"));\r\n                }\r\n                return errorlist;\r\n            });\r\n            self.hasErrors = ko.computed(function () {\r\n                return self.errors().length > 0;\r\n            });\r\n            // Function to delete the todo\r\n            self.deleteToDo = function () {\r\n                // Prompt the user to confirm deletion\r\n                var result = confirm('Are you sure you want to delete the to-do?');\r\n                // If they press OK,\r\n                if (result === true) {\r\n                    // Set the delete flag to true\r\n                    self.todo().deleteFlag(true);\r\n                    // Save it\r\n                    datacontext.saveToDo(self.todo(), 'Update').then(saveCompleted);\r\n                }\r\n                else {\r\n                    // Do nothing\r\n                    return false;\r\n                }\r\n\r\n                // Once the save completes\r\n                function saveCompleted() {\r\n                    // Accept the changes to make sure there are no conflicts\r\n                    self.todo().entityAspect.acceptChanges();\r\n                    // Stop showing the modal\r\n                    self.showing(false);\r\n                    // Remove it from the todos list\r\n                    localCollections.todos.remove(self.todo());\r\n                    self.todo().patientId(null);\r\n                    // Give all views a chance to clear the todo before detaching it\r\n                    setTimeout(function () {\r\n                        // Detach the entity from the manager\r\n                        datacontext.detachEntity(self.todo());\r\n                    }, 25);                    \r\n                }\r\n            };\r\n            // Track whether there is a patient or not\r\n            self.noPatient = ko.computed(function () {\r\n                // Return true or false only, not the object\r\n                return !!self.todo().patientId();\r\n            });\r\n            self.availablePrograms = ko.computed(function () {\r\n                var computedPrograms = [];\r\n                if (self.todo().patientId() && self.todo().patient()) {\r\n                    var thesePrograms = self.todo().patient().programs.slice(0).sort(self.alphabeticalNameSort);\r\n                    ko.utils.arrayForEach(thesePrograms, function (program) {\r\n                        if (program.elementState() !== 6 && program.elementState() !== 1 && program.elementState() !== 5) {\r\n                            computedPrograms.push(program);\r\n                        }\r\n                    });\r\n                }\r\n                return computedPrograms;\r\n            });\r\n            // Set the displayed value to the current assign to\r\n            self.assignedToDisplay = ko.observable((self.todo() && self.todo().assignedTo()) ? self.todo().assignedTo().preferredName() : '');\r\n            var token = self.assignedToDisplay.subscribe(function (newValue) {\r\n                // else, Find the care manager that matches\r\n                var matchedCareManager = ko.utils.arrayFirst(self.careManagers(), function (cm) {\r\n                    return cm.preferredName() === newValue;\r\n                });\r\n                // If a match is found,\r\n                if (matchedCareManager) {\r\n                    self.todo().assignedTo(matchedCareManager);\r\n                } else {\r\n                    console.log('No match found');\r\n                }\r\n            });\r\n\t\t\tsubscriptionTokens.push(token);\r\n            self.checkForMatch = function () {\r\n                return self.assignedToDisplay() === (self.todo().assignedTo() ? self.todo().assignedTo().preferredName() : '');                \r\n            };\r\n            self.removeAssignment = function () {\r\n                self.todo().assignedTo(null);\r\n\t\t\t\tself.todo().assignedToId(null);\r\n                self.assignedToDisplay('');\r\n            };\r\n            self.removePatientAssociation = function () {                \t\t\t\t\r\n\t\t\t\tself.todo().patientId(null);\t\r\n\t\t\t\t//clear all associated programs:\r\n                if (self.todo() && self.todo().programIds().length > 0 && !self.todo().patientId()) {                    \r\n\t\t\t\t\tself.todo().programIds.removeAll();                    \r\n                }\r\n            };\r\n\t\t\tself.removeUserAssociation = function () {                \r\n\t\t\t\tself.removeAssignment();\t\t\t\t\t\t\t\t\t\r\n            };\r\n\t\t\t\r\n            self.validMatch = ko.computed({\r\n\t\t\t\tread: function () {\r\n\t\t\t\t\tvar result = false;\r\n\t\t\t\t\tif (self.todo()) {\r\n\t\t\t\t\t\t// Check if it matches a valid value\r\n\t\t\t\t\t\tresult = self.checkForMatch();\r\n\t\t\t\t\t\t// If there is an invalid value,\r\n\t\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\t\t// if the assign to id has been changed,\r\n\t\t\t\t\t\t\tif (self.todo() && self.todo().assignedToId()) {\r\n\t\t\t\t\t\t\t\t// Reset the value\r\n\t\t\t\t\t\t\t\tself.assignedToDisplay((self.todo() && self.todo().assignedTo()) ? self.todo().assignedTo().preferredName() : '');\r\n\t\t\t\t\t\t\t\tself.assignedToDisplay.valueHasMutated();\r\n\t\t\t\t\t\t\t\t// And check again\r\n\t\t\t\t\t\t\t\tresult = self.checkForMatch();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Else clear the value\r\n\t\t\t\t\t\t\t\tself.removeAssignment();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Enable or disable the can save state\r\n\t\t\t\t\tself.canSave(result);\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t},\r\n\t\t\t\tdeferEvaluation: true\r\n\t\t\t}).extend({ throttle: 25 });\r\n            self.careManagersBloodhound = new Bloodhound({\r\n                datumTokenizer: function (d) {\r\n                    return Bloodhound.tokenizers.whitespace(d.name());\r\n                },\r\n                queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n                remote: {\r\n                    url: '%QUERY',\r\n                    transport: function (url, options, onSuccess, onError) {\r\n                        var theseCareManagers = self.careManagers().sort(alphabeticalSort);\r\n                        var deferred = $.Deferred();\r\n                        deferred.done(function () { onSuccess(this); });\r\n\r\n                        var filterVal = url.toLowerCase();\r\n                        var result = theseCareManagers.filter(function (item) {\r\n                            if (item && item.firstLastOrPreferredName) {\r\n                                return !!~item.firstLastOrPreferredName().toLowerCase().indexOf(filterVal);\r\n                            }\r\n                            return false;\r\n                        });\r\n                        deferred.resolveWith(result);\r\n                        return deferred.promise();\r\n                    }\r\n                },\r\n                limit: 25\r\n            });\r\n            self.careManagersBloodhound.initialize();\r\n        };\r\n\r\n        ctor.prototype.attached = function () {\r\n\r\n        };\r\n\t\t\r\n\t\t/**\r\n\t\t*\tclearing KO subscriptions/computeds memory\r\n\t\t*\t@method detached\t\t\r\n\t\t*\t@example\t \t\r\n\t\t*\tfor subscriptions: \r\n\t\t*\r\n\t\t*\t\t1. declare tokens collection:\tvar subscriptionTokens= [];\r\n\t\t*\t\t2. keep the returned token/s:\r\n\t\t*\t\r\n\t\t*\t\t\tvar token = something.subscribe(function (newValue) {...});\r\n\t\t*\t\t\r\n\t\t*\t\t3. dispose tokens:\r\n\t\t*\t\t\t\r\n\t\t*\t\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n\t\t*\t\t\t\ttoken.dispose();\r\n\t\t*\t\t\t});\r\n\t\t*\t@example\r\n\t\t*\tfor computeds:\r\n\t\t*\t\r\n\t\t*\t\tself.someComputed.dispose();\r\n\t\t*/\r\n\t\tctor.prototype.detached = function () {\r\n            var self = this;\r\n            // dispose computeds:\r\n            self.errors.dispose();\r\n            self.hasErrors.dispose();\r\n\t\t\tself.noPatient.dispose();\r\n\t\t\tself.availablePrograms.dispose();\r\n\t\t\tself.validMatch.dispose();\r\n\t\t\t//self.canSave.dispose(); remarked: causes timing issues.\r\n\t\t\t//dispose subscriptions:\r\n\t\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n\t\t\t\ttoken.dispose();\r\n\t\t\t});\t\t\t\r\n        };\r\n        return ctor;\r\n    });\n","/**\r\n*\tdisplays todo grid with edit/delete\tand opens edit modal.\r\n*\t@module todo.panel\t\r\n*\t@class todo.panel\r\n*/\r\ndefine('viewmodels/templates/todo.panel',['services/session', 'services/datacontext', 'config.services', 'viewmodels/shell/shell', 'models/base'],\r\n    function (session, datacontext, servicesConfig, shell, modelConfig) {\r\n\r\n        var ctor = function () {\r\n    \t\tvar self = this;\r\n    \t\tself.descendingDateSort = function (l, r) { return (l.dueDate() == r.dueDate()) ? (l.dueDate() < r.dueDate() ? 1 : -1) : (l.dueDate() < r.dueDate() ? 1 : -1) };\r\n\t        self.todoSort = function (l, r) {\r\n\t            // Primary sort property\r\n\t            var p1 = l.category() ? l.category().name() : '';\r\n\t            var p2 = r.category() ? r.category().name() : '';\r\n\r\n\t            // Secondary sort property\r\n\t            var o1 = l.title();\r\n\t            var o2 = r.title();\r\n\t            \r\n\t            if (p1 != p2) {\r\n\t                if (p1 < p2) return 1;\r\n\t                if (p1 > p2) return -1;\r\n\t                return 0;\r\n\t            }\r\n\t            if (o1 < o2) return 1;\r\n\t            if (o1 > o2) return -1;\r\n\t            return 0;\r\n\t        };\r\n            self.modalShowing = ko.observable(false);\r\n            self.modalEntity = ko.observable(new ModalEntity(self.modalShowing));\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t*\tused for keeping a snapshot of the original selected program ids\r\n\t\t\t*\tfor this todo. this is part of a workaround for restoring the values when the user cancel to close the todo edit modal. \r\n\t\t\t*\t@property originalProgramIds {array}\t\t\t\t\r\n\t\t\t*\t\t\t\r\n\t\t\t*/\r\n\t\t\tself.originalProgramIds = ko.observableArray([]);\r\n    \t}\r\n\t\t\r\n        // All the available columns\r\n    \tvar allColumns = [\r\n            new Column('priority', 'Priority', 'span2', 'priority.id', 'Priority'),\r\n    \t\tnew Column('status', 'Status', 'span2', 'status.id'),\r\n            new Column('priority-small', 'Priority', 'span1', 'priority.id', 'Priority'),\r\n            new Column('status-small', 'Status', 'span1', 'status.id'),\r\n    \t\tnew Column('patient', 'Individual','span2', 'patientDetails.lastName', true),\r\n    \t\tnew Column('category', 'Category','span2', 'category.name', true ),\r\n            new Column('category-small', 'Category','span1', 'category.name', true ),\r\n    \t\tnew Column('title', 'Title','span4', 'title', 'Title'),\r\n            new Column('title-small', 'Title','span3', 'title', 'Title'),\r\n    \t\tnew Column('duedate', 'Due Date','span2', 'dueDate', 'DueDate'),\r\n    \t\tnew Column('assignedto', 'Assigned To','span2', 'assignedTo.preferredName', true),\r\n            new Column('closedon', 'Date','span2', 'closedDate', 'ClosedDate'),\r\n            new Column('closedon-small', 'Date','span1', 'closedDate', 'ClosedDate'),\r\n            new Column('updatedon', 'Date','span2', 'updatedOn', 'UpdatedOn'),\r\n            new Column('updatedon-small', 'Date', 'span1', 'updatedOn', 'UpdatedOn')\r\n    \t];\r\n        \r\n        var patientEndPoint = ko.computed(function () {\r\n            if(!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'patient', 'Patient');\r\n        });\r\n\r\n        // Endpoint to use for getting the current patient's programs\r\n        var patientProgramEndPoint = ko.computed(function () {\r\n            if(!session.currentUser()) {\r\n                return false;\r\n            }\r\n            return new servicesConfig.createEndPoint('1.0', session.currentUser().contracts()[0].number(), 'Patient', 'Program');\r\n        });    \t\r\n\t\t\r\n        ctor.prototype.activate = function (data) {\r\n    \t\tvar self = this;\r\n    \t\tself.todos = data.todos;\r\n            self.selectedSortColumn = data.selectedSortColumn;\r\n            self.toggleSort = data.toggleSort;\r\n            self.canSort = data.canSort ? data.canSort : false;\r\n\t\t\tself.isBackendSort = data.isBackendSort ? data.isBackendSort : false;\r\n\t\t\tself.todosReloading = data.todosReloading ? data.todosReloading : ko.observable(false);\r\n\t\t\t\r\n\t\t\t//dont allow sorting on category name and individual name since this view's data has backend sorting. \r\n\t\t\t//\tfor now - backend sorting cannot sort on related collections properties as category name in a todo query.\r\n\t\t\tvar column = findColumnByName('assignedto');\r\n\t\t\tif( column ){\r\n\t\t\t\tcolumn.backendSort = !self.isBackendSort;\r\n\t\t\t}\r\n\t\t\tcolumn = findColumnByName('patient');\r\n\t\t\tif( column ){\r\n\t\t\t\tcolumn.backendSort = !self.isBackendSort;;\r\n\t\t\t}\r\n\t\t\tcolumn = findColumnByName('category');\r\n\t\t\tif( column ){\r\n\t\t\t\tcolumn.backendSort = !self.isBackendSort;;\r\n\t\t\t}\r\n\t\t\tcolumn = findColumnByName('category-small');\r\n\t\t\tif( column ){\r\n\t\t\t\tcolumn.backendSort = !self.isBackendSort;;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tself.loadMoreTodos = data.loadMoreTodos;\r\n\t\t\tself.canLoadMoreTodos = data.canLoadMoreTodos;\r\n\t\t\t// self.loadPrevTodos = data.loadPrevTodos;\r\n\t\t\t// self.canLoadPrevTodos = data.canLoadPrevTodos;\r\n\t\t\tself.maxToToDosLoaded = data.maxToToDosLoaded;\r\n            self.saveOverride = function () {\r\n                // If patient has been removed - clear all associated programs:\r\n                if (self.modalEntity().todo() && self.modalEntity().todo().programIds().length > 0 && !self.modalEntity().todo().patientId()) {                    \r\n\t\t\t\t\tself.modalEntity().todo().programIds.removeAll();                    \r\n                }\r\n                datacontext.saveToDo(self.modalEntity().todo(), 'Update').then(saveCompleted);\r\n\r\n                function saveCompleted() {\r\n                    self.modalEntity().todo().isNew(false);\r\n\t\t\t\t\tself.modalEntity().todo().clearDirty();\r\n                    self.modalEntity().todo().entityAspect.acceptChanges();\r\n\t\t\t\t\tself.originalProgramIds.removeAll();\r\n                }\r\n            };          \r\n\r\n\t\t\t/**\r\n\t\t\t*\tclose todo modal dialog and cancel any changes if made.\r\n\t\t\t*\t\t\tnote: rejectChanges issue with complex type array have a known bug that clears todo.programIds.\r\n\t\t\t*\t\t\tthe workaround uses originalProgramIds observable.\t\t\t\r\n\t\t\t*\t@method\tcancelOverride \r\n\t\t\t*/\r\n\t\t\tself.cancelOverride = function () {\t\t\t\t\r\n\t\t\t\tif(self.modalEntity().todo().entityAspect.entityState.isAddedModifiedOrDeleted()){\r\n\t\t\t\t\tdatacontext.cancelEntityChanges(self.modalEntity().todo());\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t/**\t\r\n\t\t\t\t\t*\t@example datacontext.cancelEntityChanges\r\n\t\t\t\t\t*\tnote: breeze rejectChanges has a known issue with array of complex type being cleared, regardless if there were actual changes or not.\r\n\t\t\t\t\t*\t\tthe array will not get back to its original state.\r\n\t\t\t\t\t*\t(https://github.com/Breeze/breeze.js/issues/47)\r\n\t\t\t\t\t*\t\r\n\t\t\t\t\t*\t\t//debug:\r\n\t\t\t\t\t*\t\tconsole.log('cancelOverride after datacontext.cancelEntityChanges: todo.programIds = ' + self.modalEntity().todo().programIds().length + ' self.modalEntity().todo().entityAspect.entityState.name= ' + self.modalEntity().todo().entityAspect.entityState.name);\r\n\t\t\t\t\t*\t\r\n\t\t\t\t\t*\tfor todo.programIds - as a workaround/correction we will use the originalProgramIds to restore the original programIds:\r\n\t\t\t\t\t*\r\n\t\t\t\t\t*\t\tvar progIds = self.modalEntity().todo().programIds();\r\n\t\t\t\t\t*\t\tko.utils.arrayPushAll(progIds, self.originalProgramIds());\r\n\t\t\t\t\t*/\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.modalEntity().todo().programIds.removeAll();\r\n\t\t\t\t\tvar progIds = self.modalEntity().todo().programIds();\t\t\t\t\t\r\n\t\t\t\t\tif(self.originalProgramIds().length > 0){\r\n\t\t\t\t\t\tko.utils.arrayPushAll(progIds, self.originalProgramIds());\r\n\t\t\t\t\t\tself.originalProgramIds.removeAll();\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//clear the entityAspect.entityState back to Unchanged state - to hide this correction:\r\n\t\t\t\t\tself.modalEntity().todo().entityAspect.setUnchanged();\t\r\n\r\n\t\t\t\t\t//breeze rejectChanges also misses to get the category /assignedTo properties back to its original state when originally it was cleared:\r\n\t\t\t\t\t//(we could also resolve this using a nullo obj):\r\n\t\t\t\t\tif(!self.modalEntity().todo().categoryId()){\r\n\t\t\t\t\t\tself.modalEntity().todo().category(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!self.modalEntity().todo().assignedToId()){\r\n\t\t\t\t\t\tself.modalEntity().todo().assignedTo(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.modalEntity().todo().clearDirty();\t\t\t\t\t\r\n\t\t\t\t}\t                \t\t\r\n            };\r\n\t\t\t\r\n    \t\t// A list of columns to display\r\n    \t\tself.columns = ko.computed(function () {\r\n    \t\t\tvar tempcols = [];\r\n    \t\t\tvar thesecols = data.columns();\r\n    \t\t\tko.utils.arrayForEach(thesecols, function (col) {\r\n    \t\t\t\tvar matchingCol = findColumnByName(col);\r\n    \t\t\t\tif (matchingCol) {\r\n    \t\t\t\t\ttempcols.push(matchingCol);\r\n    \t\t\t\t}\r\n    \t\t\t});\r\n                // If no columns are found, show a default set of columns\r\n                if (!tempcols) {\r\n                    tempcols = ['status','patient','category','title','duedate'];\r\n                }\r\n    \t\t\treturn tempcols;\r\n    \t\t});\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t*\topens a todo details modal view.\r\n\t\t\t*\t\tnote - we record the todo.programIds in originalProgramIds.\r\n\t\t\t*\t@method editToDo \t\t\t\r\n\t\t\t*\r\n\t\t\t*/\r\n    \t\tself.editToDo = function (todo) {\r\n                // If there is an associated patient object,\r\n                if (todo && todo.patientDetails() && todo.patientId()) {\r\n                    // Go get the program details, if not already loaded\r\n                    if (todo.patient() && todo.patient().programs().length === 0) {\r\n                        datacontext.getEntityList(null, patientProgramEndPoint().EntityType, patientProgramEndPoint().ResourcePath + todo.patientId() + '/Programs', null, null, true);\r\n                    } else {\r\n                        // Go select a patient by their Id.\r\n                        datacontext.getEntityById(null, todo.patientId(), patientEndPoint().EntityType, patientEndPoint().ResourcePath, true);\r\n                        // And get their programs\r\n                        datacontext.getEntityList(null, patientProgramEndPoint().EntityType, patientProgramEndPoint().ResourcePath + todo.patientId() + '/Programs', null, null, true);\r\n                    }\r\n                }\r\n\t\t\t\t\r\n\t\t\t\t//keep the original program ids\r\n\t\t\t\tself.originalProgramIds.removeAll();\r\n\t\t\t\tvar progIds = self.originalProgramIds();\r\n\t\t\t\tko.utils.arrayPushAll(progIds, todo.programIds());\r\n\t\t\t\tvar modalSettings = {\r\n\t\t\t\t\ttitle: 'Edit To Do',\r\n\t\t\t\t\trelatedPatientName: todo.patientName,\r\n\t\t\t\t\tentity: self.modalEntity, \r\n\t\t\t\t\ttemplatePath: 'viewmodels/templates/todo.edit', \r\n\t\t\t\t\tshowing:self.modalShowing , \r\n\t\t\t\t\tsaveOverride: self.saveOverride, \r\n\t\t\t\t\tcancelOverride: self.cancelOverride, \r\n\t\t\t\t\tdeleteOverride: null, \r\n\t\t\t\t\tclassOverride: null\r\n\t\t\t\t}\r\n\t\t\t\tself.modal = new modelConfig.modal(modalSettings);\r\n\t\t\t\ttodo.watchDirty();\t\r\n                self.modalEntity().todo(todo);\r\n                shell.currentModal(self.modal);\r\n                self.modalShowing(true);\r\n    \t\t}\r\n    \t\tself.computedTodos = ko.computed(function () {\r\n    \t\t\tko.utils.arrayForEach(self.todos(), function (td) {\r\n    \t\t\t\tif (!td.edit) {\r\n    \t\t\t\t\ttd.edit = function () {\r\n    \t\t\t\t\t\tself.editToDo(td);\r\n    \t\t\t\t\t}\r\n    \t\t\t\t}\r\n    \t\t\t});\r\n                // Filter out deleted todos\r\n                var finalTodos = ko.utils.arrayFilter(self.todos(), function (td) {\r\n                    return !td.deleteFlag();\r\n                });\r\n                //var temparray = self.todos().sort(self.todoSort);\r\n                //return temparray.sort(self.descendingDateSort);\r\n                return finalTodos;\r\n    \t\t});\r\n\t\t\tself.noDataFound = ko.computed( function(){\r\n\t\t\t\treturn (!self.todosReloading() && self.computedTodos().length == 0);\r\n\t\t\t});\r\n    \t}\r\n\r\n        /**\r\n\t\t*\tclearing KO subscriptions/computeds memory \t\t\r\n\t\t*\t@method detached\r\n\t\t*\t@example\t\r\n\t\t*\tfor subscriptions: \r\n\t\t*\t\t1. declare tokens collection:\tvar subscriptionTokens= [];\r\n\t\t*\t\t2. keep the returned token/s:\r\n\t\t*\t\r\n\t\t*\t\t\tvar token = something.subscribe(function (newValue) {...});\r\n\t\t*\t\t\r\n\t\t*\t\t3. dispose tokens:\r\n\t\t*\t\t\t\r\n\t\t*\t\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n\t\t*\t\t\t\ttoken.dispose();\r\n\t\t*\t\t\t});\r\n\t\t*\t@example\r\n\t\t*\tfor computeds:\r\n\t\t*\t\r\n\t\t*\t\tself.someComputed.dispose();\r\n\t\t*/\r\n        ctor.prototype.detached = function () {\r\n            var self = this;\r\n            // Clear out all of the subscriptions to dispose of this properly: computeds:\r\n            patientEndPoint.dispose();\r\n            patientProgramEndPoint.dispose();\r\n            //self.modalEntity().canSave.dispose(); remarked: causes timing issues\r\n            self.columns.dispose();\r\n            self.computedTodos.dispose();\r\n\t\t\tself.noDataFound.dispose();\t\r\n        };\r\n\r\n    \tfunction findColumnByName(name) {\r\n    \t\tvar match = ko.utils.arrayFirst(allColumns, function (allcol) {\r\n    \t\t\treturn allcol.name.toLowerCase() === name.toLowerCase();\r\n    \t\t});\r\n    \t\tif (!match) {\r\n    \t\t\tconsole.log('bad column name used - ', name);\r\n    \t\t}\r\n    \t\treturn match;\r\n    \t}\r\n\r\n    \tfunction Column(name, displayname, cssclass, sortprop, backendSort) {\r\n    \t\tvar self = this;\r\n    \t\tself.name = name;\r\n    \t\tself.displayName = displayname;\r\n            // If the name contains small,\r\n            if (name.substr(name.length - 5, 5) === 'small') {\r\n                self.path = 'views/templates/todo.' + name.substr(0, name.length - 6) + '.html';\r\n            } else {\r\n                self.path = 'views/templates/todo.' + name + '.html';                \r\n            }\r\n    \t\tself.cssClass = cssclass;\r\n            self.sortProperty = sortprop;\r\n\t\t\tself.backendSort = backendSort;\r\n    \t}\r\n\r\n    \treturn ctor;\r\n\r\n        function ModalEntity(modalShowing) {\r\n            var self = this;\r\n            self.todo = ko.observable();\r\n            self.canSaveObservable = ko.observable(true);\r\n            self.canSave = ko.computed({\r\n                read: function () {\r\n                    var todook = false;\r\n\t\t\t\t\tvar isShowing = modalShowing();\r\n\t\t\t\t\tvar todo = self.todo();\r\n\t\t\t\t\tif(!isShowing) return false;\r\n                    if (todo) {                        \r\n                        todook = todo.isValid();\r\n                    }\r\n                    return todook && self.canSaveObservable();\r\n                },\r\n                write: function (newValue) {\r\n                    self.canSaveObservable(newValue);\r\n                }\r\n            });\r\n            // Object containing parameters to pass to the modal\r\n            self.activationData = { todo: self.todo, canSave: self.canSave, showing: modalShowing  };\r\n        }\r\n\r\n\t});\n","(function () {\r\n    window.Visualization = (function () {\r\n\r\n        // Need to pass in the filters observable\r\n\r\n        function Visualization(selector, patients, rad_prop) {\r\n            var _this = this;\r\n            this.selector = selector;\r\n            this.patients = patients;\r\n            this.rad_prop = rad_prop;\r\n            this.svg = d3.select(this.selector);\r\n            this.color_scale = d3.scale.category10();\r\n            this.dynamic_radius = true;\r\n            this.filters = $('#filters :checkbox');\r\n            this.height = d3.min([$(this.svg.node()).parents('.body').width(), $(this.svg.node()).parents('.body').height()]);\r\n            this.padding = 15;\r\n            this.show_backgrounds = true;\r\n            this.width = this.height;\r\n            this.force = d3.layout.force().charge(-70).gravity(.05).size([this.width, this.height]).on('tick', function (e) {\r\n                return _this.tick(e);\r\n            });\r\n            this.filters.change(function () {\r\n                return _this.data_grouping();\r\n            });\r\n            this.filters.each(function (index, filter) {\r\n                return $(filter).parents('td').next('td').find('.indicator').css('background', _this.color_scale(index));\r\n            });\r\n            this.chart_setup();\r\n        }\r\n\r\n        Visualization.prototype.chart_setup = function () {\r\n            var _this = this;\r\n            this.patients.forEach(function (patient) {\r\n                return patient.radius = patient[_this.rad_prop] + 5;\r\n            });\r\n            this.svg.attr('height', this.height).attr('width', this.width);\r\n            this.svg.append('g').attr('class', 'placeholders');\r\n            this.svg.append('g').attr('class', 'nodes');\r\n            this.nodes = this.svg.select('g.nodes').selectAll('circle.node').data(this.patients).enter().append('svg:circle').attr('class', 'node').attr('r', function (d) {\r\n                return d.radius;\r\n            }).attr('cx', function (d) {\r\n                return d.x;\r\n            }).attr('cy', function (d) {\r\n                return d.y;\r\n            }).style('fill', function (d) {\r\n                return _this.color_scale(0);\r\n            }).style('opacity', '1');\r\n            return this.data_grouping();\r\n        };\r\n\r\n        Visualization.prototype.data_grouping = function () {\r\n            var active_filters, all_conditions, overlap_exists,\r\n              _this = this;\r\n            active_filters = $('#filters :checkbox:checked');\r\n            this.filters.not(':checked').prop('disabled', active_filters.length > 2);\r\n            active_filters.prop('disabled', active_filters.length < 2);\r\n            $.uniform.update(this.filters);\r\n            this.overlaps = [];\r\n            overlap_exists = function (overlap) {\r\n                var duplicate;\r\n                duplicate = false;\r\n                _.pluck(_this.overlaps, 'sets').forEach(function (set) {\r\n                    if (d3.max(set) === d3.max(overlap) && d3.min(set) === d3.min(overlap)) {\r\n                        return duplicate = true;\r\n                    }\r\n                });\r\n                return duplicate;\r\n            };\r\n            all_conditions = function (patient) {\r\n                var count;\r\n                count = 0;\r\n                _this.sets.forEach(function (set) {\r\n                    if (set.conditional(patient)) {\r\n                        return count++;\r\n                    }\r\n                });\r\n                return count === _this.sets.length;\r\n            };\r\n            this.sets = $.map(active_filters, function (group) {\r\n                var conditional, obj, patients;\r\n                group = $(group);\r\n                conditional = (function () {\r\n                    switch (group.data('comparator')) {\r\n                        case 'contains':\r\n                            return function (patient) {\r\n                                return patient[group.data('key')].indexOf(parseInt(group.val())) !== -1;\r\n                            };\r\n                        case 'equality':\r\n                            return function (patient) {\r\n                                return patient[group.data('key')];\r\n                            };\r\n                        case 'threshold':\r\n                            return function (patient) {\r\n                                return patient[group.data('key')] > group.val();\r\n                            };\r\n                    }\r\n                })();\r\n                patients = _this.patients.filter(function (patient) {\r\n                    return conditional(patient);\r\n                });\r\n                return obj = {\r\n                    id: group.val(),\r\n                    conditional: conditional,\r\n                    patients: patients,\r\n                    size: patients.length,\r\n                    color: group.parents('td').next('td').find('.indicator').css('background-color')\r\n                };\r\n            });\r\n            this.sets.forEach(function (group, group_index) {\r\n                return _this.sets.filter(function (d, i) {\r\n                    return i !== group_index;\r\n                }).forEach(function (set) {\r\n                    var patients, sets;\r\n                    patients = group.patients.filter(function (patient) {\r\n                        return set.conditional(patient);\r\n                    });\r\n                    if (_this.sets.length > 2) {\r\n                        _this.central_patients = _this.patients.filter(function (patient) {\r\n                            return all_conditions(patient);\r\n                        });\r\n                        patients = _.union(patients, _this.central_patients);\r\n                    }\r\n                    group.patients = _.difference(group.patients, patients);\r\n                    set.patients = _.difference(set.patients, patients);\r\n                    sets = [group_index, _this.sets.indexOf(set)].sort();\r\n                    if (!overlap_exists(sets)) {\r\n                        return _this.overlaps.push({\r\n                            patients: patients,\r\n                            sets: sets,\r\n                            size: patients.length,\r\n                            color: _this.color_mixer([group.color, set.color])\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            if (_.isEmpty(this.overlaps)) {\r\n                this.sets[0].x = this.width / 2;\r\n                this.sets[0].y = this.height / 2;\r\n                this.sets[0].radius = d3.min([this.width, this.height]) / 2;\r\n            } else {\r\n                this.sets = venn.venn(this.sets, this.overlaps, {\r\n                    layoutFunction: venn.classicMDSLayout\r\n                });\r\n                this.sets = venn.scaleSolution(this.sets, this.width, this.height, this.padding);\r\n            }\r\n            return this.patient_attractions();\r\n        };\r\n\r\n        Visualization.prototype.patient_attractions = function () {\r\n            var middle,\r\n              _this = this;\r\n            this.sets.forEach(function (set, index) {\r\n                var coords;\r\n                coords = {\r\n                    x: set.x,\r\n                    y: set.y\r\n                };\r\n                return _.intersection(_this.patients, set.patients).forEach(function (patient) {\r\n                    patient.bounds = [set];\r\n                    patient.cluster = set;\r\n                    return patient.color = set.color;\r\n                });\r\n            });\r\n            this.overlaps.forEach(function (overlap, index) {\r\n                overlap.groups = [_this.sets[overlap.sets[0]], _this.sets[overlap.sets[1]]];\r\n                _.extend(overlap, _this.lens_center(overlap.groups[0], overlap.groups[1]));\r\n                return _.intersection(_this.patients, overlap.patients).forEach(function (patient) {\r\n                    patient.bounds = overlap.groups;\r\n                    patient.cluster = overlap;\r\n                    return patient.color = overlap.color;\r\n                });\r\n            });\r\n            this.unscoped_patients = _.difference(this.patients, _.flatten(_.pluck(this.sets, 'patients')), _.flatten(_.pluck(this.overlaps, 'patients')));\r\n            this.unscoped_patients.forEach(function (patient) {\r\n                return patient.bounds = void 0;\r\n            });\r\n            _.where(this.patients, {\r\n                bounds: void 0\r\n            }).forEach(function (patient) {\r\n                return patient.cluster = {\r\n                    x: -1000,\r\n                    y: -1000\r\n                };\r\n            });\r\n            if (this.overlaps.length > 2) {\r\n                middle = this.circumcenter();\r\n                this.central_patients.forEach(function (patient) {\r\n                    patient.bounds = _this.sets;\r\n                    patient.cluster = middle;\r\n                    return patient.color = _this.color_mixer(_.pluck(_this.sets, 'color'));\r\n                });\r\n            }\r\n            return this.determine_radius();\r\n        };\r\n\r\n        Visualization.prototype.determine_radius = function () {\r\n            var area, gaps;\r\n            area = d3.sum(this.sets, function (d) {\r\n                return venn.circleArea(d.radius, d.radius);\r\n            });\r\n            gaps = d3.sum(this.patients, function (d) {\r\n                return d[this.rad_prop];\r\n            });\r\n            this.radius = Math.sqrt(area / gaps / Math.PI);\r\n            return this.node_animations();\r\n        };\r\n\r\n        Visualization.prototype.node_animations = function (sets, overlaps) {\r\n            var _this = this;\r\n            if (this.show_backgrounds) {\r\n                this.placeholders();\r\n            }\r\n            this.nodes.data(this.patients);\r\n            this.force.nodes(this.patients).start();\r\n            this.filter_patients();\r\n            return this.svg.on('click', function () {\r\n                var cluster, datum, duration, unscoped;\r\n                duration = 500;\r\n                datum = d3.select(d3.event.target).datum();\r\n                if (_this.nodes.filter(function (d) {\r\n                  return d === datum;\r\n                }).size() > 0) {\r\n                    cluster = _this.nodes.filter(function (d) {\r\n                        return d.cluster === datum.cluster;\r\n                    });\r\n                    cluster.transition().duration(duration).style('opacity', '1');\r\n                    unscoped = _this.nodes.filter(function (d) {\r\n                        return d.cluster !== datum.cluster;\r\n                    });\r\n                    unscoped.transition().duration(duration).style('opacity', '0.25');\r\n                    return _this.filter_patients(unscoped.data());\r\n                } else {\r\n                    _this.nodes.transition().duration(duration).style('opacity', '1');\r\n                    return _this.filter_patients();\r\n                }\r\n            });\r\n        };\r\n\r\n        Visualization.prototype.tick = function (e) {\r\n            var k, q,\r\n              _this = this;\r\n            q = d3.geom.quadtree(this.patients);\r\n            k = .1 * e.alpha;\r\n            this.patients.forEach(function (o, i) {\r\n                o.radius = _this.dynamic_radius ? 2 * o[_this.rad_prop] + 4 : _this.radius;\r\n                o.x += (o.cluster.x - o.x) * k;\r\n                o.y += (o.cluster.y - o.y) * k;\r\n                return q.visit(_this.contain(o));\r\n            });\r\n            return this.nodes.attr('cx', function (d) {\r\n                return d.x;\r\n            }).attr('cy', function (d) {\r\n                return d.y;\r\n            }).attr('r', function (d) {\r\n                return d.radius;\r\n            }).style('fill', function (d) {\r\n                return d.color;\r\n            });\r\n        };\r\n\r\n        Visualization.prototype.filter_patients = function (hide) {\r\n            var hidden_rows, patient_ids, table_rows;\r\n            if (hide == null) {\r\n                hide = this.unscoped_patients;\r\n            }\r\n            patient_ids = _.pluck(hide, 'id');\r\n            table_rows = $(this.svg.node()).parents('.column').next('.column').find('tbody tr');\r\n            hidden_rows = table_rows.filter(function (i) {\r\n                return _.contains(patient_ids, $(this).data('id'));\r\n            });\r\n            hidden_rows.css('display', 'none');\r\n            return table_rows.not(hidden_rows).css('display', '');\r\n        };\r\n\r\n        Visualization.prototype.placeholders = function () {\r\n            var placeholders;\r\n            placeholders = this.svg.select('g.placeholders').selectAll('circle.layout').data(this.sets);\r\n            placeholders.enter().append('svg:circle').attr('class', 'layout');\r\n            placeholders.attr('r', function (d) {\r\n                return d.radius;\r\n            }).attr('cx', function (d) {\r\n                return d.x;\r\n            }).attr('cy', function (d) {\r\n                return d.y;\r\n            }).attr('fill', function (d) {\r\n                return d.color;\r\n            });\r\n            return placeholders.exit().remove();\r\n        };\r\n\r\n        /*\r\n            # FUNCTIONS\r\n        */\r\n        \r\n        Visualization.prototype.cartesian_to_polar = function (point, center) {\r\n            return {\r\n                angle: Math.atan2(point.y - center.y, point.x - center.x),\r\n                magnitude: venn.distance(point, center)\r\n            };\r\n        };\r\n\r\n        Visualization.prototype.circumcenter = function () {\r\n            var functions, intx,\r\n              _this = this;\r\n            functions = this.overlaps.map(function (overlap) {\r\n                overlap.points = venn.circleCircleIntersection(overlap.groups[0], overlap.groups[1]);\r\n                overlap.slope = _this.slope(overlap.points[0], overlap.points[1]);\r\n                overlap.midpoint = _this.midpoint(overlap.points[0], overlap.points[1]);\r\n                return overlap;\r\n            });\r\n            functions = functions.filter(function (overlap) {\r\n                return overlap.slope !== void 0;\r\n            });\r\n            functions = functions.map(function (overlap) {\r\n                overlap.yint = overlap.points[0].y - overlap.slope * overlap.points[0].x;\r\n                return overlap;\r\n            });\r\n            intx = ((-functions[1].slope * functions[1].points[0].x) + functions[1].points[0].y + (functions[0].slope * functions[0].points[0].x) - functions[0].points[0].y) / (functions[0].slope - functions[1].slope);\r\n            return {\r\n                x: intx,\r\n                y: functions[0].slope * intx + functions[0].yint\r\n            };\r\n        };\r\n\r\n        Visualization.prototype.collide = function (node) {\r\n            var nx1, nx2, ny1, ny2, r;\r\n            r = node.radius;\r\n            nx1 = node.x - r;\r\n            nx2 = node.x + r;\r\n            ny1 = node.y - r;\r\n            ny2 = node.y + r;\r\n            return function (quad, x1, y1, x2, y2) {\r\n                var l, x, y;\r\n                if (quad.point && quad.point !== node) {\r\n                    x = node.x - quad.point.x;\r\n                    y = node.y - quad.point.y;\r\n                    l = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\r\n                    r = 1.05 * (node.radius + quad.point.radius);\r\n                    if (l < r) {\r\n                        l = (l - r) / l * .5;\r\n                        node.x -= x *= l;\r\n                        node.y -= y *= l;\r\n                        quad.point.x += x;\r\n                        quad.point.y += y;\r\n                    }\r\n                }\r\n                return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\r\n            };\r\n        };\r\n\r\n        Visualization.prototype.color_mixer = function (colors) {\r\n            var color,\r\n              _this = this;\r\n            color = Color(colors.pop());\r\n            colors.forEach(function (string) {\r\n                return color.mix(Color(string));\r\n            });\r\n            if (colors.length > 1) {\r\n                color.darken(0.35);\r\n            }\r\n            return color.rgbString();\r\n        };\r\n\r\n        Visualization.prototype.contain = function (patient) {\r\n            var point,\r\n              _this = this;\r\n            point = {\r\n                x: patient.x,\r\n                y: patient.y\r\n            };\r\n            if (typeof patient.bounds !== 'undefined') {\r\n                point = this.exclude(patient, point);\r\n                patient.bounds.forEach(function (bound) {\r\n                    var coord;\r\n                    coord = _this.cartesian_to_polar(point, bound);\r\n                    return point = _this.polar_to_cartesian(coord.angle, Math.min(coord.magnitude, bound.radius - _this.padding), bound);\r\n                });\r\n            }\r\n            patient.x = point.x;\r\n            patient.y = point.y;\r\n            return this.collide(patient);\r\n        };\r\n\r\n        Visualization.prototype.exclude = function (patient, point) {\r\n            var inverse,\r\n              _this = this;\r\n            inverse = _.difference(this.sets, patient.bounds);\r\n            inverse.forEach(function (condition) {\r\n                var coord;\r\n                coord = _this.cartesian_to_polar(point, condition);\r\n                return point = _this.polar_to_cartesian(coord.angle, Math.max(coord.magnitude, condition.radius + _this.padding), condition);\r\n            });\r\n            return point;\r\n        };\r\n\r\n        Visualization.prototype.lens_center = function (c1, c2) {\r\n            var points;\r\n            points = venn.circleCircleIntersection(c1, c2);\r\n            return this.midpoint(points[0], points[1]);\r\n        };\r\n\r\n        Visualization.prototype.midpoint = function (p1, p2) {\r\n            return {\r\n                x: (p1.x + p2.x) / 2,\r\n                y: (p1.y + p2.y) / 2\r\n            };\r\n        };\r\n\r\n        Visualization.prototype.slope = function (p1, p2) {\r\n            [p1, p2].forEach(function (p) {\r\n                p.x = Math.floor(p.x);\r\n                return p.y = Math.floor(p.y);\r\n            });\r\n            if (p2.x === p1.x) {\r\n                return void 0;\r\n            } else {\r\n                return (p2.y - p1.y) / (p2.x - p1.x);\r\n            }\r\n        };\r\n\r\n        Visualization.prototype.polar_to_cartesian = function (theta, radius, offset) {\r\n            if (offset == null) {\r\n                offset = {\r\n                    x: 0,\r\n                    y: 0\r\n                };\r\n            }\r\n            return {\r\n                x: (Math.cos(theta) * radius) + offset.x,\r\n                y: (Math.sin(theta) * radius) + offset.y\r\n            };\r\n        };\r\n\r\n        return Visualization;\r\n\r\n    })();\r\n\r\n}).call(this);\r\n\ndefine(\"viewmodels/venn/patient.venn\", function(){});\n\n","define('widgets/chsnmultiple/viewmodel',['durandal/composition'], function (composition) {\r\n\r\n    var ctor = function () {\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.options = self.settings.options;\r\n        self.selectedValue = self.settings.value;\r\n        self.text = self.settings.text;\r\n        self.label = self.settings.label;\r\n        self.idValue = self.settings.idValue;\r\n        self.computedOptions = ko.computed(function () {\r\n            var thisList = ko.unwrap(self.options);\r\n            ko.utils.arrayForEach(thisList, function (item) {\r\n                // Create a property to dynamically set the showing property\r\n                item.thisText = ko.computed(item[self.text]);\r\n            });\r\n            return thisList;\r\n        });\r\n        self.computedLabel = ko.computed(function () {\r\n            if (self.selectedValue()) {\r\n                if (self.idValue) {\r\n                    var thisList = ko.unwrap(self.options);\r\n                    var thisItem = ko.utils.arrayFirst(thisList, function (item) {\r\n                        return (item[self.idValue]() === self.selectedValue());\r\n                    });\r\n                    if (!thisItem) {\r\n                        return null;\r\n                    }\r\n                    return thisItem[self.text]();\r\n                }\r\n                return self.selectedValue()[self.text]();\r\n            }\r\n            return 'Choose...';\r\n        });\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n    };\r\n\r\n    return ctor;\r\n});\n","/**\r\n*\t@module\tviewmodel - chsnsingle view model wrapps the chosen plugin (see \"chosen\" binding handler in bindings.js)\r\n*\r\n*\t@param\tisCancel - optional: if set to true it will show x button to clear the selected value.\r\n*\t@param\tisSearch - optional: if set to true it will show a search box (typeahea).\r\n*\t@param\tstickeySearchItemText - optional: string, must have isSearch set, expected string should be the text of one of the selection options.\r\n*\t\t\tthis will force the stickey item to keep showing in the search results. (example usage - \"add new\" item).\r\n*\r\n*\t@param\tselectedValue\r\n*\t@param\toptions\r\n*\t@param\ttext - the property holding the text to present for every option object.\r\n*\t@param\tcaption - optional: text to show when no selection.\r\n*\t@param\tisFocused - boolean/observable optional: to dynamically control the focus set an observable. statically - boolean value.\r\n*\t@param\tsearchQueryText - optional, observable: to expose the value of the typed search query.\r\n*/\r\ndefine('widgets/chsnsingle/viewmodel',['durandal/composition'], function (composition) {\r\n\r\n\tvar subscriptionTokens= [];\r\n\tvar self = this;\r\n\r\n\tvar ctor = function () {\r\n    };\r\n\r\n\t/**\r\n\t*\t@method compositionComplete - after data binding and composition completed.\r\n\t*\t\t\tpurpose: when a search box is applied (isSearch = true), and if there is a stickey option applied (stickeySearchItemText),\r\n\t*\t\t\t\t\twe need to keep the sticky item in the chosen-results ul list, even if it does not match the search token.\r\n\t*\r\n\t*\t@param view - the given chsnsingle element (built by chosen plugin) now carries all the underlined dom.\r\n\t*/\r\n\tctor.prototype.compositionComplete = function(view, parent){\r\n\t\tvar self = this;\r\n\t\tif(ko.utils.unwrapObservable(self.isFocused)){\r\n\t\t\tself.selectElm = $(view).find('select');\r\n\t\t\tself.selectElm.trigger('chosen:activate');\r\n\t\t}\r\n\t\tif(!self.isSearch || !self.stickeySearchItemText){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tself.searchTokenInput = $(view).find('div.chosen-search input');\r\n\t\tself.ulSearchResults = $(view).find('ul.chosen-results');\r\n\r\n\t\tif(!self.searchTokenInput){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar stickeyOption = $(view).children('select').children('option:contains('+ self.stickeySearchItemText +')');\r\n\t\tself.stickeyIndex = stickeyOption.index();\r\n\r\n\t\t//subscribe to the search box content changes\r\n\t\t$(self.searchTokenInput).on('change keyup paste', function(event){\r\n\t\t\tvar newValue = $(this).val();\r\n\t\t\tif(ko.isObservable(self.searchQueryText)){\r\n\t\t\t\tself.searchQueryText(newValue);\t//expose the query text\r\n\t\t\t}\r\n\t\t\tif(newValue && newValue.length > 0 || event.type === 'paste' || event.type === 'cut'){\r\n\t\t\t\t//query changed\r\n\t\t\t\tvar highlightIt = false;\r\n\t\t\t\tvar keyCode = event.which || event.keyCode;\r\n\t\t\t\tif(self.ulSearchResults.children('.no-results').length == 1){\r\n\t\t\t\t\t//there are no matching results\r\n\t\t\t\t\thighlightIt = true;\r\n\t\t\t\t\tif(keyCode == 40){ //down\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!addStickySearchResultItem(highlightIt)){\r\n\t\t\t\t\t//stickey item was already in the results\r\n\t\t\t\t\tif(keyCode == 13){ //enter\r\n\t\t\t\t\t\tif(self.ulSearchResults.children().length == 2 && highlightIt){\r\n\t\t\t\t\t\t\t//select the sticky item: self.stickeyIndex\r\n\t\t\t\t\t\t\tif(self.stickeyIndex && self.stickeyIndex > 0 && self.options && self.options.length > 0){\r\n\t\t\t\t\t\t\t\tif(self.idValue){\r\n\t\t\t\t\t\t\t\t\tself.selectedValue(self.options[self.stickeyIndex -1][self.idValue]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tself.selectedValue(self.options[self.stickeyIndex -1]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(event.type === 'paste' || event.type === 'cut'){\r\n\t\t\t\tsetTimeout(function(){ addStickySearchResultItem(); }, 100);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction addStickySearchResultItem(highlightIt){\r\n\t\t\tvar added = false;\r\n\t\t\tvar addNewElm = $(self.ulSearchResults).children('li:contains(' + self.stickeySearchItemText + ')');\r\n\t\t\tif(addNewElm.length == 0){\r\n\t\t\t\tvar highlight = highlightIt? 'highlighted' : '';\r\n\t\t\t\t//add the stickey \"-add new-\" option to the end of the chosen-results box:\r\n\t\t\t\tself.ulSearchResults.append('<li class=\"active-result ' + highlight + '\" data-option-array-index=\"' + self.stickeyIndex + '\">' + self.stickeySearchItemText + '</li>');\r\n\t\t\t\tadded = true;\r\n\t\t\t}\r\n\t\t\treturn added;\r\n\t\t}\r\n\t}\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n      var self = this;\r\n      self.settings = settings;\r\n      self.options = self.settings.options;\r\n      self.selectedValue = self.settings.value;\r\n      self.text = self.settings.text;\r\n      self.label = self.settings.label;\r\n      self.idValue = self.settings.idValue;\r\n      self.disabled = self.settings.disabled;\r\n      self.isRequired = self.settings.isRequired;\r\n      self.caption = self.settings.caption ? self.settings.caption : 'Choose one';\r\n\t\t\tself.isCancel = self.settings.isCancel ? self.settings.isCancel : false;\r\n\t\t\tself.isSearch = self.settings.isSearch ? self.settings.isSearch : false;\r\n\t\t\tself.searchQueryText = self.settings.searchQueryText;\r\n\t\t\tself.stickeySearchItemText = self.settings.stickeySearchItemText? self.settings.stickeySearchItemText : null;\t//\"-Add New-\";\r\n\t\t\tself.title = self.settings.title? self.settings.title: null;\r\n\t\t\tself.isFocused = self.settings.isFocused? self.settings.isFocused : null;\r\n      self.isInvalid = ko.computed(function () {\r\n        return self.isRequired && !self.selectedValue();\r\n      });\r\n      self.computedOptions = ko.computed(function () {\r\n        var thisList = ko.unwrap(self.options);\r\n        ko.utils.arrayForEach(thisList, function (item) {\r\n\t        // Create a property to dynamically set the showing property\r\n          if (ko.isObservable(item[self.text])) {\r\n            item.thisText = ko.computed(item[self.text]);\r\n          } else {\r\n            item.thisText = ko.computed(function () { return item[self.text]; });\r\n          }\r\n        });\r\n        return thisList;\r\n      });\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n    };\r\n\r\n\tctor.prototype.detached = function() {\r\n\t\tvar self = this;\r\n\t\tko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n\t\t\ttoken.dispose();\r\n\t\t});\r\n\t\tself.isInvalid.dispose();\r\n\t\t$(self.searchTokenInput).remove();\r\n\t}\r\n    return ctor;\r\n});\n","define('widgets/chsnsingledark/viewmodel',['durandal/composition'], function (composition) {\r\n\r\n    var ctor = function () {\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.options = self.settings.options;\r\n        self.selectedValue = self.settings.value;\r\n        self.text = self.settings.text;\r\n        self.label = self.settings.label;\r\n        self.idValue = self.settings.idValue;\r\n        self.disabled = self.settings.disabled;\r\n        self.caption = self.settings.caption ? self.settings.caption : 'Choose one';\r\n        self.computedOptions = ko.computed(function () {\r\n            var thisList = ko.unwrap(self.options);\r\n            ko.utils.arrayForEach(thisList, function (item) {\r\n                // Create a property to dynamically set the showing property\r\n                if (ko.isObservable(item[self.text])) {\r\n                    item.thisText = ko.computed(item[self.text]);\r\n                } else {\r\n                    item.thisText = ko.computed(function () { return item[self.text]; });\r\n                }\r\n            });\r\n            return thisList;\r\n        });\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n    };\r\n\r\n    return ctor;\r\n});\n","/*\r\n*\ta widget control for multiselect.\r\n*\r\n*\t@module\tmultiselect\r\n*/\r\n\r\ndefine('widgets/multiselect/viewmodel',['durandal/composition'], function (composition) {\r\n\r\n    var datacontext;\r\n\r\n    var ctor = function () {\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.canClose = ko.observable(false);\r\n        self.showing = ko.observable(false);\r\n\t\tself.isInFocus = ko.observable(false);\t//used for closing the chosen-drop options box when blur. the focus is bound to the input box.\r\n        self.options = self.settings.options;\r\n        self.selectedValues = self.settings.values;\r\n        self.isRequired = self.settings.isRequired;\r\n        self.text = self.settings.text;\r\n        self.label = self.settings.label;\r\n        self.idValue = self.settings.idValue;\r\n        self.stringValue = self.settings.stringValue;\r\n        self.computedOptions = ko.computed(function () {\r\n            var thisList = self.options();\r\n            ko.utils.arrayForEach(thisList, function (item) {\r\n                item.thisText = ko.computed(item[self.text]);\r\n            });\r\n            return thisList;\r\n        }).extend({throttle: 50});\r\n        self.checkForIdValue = function (idvalue) {\r\n            var thisMatch = ko.utils.arrayFirst(self.selectedValues(), function (selectedValue) {\r\n                return selectedValue.id() === idvalue;\r\n            });\r\n            if (thisMatch) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        self.computedLabel = ko.computed(function () {\r\n            if (self.selectedValues()) {\r\n                return self.selectedValues().length + ' selected.';\r\n            }\r\n            return 'Choose...';\r\n        }).extend({throttle: 50});\r\n        self.selectOption = function (sender) {\r\n\t\t\tself.stopClosing();\t//prevent the chosen-drop from closing\t\t\r\n            checkDataContext();\r\n            // Use array first here to see if it is a duplicate\r\n            var foundComplexType = ko.utils.arrayFirst(self.selectedValues(), function (selectedValue) {\r\n                return selectedValue.id() === sender.id();\r\n            });\r\n            if (foundComplexType) {\r\n                var thisIndex = self.selectedValues().indexOf(foundComplexType);\r\n                if (thisIndex > -1) {\r\n                    self.selectedValues.splice(thisIndex, 1);\r\n                } else {\r\n                    self.selectedValues.remove(foundComplexType);\r\n                }\r\n            }\r\n            else {\r\n                var theseParameters = { id: sender.id() };\r\n                // Create one to use from the sender\r\n                thisComplexType = datacontext.createComplexType('Identifier', theseParameters);\r\n                self.selectedValues.push(thisComplexType);\r\n            }\r\n\t\t\t//since the selection of an option is also a blur (lost focus) on the input box of the control,\r\n\t\t\t//we need to keep the focus on the control so the chosen-drop will stay open:\r\n\t\t\tself.isInFocus(true);\t\t\t\t\t\t\r\n        };\r\n\t\t/*\r\n\t\t*\tcomputed to track the blur (lost focus) of the multiselect in order to close the chosen-drop if it is visible (showing).\r\n\t\t*\t@method inFocusTracker\r\n\t\t*/\r\n\t\tself.inFocusTracker = ko.computed( function(){\t\t\t\r\n\t\t\tvar isInFocus = self.isInFocus();\r\n\t\t\tvar showing = self.showing();\r\n\t\t\tif( !isInFocus && showing ){\t\t\t\t\t\t\t\t\r\n\t\t\t\tself.startClosing();\r\n\t\t\t}\t\t\t\r\n\t\t}).extend({throttle: 50});\r\n\r\n        self.isDisabled = ko.computed(function () {\r\n            var thisState = false;\r\n            if (self.settings.disabled) {\r\n                thisState = self.settings.disabled;\r\n            }\r\n            return thisState;\r\n        }).extend({throttle: 50});\r\n        self.isInvalid = ko.computed(function () {\r\n            return self.isRequired && self.selectedValues().length === 0;\r\n        }).extend({throttle: 50});\r\n    };\r\n\r\n    ctor.prototype.toggleDropdown = function () {\r\n        var self = this;\r\n        if (self.computedOptions().length !== 0 && !self.isDisabled()) {\r\n            self.showing(!self.showing());\r\n        }\r\n    };\r\n\r\n\t/*\r\n\t*\tclose the chosen-drop after a blur. the closing is delayed by a timeout since when clicking to select an option, \r\n\t*\twe have a temporary short lost focus event, and we do not want it to close. this is corrected by the selectOption \r\n\t*\tfunction as it calls stopClosing to reset canClose(false) and sets the focus back isInFocus(true) during this delay.\r\n\t*\tthe isInFocus is bound to the input element in the control, as other elements will not track it very well.\r\n\t*\t@method startClosing\r\n\t*/\r\n    ctor.prototype.startClosing = function () {\r\n        var self = this;\r\n        self.canClose(true);\r\n\t\tsetTimeout( function(){\r\n\t\t\tif( self.canClose() ){\r\n\t\t\t\tself.showing(false);\r\n\t\t\t}\t\r\n\t\t}, 200);        \r\n    };\r\n\r\n    ctor.prototype.stopClosing = function () {\r\n        var self = this;\r\n        self.canClose(false);\t\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n    };\r\n\r\n\tctor.prototype.detached = function() {\r\n\t\tvar self = this;\r\n\t\tself.isInvalid.dispose();\r\n\t\tself.isDisabled.dispose();\r\n\t\tself.inFocusTracker.dispose();\r\n\t\tself.computedLabel.dispose();\t\r\n\t\tko.utils.arrayForEach(self.computedOptions, function (item) {\r\n\t\t\titem.thisText.dispose();\r\n\t\t});\r\n\t\tself.computedOptions.dispose();\r\n\t\t// ko.utils.arrayForEach(subscriptionTokens, function (token) {\r\n\t\t\t// token.dispose();\r\n\t\t// });\r\n\t}\r\n    return ctor;\r\n    \r\n    function checkDataContext() {\r\n        if (!datacontext) {\r\n            datacontext = require('services/datacontext');\r\n        }\r\n    }\r\n});\n","define('widgets/singleselect/viewmodel',['durandal/composition'], function (composition) {\r\n\r\n    var ctor = function () {\r\n    };\r\n\r\n    ctor.prototype.activate = function (settings) {\r\n        var self = this;\r\n        self.settings = settings;\r\n        self.canClose = ko.observable(false);\r\n        self.showing = ko.observable(false);\r\n        self.options = self.settings.options;\r\n        self.selectedValue = self.settings.value;\r\n        self.text = self.settings.text;\r\n        self.label = self.settings.label;\r\n        self.idValue = self.settings.idValue;\r\n        self.computedOptions = ko.computed(function () {\r\n            var thisList = ko.unwrap(self.options);\r\n            ko.utils.arrayForEach(thisList, function (item) {\r\n                item.thisText = ko.computed(item[self.text]);\r\n            });\r\n            return thisList;\r\n        });\r\n        self.computedLabel = ko.computed(function () {\r\n            if (self.selectedValue()) {\r\n                if (self.idValue) {\r\n                    var thisList = ko.unwrap(self.options);\r\n                    var thisItem = ko.utils.arrayFirst(thisList, function (item) {\r\n                        return (item[self.idValue]() === self.selectedValue());\r\n                    });\r\n                    if (!thisItem) {\r\n                        return null;\r\n                    }\r\n                    return thisItem[self.text]();\r\n                }\r\n                return self.selectedValue()[self.text]();\r\n            }\r\n            return 'Choose...';\r\n        });\r\n        self.selectOption = function (sender) {\r\n            // If there is an idValue to reference as the selected value,\r\n            if (self.idValue) {\r\n                // Set the value of that property to selectedValue\r\n                self.selectedValue(sender[self.idValue]());\r\n            }\r\n            // Or else,\r\n            else {\r\n                // Set directly to the value of the sender\r\n                self.selectedValue(sender);\r\n            }\r\n            self.showing(false);\r\n        };\r\n        self.checkClosing = ko.computed(function () {\r\n            if (self.canClose()) { self.showing(false); }\r\n        }).extend({ throttle: 1000 });\r\n        self.isDisabled = ko.computed(function () {\r\n            var thisState = false;\r\n            if (self.settings.disabled) {\r\n                thisState = self.settings.disabled;\r\n            }\r\n            return thisState;\r\n        });\r\n    };\r\n\r\n    ctor.prototype.toggleDropdown = function () {\r\n        var self = this;\r\n        if (self.computedOptions().length !== 0 && !self.isDisabled()) {\r\n            self.showing(!self.showing());\r\n        }\r\n    };\r\n\r\n    ctor.prototype.startClosing = function () {\r\n        var self = this;\r\n        self.canClose(false);\r\n        self.canClose(true);\r\n    };\r\n\r\n    ctor.prototype.stopClosing = function () {\r\n        var self = this;\r\n        self.canClose(false);\r\n    };\r\n\r\n    ctor.prototype.attached = function () {\r\n    };\r\n\r\n    return ctor;\r\n});\n","/**\r\n * The dialog module enables the display of message boxes, custom modal dialogs and other overlays or slide-out UI abstractions. Dialogs are constructed by the composition system which interacts with a user defined dialog context. The dialog module enforced the activator lifecycle.\r\n * @module dialog\r\n * @requires system\r\n * @requires app\r\n * @requires composition\r\n * @requires activator\r\n * @requires viewEngine\r\n * @requires jquery\r\n * @requires knockout\r\n */\r\ndefine('plugins/dialog',['durandal/system', 'durandal/app', 'durandal/composition', 'durandal/activator', 'durandal/viewEngine', 'jquery', 'knockout'], function (system, app, composition, activator, viewEngine, $, ko) {\r\n    var contexts = {},\r\n        dialogCount = ko.observable(0),\r\n        dialog;\r\n\r\n    /**\r\n     * Models a message box's message, title and options.\r\n     * @class MessageBox\r\n     */\r\n    var MessageBox = function (message, title, options, autoclose, settings) {\r\n        this.message = message;\r\n        this.title = title || MessageBox.defaultTitle;\r\n        this.options = options || MessageBox.defaultOptions;\r\n        this.autoclose = autoclose || false;\r\n        this.settings = $.extend({}, MessageBox.defaultSettings, settings);\r\n    };\r\n\r\n    /**\r\n     * Selects an option and closes the message box, returning the selected option through the dialog system's promise.\r\n     * @method selectOption\r\n     * @param {string} dialogResult The result to select.\r\n     */\r\n    MessageBox.prototype.selectOption = function (dialogResult) {\r\n        dialog.close(this, dialogResult);\r\n    };\r\n\r\n    /**\r\n     * Provides the view to the composition system.\r\n     * @method getView\r\n     * @return {DOMElement} The view of the message box.\r\n     */\r\n    MessageBox.prototype.getView = function () {\r\n        return viewEngine.processMarkup(MessageBox.defaultViewMarkup);\r\n    };\r\n\r\n    /**\r\n     * Configures a custom view to use when displaying message boxes.\r\n     * @method setViewUrl\r\n     * @param {string} viewUrl The view url relative to the base url which the view locator will use to find the message box's view.\r\n     * @static\r\n     */\r\n    MessageBox.setViewUrl = function (viewUrl) {\r\n        delete MessageBox.prototype.getView;\r\n        MessageBox.prototype.viewUrl = viewUrl;\r\n    };\r\n\r\n    /**\r\n     * The title to be used for the message box if one is not provided.\r\n     * @property {string} defaultTitle\r\n     * @default Application\r\n     * @static\r\n     */\r\n    MessageBox.defaultTitle = app.title || 'Application';\r\n\r\n    /**\r\n     * The options to display in the message box if none are specified.\r\n     * @property {string[]} defaultOptions\r\n     * @default ['Ok']\r\n     * @static\r\n     */\r\n    MessageBox.defaultOptions = ['Ok'];\r\n\r\n    \r\n    MessageBox.defaultSettings = { buttonClass: \"btn btn-default\", primaryButtonClass: \"btn-primary autofocus\", secondaryButtonClass: \"\", \"class\": \"modal-content messageBox\", style: null };\r\n\r\n    /**\r\n    * Sets the classes and styles used throughout the message box markup.\r\n    * @method setDefaults\r\n    * @param {object} settings A settings object containing the following optional properties: buttonClass, primaryButtonClass, secondaryButtonClass, class, style.\r\n    */\r\n    MessageBox.setDefaults = function (settings) {\r\n        $.extend(MessageBox.defaultSettings, settings);\r\n    };\r\n\r\n    MessageBox.prototype.getButtonClass = function ($index) {\r\n        var c = \"\";\r\n        if (this.settings) {\r\n            if (this.settings.buttonClass) {\r\n                c = this.settings.buttonClass;\r\n            }\r\n            if ($index() === 0 && this.settings.primaryButtonClass) {\r\n                if (c.length > 0) {\r\n                    c += \" \";\r\n                }\r\n                c += this.settings.primaryButtonClass;\r\n            }\r\n            if ($index() > 0 && this.settings.secondaryButtonClass) {\r\n                if (c.length > 0) {\r\n                    c += \" \";\r\n                }\r\n                c += this.settings.secondaryButtonClass;\r\n            }\r\n        }\r\n        return c;\r\n    };\r\n\r\n    MessageBox.prototype.getClass = function () {\r\n        if (this.settings) {\r\n            return this.settings[\"class\"];\r\n        }\r\n        return \"messageBox\";\r\n    };\r\n\r\n    MessageBox.prototype.getStyle = function () {\r\n        if (this.settings) {\r\n            return this.settings.style;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    MessageBox.prototype.getButtonText = function (stringOrObject) {\r\n        var t = $.type(stringOrObject);\r\n        if (t === \"string\") {\r\n            return stringOrObject;\r\n        }\r\n        else if (t === \"object\") {\r\n            if ($.type(stringOrObject.text) === \"string\") {\r\n                return stringOrObject.text;\r\n            } else {\r\n                system.error('The object for a MessageBox button does not have a text property that is a string.');\r\n                return null;\r\n            }\r\n        }\r\n        system.error('Object for a MessageBox button is not a string or object but ' + t + '.');\r\n        return null;\r\n    };\r\n\r\n    MessageBox.prototype.getButtonValue = function (stringOrObject) {\r\n        var t = $.type(stringOrObject);\r\n        if (t === \"string\") {\r\n            return stringOrObject;\r\n        }\r\n        else if (t === \"object\") {\r\n            if ($.type(stringOrObject.text) === \"undefined\") {\r\n                system.error('The object for a MessageBox button does not have a value property defined.');\r\n                return null;\r\n            } else {\r\n                return stringOrObject.value;\r\n            }\r\n        }\r\n        system.error('Object for a MessageBox button is not a string or object but ' + t + '.');\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * The markup for the message box's view.\r\n     * @property {string} defaultViewMarkup\r\n     * @static\r\n     */\r\n    MessageBox.defaultViewMarkup = [\r\n        '<div data-view=\"plugins/messageBox\" data-bind=\"css: getClass(), style: getStyle()\">',\r\n            '<div class=\"modal-header\">',\r\n                '<h3 data-bind=\"html: title\"></h3>',\r\n            '</div>',\r\n            '<div class=\"modal-body\">',\r\n                '<p class=\"message\" data-bind=\"html: message\"></p>',\r\n            '</div>',\r\n            '<div class=\"modal-footer\">',\r\n                '<!-- ko foreach: options -->',\r\n                '<button data-bind=\"click: function () { $parent.selectOption($parent.getButtonValue($data)); }, text: $parent.getButtonText($data), css: $parent.getButtonClass($index)\"></button>',\r\n                '<!-- /ko -->',\r\n                '<div style=\"clear:both;\"></div>',\r\n            '</div>',\r\n        '</div>'\r\n    ].join('\\n');\r\n\r\n    function ensureDialogInstance(objOrModuleId) {\r\n        return system.defer(function (dfd) {\r\n            if (system.isString(objOrModuleId)) {\r\n                system.acquire(objOrModuleId).then(function (module) {\r\n                    dfd.resolve(system.resolveObject(module));\r\n                }).fail(function (err) {\r\n                    system.error('Failed to load dialog module (' + objOrModuleId + '). Details: ' + err.message);\r\n                });\r\n            } else {\r\n                dfd.resolve(objOrModuleId);\r\n            }\r\n        }).promise();\r\n    }\r\n\r\n    /**\r\n     * @class DialogModule\r\n     * @static\r\n     */\r\n    dialog = {\r\n        /**\r\n         * The constructor function used to create message boxes.\r\n         * @property {MessageBox} MessageBox\r\n         */\r\n        MessageBox: MessageBox,\r\n        /**\r\n         * The css zIndex that the last dialog was displayed at.\r\n         * @property {number} currentZIndex\r\n         */\r\n        currentZIndex: 1050,\r\n        /**\r\n         * Gets the next css zIndex at which a dialog should be displayed.\r\n         * @method getNextZIndex\r\n         * @return {number} The next usable zIndex.\r\n         */\r\n        getNextZIndex: function () {\r\n            return ++this.currentZIndex;\r\n        },\r\n        /**\r\n         * Determines whether or not there are any dialogs open.\r\n         * @method isOpen\r\n         * @return {boolean} True if a dialog is open. false otherwise.\r\n         */\r\n        isOpen: ko.computed(function() {\r\n            return dialogCount() > 0;\r\n        }),\r\n        /**\r\n         * Gets the dialog context by name or returns the default context if no name is specified.\r\n         * @method getContext\r\n         * @param {string} [name] The name of the context to retrieve.\r\n         * @return {DialogContext} True context.\r\n         */\r\n        getContext: function (name) {\r\n            return contexts[name || 'default'];\r\n        },\r\n        /**\r\n         * Adds (or replaces) a dialog context.\r\n         * @method addContext\r\n         * @param {string} name The name of the context to add.\r\n         * @param {DialogContext} dialogContext The context to add.\r\n         */\r\n        addContext: function (name, dialogContext) {\r\n            dialogContext.name = name;\r\n            contexts[name] = dialogContext;\r\n\r\n            var helperName = 'show' + name.substr(0, 1).toUpperCase() + name.substr(1);\r\n            this[helperName] = function (obj, activationData) {\r\n                return this.show(obj, activationData, name);\r\n            };\r\n        },\r\n        createCompositionSettings: function (obj, dialogContext) {\r\n            var settings = {\r\n                model: obj,\r\n                activate: false,\r\n                transition: false\r\n            };\r\n\r\n            if (dialogContext.binding) {\r\n                settings.binding = dialogContext.binding;\r\n            }\r\n\r\n            if (dialogContext.attached) {\r\n                settings.attached = dialogContext.attached;\r\n            }\r\n\r\n            if (dialogContext.compositionComplete) {\r\n                settings.compositionComplete = dialogContext.compositionComplete;\r\n            }\r\n\r\n            return settings;\r\n        },\r\n        /**\r\n         * Gets the dialog model that is associated with the specified object.\r\n         * @method getDialog\r\n         * @param {object} obj The object for whom to retrieve the dialog.\r\n         * @return {Dialog} The dialog model.\r\n         */\r\n        getDialog: function (obj) {\r\n            if (obj) {\r\n                return obj.__dialog__;\r\n            }\r\n\r\n            return undefined;\r\n        },\r\n        /**\r\n         * Closes the dialog associated with the specified object.\r\n         * @method close\r\n         * @param {object} obj The object whose dialog should be closed.\r\n         * @param {object} results* The results to return back to the dialog caller after closing.\r\n         */\r\n        close: function (obj) {\r\n            var theDialog = this.getDialog(obj);\r\n            if (theDialog) {\r\n                var rest = Array.prototype.slice.call(arguments, 1);\r\n                theDialog.close.apply(theDialog, rest);\r\n            }\r\n        },\r\n        /**\r\n         * Shows a dialog.\r\n         * @method show\r\n         * @param {object|string} obj The object (or moduleId) to display as a dialog.\r\n         * @param {object} [activationData] The data that should be passed to the object upon activation.\r\n         * @param {string} [context] The name of the dialog context to use. Uses the default context if none is specified.\r\n         * @return {Promise} A promise that resolves when the dialog is closed and returns any data passed at the time of closing.\r\n         */\r\n        show: function (obj, activationData, context) {\r\n            var that = this;\r\n            var dialogContext = contexts[context || 'default'];\r\n\r\n            return system.defer(function (dfd) {\r\n                ensureDialogInstance(obj).then(function (instance) {\r\n                    var dialogActivator = activator.create();\r\n\r\n                    dialogActivator.activateItem(instance, activationData).then(function (success) {\r\n                        if (success) {\r\n                            var theDialog = instance.__dialog__ = {\r\n                                owner: instance,\r\n                                context: dialogContext,\r\n                                activator: dialogActivator,\r\n                                close: function () {\r\n                                    var args = arguments;\r\n                                    dialogActivator.deactivateItem(instance, true).then(function (closeSuccess) {\r\n                                        if (closeSuccess) {\r\n                                            dialogCount(dialogCount() - 1);\r\n                                            dialogContext.removeHost(theDialog);\r\n                                            delete instance.__dialog__;\r\n\r\n                                            if (args.length === 0) {\r\n                                                dfd.resolve();\r\n                                            } else if (args.length === 1) {\r\n                                                dfd.resolve(args[0]);\r\n                                            } else {\r\n                                                dfd.resolve.apply(dfd, args);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            };\r\n\r\n                            theDialog.settings = that.createCompositionSettings(instance, dialogContext);\r\n                            dialogContext.addHost(theDialog);\r\n\r\n                            dialogCount(dialogCount() + 1);\r\n                            composition.compose(theDialog.host, theDialog.settings);\r\n                        } else {\r\n                            dfd.resolve(false);\r\n                        }\r\n                    });\r\n                });\r\n            }).promise();\r\n        },\r\n        /**\r\n         * Shows a message box.\r\n         * @method showMessage\r\n         * @param {string} message The message to display in the dialog.\r\n         * @param {string} [title] The title message.\r\n         * @param {string[]} [options] The options to provide to the user.\r\n         * @param {boolean} [autoclose] Automatically close the the message box when clicking outside?\r\n         * @param {Object} [settings] Custom settings for this instance of the messsage box, used to change classes and styles.\r\n         * @return {Promise} A promise that resolves when the message box is closed and returns the selected option.\r\n         */\r\n        showMessage: function (message, title, options, autoclose, settings) {\r\n            if (system.isString(this.MessageBox)) {\r\n                return dialog.show(this.MessageBox, [\r\n                    message,\r\n                    title || MessageBox.defaultTitle,\r\n                    options || MessageBox.defaultOptions,\r\n                    autoclose || false,\r\n                    settings || {}\r\n                ]);\r\n            }\r\n\r\n            return dialog.show(new this.MessageBox(message, title, options, autoclose, settings));\r\n        },\r\n        /**\r\n         * Installs this module into Durandal; called by the framework. Adds `app.showDialog` and `app.showMessage` convenience methods.\r\n         * @method install\r\n         * @param {object} [config] Add a `messageBox` property to supply a custom message box constructor. Add a `messageBoxView` property to supply custom view markup for the built-in message box. You can also use messageBoxViewUrl to specify the view url.\r\n         */\r\n        install: function (config) {\r\n            app.showDialog = function (obj, activationData, context) {\r\n                return dialog.show(obj, activationData, context);\r\n            };\r\n\r\n            app.closeDialog = function () {\r\n                return dialog.close.apply(dialog, arguments);\r\n            };\r\n\r\n            app.showMessage = function (message, title, options, autoclose, settings) {\r\n                return dialog.showMessage(message, title, options, autoclose, settings);\r\n            };\r\n\r\n            if (config.messageBox) {\r\n                dialog.MessageBox = config.messageBox;\r\n            }\r\n\r\n            if (config.messageBoxView) {\r\n                dialog.MessageBox.prototype.getView = function () {\r\n                    return viewEngine.processMarkup(config.messageBoxView);\r\n                };\r\n            }\r\n\r\n            if (config.messageBoxViewUrl) {\r\n                dialog.MessageBox.setViewUrl(config.messageBoxViewUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @class DialogContext\r\n     */\r\n    dialog.addContext('default', {\r\n        blockoutOpacity: 0.2,\r\n        removeDelay: 200,\r\n        /**\r\n         * In this function, you are expected to add a DOM element to the tree which will serve as the \"host\" for the modal's composed view. You must add a property called host to the modalWindow object which references the dom element. It is this host which is passed to the composition module.\r\n         * @method addHost\r\n         * @param {Dialog} theDialog The dialog model.\r\n         */\r\n        addHost: function (theDialog) {\r\n            var body = $('body');\r\n            var blockout = $('<div class=\"modalBlockout\"></div>')\r\n                .css({ 'z-index': dialog.getNextZIndex(), 'opacity': this.blockoutOpacity })\r\n                .appendTo(body);\r\n\r\n            var host = $('<div class=\"modalHost\"></div>')\r\n                .css({ 'z-index': dialog.getNextZIndex() })\r\n                .appendTo(body);\r\n\r\n            theDialog.host = host.get(0);\r\n            theDialog.blockout = blockout.get(0);\r\n\r\n            if (!dialog.isOpen()) {\r\n                theDialog.oldBodyMarginRight = body.css(\"margin-right\");\r\n                theDialog.oldInlineMarginRight = body.get(0).style.marginRight;\r\n\r\n                var html = $(\"html\");\r\n                var oldBodyOuterWidth = body.outerWidth(true);\r\n                var oldScrollTop = html.scrollTop();\r\n                $(\"html\").css(\"overflow-y\", \"hidden\");\r\n                var newBodyOuterWidth = $(\"body\").outerWidth(true);\r\n                body.css(\"margin-right\", (newBodyOuterWidth - oldBodyOuterWidth + parseInt(theDialog.oldBodyMarginRight, 10)) + \"px\");\r\n                html.scrollTop(oldScrollTop); // necessary for Firefox\r\n            }\r\n        },\r\n        /**\r\n         * This function is expected to remove any DOM machinery associated with the specified dialog and do any other necessary cleanup.\r\n         * @method removeHost\r\n         * @param {Dialog} theDialog The dialog model.\r\n         */\r\n        removeHost: function (theDialog) {\r\n            $(theDialog.host).css('opacity', 0);\r\n            $(theDialog.blockout).css('opacity', 0);\r\n\r\n            setTimeout(function () {\r\n                ko.removeNode(theDialog.host);\r\n                ko.removeNode(theDialog.blockout);\r\n            }, this.removeDelay);\r\n\r\n            if (!dialog.isOpen()) {\r\n                var html = $(\"html\");\r\n                var oldScrollTop = html.scrollTop(); // necessary for Firefox.\r\n                html.css(\"overflow-y\", \"\").scrollTop(oldScrollTop);\r\n\r\n                if (theDialog.oldInlineMarginRight) {\r\n                    $(\"body\").css(\"margin-right\", theDialog.oldBodyMarginRight);\r\n                } else {\r\n                    $(\"body\").css(\"margin-right\", '');\r\n                }\r\n            }\r\n        },\r\n        attached: function (view) {\r\n            //To prevent flickering in IE8, we set visibility to hidden first, and later restore it\r\n            $(view).css(\"visibility\", \"hidden\");\r\n        },\r\n        /**\r\n         * This function is called after the modal is fully composed into the DOM, allowing your implementation to do any final modifications, such as positioning or animation. You can obtain the original dialog object by using `getDialog` on context.model.\r\n         * @method compositionComplete\r\n         * @param {DOMElement} child The dialog view.\r\n         * @param {DOMElement} parent The parent view.\r\n         * @param {object} context The composition context.\r\n         */\r\n        compositionComplete: function (child, parent, context) {\r\n            var theDialog = dialog.getDialog(context.model);\r\n            var $child = $(child);\r\n            var loadables = $child.find(\"img\").filter(function () {\r\n                //Remove images with known width and height\r\n                var $this = $(this);\r\n                return !(this.style.width && this.style.height) && !($this.attr(\"width\") && $this.attr(\"height\"));\r\n            });\r\n\r\n            $child.data(\"predefinedWidth\", $child.get(0).style.width);\r\n\r\n            var setDialogPosition = function (childView, objDialog) {\r\n                //Setting a short timeout is need in IE8, otherwise we could do this straight away\r\n                setTimeout(function () {\r\n                    var $childView = $(childView);\r\n\r\n                    objDialog.context.reposition(childView);\r\n\r\n                    $(objDialog.host).css('opacity', 1);\r\n                    $childView.css(\"visibility\", \"visible\");\r\n\r\n                    $childView.find('.autofocus').first().focus();\r\n                }, 1);\r\n            };\r\n\r\n            setDialogPosition(child, theDialog);\r\n            loadables.load(function () {\r\n                setDialogPosition(child, theDialog);\r\n            });\r\n\r\n            if ($child.hasClass('autoclose') || context.model.autoclose) {\r\n                $(theDialog.blockout).click(function () {\r\n                    theDialog.close();\r\n                });\r\n            }\r\n        },\r\n        /**\r\n         * This function is called to reposition the model view.\r\n         * @method reposition\r\n         * @param {DOMElement} view The dialog view.\r\n         */\r\n        reposition: function (view) {\r\n            var $view = $(view),\r\n                $window = $(window);\r\n\r\n            //We will clear and then set width for dialogs without width set \r\n            if (!$view.data(\"predefinedWidth\")) {\r\n                $view.css({ width: '' }); //Reset width\r\n            }\r\n            var width = $view.outerWidth(false),\r\n                height = $view.outerHeight(false),\r\n                windowHeight = $window.height() - 10, //leave at least 10 pixels free\r\n                windowWidth = $window.width() - 10, //leave at least 10 pixels free\r\n                constrainedHeight = Math.min(height, windowHeight),\r\n                constrainedWidth = Math.min(width, windowWidth);\r\n\r\n            $view.css({\r\n                'margin-top': (-constrainedHeight / 2).toString() + 'px',\r\n                'margin-left': (-constrainedWidth / 2).toString() + 'px'\r\n            });\r\n\r\n            if (height > windowHeight) {\r\n                $view.css(\"overflow-y\", \"auto\").outerHeight(windowHeight);\r\n            } else {\r\n                $view.css({\r\n                    \"overflow-y\": \"\",\r\n                    \"height\": \"\"\r\n                });\r\n            }\r\n\r\n            if (width > windowWidth) {\r\n                $view.css(\"overflow-x\", \"auto\").outerWidth(windowWidth);\r\n            } else {\r\n                $view.css(\"overflow-x\", \"\");\r\n\r\n                if (!$view.data(\"predefinedWidth\")) {\r\n                    //Ensure the correct width after margin-left has been set\r\n                    $view.outerWidth(constrainedWidth);\r\n                } else {\r\n                    $view.css(\"width\", $view.data(\"predefinedWidth\"));\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return dialog;\r\n});\r\n\n","/**\r\n * Enables common http request scenarios.\r\n * @module http\r\n * @requires jquery\r\n * @requires knockout\r\n */\r\ndefine('plugins/http',['jquery', 'knockout'], function ($, ko) {\r\n    /**\r\n     * @class HTTPModule\r\n     * @static\r\n     */\r\n    return {\r\n        /**\r\n         * The name of the callback parameter to inject into jsonp requests by default.\r\n         * @property {string} callbackParam\r\n         * @default callback\r\n         */\r\n        callbackParam: 'callback',\r\n        /**\r\n         * Converts the data to JSON.\r\n         * @method toJSON\r\n         * @param {object} data The data to convert to JSON.\r\n         * @return {string} JSON.\r\n         */\r\n        toJSON: function(data) {\r\n            return ko.toJSON(data);\r\n        },\r\n        /**\r\n         * Makes an HTTP GET request.\r\n         * @method get\r\n         * @param {string} url The url to send the get request to.\r\n         * @param {object} [query] An optional key/value object to transform into query string parameters.\r\n         * @param {object} [headers] The data to add to the request header.  It will be converted to JSON. If the data contains Knockout observables, they will be converted into normal properties before serialization.\r\n         * @return {Promise} A promise of the get response data.\r\n         */\r\n        get: function (url, query, headers) {\r\n            return $.ajax(url, { data: query, headers: ko.toJS(headers) });\r\n        },\r\n        /**\r\n         * Makes an JSONP request.\r\n         * @method jsonp\r\n         * @param {string} url The url to send the get request to.\r\n         * @param {object} [query] An optional key/value object to transform into query string parameters.\r\n         * @param {string} [callbackParam] The name of the callback parameter the api expects (overrides the default callbackParam).\r\n         * @param {object} [headers] The data to add to the request header.  It will be converted to JSON. If the data contains Knockout observables, they will be converted into normal properties before serialization.\r\n         * @return {Promise} A promise of the response data.\r\n         */\r\n        jsonp: function (url, query, callbackParam, headers) {\r\n            if (url.indexOf('=?') == -1) {\r\n                callbackParam = callbackParam || this.callbackParam;\r\n\r\n                if (url.indexOf('?') == -1) {\r\n                    url += '?';\r\n                } else {\r\n                    url += '&';\r\n                }\r\n\r\n                url += callbackParam + '=?';\r\n            }\r\n\r\n            return $.ajax({\r\n                url: url,\r\n                dataType: 'jsonp',\r\n                data: query,\r\n                headers: ko.toJS(headers)\r\n            });\r\n        },\r\n        /**\r\n         * Makes an HTTP PUT request.\r\n         * @method put\r\n         * @param {string} url The url to send the put request to.\r\n         * @param {object} data The data to put. It will be converted to JSON. If the data contains Knockout observables, they will be converted into normal properties before serialization.\r\n         * @param {object} [headers] The data to add to the request header.  It will be converted to JSON. If the data contains Knockout observables, they will be converted into normal properties before serialization.\r\n         * @return {Promise} A promise of the response data.\r\n         */\r\n        put:function(url, data, headers) {\r\n            return $.ajax({\r\n                url: url,\r\n                data: this.toJSON(data),\r\n                type: 'PUT',\r\n                contentType: 'application/json',\r\n                dataType: 'json',\r\n                headers: ko.toJS(headers)\r\n            });\r\n        },\r\n        /**\r\n         * Makes an HTTP POST request.\r\n         * @method post\r\n         * @param {string} url The url to send the post request to.\r\n         * @param {object} data The data to post. It will be converted to JSON. If the data contains Knockout observables, they will be converted into normal properties before serialization.\r\n         * @param {object} [headers] The data to add to the request header.  It will be converted to JSON. If the data contains Knockout observables, they will be converted into normal properties before serialization.\r\n         * @return {Promise} A promise of the response data.\r\n         */\r\n        post: function (url, data, headers) {\r\n            return $.ajax({\r\n                url: url,\r\n                data: this.toJSON(data),\r\n                type: 'POST',\r\n                contentType: 'application/json',\r\n                dataType: 'json',\r\n                headers: ko.toJS(headers)\r\n            });\r\n        },\r\n        /**\r\n         * Makes an HTTP DELETE request.\r\n         * @method remove\r\n         * @param {string} url The url to send the delete request to.\r\n         * @param {object} [query] An optional key/value object to transform into query string parameters.\r\n         * @param {object} [headers] The data to add to the request header.  It will be converted to JSON. If the data contains Knockout observables, they will be converted into normal properties before serialization.\r\n         * @return {Promise} A promise of the get response data.\r\n         */\r\n        remove:function(url, query, headers) {\r\n            return $.ajax({\r\n                url: url,\r\n                data: query,\r\n                type: 'DELETE',\r\n                headers: ko.toJS(headers)\r\n            });\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * Enables automatic observability of plain javascript object for ES5 compatible browsers. Also, converts promise properties into observables that are updated when the promise resolves.\r\n * @module observable\r\n * @requires system\r\n * @requires binder\r\n * @requires knockout\r\n */\r\ndefine('plugins/observable',['durandal/system', 'durandal/binder', 'knockout'], function(system, binder, ko) {\r\n    var observableModule,\r\n        toString = Object.prototype.toString,\r\n        nonObservableTypes = ['[object Function]', '[object String]', '[object Boolean]', '[object Number]', '[object Date]', '[object RegExp]'],\r\n        observableArrayMethods = ['remove', 'removeAll', 'destroy', 'destroyAll', 'replace'],\r\n        arrayMethods = ['pop', 'reverse', 'sort', 'shift', 'slice'],\r\n        additiveArrayFunctions = ['push', 'unshift'],\r\n        es5Functions = ['filter', 'map', 'reduce', 'reduceRight', 'forEach', 'every', 'some'],\r\n        arrayProto = Array.prototype,\r\n        observableArrayFunctions = ko.observableArray.fn,\r\n        logConversion = false,\r\n        changeDetectionMethod = undefined,\r\n        skipPromises = false,\r\n        shouldIgnorePropertyName;\r\n\r\n    /**\r\n     * You can call observable(obj, propertyName) to get the observable function for the specified property on the object.\r\n     * @class ObservableModule\r\n     */\r\n\r\n    if (!('getPropertyDescriptor' in Object)) {\r\n        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\r\n        var getPrototypeOf = Object.getPrototypeOf;\r\n\r\n        Object['getPropertyDescriptor'] = function(o, name) {\r\n            var proto = o, descriptor;\r\n\r\n            while(proto && !(descriptor = getOwnPropertyDescriptor(proto, name))) {\r\n                proto = getPrototypeOf(proto);\r\n            }\r\n\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n    function defaultShouldIgnorePropertyName(propertyName){\r\n        var first = propertyName[0];\r\n        return first === '_' || first === '$' || (changeDetectionMethod && propertyName === changeDetectionMethod);\r\n    }\r\n\r\n    function isNode(obj) {\r\n        return !!(obj && obj.nodeType !== undefined && system.isNumber(obj.nodeType));\r\n    }\r\n\r\n    function canConvertType(value) {\r\n        if (!value || isNode(value) || value.ko === ko || value.jquery) {\r\n            return false;\r\n        }\r\n\r\n        var type = toString.call(value);\r\n\r\n        return nonObservableTypes.indexOf(type) == -1 && !(value === true || value === false);\r\n    }\r\n\r\n    function createLookup(obj) {\r\n        var value = {};\r\n\r\n        Object.defineProperty(obj, \"__observable__\", {\r\n            enumerable: false,\r\n            configurable: false,\r\n            writable: false,\r\n            value: value\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    function makeObservableArray(original, observable, hasChanged) {\r\n        var lookup = original.__observable__, notify = true;\r\n\r\n        if(lookup && lookup.__full__){\r\n            return;\r\n        }\r\n\r\n        lookup = lookup || createLookup(original);\r\n        lookup.__full__ = true;\r\n\r\n        es5Functions.forEach(function (methodName) {\r\n            observable[methodName] = function () {\r\n                return arrayProto[methodName].apply(original, arguments);\r\n            };\r\n        });\r\n\r\n        observableArrayMethods.forEach(function(methodName) {\r\n            original[methodName] = function() {\r\n                notify = false;\r\n                var methodCallResult = observableArrayFunctions[methodName].apply(observable, arguments);\r\n                notify = true;\r\n                return methodCallResult;\r\n            };\r\n        });\r\n\r\n        arrayMethods.forEach(function(methodName) {\r\n            original[methodName] = function() {\r\n                if(notify){\r\n                    observable.valueWillMutate();\r\n                }\r\n\r\n                var methodCallResult = arrayProto[methodName].apply(original, arguments);\r\n\r\n                if(notify){\r\n                    observable.valueHasMutated();\r\n                }\r\n\r\n                return methodCallResult;\r\n            };\r\n        });\r\n\r\n        additiveArrayFunctions.forEach(function(methodName){\r\n            original[methodName] = function() {\r\n                for (var i = 0, len = arguments.length; i < len; i++) {\r\n                    convertObject(arguments[i], hasChanged);\r\n                }\r\n\r\n                if(notify){\r\n                    observable.valueWillMutate();\r\n                }\r\n\r\n                var methodCallResult = arrayProto[methodName].apply(original, arguments);\r\n\r\n                if(notify){\r\n                    observable.valueHasMutated();\r\n                }\r\n\r\n                return methodCallResult;\r\n            };\r\n        });\r\n\r\n        original['splice'] = function() {\r\n            for (var i = 2, len = arguments.length; i < len; i++) {\r\n                convertObject(arguments[i], hasChanged);\r\n            }\r\n\r\n            if(notify){\r\n                observable.valueWillMutate();\r\n            }\r\n\r\n            var methodCallResult = arrayProto['splice'].apply(original, arguments);\r\n\r\n            if(notify){\r\n                observable.valueHasMutated();\r\n            }\r\n\r\n            return methodCallResult;\r\n        };\r\n\r\n        for (var i = 0, len = original.length; i < len; i++) {\r\n            convertObject(original[i], hasChanged);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Converts an entire object into an observable object by re-writing its attributes using ES5 getters and setters. Attributes beginning with '_' or '$' are ignored.\r\n     * @method convertObject\r\n     * @param {object} obj The target object to convert.\r\n     */\r\n    function convertObject(obj, hasChanged) {\r\n        var lookup, value;\r\n\r\n        if (changeDetectionMethod) {\r\n            if(obj && obj[changeDetectionMethod]) {\r\n                if (hasChanged) {\r\n                    hasChanged = hasChanged.slice(0);\r\n                } else {\r\n                    hasChanged = [];\r\n                }\r\n                hasChanged.push(obj[changeDetectionMethod]);\r\n            }\r\n        }\r\n\r\n        if(!canConvertType(obj)){\r\n            return;\r\n        }\r\n\r\n        lookup = obj.__observable__;\r\n\r\n        if(lookup && lookup.__full__){\r\n            return;\r\n        }\r\n\r\n        lookup = lookup || createLookup(obj);\r\n        lookup.__full__ = true;\r\n\r\n        if (system.isArray(obj)) {\r\n            var observable = ko.observableArray(obj);\r\n            makeObservableArray(obj, observable, hasChanged);\r\n        } else {\r\n            for (var propertyName in obj) {\r\n                if(shouldIgnorePropertyName(propertyName)){\r\n                    continue;\r\n                }\r\n\r\n                if (!lookup[propertyName]) {\r\n                    var descriptor = Object.getPropertyDescriptor(obj, propertyName);\r\n                    if (descriptor && (descriptor.get || descriptor.set)) {\r\n                        defineProperty(obj, propertyName, {\r\n                            get:descriptor.get,\r\n                            set:descriptor.set\r\n                        });\r\n                    } else {\r\n                        value = obj[propertyName];\r\n\r\n                        if(!system.isFunction(value)) {\r\n                            convertProperty(obj, propertyName, value, hasChanged);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(logConversion) {\r\n            system.log('Converted', obj);\r\n        }\r\n    }\r\n\r\n    function innerSetter(observable, newValue, isArray) {\r\n        //if this was originally an observableArray, then always check to see if we need to add/replace the array methods (if newValue was an entirely new array)\r\n        if (isArray) {\r\n            if (!newValue) {\r\n                //don't allow null, force to an empty array\r\n                newValue = [];\r\n                makeObservableArray(newValue, observable);\r\n            }\r\n            else if (!newValue.destroyAll) {\r\n                makeObservableArray(newValue, observable);\r\n            }\r\n        } else {\r\n            convertObject(newValue);\r\n        }\r\n\r\n        //call the update to the observable after the array as been updated.\r\n        observable(newValue);\r\n    }\r\n\r\n    /**\r\n     * Converts a normal property into an observable property using ES5 getters and setters.\r\n     * @method convertProperty\r\n     * @param {object} obj The target object on which the property to convert lives.\r\n     * @param {string} propertyName The name of the property to convert.\r\n     * @param {object} [original] The original value of the property. If not specified, it will be retrieved from the object.\r\n     * @return {KnockoutObservable} The underlying observable.\r\n     */\r\n    function convertProperty(obj, propertyName, original, hasChanged) {\r\n        var observable,\r\n            isArray,\r\n            lookup = obj.__observable__ || createLookup(obj);\r\n\r\n        if(original === undefined){\r\n            original = obj[propertyName];\r\n        }\r\n\r\n        if (system.isArray(original)) {\r\n            observable = ko.observableArray(original);\r\n            makeObservableArray(original, observable, hasChanged);\r\n            isArray = true;\r\n        } else if (typeof original == \"function\") {\r\n            if(ko.isObservable(original)){\r\n                observable = original;\r\n            }else{\r\n                return null;\r\n            }\r\n        } else if(!skipPromises && system.isPromise(original)) {\r\n            observable = ko.observable();\r\n\r\n            original.then(function (result) {\r\n                if(system.isArray(result)) {\r\n                    var oa = ko.observableArray(result);\r\n                    makeObservableArray(result, oa, hasChanged);\r\n                    result = oa;\r\n                }\r\n\r\n                observable(result);\r\n            });\r\n        } else {\r\n            observable = ko.observable(original);\r\n            convertObject(original, hasChanged);\r\n        }\r\n\r\n        if (hasChanged && hasChanged.length > 0) {\r\n            hasChanged.forEach(function (func) {\r\n                if (system.isArray(original)) {\r\n                    observable.subscribe(function (arrayChanges) {\r\n                        func(obj, propertyName, null, arrayChanges);\r\n                    }, null, \"arrayChange\");\r\n                } else {\r\n                    observable.subscribe(function (newValue) {\r\n                        func(obj, propertyName, newValue, null);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        Object.defineProperty(obj, propertyName, {\r\n            configurable: true,\r\n            enumerable: true,\r\n            get: observable,\r\n            set: ko.isWriteableObservable(observable) ? (function (newValue) {\r\n                if (newValue && system.isPromise(newValue) && !skipPromises) {\r\n                    newValue.then(function (result) {\r\n                        innerSetter(observable, result, system.isArray(result));\r\n                    });\r\n                } else {\r\n                    innerSetter(observable, newValue, isArray);\r\n                }\r\n            }) : undefined\r\n        });\r\n\r\n        lookup[propertyName] = observable;\r\n        return observable;\r\n    }\r\n\r\n    /**\r\n     * Defines a computed property using ES5 getters and setters.\r\n     * @method defineProperty\r\n     * @param {object} obj The target object on which to create the property.\r\n     * @param {string} propertyName The name of the property to define.\r\n     * @param {function|object} evaluatorOrOptions The Knockout computed function or computed options object.\r\n     * @return {KnockoutObservable} The underlying computed observable.\r\n     */\r\n    function defineProperty(obj, propertyName, evaluatorOrOptions) {\r\n        var computedOptions = { owner: obj, deferEvaluation: true },\r\n            computed;\r\n\r\n        if (typeof evaluatorOrOptions === 'function') {\r\n            computedOptions.read = evaluatorOrOptions;\r\n        } else {\r\n            if ('value' in evaluatorOrOptions) {\r\n                system.error('For defineProperty, you must not specify a \"value\" for the property. You must provide a \"get\" function.');\r\n            }\r\n\r\n            if (typeof evaluatorOrOptions.get !== 'function' && typeof evaluatorOrOptions.read !== 'function') {\r\n                system.error('For defineProperty, the third parameter must be either an evaluator function, or an options object containing a function called \"get\".');\r\n            }\r\n\r\n            computedOptions.read = evaluatorOrOptions.get || evaluatorOrOptions.read;\r\n            computedOptions.write = evaluatorOrOptions.set || evaluatorOrOptions.write;\r\n        }\r\n\r\n        computed = ko.computed(computedOptions);\r\n        obj[propertyName] = computed;\r\n\r\n        return convertProperty(obj, propertyName, computed);\r\n    }\r\n\r\n    observableModule = function(obj, propertyName){\r\n        var lookup, observable, value;\r\n\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n\r\n        lookup = obj.__observable__;\r\n        if(lookup){\r\n            observable = lookup[propertyName];\r\n            if(observable){\r\n                return observable;\r\n            }\r\n        }\r\n\r\n        value = obj[propertyName];\r\n\r\n        if(ko.isObservable(value)){\r\n            return value;\r\n        }\r\n\r\n        return convertProperty(obj, propertyName, value);\r\n    };\r\n\r\n    observableModule.defineProperty = defineProperty;\r\n    observableModule.convertProperty = convertProperty;\r\n    observableModule.convertObject = convertObject;\r\n\r\n    /**\r\n     * Installs the plugin into the view model binder's `beforeBind` hook so that objects are automatically converted before being bound.\r\n     * @method install\r\n     */\r\n    observableModule.install = function(options) {\r\n        var original = binder.binding;\r\n\r\n        binder.binding = function(obj, view, instruction) {\r\n            if(instruction.applyBindings && !instruction.skipConversion){\r\n                convertObject(obj);\r\n            }\r\n\r\n            original(obj, view);\r\n        };\r\n\r\n        logConversion = options.logConversion;\r\n        if (options.changeDetection) {\r\n            changeDetectionMethod = options.changeDetection;\r\n        }\r\n\r\n        skipPromises = options.skipPromises;\r\n        shouldIgnorePropertyName = options.shouldIgnorePropertyName || defaultShouldIgnorePropertyName;\r\n    };\r\n\r\n    return observableModule;\r\n});\n","/**\r\n * Serializes and deserializes data to/from JSON.\r\n * @module serializer\r\n * @requires system\r\n */\r\ndefine('plugins/serializer',['durandal/system'], function(system) {\r\n    /**\r\n     * @class SerializerModule\r\n     * @static\r\n     */\r\n    return {\r\n        /**\r\n         * The name of the attribute that the serializer should use to identify an object's type.\r\n         * @property {string} typeAttribute\r\n         * @default type\r\n         */\r\n        typeAttribute: 'type',\r\n        /**\r\n         * The amount of space to use for indentation when writing out JSON.\r\n         * @property {string|number} space\r\n         * @default undefined\r\n         */\r\n        space:undefined,\r\n        /**\r\n         * The default replacer function used during serialization. By default properties starting with '_' or '$' are removed from the serialized object.\r\n         * @method replacer\r\n         * @param {string} key The object key to check.\r\n         * @param {object} value The object value to check.\r\n         * @return {object} The value to serialize.\r\n         */\r\n        replacer: function(key, value) {\r\n            if(key){\r\n                var first = key[0];\r\n                if(first === '_' || first === '$'){\r\n                    return undefined;\r\n                }\r\n            }\r\n\r\n            return value;\r\n        },\r\n        /**\r\n         * Serializes the object.\r\n         * @method serialize\r\n         * @param {object} object The object to serialize.\r\n         * @param {object} [settings] Settings can specify a replacer or space to override the serializer defaults.\r\n         * @return {string} The JSON string.\r\n         */\r\n        serialize: function(object, settings) {\r\n            settings = (settings === undefined) ? {} : settings;\r\n\r\n            if(system.isString(settings) || system.isNumber(settings)) {\r\n                settings = { space: settings };\r\n            }\r\n\r\n            return JSON.stringify(object, settings.replacer || this.replacer, settings.space || this.space);\r\n        },\r\n        /**\r\n         * Gets the type id for an object instance, using the configured `typeAttribute`.\r\n         * @method getTypeId\r\n         * @param {object} object The object to serialize.\r\n         * @return {string} The type.\r\n         */\r\n        getTypeId: function(object) {\r\n            if (object) {\r\n                return object[this.typeAttribute];\r\n            }\r\n\r\n            return undefined;\r\n        },\r\n        /**\r\n         * Maps type ids to object constructor functions. Keys are type ids and values are functions.\r\n         * @property {object} typeMap.\r\n         */\r\n        typeMap: {},\r\n        /**\r\n         * Adds a type id/constructor function mampping to the `typeMap`.\r\n         * @method registerType\r\n         * @param {string} typeId The type id.\r\n         * @param {function} constructor The constructor.\r\n         */\r\n        registerType: function() {\r\n            var first = arguments[0];\r\n\r\n            if (arguments.length == 1) {\r\n                var id = first[this.typeAttribute] || system.getModuleId(first);\r\n                this.typeMap[id] = first;\r\n            } else {\r\n                this.typeMap[first] = arguments[1];\r\n            }\r\n        },\r\n        /**\r\n         * The default reviver function used during deserialization. By default is detects type properties on objects and uses them to re-construct the correct object using the provided constructor mapping.\r\n         * @method reviver\r\n         * @param {string} key The attribute key.\r\n         * @param {object} value The object value associated with the key.\r\n         * @param {function} getTypeId A custom function used to get the type id from a value.\r\n         * @param {object} getConstructor A custom function used to get the constructor function associated with a type id.\r\n         * @return {object} The value.\r\n         */\r\n        reviver: function(key, value, getTypeId, getConstructor) {\r\n            var typeId = getTypeId(value);\r\n            if (typeId) {\r\n                var ctor = getConstructor(typeId);\r\n                if (ctor) {\r\n                    if (ctor.fromJSON) {\r\n                        return ctor.fromJSON(value);\r\n                    }\r\n\r\n                    return new ctor(value);\r\n                }\r\n            }\r\n\r\n            return value;\r\n        },\r\n        /**\r\n         * Deserialize the JSON.\r\n         * @method deserialize\r\n         * @param {string} text The JSON string.\r\n         * @param {object} [settings] Settings can specify a reviver, getTypeId function or getConstructor function.\r\n         * @return {object} The deserialized object.\r\n         */\r\n        deserialize: function(text, settings) {\r\n            var that = this;\r\n            settings = settings || {};\r\n\r\n            var getTypeId = settings.getTypeId || function(object) { return that.getTypeId(object); };\r\n            var getConstructor = settings.getConstructor || function(id) { return that.typeMap[id]; };\r\n            var reviver = settings.reviver || function(key, value) { return that.reviver(key, value, getTypeId, getConstructor); };\r\n\r\n            return JSON.parse(text, reviver);\r\n        },\r\n        /**\r\n         * Clone the object.\r\n         * @method clone\r\n         * @param {object} obj The object to clone.\r\n         * @param {object} [settings] Settings can specify any of the options allowed by the serialize or deserialize methods.\r\n         * @return {object} The new clone.\r\n         */\r\n        clone:function(obj, settings) {\r\n            return this.deserialize(this.serialize(obj, settings), settings);\r\n        }\r\n    };\r\n});\n","/**\r\n * Layers the widget sugar on top of the composition system.\r\n * @module widget\r\n * @requires system\r\n * @requires composition\r\n * @requires jquery\r\n * @requires knockout\r\n */\r\ndefine('plugins/widget',['durandal/system', 'durandal/composition', 'jquery', 'knockout'], function(system, composition, $, ko) {\r\n    var kindModuleMaps = {},\r\n        kindViewMaps = {},\r\n        bindableSettings = ['model', 'view', 'kind'],\r\n        widgetDataKey = 'durandal-widget-data';\r\n\r\n    function extractParts(element, settings){\r\n        var data = ko.utils.domData.get(element, widgetDataKey);\r\n\r\n        if(!data){\r\n            data = {\r\n                parts:composition.cloneNodes(ko.virtualElements.childNodes(element))\r\n            };\r\n\r\n            ko.virtualElements.emptyNode(element);\r\n            ko.utils.domData.set(element, widgetDataKey, data);\r\n        }\r\n\r\n        settings.parts = data.parts;\r\n    }\r\n\r\n    /**\r\n     * @class WidgetModule\r\n     * @static\r\n     */\r\n    var widget = {\r\n        getSettings: function(valueAccessor) {\r\n            var settings = ko.utils.unwrapObservable(valueAccessor()) || {};\r\n\r\n            if (system.isString(settings)) {\r\n                return { kind: settings };\r\n            }\r\n\r\n            for (var attrName in settings) {\r\n                if (ko.utils.arrayIndexOf(bindableSettings, attrName) != -1) {\r\n                    settings[attrName] = ko.utils.unwrapObservable(settings[attrName]);\r\n                } else {\r\n                    settings[attrName] = settings[attrName];\r\n                }\r\n            }\r\n\r\n            return settings;\r\n        },\r\n        /**\r\n         * Creates a ko binding handler for the specified kind.\r\n         * @method registerKind\r\n         * @param {string} kind The kind to create a custom binding handler for.\r\n         */\r\n        registerKind: function(kind) {\r\n            ko.bindingHandlers[kind] = {\r\n                init: function() {\r\n                    return { controlsDescendantBindings: true };\r\n                },\r\n                update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n                    var settings = widget.getSettings(valueAccessor);\r\n                    settings.kind = kind;\r\n                    extractParts(element, settings);\r\n                    widget.create(element, settings, bindingContext, true);\r\n                }\r\n            };\r\n\r\n            ko.virtualElements.allowedBindings[kind] = true;\r\n            composition.composeBindings.push(kind + ':');\r\n        },\r\n        /**\r\n         * Maps views and module to the kind identifier if a non-standard pattern is desired.\r\n         * @method mapKind\r\n         * @param {string} kind The kind name.\r\n         * @param {string} [viewId] The unconventional view id to map the kind to.\r\n         * @param {string} [moduleId] The unconventional module id to map the kind to.\r\n         */\r\n        mapKind: function(kind, viewId, moduleId) {\r\n            if (viewId) {\r\n                kindViewMaps[kind] = viewId;\r\n            }\r\n\r\n            if (moduleId) {\r\n                kindModuleMaps[kind] = moduleId;\r\n            }\r\n        },\r\n        /**\r\n         * Maps a kind name to it's module id. First it looks up a custom mapped kind, then falls back to `convertKindToModulePath`.\r\n         * @method mapKindToModuleId\r\n         * @param {string} kind The kind name.\r\n         * @return {string} The module id.\r\n         */\r\n        mapKindToModuleId: function(kind) {\r\n            return kindModuleMaps[kind] || widget.convertKindToModulePath(kind);\r\n        },\r\n        /**\r\n         * Converts a kind name to it's module path. Used to conventionally map kinds who aren't explicitly mapped through `mapKind`.\r\n         * @method convertKindToModulePath\r\n         * @param {string} kind The kind name.\r\n         * @return {string} The module path.\r\n         */\r\n        convertKindToModulePath: function(kind) {\r\n            return 'widgets/' + kind + '/viewmodel';\r\n        },\r\n        /**\r\n         * Maps a kind name to it's view id. First it looks up a custom mapped kind, then falls back to `convertKindToViewPath`.\r\n         * @method mapKindToViewId\r\n         * @param {string} kind The kind name.\r\n         * @return {string} The view id.\r\n         */\r\n        mapKindToViewId: function(kind) {\r\n            return kindViewMaps[kind] || widget.convertKindToViewPath(kind);\r\n        },\r\n        /**\r\n         * Converts a kind name to it's view id. Used to conventionally map kinds who aren't explicitly mapped through `mapKind`.\r\n         * @method convertKindToViewPath\r\n         * @param {string} kind The kind name.\r\n         * @return {string} The view id.\r\n         */\r\n        convertKindToViewPath: function(kind) {\r\n            return 'widgets/' + kind + '/view';\r\n        },\r\n        createCompositionSettings: function(element, settings) {\r\n            if (!settings.model) {\r\n                settings.model = this.mapKindToModuleId(settings.kind);\r\n            }\r\n\r\n            if (!settings.view) {\r\n                settings.view = this.mapKindToViewId(settings.kind);\r\n            }\r\n\r\n            settings.preserveContext = true;\r\n            settings.activate = true;\r\n            settings.activationData = settings;\r\n            settings.mode = 'templated';\r\n\r\n            return settings;\r\n        },\r\n        /**\r\n         * Creates a widget.\r\n         * @method create\r\n         * @param {DOMElement} element The DOMElement or knockout virtual element that serves as the target element for the widget.\r\n         * @param {object} settings The widget settings.\r\n         * @param {object} [bindingContext] The current binding context.\r\n         */\r\n        create: function(element, settings, bindingContext, fromBinding) {\r\n            if(!fromBinding){\r\n                settings = widget.getSettings(function() { return settings; }, element);\r\n            }\r\n\r\n            var compositionSettings = widget.createCompositionSettings(element, settings);\r\n\r\n            composition.compose(element, compositionSettings, bindingContext);\r\n        },\r\n        /**\r\n         * Installs the widget module by adding the widget binding handler and optionally registering kinds.\r\n         * @method install\r\n         * @param {object} config The module config. Add a `kinds` array with the names of widgets to automatically register. You can also specify a `bindingName` if you wish to use another name for the widget binding, such as \"control\" for example.\r\n         */\r\n        install:function(config){\r\n            config.bindingName = config.bindingName || 'widget';\r\n\r\n            if(config.kinds){\r\n                var toRegister = config.kinds;\r\n\r\n                for(var i = 0; i < toRegister.length; i++){\r\n                    widget.registerKind(toRegister[i]);\r\n                }\r\n            }\r\n\r\n            ko.bindingHandlers[config.bindingName] = {\r\n                init: function() {\r\n                    return { controlsDescendantBindings: true };\r\n                },\r\n                update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n                    var settings = widget.getSettings(valueAccessor);\r\n                    extractParts(element, settings);\r\n                    widget.create(element, settings, bindingContext, true);\r\n                }\r\n            };\r\n\r\n            composition.composeBindings.push(config.bindingName + ':');\r\n            ko.virtualElements.allowedBindings[config.bindingName] = true;\r\n        }\r\n    };\r\n\r\n    return widget;\r\n});\n","/**\r\n * The entrance transition module.\r\n * @module entrance\r\n * @requires system\r\n * @requires composition\r\n * @requires jquery\r\n */\r\ndefine('transitions/entrance',['durandal/system', 'durandal/composition', 'jquery'], function(system, composition, $) {\r\n    var fadeOutDuration = 100;\r\n    var endValues = {\r\n        left: '0px',\r\n        opacity: 1\r\n    };\r\n    var clearValues = {\r\n        left: '',\r\n        top: '',\r\n        right: '',\r\n        bottom:'',\r\n        position:'',\r\n        opacity: ''\r\n    };\r\n\r\n    var isIE = navigator.userAgent.match(/Trident/) || navigator.userAgent.match(/MSIE/);\r\n\r\n    var animation = false,\r\n        domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\r\n        elm = document.createElement('div');\r\n\r\n    if(elm.style.animationName !== undefined) {\r\n        animation = true;\r\n    }\r\n\r\n    if(!animation) {\r\n        for(var i = 0; i < domPrefixes.length; i++) {\r\n            if(elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\r\n                animation = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if(animation) {\r\n        if(isIE){\r\n            system.log('Using CSS3/jQuery mixed animations.');\r\n        }else{\r\n            system.log('Using CSS3 animations.');\r\n        }\r\n    } else {\r\n        system.log('Using jQuery animations.');\r\n    }\r\n\r\n    function removeAnimationClasses(ele, fadeOnly){\r\n        ele.classList.remove(fadeOnly ? 'entrance-in-fade' : 'entrance-in');\r\n        ele.classList.remove('entrance-out');\r\n    }\r\n\r\n    /**\r\n     * @class EntranceModule\r\n     * @constructor\r\n     */\r\n    var entrance = function(context) {\r\n        return system.defer(function(dfd) {\r\n            function endTransition() {\r\n                dfd.resolve();\r\n            }\r\n\r\n            function scrollIfNeeded() {\r\n                if (!context.keepScrollPosition) {\r\n                    $(document).scrollTop(0);\r\n                }\r\n            }\r\n\r\n            if (!context.child) {\r\n                $(context.activeView).fadeOut(fadeOutDuration, endTransition);\r\n            } else {\r\n                var duration = context.duration || 500;\r\n                var $child = $(context.child);\r\n                var fadeOnly = !!context.fadeOnly;\r\n                var startValues = {\r\n                    display: 'block',\r\n                    opacity: 0,\r\n                    position: 'absolute',\r\n                    left: fadeOnly || animation ? '0px' : '20px',\r\n                    right: 0,\r\n                    top: 0,\r\n                    bottom: 0\r\n                };\r\n\r\n                function startTransition() {\r\n                    scrollIfNeeded();\r\n                    context.triggerAttach();\r\n\r\n                    if (animation) {\r\n                        removeAnimationClasses(context.child, fadeOnly);\r\n                        context.child.classList.add(fadeOnly ? 'entrance-in-fade' : 'entrance-in');\r\n                        setTimeout(function () {\r\n                            removeAnimationClasses(context.child, fadeOnly);\r\n                            if(context.activeView){\r\n                                removeAnimationClasses(context.activeView, fadeOnly);\r\n                            }\r\n                            $child.css(clearValues);\r\n                            endTransition();\r\n                        }, duration);\r\n                    } else {\r\n                        $child.animate(endValues, {\r\n                            duration: duration,\r\n                            easing: 'swing',\r\n                            always: function() {\r\n                                $child.css(clearValues);\r\n                                endTransition();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                $child.css(startValues);\r\n\r\n                if(context.activeView) {\r\n                    if (animation && !isIE) {\r\n                        removeAnimationClasses(context.activeView, fadeOnly);\r\n                        context.activeView.classList.add('entrance-out');\r\n                        setTimeout(startTransition, fadeOutDuration);\r\n                    } else {\r\n                        $(context.activeView).fadeOut({ duration: fadeOutDuration, always: startTransition });\r\n                    }\r\n                } else {\r\n                    startTransition();\r\n                }\r\n            }\r\n        }).promise();\r\n    };\r\n\r\n    return entrance;\r\n});\n","/**\r\n * @license RequireJS text 2.0.7 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\r\n * Available via the MIT or new BSD license.\r\n * see: http://github.com/requirejs/text for details\r\n */\r\n/*jslint regexp: true */\r\n/*global require, XMLHttpRequest, ActiveXObject,\r\n  define, window, process, Packages,\r\n  java, location, Components, FileUtils */\r\n\r\ndefine('text',['module'], function (module) {\r\n    'use strict';\r\n\r\n    var text, fs, Cc, Ci,\r\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\r\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\r\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\r\n        hasLocation = typeof location !== 'undefined' && location.href,\r\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\r\n        defaultHostName = hasLocation && location.hostname,\r\n        defaultPort = hasLocation && (location.port || undefined),\r\n        buildMap = {},\r\n        masterConfig = (module.config && module.config()) || {};\r\n\r\n    text = {\r\n        version: '2.0.7',\r\n\r\n        strip: function (content) {\r\n            //Strips <?xml ...?> declarations so that external SVG and XML\r\n            //documents can be added to a document without worry. Also, if the string\r\n            //is an HTML document, only the part inside the body tag is returned.\r\n            if (content) {\r\n                content = content.replace(xmlRegExp, \"\");\r\n                var matches = content.match(bodyRegExp);\r\n                if (matches) {\r\n                    content = matches[1];\r\n                }\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            return content;\r\n        },\r\n\r\n        jsEscape: function (content) {\r\n            return content.replace(/(['\\\\])/g, '\\\\$1')\r\n                .replace(/[\\f]/g, \"\\\\f\")\r\n                .replace(/[\\b]/g, \"\\\\b\")\r\n                .replace(/[\\n]/g, \"\\\\n\")\r\n                .replace(/[\\t]/g, \"\\\\t\")\r\n                .replace(/[\\r]/g, \"\\\\r\")\r\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\r\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\r\n        },\r\n\r\n        createXhr: masterConfig.createXhr || function () {\r\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\r\n            var xhr, i, progId;\r\n            if (typeof XMLHttpRequest !== \"undefined\") {\r\n                return new XMLHttpRequest();\r\n            } else if (typeof ActiveXObject !== \"undefined\") {\r\n                for (i = 0; i < 3; i += 1) {\r\n                    progId = progIds[i];\r\n                    try {\r\n                        xhr = new ActiveXObject(progId);\r\n                    } catch (e) {}\r\n\r\n                    if (xhr) {\r\n                        progIds = [progId];  // so faster next time\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return xhr;\r\n        },\r\n\r\n        /**\r\n         * Parses a resource name into its component parts. Resource names\r\n         * look like: module/name.ext!strip, where the !strip part is\r\n         * optional.\r\n         * @param {String} name the resource name\r\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\r\n         * where strip is a boolean.\r\n         */\r\n        parseName: function (name) {\r\n            var modName, ext, temp,\r\n                strip = false,\r\n                index = name.indexOf(\".\"),\r\n                isRelative = name.indexOf('./') === 0 ||\r\n                             name.indexOf('../') === 0;\r\n\r\n            if (index !== -1 && (!isRelative || index > 1)) {\r\n                modName = name.substring(0, index);\r\n                ext = name.substring(index + 1, name.length);\r\n            } else {\r\n                modName = name;\r\n            }\r\n\r\n            temp = ext || modName;\r\n            index = temp.indexOf(\"!\");\r\n            if (index !== -1) {\r\n                //Pull off the strip arg.\r\n                strip = temp.substring(index + 1) === \"strip\";\r\n                temp = temp.substring(0, index);\r\n                if (ext) {\r\n                    ext = temp;\r\n                } else {\r\n                    modName = temp;\r\n                }\r\n            }\r\n\r\n            return {\r\n                moduleName: modName,\r\n                ext: ext,\r\n                strip: strip\r\n            };\r\n        },\r\n\r\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\r\n\r\n        /**\r\n         * Is an URL on another domain. Only works for browser use, returns\r\n         * false in non-browser environments. Only used to know if an\r\n         * optimized .js version of a text resource should be loaded\r\n         * instead.\r\n         * @param {String} url\r\n         * @returns Boolean\r\n         */\r\n        useXhr: function (url, protocol, hostname, port) {\r\n            var uProtocol, uHostName, uPort,\r\n                match = text.xdRegExp.exec(url);\r\n            if (!match) {\r\n                return true;\r\n            }\r\n            uProtocol = match[2];\r\n            uHostName = match[3];\r\n\r\n            uHostName = uHostName.split(':');\r\n            uPort = uHostName[1];\r\n            uHostName = uHostName[0];\r\n\r\n            return (!uProtocol || uProtocol === protocol) &&\r\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\r\n                   ((!uPort && !uHostName) || uPort === port);\r\n        },\r\n\r\n        finishLoad: function (name, strip, content, onLoad) {\r\n            content = strip ? text.strip(content) : content;\r\n            if (masterConfig.isBuild) {\r\n                buildMap[name] = content;\r\n            }\r\n            onLoad(content);\r\n        },\r\n\r\n        load: function (name, req, onLoad, config) {\r\n            //Name has format: some.module.filext!strip\r\n            //The strip part is optional.\r\n            //if strip is present, then that means only get the string contents\r\n            //inside a body tag in an HTML string. For XML/SVG content it means\r\n            //removing the <?xml ...?> declarations so the content can be inserted\r\n            //into the current doc without problems.\r\n\r\n            // Do not bother with the work if a build and text will\r\n            // not be inlined.\r\n            if (config.isBuild && !config.inlineText) {\r\n                onLoad();\r\n                return;\r\n            }\r\n\r\n            masterConfig.isBuild = config.isBuild;\r\n\r\n            var parsed = text.parseName(name),\r\n                nonStripName = parsed.moduleName +\r\n                    (parsed.ext ? '.' + parsed.ext : ''),\r\n                url = req.toUrl(nonStripName),\r\n                useXhr = (masterConfig.useXhr) ||\r\n                         text.useXhr;\r\n\r\n            //Load the text. Use XHR if possible and in a browser.\r\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\r\n                text.get(url, function (content) {\r\n                    text.finishLoad(name, parsed.strip, content, onLoad);\r\n                }, function (err) {\r\n                    if (onLoad.error) {\r\n                        onLoad.error(err);\r\n                    }\r\n                });\r\n            } else {\r\n                //Need to fetch the resource across domains. Assume\r\n                //the resource has been optimized into a JS module. Fetch\r\n                //by the module name + extension, but do not include the\r\n                //!strip part to avoid file system issues.\r\n                req([nonStripName], function (content) {\r\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\r\n                                    parsed.strip, content, onLoad);\r\n                });\r\n            }\r\n        },\r\n\r\n        write: function (pluginName, moduleName, write, config) {\r\n            if (buildMap.hasOwnProperty(moduleName)) {\r\n                var content = text.jsEscape(buildMap[moduleName]);\r\n                write.asModule(pluginName + \"!\" + moduleName,\r\n                               \"define(function () { return '\" +\r\n                                   content +\r\n                               \"';});\\n\");\r\n            }\r\n        },\r\n\r\n        writeFile: function (pluginName, moduleName, req, write, config) {\r\n            var parsed = text.parseName(moduleName),\r\n                extPart = parsed.ext ? '.' + parsed.ext : '',\r\n                nonStripName = parsed.moduleName + extPart,\r\n                //Use a '.js' file name so that it indicates it is a\r\n                //script that can be loaded across domains.\r\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\r\n\r\n            //Leverage own load() method to load plugin value, but only\r\n            //write out values that do not have the strip argument,\r\n            //to avoid any potential issues with ! in file names.\r\n            text.load(nonStripName, req, function (value) {\r\n                //Use own write() method to construct full module value.\r\n                //But need to create shell that translates writeFile's\r\n                //write() to the right interface.\r\n                var textWrite = function (contents) {\r\n                    return write(fileName, contents);\r\n                };\r\n                textWrite.asModule = function (moduleName, contents) {\r\n                    return write.asModule(moduleName, fileName, contents);\r\n                };\r\n\r\n                text.write(pluginName, nonStripName, textWrite, config);\r\n            }, config);\r\n        }\r\n    };\r\n\r\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\r\n            typeof process !== \"undefined\" &&\r\n            process.versions &&\r\n            !!process.versions.node)) {\r\n        //Using special require.nodeRequire, something added by r.js.\r\n        fs = require.nodeRequire('fs');\r\n\r\n        text.get = function (url, callback, errback) {\r\n            try {\r\n                var file = fs.readFileSync(url, 'utf8');\r\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\r\n                if (file.indexOf('\\uFEFF') === 0) {\r\n                    file = file.substring(1);\r\n                }\r\n                callback(file);\r\n            } catch (e) {\r\n                errback(e);\r\n            }\r\n        };\r\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\r\n            text.createXhr())) {\r\n        text.get = function (url, callback, errback, headers) {\r\n            var xhr = text.createXhr(), header;\r\n            xhr.open('GET', url, true);\r\n\r\n            //Allow plugins direct access to xhr headers\r\n            if (headers) {\r\n                for (header in headers) {\r\n                    if (headers.hasOwnProperty(header)) {\r\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //Allow overrides specified in config\r\n            if (masterConfig.onXhr) {\r\n                masterConfig.onXhr(xhr, url);\r\n            }\r\n\r\n            xhr.onreadystatechange = function (evt) {\r\n                var status, err;\r\n                //Do not explicitly handle errors, those should be\r\n                //visible via console output in the browser.\r\n                if (xhr.readyState === 4) {\r\n                    status = xhr.status;\r\n                    if (status > 399 && status < 600) {\r\n                        //An http 4xx or 5xx error. Signal an error.\r\n                        err = new Error(url + ' HTTP status: ' + status);\r\n                        err.xhr = xhr;\r\n                        errback(err);\r\n                    } else {\r\n                        callback(xhr.responseText);\r\n                    }\r\n\r\n                    if (masterConfig.onXhrComplete) {\r\n                        masterConfig.onXhrComplete(xhr, url);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send(null);\r\n        };\r\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\r\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\r\n        //Why Java, why is this so awkward?\r\n        text.get = function (url, callback) {\r\n            var stringBuffer, line,\r\n                encoding = \"utf-8\",\r\n                file = new java.io.File(url),\r\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\r\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\r\n                content = '';\r\n            try {\r\n                stringBuffer = new java.lang.StringBuffer();\r\n                line = input.readLine();\r\n\r\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\r\n                // http://www.unicode.org/faq/utf_bom.html\r\n\r\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\r\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\r\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\r\n                    // Eat the BOM, since we've already found the encoding on this file,\r\n                    // and we plan to concatenating this buffer with others; the BOM should\r\n                    // only appear at the top of a file.\r\n                    line = line.substring(1);\r\n                }\r\n\r\n                if (line !== null) {\r\n                    stringBuffer.append(line);\r\n                }\r\n\r\n                while ((line = input.readLine()) !== null) {\r\n                    stringBuffer.append(lineSeparator);\r\n                    stringBuffer.append(line);\r\n                }\r\n                //Make sure we return a JavaScript string and not a Java string.\r\n                content = String(stringBuffer.toString()); //String\r\n            } finally {\r\n                input.close();\r\n            }\r\n            callback(content);\r\n        };\r\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\r\n            typeof Components !== 'undefined' && Components.classes &&\r\n            Components.interfaces)) {\r\n        //Avert your gaze!\r\n        Cc = Components.classes,\r\n        Ci = Components.interfaces;\r\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\r\n\r\n        text.get = function (url, callback) {\r\n            var inStream, convertStream,\r\n                readData = {},\r\n                fileObj = new FileUtils.File(url);\r\n\r\n            //XPCOM, you so crazy\r\n            try {\r\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\r\n                           .createInstance(Ci.nsIFileInputStream);\r\n                inStream.init(fileObj, 1, 0, false);\r\n\r\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\r\n                                .createInstance(Ci.nsIConverterInputStream);\r\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\r\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\r\n\r\n                convertStream.readString(inStream.available(), readData);\r\n                convertStream.close();\r\n                inStream.close();\r\n                callback(readData.value);\r\n            } catch (e) {\r\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\r\n            }\r\n        };\r\n    }\r\n    return text;\r\n});\n","\ndefine('text!views/admin/concierge/index.html',[],function () { return '<section data-type=\"flex\">\\n    <div>\\n        <div class=\"column open\">\\n            <div class=\"widget-wrapper\">\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\n                    <div class=\"content\">\\n                        <div class=\"content-fill\">\\n                            <div class=\"wrapper\">\\n                                <div class=\"content\">\\n                                    <div class=\"header\">\\n                                        <div class=\"table-cell\">\\n                                            <header class=\"ellipsis\">\\n                                                <h1>Concierge Services</h1>\\n                                            </header>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\"table-row\">\\n                                        <div class=\"table-cell\">\\n                                            <div class=\"body\">\\n                                                <div class=\"content\">\\n                                                    <div class=\"content\">\\n                                                        <div class=\"row pad-top\">\\n                                                            <section class=\"accordion open\">\\n                                                                <div class=\"row accordion-toggle open\">\\n                                                                    <div class=\"span11\">\\n                                                                        <h3>Manage Individuals</h3>\\n                                                                    </div>\\n                                                                </div>\\n                                                                <div class=\"accordion-content\">\\n                                                                    <div class=\"row pad-top\">\\n                                                                        <div class=\"span3 align-left\">\\n                                                                            <span>Create New Individual</span>\\n                                                                        </div>\\n                                                                        <div class=\"span9\">\\n                                                                            <a data-bind=\"click: createIndividual\" class=\"btn color small\">Create</a>\\n                                                                        </div>\\n                                                                    </div>\\n                                                                    <div class=\"row pad-top divider\">\\n                                                                        <div class=\"span3 align-left\">\\n                                                                            <span>Bulk Upload</span>\\n                                                                        </div>\\n                                                                        <div class=\"span9\">\\n                                                                            <a class=\"btn small color disabled\" href=\"#\">Upload</a>\\n                                                                        </div>\\n                                                                    </div>\\n                                                                    <div class=\"row pad-top divider\">\\n                                                                        <div class=\"span3 align-left\">\\n                                                                            <span>Delete Individual</span>\\n                                                                        </div>\\n                                                                        <div class=\"span9\">\\n                                                                            <a class=\"btn small\" data-bind=\"click: deleteIndividual\">Delete</a>\\n                                                                        </div>\\n                                                                    </div>\\n                                                                </div>\\n                                                            </section>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- ko if: activeSecondColumn -->\\n            <div class=\"column open\">\\n                <div class=\"widget-wrapper\">\\n                <!-- ko compose: activeSecondColumn -->\\n                <!-- /ko -->\\n                </div>\\n            </div>\\n        <!-- /ko -->\\n        <!-- ko ifnot: activeSecondColumn -->\\n            <div class=\"column open\">\\n                <div class=\"widget-wrapper\">\\n                    <div class=\"widget open\" data-bind=\"columnSizer: true\">\\n                        <div class=\"content\">\\n                            <div class=\"content-fill\">\\n                                <div class=\"wrapper\">\\n                                    <div class=\"content\">\\n                                        <div class=\"header\">\\n                                            <div class=\"table-cell\">\\n                                                <header class=\"ellipsis\">\\n                                                </header>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\"table-row\">\\n                                            <div class=\"table-cell\">\\n                                                <div class=\"body\">\\n                                                    <div class=\"content\">\\n                                                        <div class=\"content\">\\n                                                            <p><em>Select option to the left...</em></p>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        <!-- /ko -->\\n    </div>\\n</section>';});\n\n","\ndefine('text!views/admin/index.html',[],function () { return '<div class=\"route\">\\r\\n    <!-- ko if: navigation.currentSubRoute() -->\\r\\n    <!-- ko compose: { model: navigation.currentSubRoute().subroute } -->\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/admin/reports/dynamic.report.html',[],function () { return '<div class=\"widget open fullscreen\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n\\t\\t                \\t<header>\\r\\n\\t\\t                        <h1 data-bind=\"text: report.name\"></h1>\\r\\n\\t\\t                        <div class=\"options goals-options\">\\r\\n                                    <button class=\"btn small color\" data-bind=\"click: sendCleanCSV\">Save Selected to CSV</button>\\r\\n\\t\\t                            <a class=\"toggle\" data-bind=\"click: closeReport\" href=\"#\">\\r\\n\\t\\t                                <i class=\"icon-cancel\"></i>\\r\\n\\t\\t                            </a>\\r\\n\\t\\t                        </div>\\r\\n\\t\\t                    </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <table id=\"matching-patients\" class=\"nowrap\">\\r\\n                                        <tbody>\\r\\n                                            <tr>\\r\\n                                                <th class=\"narrow\">\\r\\n                                                    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                                        <span data-bind=\"css: { \\'checked\\': (allSelected() === true) }\">\\r\\n                                                            <input type=\"checkbox\" data-bind=\"checked: allSelected\" />\\r\\n                                                        </span>\\r\\n                                                    </div>\\r\\n                                                </th>\\r\\n                                                <th>#</th>\\r\\n                                                <!-- ko foreach: report.columns -->\\r\\n                                                    <th class=\"ellipsis\" data-bind=\"text: displayName\"></th>\\r\\n                                                <!-- /ko -->\\r\\n                                            </tr>\\r\\n                                            <!-- ko foreach: computedEntities -->\\r\\n                                            <tr>\\r\\n                                                <td class=\"narrow\">\\r\\n                                                    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                                        <span data-bind=\"css: { \\'checked\\': selected() === true }\">\\r\\n                                                            <input type=\"checkbox\" data-bind=\"clickToggle: selected\" />\\r\\n                                                        </span>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                                <td class=\"ellipsis\">\\r\\n                                                    <span data-bind=\"text: $index() + 1\"></span>\\r\\n                                                </td>\\r\\n                                                <!-- ko foreach: $parent.report.columns -->\\r\\n                                                <td class=\"ellipsis\">\\r\\n            \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: (name.indexOf(\\'.\\') === -1) ? (name.indexOf(\\'|\\') === -1 ? $parent[name] : \\'(Export to view)\\') : ($parent[name.substr(0, name.indexOf(\\'.\\'))] ? $parent[name.substr(0, name.indexOf(\\'.\\'))][name.substr(name.indexOf(\\'.\\')+1, name.length)] : \\'-\\')\"></span>\\r\\n                                                </td>\\r\\n                                                <!-- /ko -->                                         \\r\\n                                            </tr>\\r\\n                                            <!-- /ko -->\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/admin/reports/entity.template.html',[],function () { return '<section class=\"accordion open well\">\\r\\n    <div class=\"row accordion-toggle open\" data-bind=\"\">\\r\\n        <div class=\"span6\">\\r\\n            <h3>Query</h3>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"accordion-content\" data-bind=\"with: entity\">\\r\\n        <div class=\"row pad-top divider\">\\r\\n        \\t<div class=\"span4\">\\r\\n        \\t\\t<div class=\"row\">\\r\\n                \\t<span>Entity Type:</span>\\r\\n                </div>\\r\\n                <div class=\"row\">\\r\\n                \\t<h4 data-bind=\"text: entityType\"></h4>\\r\\n                </div>\\r\\n        \\t</div>\\r\\n        \\t<div class=\"span4\">\\r\\n        \\t\\t<div class=\"row\">\\r\\n                \\t<span>Prop Name:</span>\\r\\n                </div>\\r\\n                <div class=\"row\">\\r\\n                \\t<input data-bind=\"value: propName\" />\\r\\n                </div>\\r\\n        \\t</div>\\r\\n            <div class=\"span4\">\\r\\n                <div class=\"row\">\\r\\n                    <span>Columns</span>\\r\\n                </div>\\r\\n                <div class=\"row\">\\r\\n                    <select class=\"span8\" multiple=\"true\" data-bind=\"options: availableColumns, selectedOptions: columns, optionsText: \\'nameOnServer\\', optionsValue: \\'nameOnServer\\'\"></select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"row pad-top divider\">\\r\\n        \\t<div class=\"span6\">\\r\\n        \\t\\t<div class=\"row\">\\r\\n            \\t<span>Navigation Properties</span>\\r\\n                </div>\\r\\n        \\t\\t<div class=\"row\">\\r\\n            \\t\\t<select class=\"span8\" multiple=\"true\" data-bind=\"options: availableNavProps, selectedOptions: navProperties, optionsText: \\'nameOnServer\\', optionsValue: \\'nameOnServer\\'\"></select>\\r\\n            \\t</div>\\r\\n            </div>\\r\\n        \\t<div class=\"span6\">\\r\\n        \\t\\t<div class=\"row\">\\r\\n            \\t<span>Child Entities</span>\\r\\n                </div>\\r\\n        \\t\\t<div class=\"row\">\\r\\n            \\t\\t<select class=\"span8\" multiple=\"true\" data-bind=\"options: availableChildEntities, selectedOptions: childEntities, optionsText: \\'nameOnServer\\', optionsValue: \\'nameOnServer\\'\"></select>\\r\\n            \\t</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"row pad-top divider\">\\r\\n        \\t<div class=\"span12\">\\r\\n        \\t\\t<div class=\"row\">\\r\\n                \\t<span>Navigation Properties:</span>\\r\\n                </div>\\r\\n                <!-- ko foreach: navProperties -->\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"push1\">\\r\\n                    <!-- ko compose: { model: \\'viewmodels/admin/reports/entity.template\\', activationData: { entityType: $data }  } -->\\r\\n\\r\\n                    <!-- /ko -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- /ko -->\\r\\n        \\t</div>\\r\\n        </div>\\r\\n        <div class=\"row pad-top divider\">\\r\\n            <div class=\"span12\">\\r\\n                <div class=\"row\">\\r\\n                    <span>Child Entities:</span>\\r\\n                </div>\\r\\n                <!-- ko foreach: childEntities -->\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"push1\">\\r\\n                    <!-- ko compose: { model: \\'viewmodels/admin/reports/entity.template\\', activationData: { entityType: $data }  } -->\\r\\n\\r\\n                    <!-- /ko -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/admin/reports/index.html',[],function () { return '<section data-type=\"flex\">\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header class=\"ellipsis\">\\r\\n                                                <h1>Reports</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <div class=\"row pad-top\">\\r\\n                                                            <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\" data-bind=\"clickToggle: programInfoVisible\">\\r\\n                                                                    <div class=\"span6\">\\r\\n                                                                        <h3>Program Information</h3>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\" data-bind=\"visible: programInfoVisible\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span8 align-left\">\\r\\n                                                                            Load Program Data with state of \\r\\n                                                                            <div class=\"\" data-bind=\"multiselect: { options: elementStateList, values: selectedProgramStateIds, idValue: \\'id\\', text: \\'name\\', label: \\'elementStates\\' }\"></div>\\r\\n                                                                            </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canLoadProgramData, click: runProgramReport\">Load data</button>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <!-- ko if: programsLoading().length > 0 -->\\r\\n                                                                            <i class=\"fa fa-spinner fa-spin\"></i> (Checking <span data-bind=\"text: programsLoading().length\"></span> Individuals / Programs...)\\r\\n                                                                            <!-- /ko -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span8 align-left\">\\r\\n                                                                            Load Actions Data with state of \\r\\n                                                                            <div class=\"\" data-bind=\"multiselect: { options: elementStateList, values: selectedActionStateIds, idValue: \\'id\\', text: \\'name\\', label: \\'elementStates\\' }\"></div>\\r\\n                                                                            </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canLoadActionData, click: runActionReport\">Load data</button>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <!-- ko if: actionsLoading().length > 0 -->\\r\\n                                                                            <i class=\"fa fa-spinner fa-spin\"></i> (Checking <span data-bind=\"text: actionsLoading().length\"></span> Actions...)\\r\\n                                                                            <!-- /ko -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span10 align-left\">\\r\\n                                                                            <span>Programs open longer than </span><input data-bind=\"value: programLength, valueUpdate: \\'afterkeydown\\', disable: activeSecondColumn\" class=\"underline-input\" /><span> days</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canShowProgramReport, click: showProgramResults\">Show</button>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section>\\r\\n                                                            <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\" data-bind=\"clickToggle: goalInfoVisible\">\\r\\n                                                                    <div class=\"span6\">\\r\\n                                                                        <h3>Goal Information</h3>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\" data-bind=\"visible: goalInfoVisible\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span8 align-left\">\\r\\n                                                                            Load Goal Data\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canLoadGoalData, click: runGoalReport\">Load data</button>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <!-- ko if: goalsLoading().length > 0 -->\\r\\n                                                                            <i class=\"fa fa-spinner fa-spin\"></i> (Checking <span data-bind=\"text: goalsLoading().length\"></span> Goals...)\\r\\n                                                                            <!-- /ko -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section>\\r\\n                                                            <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\" data-bind=\"clickToggle: careMemberInfoVisible\">\\r\\n                                                                    <div class=\"span6\">\\r\\n                                                                        <h3>Care Member Information</h3>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\" data-bind=\"visible: careMemberInfoVisible\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span8 align-left\">\\r\\n                                                                            Load Care Member Data\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canLoadCareMemberData, click: runCareMemberReport\">Load data</button>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <!-- ko if: careMembersLoading().length > 0 -->\\r\\n                                                                            <i class=\"fa fa-spinner fa-spin\"></i> (Checking <span data-bind=\"text: careMembersLoading().length\"></span> CM\\'s...)\\r\\n                                                                            <!-- /ko -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span10 align-left\">\\r\\n                                                                            <span>Individuals by Care Manager / Action Report</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canShowCareManagerReport, click: getPatientsByCareManagerReport\">Show</button>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <!--<div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span10 align-left\">\\r\\n                                                                            <span>Action Count Report</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canShowCareManagerReport, click: actionCountReport\">Show</button>\\r\\n                                                                        </div>\\r\\n                                                                    </div>-->\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section>\\r\\n                                                            <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\" data-bind=\"clickToggle: overviewInfoVisible\">\\r\\n                                                                    <div class=\"span6\">\\r\\n                                                                        <h3>Overview Information</h3>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\" data-bind=\"visible: overviewInfoVisible\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span8\">\\r\\n                                                                            <div class=\"row\">\\r\\n                                                                                <div class=\"span6 grey\">Active Cohort:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"with: selectedCohort\"><span data-bind=\"text: sName\"></span></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\">\\r\\n                                                                                <div class=\"span6 grey\">Total Individuals Loaded:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: patientsList().length\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\">\\r\\n                                                                                <div class=\"push1 span5 grey\">w/o a Care Manager:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (careMembersList().length > 0 ? haveCareManagerPatientsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: withProgPatReport, css: { \\'filter-toggle\\': (programsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">w/ 1+ Program(s):</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (programsList().length > 0 ? haveProgramPatientsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row filter-toggle\" data-bind=\"click: haveGoalPatReport\">\\r\\n                                                                                <div class=\"push1 span5 grey\">w/ 1+ Goal(s):</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (goalsList().length > 0 ? haveGoalPatientsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\">\\r\\n                                                                                <div class=\"span6 grey\">Total Programs fully Loaded:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: programsList().length\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: notStartedProgReport, css: { \\'filter-toggle\\': (programsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">Not Started:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (programsList().length > 0 ? notStartedProgramsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: inProgressProgReport, css: { \\'filter-toggle\\': (programsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">In Progress:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (programsList().length > 0 ? inProgressProgramsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: completedProgReport, css: { \\'filter-toggle\\': (programsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">Completed:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (programsList().length > 0 ? completedProgramsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: closedProgReport, css: { \\'filter-toggle\\': (programsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">Closed:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (programsList().length > 0 ? closedProgramsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\">\\r\\n                                                                                <div class=\"span6 grey\">Total Actions fully Loaded:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: actionsList().length\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: notStartedActionReport, css: { \\'filter-toggle\\': (actionsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">Not Started:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (actionsList().length > 0 ? notStartedActionsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: inProgressActionReport, css: { \\'filter-toggle\\': (actionsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">In Progress:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (actionsList().length > 0 ? inProgressActionsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: completedActionReport, css: { \\'filter-toggle\\': (actionsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">Completed:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (actionsList().length > 0 ? completedActionsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\" data-bind=\"click: closedActionReport, css: { \\'filter-toggle\\': (actionsList().length > 0) }\">\\r\\n                                                                                <div class=\"push1 span5 grey\">Closed:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: (actionsList().length > 0 ? closedActionsList().length : \\'-\\')\"></div>\\r\\n                                                                            </div>\\r\\n                                                                            <div class=\"row\">\\r\\n                                                                                <div class=\"span6 grey\">Total Goals Loaded:</div>\\r\\n                                                                                <div class=\"span6\" data-bind=\"text: goalsList().length\"></div>\\r\\n                                                                            </div>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section>\\r\\n                                                            <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\" data-bind=\"clickToggle: dynamicReportVisible\">\\r\\n                                                                    <div class=\"span6\">\\r\\n                                                                        <h3>Dynamic Query / Report</h3>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\" data-bind=\"visible: dynamicReportVisible\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span12 align-left\">\\r\\n                                                                            <label>Name :</label>\\r\\n                                                                            <input data-bind=\"value: dynamicReportName\" />\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span12 align-left\">\\r\\n                                                                            <label>Description :</label>\\r\\n                                                                            <input data-bind=\"value: dynamicReportDescription\" />\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span12 align-left\">\\r\\n                                                                            <label>Display Columns :</label>\\r\\n                                                                            <textarea data-bind=\"value: dynamicReportColumns\">\\r\\n                                                                            </textarea>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span12 align-left\">\\r\\n                                                                            <label>Query JSON :</label>\\r\\n                                                                            <textarea rows=\"20\" data-bind=\"value: dynamicReportQueryJSON\">\\r\\n                                                                            </textarea>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span10 align-left\">\\r\\n                                                                            <span>Log Query Results to Console</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canShowCareManagerReport, click: getJSONResults\">Log</button>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span10 align-left\">\\r\\n                                                                            <span>Dynamic Report</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span2\">\\r\\n                                                                            <button class=\"btn color small\" data-bind=\"enable: canShowCareManagerReport, click: dynamicReport\">Show</button>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- ko if: activeSecondColumn -->\\r\\n            <div class=\"column open\">\\r\\n                <div class=\"widget-wrapper\">\\r\\n                <!-- ko compose: { model: activeSecondColumn, activationData: { data: activeSecondColumn } } -->\\r\\n                <!-- /ko -->\\r\\n                </div>\\r\\n            </div>\\r\\n        <!-- /ko -->\\r\\n        <!-- ko ifnot: activeSecondColumn -->\\r\\n            <div class=\"column open\">\\r\\n                <div class=\"widget-wrapper\">\\r\\n                    <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                        <div class=\"content\">\\r\\n                            <div class=\"content-fill\">\\r\\n                                <div class=\"wrapper\">\\r\\n                                    <div class=\"content\">\\r\\n                                        <div class=\"header\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <header class=\"ellipsis\">\\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <div class=\"content\">\\r\\n                                                            <p><em>Click \\'Show\\' on the left for to view available reports...</em></p>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/admin/reports/matching.actions.html',[],function () { return '<div class=\"widget open fullscreen\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n\\t\\t                \\t<header>\\r\\n\\t\\t                        <h1>Actions matching report criteria</h1>\\r\\n                                <div class=\"options goals-options\">\\r\\n                                    <button class=\"btn small color\" data-bind=\"click: sendCleanCSV\">Save Selected to CSV</button>\\r\\n                                    <a class=\"toggle\" data-bind=\"click: closeReport\" href=\"#\">\\r\\n                                        <i class=\"icon-cancel\"></i>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n\\t\\t                    </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <table class=\"nowrap\" id=\"matching-programs\">\\r\\n                                        <tbody>\\r\\n                                            <tr>\\r\\n                                                <th class=\"narrow\">\\r\\n                                                    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                                        <span data-bind=\"css: { \\'checked\\': (allSelected() === true) }\">\\r\\n                                                            <input type=\"checkbox\" data-bind=\"checked: allSelected\" />\\r\\n                                                        </span>\\r\\n                                                    </div>\\r\\n                                                </th>\\r\\n                                                <th>#</th>\\r\\n                                                <th>Patient Name</th>\\r\\n                                                <th>Action Name</th>\\r\\n                                                <th>Status</th>\\r\\n                                                <th>Start Date</th>\\r\\n                                                <th>Module Name</th>\\r\\n                                                <th>Program Name</th>\\r\\n                                            </tr>\\r\\n                                            <!-- ko foreach: computedActions -->\\r\\n                                            <tr>\\r\\n                                                <td class=\"narrow\">\\r\\n                                                    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                                        <span data-bind=\"css: { \\'checked\\': selected() === true }\">\\r\\n                                                            <input type=\"checkbox\" data-bind=\"clickToggle: selected\" />\\r\\n                                                        </span>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: $index() + 1\"></span>\\r\\n                                                </td>\\r\\n                                                <td class=\"ellipsis\">\\r\\n                                                    <a data-bind=\"text: module().program().patient().fullName(), attr: { href: \\'#patients/\\' + module().program().patientId(), \\'title\\': module().program().patient().fullName }\"></a>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: name\"></span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: elementStateModel().name\"></span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"DateOrNothing: attrStartDate\"></span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: module().name\"></span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: module().program().name\"></span>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                            <!-- /ko -->\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/admin/reports/matching.patients.html',[],function () { return '<div class=\"widget open fullscreen\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n\\t\\t                \\t<header>\\r\\n\\t\\t                        <h1>Individuals matching report criteria</h1>\\r\\n\\t\\t                        <div class=\"options goals-options\">\\r\\n                                    <button class=\"btn small color\" data-bind=\"click: sendCleanCSV\">Save Selected to CSV</button>\\r\\n\\t\\t                            <a class=\"toggle\" data-bind=\"click: closeReport\" href=\"#\">\\r\\n\\t\\t                                <i class=\"icon-cancel\"></i>\\r\\n\\t\\t                            </a>\\r\\n\\t\\t                        </div>\\r\\n\\t\\t                    </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <table id=\"matching-patients\" class=\"nowrap\">\\r\\n                                        <tbody>\\r\\n                                            <tr>\\r\\n                                                <th class=\"narrow\">\\r\\n                                                    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                                        <span data-bind=\"css: { \\'checked\\': (allSelected() === true) }\">\\r\\n                                                            <input type=\"checkbox\" data-bind=\"checked: allSelected\" />\\r\\n                                                        </span>\\r\\n                                                    </div>\\r\\n                                                </th>\\r\\n                                                <th>#</th>\\r\\n                                                <th>Individual Name</th>\\r\\n                                                <th>Gender</th>\\r\\n                                                <th>DOB</th>\\r\\n                                                <th># of Goals<span data-bind=\"if: !goalsLoaded()\">(Data not Loaded)</span></th>\\r\\n                                                <th># of Programs<span data-bind=\"if: !programsLoaded()\">(Data not Loaded)</span></th>\\r\\n                                            </tr>\\r\\n                                            <!-- ko foreach: computedPatients -->\\r\\n                                            <tr>\\r\\n                                                <td class=\"narrow\">\\r\\n                                                    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                                        <span data-bind=\"css: { \\'checked\\': selected() === true }\">\\r\\n                                                            <input type=\"checkbox\" data-bind=\"clickToggle: selected\" />\\r\\n                                                        </span>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: $index() + 1\"></span>\\r\\n                                                </td>\\r\\n                                                <td class=\"ellipsis\">\\r\\n                                                    <a data-bind=\"text: fullName(), attr: { href: \\'#patients/\\' + id(), \\'title\\': fullName }\"></a>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <img alt=\"Individual small\" class=\"pull-left\" data-bind=\"attr: { src: genderModel().SmallImgSrc }\" />\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: dOB\"></span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: $parent.goalsLoaded() ? goals().length : \\'-\\'\"></span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: $parent.programsLoaded() ? programs().length : \\'-\\'\"></span>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                            <!-- /ko -->\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/admin/reports/matching.programs.html',[],function () { return '<div class=\"widget open fullscreen\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n\\t\\t                \\t<header>\\r\\n\\t\\t                        <h1>Programs matching report criteria</h1>\\r\\n                                <div class=\"options goals-options\">\\r\\n                                    <button class=\"btn small color\" data-bind=\"click: sendCleanCSV\">Save Selected to CSV</button>\\r\\n                                    <a class=\"toggle\" data-bind=\"click: closeReport\" href=\"#\">\\r\\n                                        <i class=\"icon-cancel\"></i>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n\\t\\t                    </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <table class=\"nowrap\" id=\"matching-programs\">\\r\\n                                        <tbody>\\r\\n                                            <tr>\\r\\n                                                <th class=\"narrow\">\\r\\n                                                    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                                        <span data-bind=\"css: { \\'checked\\': (allSelected() === true) }\">\\r\\n                                                            <input type=\"checkbox\" data-bind=\"checked: allSelected\" />\\r\\n                                                        </span>\\r\\n                                                    </div>\\r\\n                                                </th>\\r\\n                                                <th>#</th>\\r\\n                                                <th>Individual Name</th>\\r\\n                                                <th>Program Name</th>\\r\\n                                                <th>Start Date</th>\\r\\n                                                <th>Duration</th>\\r\\n                                            </tr>\\r\\n                                            <!-- ko foreach: computedPrograms -->\\r\\n                                            <tr>\\r\\n                                                <td class=\"narrow\">\\r\\n                                                    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                                        <span data-bind=\"css: { \\'checked\\': selected() === true }\">\\r\\n                                                            <input type=\"checkbox\" data-bind=\"clickToggle: selected\" />\\r\\n                                                        </span>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: $index() + 1\"></span>\\r\\n                                                </td>\\r\\n                                                <td class=\"ellipsis\">\\r\\n                                                    <a data-bind=\"text: patient().fullName(), attr: { href: \\'#patients/\\' + id(), \\'title\\': patient().fullName }\"></a>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: name\"></span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"DateOrNothing: attrStartDate\"></span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span data-bind=\"text: duration\"></span> day(s).\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                            <!-- /ko -->\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/admin/reports/query.builder.html',[],function () { return '<section data-type=\"flex\">\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header class=\"ellipsis\">\\r\\n                                                <h1>Query Builder</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <div class=\"row pad-top\">\\r\\n                                                            <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\" data-bind=\"\">\\r\\n                                                                    <div class=\"span6\">\\r\\n                                                                        <h3>Main Type Information</h3>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                    \\t<select data-bind=\"options: structuraltypes, value: selectedMainType, optionsText: \\'shortName\\', optionsCaption: \\'Choose...\\'\"></select>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section>\\r\\n                                                            <!-- ko with: newQueryReport -->\\r\\n                                                            \\t<!-- ko compose: { model: \\'viewmodels/admin/reports/entity.template\\', activationData: { entityType: entityType }  } -->\\r\\n\\r\\n                                                            \\t<!-- /ko -->\\r\\n                                                            <!-- /ko -->\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"column open\">\\r\\n        <div class=\"widget-wrapper\">\\r\\n            <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"content-fill\">\\r\\n                        <div class=\"wrapper\">\\r\\n                            <div class=\"content\">\\r\\n                                <div class=\"header\">\\r\\n                                    <div class=\"table-cell\">\\r\\n                                        <header class=\"ellipsis\">\\r\\n                                        </header>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\"table-row\">\\r\\n                                    <div class=\"table-cell\">\\r\\n                                        <div class=\"body\">\\r\\n                                            <div class=\"content\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <p><em>Click \\'Show\\' on the left for to view available reports...</em></p>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/admin/widgets/delete.individuals.list.html',[],function () { return '<div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"fixed\">\\r\\n                                <div class=\"content\">                               \\r\\n                                    <div class=\"pad-vertical\">\\r\\n                                        <h1>Cohorts</h1>\\r\\n                                        <div class=\"row\">\\r\\n                                            <div class=\"span3\" data-bind=\"chsnsingle: { options: cohortsList, value: selectedCohort, text: \\'sName\\', label: \\'cohort\\' }\"></div>\\r\\n                                        </div>\\r\\n                                        <div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span8\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input data-bind=\"value: cohortFilter, valueUpdate: \\'afterkeydown\\', disable: !selectedCohort()\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Search\" type=\"search\" data-phyautomation=\"cohort-patient-search\" style=\"width: 87%;\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-cancel\" data-bind=\"visible: cohortFilter, click: clearCohortFilter\"></i>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"body\" style=\"min-height: 589px;\">\\r\\n                                        <div class=\"content\">\\r\\n                                            <!-- ko foreach: patientsList -->\\r\\n                                            <div class=\"row ellipsis\" data-bind=\"click: $parent.choosePatient\">\\r\\n                                                <div class=\"patient-list\">\\r\\n                                                    <div class=\"ellipsis\">\\r\\n                                                        <img alt=\"Patient small\" class=\"pull-left\" data-bind=\"attr: { src: genderModel().SmallImgSrc }\" />\\r\\n                                                        <a href=\"#\" class=\"line\" data-bind=\"text: fullLastName() + \\', \\' + fullFirstName(), attr: { \\'title\\': (fullLastName() + \\', \\' + fullFirstName()) }\"></a>\\r\\n                                                        <span class=\"line grey pad horizontal\" data-bind=\"with: dOB\"><span data-bind=\"text: \\'(\\' + $data + \\')\\', attr: { \\'title\\': $data }\" data-phyautomation=\"dob\"></span></span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                                            <!-- /ko -->\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                                            <div class=\"row\" data-bind=\"visible: canLoadMoreCohortPatients\">\\r\\n                                                <div class=\"push2 span8\">\\r\\n                                                    <button class=\"small\" data-bind=\"click: loadMoreCohortPatients\">\\r\\n                                                        Load more patients...\\r\\n                                                    </button>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: showNoResultsMessage\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: noResultsMessage\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/authenticate.html',[],function () { return '<section>\\r\\n\\r\\n</section>';});\n\n","\ndefine('text!views/columns/flexcolumn.html',[],function () { return '<div class=\"column\" data-bind=\"click: $parent.setOpenColumn, css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n    <!-- ko foreach: activeWidgets -->\\r\\n        <!-- ko compose: { model: widgetroute, activationData: { data: $data } } -->\\r\\n        <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/columns/fullcolumn.html',[],function () { return '<div class=\"column\" data-bind=\"foreach: activeWidgets\">\\r\\n    <!-- ko compose: { model: widgetroute, activationData: { data: $data } } -->\\r\\n    <!-- /ko -->\\r\\n</div> ';});\n\n","\ndefine('text!views/home/contacts/contact.details.html',[],function () { return '<div>\\r\\n\\t<em class=\"grey\" data-bind=\"visible: !contact()\">No contact selected</em>\\r\\n\\t<nav class=\"tabs\" data-bind=\"visible: contact\">\\r\\n\\t\\t<!-- ko foreach: detailsTabs -->\\r\\n\\t\\t\\t<span data-bind=\"css: {\\'active\\': $parent.activeDetailsTab() == name}, \\r\\n\\t\\t\\t\\t\\t\\t\\tclick: function(){ $parent.setActiveDetailsTab( name ) }, clickBubble: false\">\\r\\n\\t\\t\\t\\t<!-- ko if: imgAlt -->\\r\\n\\t\\t\\t\\t\\t<img data-bind=\"attr:{ alt: imgAlt, src: imgSource }\" style=\"vertical-align: middle;\"/>\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t<!-- ko if: cssClass -->\\r\\n\\t\\t\\t\\t\\t<i data-bind=\"attr:{ class: cssClass }\"></i>\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t<a role=\"menuitem\" data-bind=\"text: name\"></a>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t</nav>\\r\\n\\r\\n\\t<div class=\"content\" data-bind=\"with: contact\">\\r\\n\\t\\t<div class=\"row\" data-bind=\"visible: $parent.activeDetailsTab() === \\'Profile\\'\">\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: fullName\">\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"text: fullName\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div data-bind=\"with: deceased\">\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: (name() == \\'Yes\\')\">\\r\\n\\t\\t\\t\\t\\t\\t<strong class=\"span2\">Deceased:</strong>\\r\\n\\t\\t\\t\\t\\t\\t<span>Yes</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"pad-left\">\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<ul class=\"row grey pad-left\" style=\"list-style-type: disc;\" data-bind=\"visible: (detailedSubTypes().length > 0)\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- ko foreach: detailedSubTypes -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\"pad-top\" data-bind=\"text: $data\"></span>\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: (gender() && gender() !== \\'N\\')\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span2\">Gender:</strong>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"text: gender\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"with: contactStatus\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span2\">Status:</strong>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"text: name()\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: createdOn\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span2\">Created:</strong>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: createdBy().preferredName\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: updatedOn\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span2\">Updated:</strong>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: (updatedBy()? updatedBy().preferredName : \\'\\')\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: dataSource\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span2\">System:</strong>\\r\\n\\t\\t\\t\\t\\t<span class=\"span9\"><span data-bind=\"text: dataSource\"></span>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row\" data-bind=\"visible: $parent.activeDetailsTab() === \\'Comm\\'\">\\r\\n\\t\\t\\t<!-- ko foreach: $parent.primaryCommunications -->\\r\\n\\t\\t\\t<div class=\"row pad-top\" data-bind=\"compose: template\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<strong class=\"span3 grey\">Mode:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<em class=\"row grey\" data-bind=\"visible: !prefCommMethods()\">Unknown</em>\\r\\n\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"visible: prefCommMethods, text: prefCommMethods, attr: { \\'title\\': prefCommMethods }\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<strong class=\"span3 grey\">Days:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<em class=\"row grey\" data-bind=\"visible: !preferredDaysOfWeek()\">Unknown</em>\\r\\n\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"visible: preferredDaysOfWeek, text: preferredDaysOfWeek, attr: { \\'title\\': preferredDaysOfWeek }\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<strong class=\"span3 grey\">Time:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<em class=\"row grey\" data-bind=\"visible: !preferredTimesOfDay()\">Unknown</em>\\r\\n\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"visible: preferredTimesOfDay, text: preferredTimesOfDay, attr: { \\'title\\': preferredTimesOfDay }\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"with: timeZone\">\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t<strong class=\"span3 grey\">Time Zone:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: name, attr: { \\'title\\': name }\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<strong class=\"span3 grey\">Language:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<em class=\"row grey\" data-bind=\"visible: !preferredLanguage()\">Unknown</em>\\r\\n\\t\\t\\t\\t\\t<!-- ko with: preferredLanguage -->\\r\\n\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"text: name, attr: { \\'title\\': name }\"></span>\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/home/contacts/index.html',[],function () { return '<div class=\"route\">\\r\\n\\t<section data-type=\"flex\">    \\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<div class=\"column\" data-bind=\"css: { \\'open\\': leftColumnOpen() }\">\\r\\n\\t\\t\\t\\t<div class=\"widget-wrapper\">\\r\\n\\t\\t\\t\\t\\t<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'contactspanel\\' }, columnSizer: { triggers: {a: myContactSearchResults(), b: selectedContact()} }\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"content-fill\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"wrapper\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"header\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<header class=\"ellipsis\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1>Contacts</h1>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"controls\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle grey\" data-bind=\"visible: showResetFilters()\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-filter_clear pointer blue toggle\" data-bind=\"click: resetFilters\" title=\"Clear Filters\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle\" \">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-plus\" data-bind=\"click: addContact, clickBubble: false\" title=\"Add\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: toggleOpenColumn, enable: leftColumnOpen(), clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                        <div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: toggleOpenColumn, enable: !leftColumnOpen(), clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'contactspanel\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- search area -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content pad-left\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row validation-summary\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"validation-errors\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h5 data-bind=\"visible: !canSearchContacts()\">Please select a criteria</h5>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span1 align-right gray\">Contact Type</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3 pad-left\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle:{ options: contactTypes, value: criteriaContactTypeId, idValue: \\'id\\', text: \\'name\\', label: \\'criteriaContactType\\'}\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">First Name</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3 pad-left\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"text\" data-bind=\"value: criteriaFirstName, valueUpdate: \\'afterkeydown\\'\" placeholder=\"first name\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">Last Name</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3 pad-left\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"text\" data-bind=\"value: criteriaLastName, valueUpdate: \\'afterkeydown\\'\" placeholder=\"last name\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <label class=\"span4\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Phone</span>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input data-bind=\"phone: criteriaPhone, value: number, valueUpdate: \\'afterkeydown\\', css: { invalid: !isValid() }\" placeholder=\"XXX-XXX-XXXX\" title=\"XXX-XXX-XXXX\"/>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">Type</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3 pad-left\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"multiselect: { options: contactSubTypes, values: criteriaContactSubTypes, text: \\'name\\', idValue: \\'id\\', label: \\'criteriaContactSubTypes\\' }\"></div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">Status</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3 pad-left\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"multiselect: { options: contactStatuses, values: criteriaContactStatuses, text: \\'name\\', idValue: \\'id\\', label: \\'criteriaContactStatuses\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\"btn color pull-right\" data-bind=\"click: searchContacts, enable: canSearchContacts\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-search\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"pad-left\">Search</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"line\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"header\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<header class=\"ellipsis\" data-bind=\"visible: (myContactSearchResults().length > 0)\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1>Results<span data-bind=\"text: contactsShowingText\"></span></h1>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<em class=\"grey pad-left\" data-bind=\"visible: noResultsFound()\">No records meet your search criteria</em>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"header grey\" data-bind=\"visible: (myContactSearchResults().length > 0)\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"line\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span2\">Last Name</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span2\">First Name</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span8\">Summary</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"body\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content\" style=\"padding-top: 0;\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- list results area -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\"row pad-top\"></div> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1 data-bind=\"visible: searching()\">Searching...</h1>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"visible: !searching()\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--ko compose: \"templates/contactSearchResults.panel.html\" --><!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"column\" data-bind=\"css: { \\'open\\': !leftColumnOpen() }\">\\r\\n\\t\\t\\t\\t<div class=\"widget-wrapper\">\\r\\n\\t\\t\\t\\t\\t<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'contactdetails\\' }, columnSizer: true\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"content-fill\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"wrapper\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"header\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1>Details<span data-bind=\"text: (selectedContact() ? \\' - \\' + selectedContact().firstName() + \\' \\' + selectedContact().lastName() : \\'\\')\"></h1>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"controls\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko with: selectedContact -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle\" data-bind=\"click: $parent.editContact, clickBubble: false, visible: $parent.showEditButton\" style=\"margin-right: 4px;\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"#\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-edit\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: showDeleteButton -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\"toggle\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: deleteContact, clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-cancel red\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'contactdetails\\') }, clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</header>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"body\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/home/contacts/contact.details\\', activationData:{ contact: selectedContact } } -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</section>\\r\\n</div>';});\n\n","\ndefine('text!views/home/index.html',[],function () { return '<div class=\"route\">\\r\\n    <section class=\"open\" data-type=\"fixed\" data-bind=\"visible: cohortPatientSelectPanelShowing\">\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                <div class=\"content\">\\r\\n                    <header>\\r\\n                        <h1>Cohorts</h1>\\r\\n                    </header>\\r\\n                    <div class=\"body\">\\r\\n                        <table id=\"filters\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <th colspan=\"3\">Choose up to three:</th>\\r\\n                                </tr>\\r\\n                                <!-- ko foreach: computedCohorts -->\\r\\n                                <tr class=\"condition active\" data-bind=\"attr: { \\'id\\': \\'condition_\\' + sName() }\">\\r\\n                                    <td class=\"narrow\">\\r\\n                                        <div class=\"checker\">\\r\\n                                            <span class=\"checked\" data-bind=\"css: { \\'checked\\': isChecked }\">\\r\\n                                                <input checked=\"\" data-comparator=\"contains\" data-key=\"sName\" type=\"checkbox\" data-bind=\"checked: isChecked, attr: { \\'value\\': sName }\">\\r\\n                                            </span>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td class=\"narrow\">\\r\\n                                        <div class=\"indicator\" style=\"background-color: rgb(31, 119, 180); background-position: initial initial; background-repeat: initial initial;\"></div>\\r\\n                                    </td>\\r\\n                                    <td data-bind=\"text: sName\"></td>\\r\\n                                </tr>\\r\\n                                <!-- /ko -->\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n    <!-- ko if: navigation.currentSubRoute() -->\\r\\n    <!-- ko compose: { model: navigation.currentSubRoute().subroute } -->\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/home/myhome/myhome.html',[],function () { return '<div class=\"route\">\\r\\n    <section class=\"highlights\">\\r\\n        <h2>Care Manager Home</h2>\\r\\n    </section>\\r\\n    <section data-type=\"flex\">\\r\\n        <div>\\r\\n            <div class=\"column\" data-bind=\"css: { \\'open\\': leftColumnOpen() }\">\\r\\n                <div class=\"widget-wrapper\">\\r\\n                    <div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'calendar\\' }, columnSizer: true\">\\r\\n                        <div class=\"content\">\\r\\n                            <div class=\"content-fill\">\\r\\n                                <div class=\"wrapper\">\\r\\n                                    <div class=\"content\">\\r\\n                                        <div class=\"header\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <header>\\r\\n                                                    <h1>Calendar</h1>\\r\\n                                                    <div class=\"controls\">\\r\\n                                                        <div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: toggleOpenColumn, enable: leftColumnOpen(), clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                        <div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: toggleOpenColumn, enable: !leftColumnOpen(), clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'calendar\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <div class=\"calendar\" data-bind=\"fullCalendar: calendarOptions\">\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"column\" data-bind=\"css: { \\'open\\': !leftColumnOpen() }\">\\r\\n                <div class=\"widget-wrapper\">\\r\\n                    <div class=\"widget\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'myToDoList\\', \\'open\\': myToDoListOpen }, columnSizer: {triggers: myToDoListOpen}\">\\r\\n                        <div class=\"content\">\\r\\n                            <div class=\"content-fill\">\\r\\n                                <div class=\"wrapper\">\\r\\n                                    <div class=\"content\">\\r\\n                                        <div class=\"header filter-toggle\">\\r\\n                                            <div class=\"table-cell\" data-bind=\"click: function () { toggleWidgetOpen(myToDoListOpen) }\">\\r\\n                                                <header>\\r\\n                                                    <h1>My To-Do List - <span data-bind=\"text: todosShowingText\"></span></h1>\\r\\n                                                    <div class=\"controls pad-left\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-plus\" data-bind=\"click: addToDo, clickBubble: false\" title=\"Add\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                                                       \\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'myToDoList\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                    </div>                                                   \\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\" data-bind=\"compose: { model: \\'viewmodels/templates/todo.panel\\', \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tactivationData: { todos: myToDos, columns: activeTodoColumns, toggleSort: toggleTodoSort, \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectedSortColumn: selectedTodoSortColumn, canSort: true,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tloadMoreTodos: loadMoreTodos, canLoadMoreTodos: canLoadMoreTodos, \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmaxToToDosLoaded: maxToToDosLoaded, isBackendSort:true, todosReloading: todosReloading} }\">\\r\\n                                                    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t loadPrevTodos: loadPrevTodos, canLoadPrevTodos: canLoadPrevTodos  -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>                    \\r\\n                    <div class=\"widget\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'myInterventionsList\\', \\'open\\': myInterventionListOpen }, columnSizer: {triggers: myInterventionListOpen}\">\\r\\n                        <div class=\"content\">\\r\\n                            <div class=\"content-fill\">\\r\\n                                <div class=\"wrapper\">\\r\\n                                    <div class=\"content\">\\r\\n                                        <div class=\"header filter-toggle\">\\r\\n                                            <div class=\"table-cell\" data-bind=\"click: function () { toggleWidgetOpen(myInterventionListOpen) }\">\\r\\n                                                <header>\\r\\n                                                    <h1>My Interventions - <span data-bind=\"text: myInterventions().length + \\' showing\\'\"></span></h1>\\r\\n                                                    <div class=\"controls pad-left\">\\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'myInterventionsList\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div class=\"options\">\\r\\n                                                    </div>\\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\" data-bind=\"compose: { model: \\'viewmodels/templates/intervention.panel\\', activationData: { interventions: myInterventions, columns: activeInterventionColumns, toggleSort: toggleInterventionSort, selectedSortColumn: selectedInterventionSortColumn, canSort: true } }\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"widget\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'workList\\', \\'open\\': myWorkListOpen }, columnSizer: {triggers: myWorkListOpen}\">\\r\\n                        <div class=\"content\">\\r\\n                            <div class=\"content-fill\">\\r\\n                                <div class=\"wrapper\">\\r\\n                                    <div class=\"content\">\\r\\n                                        <div class=\"header filter-toggle\">\\r\\n                                            <div class=\"table-cell\" data-bind=\"click: function () { toggleWidgetOpen(myWorkListOpen) }\">\\r\\n                                                <header>\\r\\n                                                    <h1 class=\"nowrap\">Work List</h1>\\r\\n                                                    <div class=\"controls pad-left\">\\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'workList\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div class=\"options myhome\">\\r\\n                                                        <div data-bind=\"chsnsingle: { options: cohortsList, value: selectedCohort, text: \\'sName\\', label: \\'cohort\\', disabled: !myWorkListOpen() }, click: function(){}, clickBubble: false\"></div>\\r\\n                                                    </div>\\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <table class=\"nowrap\">\\r\\n                                                            <tbody>\\r\\n                                                                <tr>\\r\\n                                                                    <th class=\"narrow\">\\r\\n                                                                        <div class=\"checker\" id=\"uniform-selectAll\"><span><input id=\"selectAll\" name=\"selectAll\" type=\"checkbox\" value=\"1\"></span></div>\\r\\n                                                                    </th>\\r\\n                                                                    <th>Name</th>\\r\\n                                                                    <th>DOB</th>\\r\\n                                                                    <th>Age</th>\\r\\n                                                                    <th>Gender</th>\\r\\n                                                                </tr>\\r\\n                                                                <!-- ko foreach: patientsList -->\\r\\n                                                                <tr>\\r\\n                                                                    <td class=\"narrow\">\\r\\n                                                                        <div class=\"checker\" id=\"uniform-selected\">\\r\\n                                                                            <span>\\r\\n                                                                                <input id=\"selected\" name=\"selected\" type=\"checkbox\" value=\"1\">\\r\\n                                                                            </span>\\r\\n                                                                        </div>\\r\\n                                                                    </td>\\r\\n                                                                    <td class=\"ellipsis\">\\r\\n                                                                        <a data-bind=\"text: fullLastName() + \\', \\' + fullFirstName(), attr: { href: \\'#patients/\\' + id(), \\'title\\': (fullLastName() + \\', \\' + fullFirstName()) }\"></a>\\r\\n                                                                    </td>\\r\\n                                                                    <td>\\r\\n                                                                        <span data-bind=\"with: dOB\"><span data-bind=\"text: $data, attr: { \\'title\\': $data }\" data-phyautomation=\"dob\"></span></span>\\r\\n                                                                    </td>\\r\\n                                                                    <td>\\r\\n                                                                        <span data-bind=\"text: age\" data-phyautomation=\"age\"></span>\\r\\n                                                                    </td>\\r\\n                                                                    <td>\\r\\n                                                                        <span class=\"line\" data-bind=\"text: genderModel().Description\"></span>\\r\\n                                                                    </td>\\r\\n                                                                </tr>\\r\\n                                                                <!-- /ko -->\\r\\n                                                            </tbody>\\r\\n                                                        </table>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>                    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n</div>';});\n\n","\ndefine('text!views/home/population/index.html',[],function () { return '<section class=\"open\" data-type=\"fixed\">\\r\\n\\r\\n    <div class=\"column \">\\r\\n\\r\\n        <div class=\"widget-wrapper\">\\r\\n\\r\\n            <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n\\r\\n                <div class=\"content\" style=\"height: 629px;\">\\r\\n\\r\\n                    <div class=\"content-fill\">\\r\\n\\r\\n                        <div class=\"wrapper\">\\r\\n\\r\\n                            <div class=\"content\" style=\"height: 629px;\">\\r\\n\\r\\n                                <div class=\"header\">\\r\\n\\r\\n                                    <div class=\"table-cell\">\\r\\n\\r\\n                                        <header>\\r\\n                                            <h1>Cohorts</h1>\\r\\n                                        </header>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\"table-row\">\\r\\n\\r\\n                                    <div class=\"table-cell\">\\r\\n\\r\\n                                        <div class=\"body\" style=\"height: 589px;\">\\r\\n\\r\\n                                            <div class=\"content\">\\r\\n                                                <table id=\"filters\"><tbody>\\r\\n                                                    <tr>\\r\\n                                                        <th colspan=\"3\">Choose up to three:\\r\\n                                                        </th>\\r\\n                                                    </tr>\\r\\n                                                    <tr class=\"condition active\" id=\"condition_7\">\\r\\n                                                        <td class=\"narrow\">\\r\\n                                                            <div class=\"checker\">\\r\\n                                                                <span class=\"checked\">\\r\\n                                                                    <input checked=\"true\" data-comparator=\"contains\" data-key=\"conditions\" type=\"checkbox\" value=\"7\">\\r\\n                                                                </span>\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                        <td class=\"narrow\">\\r\\n                                                            <div class=\"indicator\" style=\"background: rgb(31, 119, 180);\">\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                        <td>Arthritis\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    <tr class=\"condition active\" id=\"condition_1\">\\r\\n                                                        <td class=\"narrow\">\\r\\n                                                            <div class=\"checker\">\\r\\n                                                                <span class=\"checked\">\\r\\n                                                                    <input checked=\"\" data-comparator=\"contains\" data-key=\"conditions\" type=\"checkbox\" value=\"1\">\\r\\n                                                                </span>\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                        <td class=\"narrow\">\\r\\n                                                            <div class=\"indicator\" style=\"background: rgb(255, 127, 14);\">\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                        <td>Asthma\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    <tr class=\"condition\" id=\"condition_2\">\\r\\n                                                        <td class=\"narrow\">\\r\\n                                                            <div class=\"checker\">\\r\\n                                                                <span>\\r\\n                                                                    <input data-comparator=\"contains\" data-key=\"conditions\" type=\"checkbox\" value=\"2\">\\r\\n                                                                </span>\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                        <td class=\"narrow\">\\r\\n                                                            <div class=\"indicator\" style=\"background: rgb(44, 160, 44);\">\\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                        <td>Diabetes\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                            </table>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n</section>\\r\\n<section data-type=\"flex\">\\r\\n    <div class=\"column open\">\\r\\n        <div class=\"widget-wrapper\">\\r\\n\\r\\n            <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n\\r\\n                <div class=\"content\" style=\"height: 629px;\">\\r\\n\\r\\n                    <div class=\"content-fill\">\\r\\n\\r\\n                        <div class=\"wrapper\">\\r\\n\\r\\n                            <div class=\"content\" style=\"height: 629px;\">\\r\\n\\r\\n                                <div class=\"header\">\\r\\n\\r\\n                                    <div class=\"table-cell\">\\r\\n\\r\\n                                        <header><h1>Population</h1></header>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\"table-row\">\\r\\n\\r\\n                                    <div class=\"table-cell\">\\r\\n\\r\\n                                        <div class=\"body\" style=\"height: 589px;\">\\r\\n\\r\\n                                            <div class=\"content\">\\r\\n                                                <svg id=\"visualizer\" height=\"576\" width=\"576\">\\r\\n                                                </svg>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"column \">\\r\\n        <div class=\"widget-wrapper\">\\r\\n\\r\\n            <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n\\r\\n                <div class=\"content\" style=\"height: 629px;\">\\r\\n\\r\\n                    <div class=\"content-fill\">\\r\\n\\r\\n                        <div class=\"wrapper\">\\r\\n\\r\\n                            <div class=\"content\" style=\"height: 629px;\">\\r\\n\\r\\n                                <div class=\"header\">\\r\\n\\r\\n                                    <div class=\"table-cell\">\\r\\n\\r\\n                                        <header><h1>Individuals</h1>\\r\\n\\r\\n                                            <div class=\"options\">\\r\\n                                                <select class=\"dark\" data-placeholder=\"Actions\" id=\"actions\" name=\"actions\" style=\"display: none;\">\\r\\n\\r\\n                                                    <option value=\"\"></option>\\r\\n\\r\\n\\r\\n                                                    <option value=\"Send Campaign\">Send Campaign</option>\\r\\n\\r\\n\\r\\n                                                    <option value=\"Assign Care Program\">Assign Care Program</option>\\r\\n\\r\\n\\r\\n                                                    <option value=\"Export\">Export</option>\\r\\n\\r\\n\\r\\n                                                    <option value=\"Print\">Print</option>\\r\\n                                                </select>\\r\\n\\r\\n                                                <div class=\"chosen-container chosen-container-single dark chosen-container-single-nosearch\" style=\"width: 142px;\" title=\"\" id=\"actions_chosen\"><a class=\"chosen-single chosen-default\" tabindex=\"-1\">\\r\\n\\r\\n                                                    <span>Actions\\r\\n                                                    </span>\\r\\n\\r\\n                                                    <div><b></b>\\r\\n                                                    </div></a>\\r\\n\\r\\n                                                    <div class=\"chosen-drop\">\\r\\n\\r\\n                                                        <div class=\"chosen-search\">\\r\\n                                                            <input type=\"text\" autocomplete=\"off\" readonly=\"\">\\r\\n                                                        </div>\\r\\n                                                        <ul class=\"chosen-results\">\\r\\n                                                        </ul>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div></header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\"table-row\">\\r\\n\\r\\n                                        <div class=\"table-cell\">\\r\\n\\r\\n                                            <div class=\"body\">\\r\\n\\r\\n                                                <div class=\"content\">\\r\\n                                                    <table class=\"nowrap\">\\r\\n                                                        <thead>\\r\\n                                                            <tr>\\r\\n                                                                <th class=\"narrow\">\\r\\n                                                                    <div class=\"checker\" id=\"uniform-selectAll\">\\r\\n                                                                        <span>\\r\\n                                                                            <input id=\"selectAll\" name=\"selectAll\" type=\"checkbox\" value=\"1\">\\r\\n                                                                        </span>\\r\\n                                                                    </div>\\r\\n                                                                </th>\\r\\n                                                                <th class=\"narrow\">ID\\r\\n                                                                </th>\\r\\n                                                                <th>Individual Name\\r\\n                                                                </th>\\r\\n                                                                <th>Care Gaps\\r\\n                                                                </th>\\r\\n                                                            </tr>\\r\\n                                                        </thead>\\r\\n                                                        <tbody>\\r\\n                                                            <tr data-id=\"1\">\\r\\n                                                                <td class=\"narrow\">\\r\\n                                                                    <div class=\"checker\" id=\"uniform-selected\">\\r\\n                                                                        <span>\\r\\n                                                                            <input id=\"selected\" name=\"selected\" type=\"checkbox\" value=\"1\">\\r\\n                                                                        </span>\\r\\n                                                                    </div>\\r\\n                                                                </td>\\r\\n                                                                <td class=\"narrow\">1\\r\\n                                                                </td>\\r\\n                                                                <td>\\r\\n                                                                    <a href=\"/patients/1/care_plans\">Billy Condo</a>\\r\\n                                                                </td>\\r\\n                                                                <td>3\\r\\n                                                                </td>\\r\\n                                                            </tr>\\r\\n                                                            <tr data-id=\"2\" style=\"display: none;\">\\r\\n                                                                <td class=\"narrow\">\\r\\n                                                                    <div class=\"checker\" id=\"uniform-selected\">\\r\\n                                                                        <span>\\r\\n                                                                            <input id=\"selected\" name=\"selected\" type=\"checkbox\" value=\"1\">\\r\\n                                                                        </span>\\r\\n                                                                    </div>\\r\\n                                                                </td>\\r\\n                                                                <td class=\"narrow\">2\\r\\n                                                                </td>\\r\\n                                                                <td>\\r\\n                                                                    <a href=\"/patients/1/care_plans\">Johnny Hairband</a>\\r\\n                                                                </td>\\r\\n                                                                <td>2\\r\\n                                                                </td>\\r\\n                                                            </tr>\\r\\n                                                        </tbody>\\r\\n                                                    </table>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/home/todos/index.html',[],function () { return '<div class=\"route\">\\r\\n    <section data-type=\"flex\">\\r\\n        <div>\\r\\n            <div class=\"column\" data-bind=\"css: { \\'open\\': leftColumnOpen() }\">\\r\\n                <div class=\"widget-wrapper\">\\r\\n                    <div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'todopanel\\' }, columnSizer: {triggers: {a: selectedView().name(), b: filtersHeaderOpen(), c: filtersOpen()}}\">\\r\\n                        <div class=\"content\">\\r\\n                            <div class=\"content-fill\">\\r\\n                                <div class=\"wrapper\">\\r\\n                                    <div class=\"content\">\\r\\n                                        <div class=\"filters\" data-bind=\"visible: (filtersHeaderOpen())\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"wrapper\">\\r\\n                                                    <section class=\"pinned\">\\r\\n                                                        <div class=\"row\">\\r\\n                                                            <div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"span1 gray\">Filter:</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span10\" style=\"display: inline-block\" data-bind=\"chsnsingle: { options: views, value: selectedView, text: \\'name\\', label: \\'programs\\' }\"></div>                                                                \\r\\n                                                            </div>\\r\\n                                                            <div class=\"span4 grey\">\\r\\n                                                                <label data-bind=\"visible: (selectedCategories().length > 0 || selectedPriorities().length > 0)\">\\r\\n                                                                    <i class=\"fa fa-filter red\"></i>\\r\\n                                                                    Filters applied\\r\\n                                                                </label>\\r\\n                                                                <span style=\"color: whitesmoke;\">-</span>\\r\\n                                                            </div>\\r\\n                                                            <div class=\"span2 grey\">\\r\\n                                                                <div class=\"pull-right filters\" data-bind=\"visible: (selectedCategories().length > 0 || selectedPriorities().length > 0)\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-filter_clear pointer blue toggle\" data-bind=\"click: resetFilters, enable: (selectedCategories().length > 0 || selectedPriorities().length > 0)\" style=\"position: inherit;\" title=\"Clear Filter\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>&nbsp</span>\\r\\n                                                                </div>\\r\\n                                                                <!-- <span style=\"color: whitesmoke;\">-</span> -->\\r\\n                                                            </div>                                                            \\r\\n                                                        </div>\\r\\n                                                    </section>\\r\\n                                                    <div class=\"filter-content\" data-bind=\"visible: filtersOpen\">\\r\\n                                                        <section>\\r\\n                                                            <div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span2 grey\" data-bind=\"visible: selectedView() && selectedView().type() === \\'todos\\'\">Priority:</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                <div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span2 grey\">Category:</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                            </div>\\r\\n                                                            <div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span6\" data-bind=\"multiselect: { options: priorities, values: selectedPriorities, text: \\'levelName\\', label: \\'categories\\', idValue: \\'id\\' }, visible: selectedView() && selectedView().type() === \\'todos\\'\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span10\" data-bind=\"multiselect: { options: categories, values: selectedCategories, text: \\'name\\', label: \\'categories\\', idValue: \\'id\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                            </div>\\r\\n                                                        </section>\\r\\n                                                    </div>\\r\\n                                                    <div class=\"toggle\" data-bind=\"clickToggle: filtersOpen, css: filtersOpen() ? \\'up-down\\' : \\'down-up\\'\"></div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!-- ko if: selectedView() && selectedView().type() === \\'todos\\' -->\\r\\n                                        <div class=\"header\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <header class=\"ellipsis\">\\r\\n                                                    <h1><span data-bind=\"text: selectedView() ? selectedView().name : \\'To-Do List\\'\"></span> - <span data-bind=\"text: todosShowingText\"></span></h1>\\r\\n                                                    <div class=\"controls\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle\" \">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-plus\" data-bind=\"click: addToDo, clickBubble: false\" title=\"Add\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                        <i class=\"pointer fa fa-filter pad-horizontal\" data-bind=\"clickToggle: filtersHeaderOpen, clickBubble: false, css: ((selectedCategories().length > 0 || selectedPriorities().length > 0) ? \\'red\\' : (filtersHeaderOpen() ? \\'lighterblue\\': \\'lightestblue\\'))\">\\r\\n                                                        </i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle gray\" data-bind=\"click: refreshView, clickBubble: false\" title=\"Refresh Data\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': todosSaving }\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                        <div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: toggleOpenColumn, enable: leftColumnOpen(), clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                        <div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: toggleOpenColumn, enable: !leftColumnOpen(), clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'todopanel\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                    </div>                                                   \\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\" data-bind=\"compose: { model: \\'viewmodels/templates/todo.panel\\', \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tactivationData: { todos: myToDos, columns: activeColumns, toggleSort: toggleSort, \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselectedSortColumn: selectedSortColumn, canSort: true,\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmaxToToDosLoaded: maxToToDosLoaded, isBackendSort:true, todosReloading: todosReloading } }\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!-- /ko -->\\r\\n                                        <!-- ko if: selectedView() && selectedView().type() === \\'interventions\\' -->\\r\\n                                        <div class=\"header\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <header class=\"ellipsis\">\\r\\n                                                    <h1><span data-bind=\"text: selectedView() ? selectedView().name : \\'Intervention List\\'\"></span> - <span data-bind=\"text: myInterventions().length + \\' showing\\'\"></span></h1>\\r\\n                                                    <div class=\"controls\">\\r\\n                                                        <i class=\"pointer fa fa-filter pad-horizontal\" data-bind=\"clickToggle: filtersHeaderOpen, clickBubble: false, css: ((selectedCategories().length > 0) ? \\'red\\' : (filtersHeaderOpen() ? \\'lighterblue\\': \\'lightestblue\\'))\">\\r\\n                                                        </i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle gray\" data-bind=\"click: refreshView, clickBubble: false\" title=\"Refresh Data\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': todosSaving }\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                        <div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: toggleOpenColumn, enable: leftColumnOpen(), clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                        <div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: toggleOpenColumn, enable: !leftColumnOpen(), clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'interventionpanel\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div class=\"options\">\\r\\n                                                    </div>\\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\" data-bind=\"compose: { model: \\'viewmodels/templates/intervention.panel\\', activationData: { interventions: myInterventions, columns: activeColumns, toggleSort: toggleSort, selectedSortColumn: selectedSortColumn, canSort: true } }\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!-- /ko -->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"column\" data-bind=\"css: { \\'open\\': !leftColumnOpen() }\">\\r\\n                <div class=\"widget-wrapper\">\\r\\n                    <div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'todochart\\' }, columnSizer: {triggers:{a: selectedView().name()}}\">\\r\\n                        <div class=\"content\">\\r\\n                            <div class=\"content-fill\">\\r\\n                                <div class=\"wrapper\">\\r\\n                                    <div class=\"content\" data-bind=\"visible: selectedView() && selectedView().type() === \\'todos\\'\">\\r\\n                                        <div class=\"header\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <header>\\r\\n                                                    <h1 data-bind=\"text: selectedView() ? selectedView().name : \\'To Do Summary\\'\"></h1>\\r\\n                                                    <div class=\"controls\">\\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'todochart\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div class=\"options myhome\">\\r\\n                                                        <div data-bind=\"chsnsingle: { options: availableTodoSummaries, value: selectedTodoSummary, text: \\'name\\', label: \\'todo-summaries\\' }\"></div>\\r\\n                                                    </div>\\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <em data-bind=\"if: myToDosChart().length === 0\">No chart data available</em>\\r\\n                                                        <div class=\"graph todosummary\">\\r\\n                                                            <div class=\"\" data-bind=\"pieChart: myToDosChart, chartOptions: { title: \\'Pie Chart\\' }\">\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"content\" data-bind=\"visible: selectedView() && selectedView().type() === \\'interventions\\'\">\\r\\n                                        <div class=\"header\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <header>\\r\\n                                                    <h1 data-bind=\"text: selectedView() ? selectedView().name : \\'To Do Summary\\'\"></h1>\\r\\n                                                    <div class=\"controls\">\\r\\n                                                        <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'todochart\\') }, clickBubble: false\">\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div class=\"options myhome\">\\r\\n                                                        <div data-bind=\"chsnsingle: { options: availableInterventionSummaries, value: selectedInterventionSummary, text: \\'name\\', label: \\'todo-summaries\\' }\"></div>\\r\\n                                                    </div>\\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <em data-bind=\"if: myInterventionsChart().length === 0\">No chart data available</em>\\r\\n                                                        <div class=\"graph todosummary\">\\r\\n                                                            <div class=\"\" data-bind=\"pieChart: myInterventionsChart, chartOptions: { title: \\'Pie Chart\\' }\">\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>';});\n\n","\ndefine('text!views/insight/index.html',[],function () { return '<div class=\"route\">\\r\\n    <!-- ko if: navigation.currentSubRoute() -->\\r\\n    <!-- ko compose: { model: navigation.currentSubRoute().subroute } -->\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/insight/reports/index.html',[],function () { return '<section data-type=\"flex\">\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header class=\"ellipsis\">\\r\\n                                                <h1>Insight Reports</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <div class=\"row pad-top\">\\r\\n<!--                                                             <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\">\\r\\n                                                                    <div class=\"span11\">\\r\\n                                                                        <h3>User Information</h3>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span3 align-left\">\\r\\n                                                                            <span>User Name</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span9\">\\r\\n                                                                            <input data-bind=\"value: userName\" />\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span3 align-left\">\\r\\n                                                                            <span>Password / Token</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span9\">\\r\\n                                                                            <input data-bind=\"value: pwOrToken\" />\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span3 align-left\">\\r\\n                                                                            <span>Organization</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span9\">\\r\\n                                                                            <input data-bind=\"value: organization\" />\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section>\\r\\n                                                            <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\">\\r\\n                                                                    <div class=\"span11\">\\r\\n                                                                        <h3>Work with Reports</h3>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span3 align-left\">\\r\\n                                                                            <span>Repo to search</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span9\">\\r\\n                                                                            <input data-bind=\"value: repoName\" />\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span3 align-left\">\\r\\n                                                                            <span>Get Reports List</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span9\">\\r\\n                                                                            <button title=\"Enter user, password, and repo\" class=\"btn small\" data-bind=\"click: getReportsList, enable: canGetReports\">Go</button>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section> -->\\r\\n                                                            <section class=\"accordion open\">\\r\\n                                                                <div class=\"row accordion-toggle open\">\\r\\n                                                                    <div class=\"span11\">\\r\\n                                                                        <h3>Load report</h3>\\r\\n                                                                    </div>                                                                    \\r\\n                                                                    <div class=\"span1 grey\">\\r\\n                                                                        <div class=\"pull-right\">\\r\\n                                                                            <i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': fetchingReport }\"></i>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div class=\"accordion-content\">\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span3 align-left\">\\r\\n                                                                            <span>Report Path</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span9\">\\r\\n                                                                            <!-- ko if: availableReports().length > 0 -->\\r\\n                                                                                <select data-bind=\"options: availableReports, value: reportPath, optionsText: \\'Name\\', optionsValue: \\'Path\\'\"></select>\\r\\n                                                                            <!-- /ko -->\\r\\n                                                                            <!-- ko if: availableReports().length === 0 -->\\r\\n                                                                                <em>No reports available</em>\\r\\n                                                                            <!-- /ko -->\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n<!--                                                                     <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span3 align-left\">\\r\\n                                                                            <span>Selected Container</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span9\">\\r\\n                                                                            <em data-bind=\"text: containerToLoad\" />\\r\\n                                                                             ako if: !containerToLoad() \\r\\n                                                                            <em>Select a container to the right</em>\\r\\n                                                                            /ako\\r\\n                                                                        </div>\\r\\n                                                                    </div> -->\\r\\n                                                                    <div class=\"row pad-top divider\">\\r\\n                                                                        <div class=\"span3 align-left\">\\r\\n                                                                            <span>Show report</span>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\"span9\">\\r\\n                                                                            <button class=\"btn small\" data-bind=\"click: showDynamicReport, enable: (containerToLoad && !fetchingReport())\">Show</button>\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </section>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- ko if: activeSecondColumn -->\\r\\n            <div class=\"column open\">\\r\\n                <div class=\"widget-wrapper\">\\r\\n                <!-- ko compose: activeSecondColumn -->\\r\\n                <!-- /ko -->\\r\\n                </div>\\r\\n            </div>\\r\\n        <!-- /ko -->\\r\\n        <!-- ko ifnot: activeSecondColumn -->\\r\\n            <div class=\"column open\">\\r\\n                <div class=\"widget-wrapper\">\\r\\n                    <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                        <div class=\"content\">\\r\\n                            <div class=\"content-fill\">\\r\\n                                <div class=\"wrapper\">\\r\\n                                    <div class=\"content\">\\r\\n                                        <div class=\"header\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <header class=\"ellipsis\">\\r\\n                                                </header>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"table-row\">\\r\\n                                            <div class=\"table-cell\">\\r\\n                                                <div class=\"body\">\\r\\n                                                    <div class=\"content\">\\r\\n                                                        <div class=\"content\">\\r\\n                                                            <p><em>Select something to the left...</em></p>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/insight/widgets/active.report.html',[],function () { return '<div class=\"widget open\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"fixed\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"pad-vertical\">\\r\\n                                        <h1>Active Report</h1>\\r\\n                                        <!-- <div class=\"row\">\\r\\n                                            <div class=\"span12\" data-bind=\"chsnsingle: { options: numberOfContainers, value: selectedCount, text: \\'Number\\', label: \\'container-count\\' }\"></div>\\r\\n                                        </div> -->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <!-- ko foreach: reportContainers -->\\r\\n                                    <div class=\"row\" data-bind=\"click: $parent.setActiveReportContainer\">\\r\\n                                        <div class=\"span12\">\\r\\n                                            <!-- <button class=\"btn small\" data-bind=\"text: Name\"></button> -->\\r\\n                                            <div data-bind=\"attr: { \\'id\\': Name }\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- /ko -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/insight/widgets/reports.list.html',[],function () { return '<div class=\"widget open\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"fixed\">\\r\\n                                <div class=\"content\">                               \\r\\n                                    <div class=\"pad-vertical\">\\r\\n                                        <h1>Cohorts</h1>\\r\\n                                        <div class=\"row\">\\r\\n                                            <div class=\"span12\" data-bind=\"chsnsingle: { options: cohortsList, value: selectedCohort, text: \\'sName\\', label: \\'cohort\\' }\"></div>\\r\\n                                        </div>\\r\\n                                        <div class=\"row pad-top\">\\r\\n                                            <input data-bind=\"value: cohortFilter, valueUpdate: \\'afterkeydown\\', disable: !selectedCohort()\" placeholder=\"Search\" type=\"search\" data-phyautomation=\"cohort-patient-search\" />\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <!-- ko foreach: patientsList -->\\r\\n                                    <div class=\"row ellipsis\" data-bind=\"click: $parent.choosePatient\">\\r\\n                                        <div class=\"patient-list\">\\r\\n                                            <div class=\"ellipsis\">\\r\\n                                                <img alt=\"Patient small\" class=\"pull-left\" data-bind=\"attr: { src: genderModel().SmallImgSrc }\" />\\r\\n                                                <a href=\"#\" class=\"line\" data-bind=\"text: fullLastName() + \\', \\' + fullFirstName(), attr: { \\'title\\': (fullLastName() + \\', \\' + fullFirstName()) }\"></a>\\r\\n                                                <span class=\"line grey pad horizontal\" data-bind=\"with: dOB\"><span data-bind=\"text: \\'(\\' + $data + \\')\\', attr: { \\'title\\': $data }\" data-phyautomation=\"dob\"></span></span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- /ko -->\\r\\n                                    <!--<div class=\"row\" data-bind=\"visible: canLoadMoreCohortPatients\">\\r\\n                                        <div class=\"push2 span8\">\\r\\n                                            <button class=\"small\" data-bind=\"click: loadMoreCohortPatients\">\\r\\n                                                Load more patients...\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>-->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/careplan/index.html',[],function () { return '<section data-type=\"flex\">\\r\\n    <!-- ko if: selectedPatient() -->\\r\\n    <div class=\"columns-wrapper\">\\r\\n        <!-- ko with: planColumn -->\\r\\n        <div class=\"column\" data-bind=\"css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n            <div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n                <!-- ko compose: path -->\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- /ko -->\\r\\n        <!-- ko with: detailsColumn -->\\r\\n        <div class=\"column\" data-bind=\"css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n            <div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n                <!-- ko if: ($parents[1].activeAction() && name() === \\'ActionDetails\\') -->\\r\\n                <!-- ko compose: { model: path, activationData: { activeAction: $parents[1].activeAction } } -->\\r\\n                <!-- /ko -->\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: ($parents[1].activeModule() && name() === \\'ModuleDetails\\') -->\\r\\n                <!-- ko compose: { model: path, activationData: { activeModule: $parents[1].activeModule } } -->\\r\\n                <!-- /ko -->\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: ($parents[1].activeProgram() && name() === \\'ProgramDetails\\' )-->\\r\\n                <!-- ko compose: { model: path, activationData: { activeProgram: $parents[1].activeProgram } } -->\\r\\n                <!-- /ko -->\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: !selectedPatient() -->\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header>\\r\\n                                                <h1>Plan</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"body\">\\r\\n                                                        <em class=\"grey\">No individual selected.</em>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n</section>';});\n\n","\ndefine('text!views/patients/data/index.html',[],function () { return '<section data-type=\"flex\">\\r\\n    <!-- ko if: selectedPatient() -->\\r\\n    <div data-bind=\"foreach: columns\">\\r\\n        <div class=\"column\" data-bind=\"click: $parent.setOpenColumn, css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n            <div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n                <!-- ko compose: path -->\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: !selectedPatient() -->\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header>\\r\\n                                                <h1>Data Summary</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"body\">\\r\\n                                                        <em class=\"grey\">No individual selected.</em>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n</section>';});\n\n","\ndefine('text!views/patients/goals/index.html',[],function () { return '<section data-type=\"flex\">\\r\\n    <!-- ko if: selectedPatient() -->\\r\\n    <div class=\"columns-wrapper\">\\r\\n        <!-- ko with: goalColumn -->\\r\\n        <div class=\"column\" data-bind=\"css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n            <!-- ko if: $parent.isComposed -->\\r\\n            <div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n                <!-- ko compose: path -->\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n        <!-- /ko -->\\r\\n        <!-- ko with: detailsColumn -->\\r\\n        <div class=\"column\" data-bind=\"css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n            <div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n                <!-- ko if: ($parents[1].activeGoal() && name() === \\'GoalDetails\\') -->\\r\\n                    <!-- ko compose: { model: path, activationData: { activeGoal: $parents[1].activeGoal } } -->\\r\\n                    <!-- /ko -->\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: ($parents[1].activeTask() && name() === \\'TaskDetails\\') -->\\r\\n                    <!-- ko compose: { model: path, activationData: { activeTask: $parents[1].activeTask } } -->\\r\\n                    <!-- /ko -->\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: ($parents[1].activeIntervention() && name() === \\'InterventionDetails\\' )-->\\r\\n                    <!-- ko compose: { model: path, activationData: { activeIntervention: $parents[1].activeIntervention } } -->\\r\\n                    <!-- /ko -->\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: !selectedPatient() -->\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header>\\r\\n                                                <h1>Goals</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"body\">\\r\\n                                                        <em class=\"grey\">No individual selected.</em>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n</section>';});\n\n","\ndefine('text!views/patients/history/index.html',[],function () { return '<section data-type=\"flex\">\\r\\n    <!-- ko if: selectedPatient() -->\\r\\n    <div data-bind=\"foreach: columns\">\\r\\n        <div class=\"column\" data-bind=\"css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n            <div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n                <!-- ko compose: path -->\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: !selectedPatient() -->\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header>\\r\\n                                                <h1>History</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"body\">\\r\\n                                                        <em class=\"grey\">No individual selected.</em>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n</section>';});\n\n","\ndefine('text!views/patients/index.html',[],function () { return '<div class=\"route\">\\r\\n    <section data-type=\"fixed\" data-bind=\"css: { open: patientDataColumnOpen()  === true }\">\\r\\n        <div class=\"column-wrapper\">\\r\\n            <div class=\"column off-canvas\" data-bind=\"css: { open: patientsListFlyoutOpen() === true }\" data-phyautomation=\"cohort-column-pane\">\\r\\n                <div class=\"widget-wrapper\" data-bind=\"compose: \\'patients/widgets/patients.list.flyout.html\\'\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"column\" data-phyautomation=\"patient-details-pane\">\\r\\n                <div class=\"widget-wrapper\" data-bind=\"compose: \\'patients/widgets/patients.details.html\\'\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n    <!-- ko if: isComposed() && navigation.currentRoute() && navigation.currentSubRoute() -->\\r\\n    <!-- ko compose: { model: navigation.currentSubRoute().subroute, activationData: { selectedPatient: selectedPatient } } -->\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/patients/medications/index.html',[],function () { return '<section data-type=\"flex\">\\r\\n    <!-- ko if: selectedPatient() -->\\r\\n    <div class=\"columns-wrapper\">\\r\\n        <!-- ko with: medicationColumn -->\\r\\n        <div class=\"column\" data-bind=\"css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n            <!-- ko if: $parent.isComposed -->\\r\\n            <div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n                <!-- ko compose: { model: path, activationData: activationData } -->\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n        <!-- /ko -->\\r\\n        <!-- ko with: detailsColumn -->\\r\\n        <div class=\"column\" data-bind=\"css: { open: $parent.computedOpenColumn() === $data }\">\\r\\n            <div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n                <!-- ko if: ($parents[1].activeMedication() && name() === \\'MedicationDetails\\') -->\\r\\n                    <!-- ko compose: { model: path, activationData: { activeMedication: $parents[1].activeMedication } } -->\\r\\n                    <!-- /ko -->\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: ($parents[1].activeAllergy() && name() === \\'AllergyDetails\\') -->\\r\\n                    <!-- ko compose: { model: path, activationData: { activeAllergy: $parents[1].activeAllergy } } -->\\r\\n                    <!-- /ko -->\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: !selectedPatient() -->\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header>\\r\\n                                                <h1>History</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"body\">\\r\\n                                                        <em class=\"grey\">No individual selected.</em>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n</section>\\r\\n';});\n\n","\ndefine('text!views/patients/notes/index.html',[],function () { return '<div class=\"body\" data-bind=\"visible: showing\">\\r\\n    <div class=\"row\">\\r\\n\\t\\t<div data-bind=\"with: note\"> \\r\\n\\t\\t\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t</div>\\r\\n\\t\\t<section class=\"accordion\" >\\r\\n            <!-- <div class=\"row\" data-bind=\"with: $parent.activeDataType\">\\r\\n                <h3 data-bind=\"text: name, attr: { title: name }\"></h3>\\r\\n            </div> -->\\r\\n            \\r\\n\\t\\t\\t<!-- ko compose: { model: templatePath, activationData: { note: note } } -->\\r\\n\\t\\t\\t<!-- /ko -->            \\r\\n        </section>\\r\\n\\t</div>\\r\\n</div>\\t\\t';});\n\n","\ndefine('text!views/patients/overview/index.html',[],function () { return '<section class=\"slider\" data-type=\"flex\">\\r\\n    <!-- ko if: selectedPatient() -->\\r\\n    <div>\\r\\n        <div class=\"column open\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget shared\" data-bind=\"css: { \\'open\\': todosPanelOpen, \\'fullscreen\\': fullScreenWidget() === \\'todopanel\\' }, columnSizer: {triggers: {a: todosPanelOpen(), b: todoFiltersHeaderOpen(), c: todoFiltersOpen()}}\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"filters\" data-bind=\"visible: (todoFiltersHeaderOpen())\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"wrapper\">\\r\\n                                                <section class=\"pinned\">\\r\\n                                                    <div class=\"row\">\\r\\n                                                        <div class=\"span5\">                                                        \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"span1 gray\">Filter:</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"display: inline-block\" data-bind=\"chsnsingle: { options: todoViews, value: selectedTodoView, text: \\'name\\', label: \\'todoViews\\' }\"></div>                                                           \\r\\n                                                        </div>\\r\\n                                                        <div class=\"span4 grey\">\\r\\n                                                            <label data-bind=\"visible: (selectedTodoCategories().length > 0 || selectedTodoPriorities().length > 0)\">\\r\\n                                                                <i class=\"fa fa-filter red\"></i>\\r\\n                                                                Additional filters applied\\r\\n                                                            </label>\\r\\n                                                            <span style=\"color: whitesmoke;\">-</span>\\r\\n                                                        </div>\\r\\n                                                        <div class=\"span3 grey\">\\r\\n                                                            <div class=\"pull-right filters\" data-bind=\"visible: (selectedTodoCategories().length > 0 || selectedTodoPriorities().length > 0)\">\\r\\n                                                                <i class=\"icon-filter_clear pointer blue toggle\" data-bind=\"click: resetTodoFilters, enable: (selectedTodoCategories().length > 0 || selectedTodoPriorities().length > 0)\" style=\"position: inherit;\" title=\"Clear Filter\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>&nbsp</span>\\r\\n                                                            </div>\\r\\n                                                            <span style=\"color: whitesmoke;\">-</span>\\r\\n                                                        </div>                                                        \\r\\n                                                    </div>\\r\\n                                                </section>\\r\\n                                                <div class=\"filter-content\" data-bind=\"visible: todoFiltersOpen\">\\r\\n                                                    <section>\\r\\n                                                        <div class=\"row\">\\r\\n                                                            <div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"span2 gray\">Priority:</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                            <div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"span2 gray\">Category:</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span6\" data-bind=\"multiselect: { options: todoPriorities, values: selectedTodoPriorities, text: \\'levelName\\', label: \\'todocategories\\', idValue: \\'id\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span6\" data-bind=\"multiselect: { options: todoCategories, values: selectedTodoCategories, text: \\'name\\', label: \\'taskcategories\\', idValue: \\'id\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                                                        </div>\\r\\n                                                    </section>\\r\\n                                                </div>\\r\\n                                                <div class=\"toggle\" data-bind=\"clickToggle: todoFiltersOpen, css: todoFiltersOpen() ? \\'up-down\\' : \\'down-up\\'\"></div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"header pointer\" data-bind=\"click: function () { toggleWidgetOpen(todosPanelOpen) }\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header class=\"ellipsis\">\\r\\n                                                <h1>\\r\\n                                                    <span data-bind=\"text: selectedTodoView() ? selectedTodoView().name : \\'To-Do List\\'\"></span> - <span data-bind=\"text: myToDos().length + \\' showing\\'\"></span>\\r\\n                                                </h1>\\r\\n                                                <div class=\"controls\">\\r\\n                                                    <i class=\"fa fa-filter pad-right\" data-bind=\"click: function () { toggleHeaderOpen(todoFiltersHeaderOpen, todosPanelOpen); }, clickBubble: false, css: ((selectedTodoCategories().length > 0 || selectedTodoPriorities().length > 0) ? \\'red\\' : (todoFiltersHeaderOpen() ? \\'lighterblue\\': \\'lightestblue\\'))\">\\r\\n                                                    </i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle gray\" data-bind=\"click: refreshTodoView, clickBubble: false\" title=\"Refresh Data\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': todosSaving }\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                    <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'todopanel\\') }, clickBubble: false\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div data-bind=\"compose: { model: \\'viewmodels/templates/todo.panel\\', activationData: { todos: myToDos, columns: activeTodoColumns, toggleSort: toggleTodoSort, selectedSortColumn: selectedTodoSortColumn, canSort: true, isBackendSort:false } }\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"widget shared\" data-bind=\"css: { \\'open\\': interventionsPanelOpen, \\'fullscreen\\': fullScreenWidget() === \\'interventionpanel\\' }, columnSizer: {triggers: {a: interventionsPanelOpen(), b: interventionFiltersHeaderOpen(), c: interventionFiltersOpen()}}\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"filters\" data-bind=\"visible: (interventionFiltersHeaderOpen())\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"wrapper\">\\r\\n                                                <section class=\"pinned\">\\r\\n                                                    <div class=\"row\">\\r\\n                                                        <div class=\"span5\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"span1 gray\">Filter:</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"display: inline-block\" data-bind=\"chsnsingle: { options: interventionViews, value: selectedInterventionView, text: \\'name\\', label: \\'interventionViews\\' }\"></div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\"span5 grey\">\\r\\n                                                            <label data-bind=\"visible: (selectedInterventionCategories().length > 0)\">\\r\\n                                                                <i class=\"fa fa-filter red\"></i>\\r\\n                                                                Additional filters applied\\r\\n                                                            </label>\\r\\n                                                            <span style=\"color: whitesmoke;\">-</span>\\r\\n                                                        </div>\\r\\n                                                        <div class=\"span2 grey\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"pull-right filters\" data-bind=\"visible: (selectedInterventionCategories().length > 0)\">\\r\\n                                                                <i class=\"icon-filter_clear pointer blue toggle\" data-bind=\"click: resetInterventionFilters, enable: (selectedInterventionCategories().length > 0)\" style=\"position: inherit;\" title=\"Clear Filter\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>&nbsp</span>\\r\\n                                                            </div>\\r\\n                                                            <span style=\"color: whitesmoke;\">-</span>\\r\\n                                                        </div>                                                        \\r\\n                                                    </div>\\r\\n                                                </section>\\r\\n                                                <div class=\"filter-content\" data-bind=\"visible: interventionFiltersOpen\">\\r\\n                                                    <section>\\r\\n                                                        <div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"span2 grey\">Category:</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span6\" data-bind=\"multiselect: { options: interventionCategories, values: selectedInterventionCategories, text: \\'name\\', label: \\'interventioncategories\\', idValue: \\'id\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                        </div>\\r\\n                                                    </section>\\r\\n                                                </div>\\r\\n                                                <div class=\"toggle\" data-bind=\"clickToggle: interventionFiltersOpen, css: interventionFiltersOpen() ? \\'up-down\\' : \\'down-up\\'\"></div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"header pointer\" data-bind=\"click: function () { toggleWidgetOpen(interventionsPanelOpen) }\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header class=\"ellipsis\">\\r\\n                                                <h1>\\r\\n                                                    <span data-bind=\"text: selectedInterventionView() ? selectedInterventionView().name : \\'Intervention List\\'\"></span> - <span data-bind=\"text: myInterventions().length + \\' showing\\'\"></span>\\r\\n                                                </h1>\\r\\n                                                <div class=\"controls\">\\r\\n                                                    <i class=\"fa fa-filter pad-right\" data-bind=\"click: function () { toggleHeaderOpen(interventionFiltersHeaderOpen, interventionsPanelOpen); }, clickBubble: false, css: (selectedInterventionCategories().length > 0 ? \\'red\\' : (interventionFiltersHeaderOpen() ? \\'lighterblue\\': \\'lightestblue\\'))\">\\r\\n                                                    </i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle gray\" data-bind=\"click: refreshInterventionView, clickBubble: false\" title=\"Refresh Data\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': interventionsSaving }\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                    <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'interventionpanel\\') }, clickBubble: false\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div data-bind=\"compose: { model: \\'viewmodels/templates/intervention.panel\\', activationData: { interventions: myInterventions, columns: activeInterventionColumns, toggleSort: toggleInterventionSort, selectedSortColumn: selectedInterventionSortColumn, canSort: true } }\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"widget shared\" data-bind=\"css: { \\'open\\': taskPanelOpen, \\'fullscreen\\': fullScreenWidget() === \\'taskpanel\\' }, columnSizer: {triggers: {a: taskPanelOpen(), b: taskFiltersHeaderOpen()}}\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"filters\" data-bind=\"visible: (taskFiltersHeaderOpen())\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"wrapper\">\\r\\n                                                <section class=\"pinned\">\\r\\n                                                    <div class=\"row\">\\r\\n                                                        <div class=\"span5\">\\r\\n                                                            <label class=\"span1 gray\">Filter:</label>\\r\\n                                                            <div style=\"display: inline-block\" data-bind=\"chsnsingle: { options: taskViews, value: selectedTaskView, text: \\'name\\', label: \\'taskViews\\' }\"></div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\"span5 grey\">\\r\\n                                                            <label data-bind=\"visible: (-1 > 0)\">\\r\\n                                                                <i class=\"fa fa-filter red\"></i>\\r\\n                                                                Additional filters applied\\r\\n                                                            </label>\\r\\n                                                            <span style=\"color: whitesmoke;\">-</span>\\r\\n                                                        </div>\\r\\n                                                        <div class=\"span2 grey\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"pull-right filters\" data-bind=\"visible: (-1 > 0)\">\\r\\n                                                                <i class=\"icon-filter_clear pointer blue toggle\" data-bind=\"click: resetTaskFilters, enable: (-1 > 0)\" style=\"position: inherit;\" title=\"Clear Filter\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>&nbsp</span>\\r\\n                                                            </div>                                                            \\r\\n                                                            <span style=\"color: whitesmoke;\">-</span>\\r\\n                                                        </div>                                                        \\r\\n                                                    </div>\\r\\n                                                </section>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"header pointer\" data-bind=\"click: function () { toggleWidgetOpen(taskPanelOpen) }\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header class=\"ellipsis\">\\r\\n                                                <h1>\\r\\n                                                    <span data-bind=\"text: selectedTaskView() ? selectedTaskView().name : \\'Task List\\'\"></span> - <span data-bind=\"text: myTasks().length + \\' showing\\'\"></span>\\r\\n                                                </h1>\\r\\n                                                <div class=\"controls\">\\r\\n                                                    <i class=\"fa fa-filter lightestblue pad-right\" data-bind=\"click: function () { toggleHeaderOpen(taskFiltersHeaderOpen, taskPanelOpen); }, clickBubble: false, css: ((taskFiltersHeaderOpen() ? \\'lighterblue\\': \\'lightestblue\\'))\">\\r\\n                                                    </i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle gray\" data-bind=\"click: refreshTaskView, clickBubble: false\" title=\"Refresh Data\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': tasksSaving }\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                    <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'taskpanel\\') }, clickBubble: false\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div data-bind=\"compose: { model: \\'viewmodels/templates/task.panel\\', activationData: { tasks: myTasks, columns: activeTaskColumns, toggleSort: toggleTaskSort, selectedSortColumn: selectedTaskSortColumn, canSort: true } }\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"column details\"><div class=\"widget-wrapper\"></div></div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: !selectedPatient() -->\\r\\n    <div>\\r\\n        <div class=\"column\">\\r\\n            <div class=\"widget-wrapper\">\\r\\n                <div class=\"widget open\" data-bind=\"columnSizer: {triggers: {a: selectedPatient()}}\">\\r\\n                    <div class=\"content\">\\r\\n                        <div class=\"content-fill\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"header\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <header class=\"ellipsis\">\\r\\n                                                <h1>Overview</h1>\\r\\n                                            </header>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\"table-row\">\\r\\n                                        <div class=\"table-cell\">\\r\\n                                            <div class=\"body\">\\r\\n                                                <div class=\"content\">\\r\\n                                                    <div class=\"body\">\\r\\n                                                        <em class=\"grey\">No individual selected.</em>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/additional.observations.html',[],function () { return '<div>\\r\\n    <div class=\"row\" data-bind=\"with: activeDataType\">\\r\\n        <h3 data-bind=\"text: (\\'Additional \\' + name()), attr: { title: (\\'Additional \\' + name()) }\"></h3>\\r\\n    </div>\\r\\n    <div class=\"accordion-content columns\">\\r\\n        <div class=\"column\">\\r\\n            <form>\\r\\n                <div class=\"row pad top\">\\r\\n                    <div class=\"span6\">\\r\\n                        <div class=\"row\">\\r\\n                            <input class=\"span12\" type=\"text\" data-bind=\"typeahead: { name: \\'giveMeANAME\\', taOptions: addtlObsBloodhound, displayKey: \\'name\\' }, value: selectedAdditionalObservation\" placeholder=\"Enter name\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"span6 pull-left\">\\r\\n                        <a href=\"#\" data-bind=\"click: addNewObservation, enable: canAdd, css: { \\'disabled\\': !canAdd() }\">\\r\\n                            <i class=\"icon-plus\"></i>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"row pad top\" data-bind=\"if: additionalObservationsToEnter().length !== 0\">\\r\\n                    <div class=\"row pad top\">\\r\\n                        <div class=\"span2\">\\r\\n                            <strong>Element</strong>\\r\\n                        </div>\\r\\n                        <div class=\"span2\">\\r\\n                            <strong>Value</strong>\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span1\">\\r\\n                            <strong>Units</strong>\\r\\n                        </div>\\r\\n                        <div class=\"span2\">\\r\\n                            <strong>Date</strong>\\r\\n                        </div>\\r\\n                        <div class=\"span4\">\\r\\n                            <strong></strong>\\r\\n                        </div>\\r\\n                        <div class=\"span1\">\\r\\n                            <strong></strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- ko foreach: additionalObservationsToEnter -->\\r\\n                    <!-- ko if: groupId() -->\\r\\n                    <!-- ko compose: { model: \\'viewmodels/templates/observation.bloodpressure.add\\', activationData: { observation: $data, addNew: $parent.addNew  } } -->\\r\\n                    <!-- /ko -->\\r\\n                    <!-- /ko -->\\r\\n                    <!-- ko if: !groupId() -->\\r\\n                    <!-- ko compose: { model: \\'viewmodels/templates/observation.add\\', activationData: { observation: $data, addNew: $parent.addNew   } } -->\\r\\n                    <!-- /ko -->\\r\\n                    <!-- /ko -->\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/additional.problem.observations.html',[],function () { return '<div class=\"row pad-bottom\">\\r\\n\\t<div class=\"span3\">&nbsp;</div>\\r\\n\\t<div class=\"span4\">\\r\\n\\t\\t<div>\\r\\n            <input type=\"text\" data-bind=\"typeahead: { name: \\'focusProblems\\', taOptions: probObsBloodhound, displayKey: \\'name\\' }, value: selectedObservation, valueUpdate: \\'afterkeydown\\'\" placeholder=\"Search Focus Problem\" />\\r\\n\\t\\t</div>\\r\\n\\t</div>\\t\\r\\n\\t<div class=\"span2\">\\r\\n\\t\\t<button class=\"btn color small\" data-bind=\"click: addNewObservation, enable: canAdd\">\\r\\n\\t\\t\\t<i class=\"icon-plus\"></i>\\r\\n\\t\\t\\t<span class=\"pad-left\">Add</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/allergies.edit.html',[],function () { return '<div class=\"pad-vertical\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"span3\">\\r\\n            <strong>Name</strong>\\r\\n        </div>\\r\\n        <div class=\"span3\">\\r\\n            <strong>Type</strong>\\r\\n        </div>\\r\\n        <div class=\"span3\">\\r\\n            <strong>Start Date</strong>\\r\\n        </div>\\r\\n        <div class=\"span3\">\\r\\n            <strong>End Date</strong>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- ko foreach: newPatientAllergies -->\\r\\n\\t    <div class=\"row pad-top divider\">\\r\\n\\t        <div class=\"span3\">\\r\\n\\t        \\t<pre data-bind=\"text: allergyName\"></pre>\\r\\n\\t        </div>\\r\\n\\t        <div class=\"span3\">\\r\\n\\t        \\t<!-- ko if: !isUserCreated() -->\\r\\n\\t        \\t<div class=\"ellipsis\">\\r\\n\\t        \\t\\t<span data-bind=\"text: typeString, attr: { title: typeString }\"></span>\\r\\n\\t        \\t</div>\\r\\n\\t        \\t<!-- /ko -->\\r\\n\\t        \\t<div data-bind=\"visible: isUserCreated\">\\r\\n                \\t<div class=\"span9\" data-bind=\"multiselect: { options: $parent.allergyTypes, values: allergyTypeIds, idValue: \\'id\\', text: \\'name\\', label: \\'allergytypes\\', stringValue: typeString, isRequired: true }\"></div>\\r\\n\\t        \\t</div>\\r\\n\\t        </div>\\r\\n\\t        <div class=\"span3\">\\r\\n\\t\\t\\t\\t<div class=\"span7\">\\r\\n\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\tobservableDateTime: startDate, dateErrors: startDateErrors, showInvalid: setInvalidStartDate,\\r\\n\\t\\t\\t\\t\\t\\t\\tmaxDate: \\'today\\', datepickerOptions:{ maxDate: \\'+0\\' }, datepickerDynamicOptions: {}, dateName: \\'startDate\\'\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t        </div>\\r\\n\\t        <div class=\"span2\">\\r\\n\\t\\t\\t\\t<div class=\"span10\">\\r\\n\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\tobservableDateTime: endDate, dateErrors: endDateErrors, showInvalid: setInvalidEndDate,\\r\\n\\t\\t\\t\\t\\t\\t\\tmaxDate: \\'today\\', datepickerOptions:{maxDate: \\'+0\\'}, datepickerDynamicOptions: {minDate: startDate}, dateName: \\'endDate\\'\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t        </div>\\r\\n\\t        <div class=\"span1 pull-right\">\\r\\n\\t            <a href=\"#\" title=\"Remove\" data-bind=\"click: $parent.removeAllergy\">\\r\\n\\t            \\t<i class=\"close pull-right icon-cancel red\"></i>\\r\\n\\t        \\t</a>\\r\\n\\t        </div>\\r\\n\\t    </div>\\r\\n\\t    <div class=\"row pad-top\">\\r\\n\\t        <div class=\"span3\">\\r\\n\\t            <strong>Reaction</strong>\\r\\n\\t        </div>\\r\\n\\t        <div class=\"span3\">\\r\\n\\t            <strong>Severity</strong>\\r\\n\\t        </div>\\r\\n\\t        <div class=\"span3\">\\r\\n\\t            <strong>Source</strong>\\r\\n\\t        </div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t            <strong>Status</strong>\\r\\n\\t        </div>\\r\\n\\t    </div>\\r\\n\\t    <div class=\"row pad-top\">\\r\\n\\t        <div class=\"span3\">\\r\\n\\t            &nbsp;\\r\\n                <div class=\"span10\" data-bind=\"multiselect: { options: $parent.reactions, values: reactionIds, idValue: \\'id\\', text: \\'name\\', label: \\'reactions\\', stringValue: reactionString }\"></div>\\r\\n\\t        </div>\\r\\n\\t        <div class=\"span3\">\\r\\n                <div class=\"span10\" data-bind=\"chsnsingle: { options: $parent.severities, value: severity, text: \\'name\\', label: \\'severities\\' }\"></div>\\r\\n\\t        </div>\\r\\n\\t        <div class=\"span3\">\\r\\n\\t            <div class=\"span10\" data-bind=\"chsnsingle: { options: $parent.allergySources, value: source, text: \\'name\\', label: \\'sources\\' }\"></div>\\r\\n\\t        </div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t            <div class=\"span10\" data-bind=\"chsnsingle: { options: $parent.allergyStatuses, value: status, text: \\'name\\', label: \\'status\\' }\"></div>\\r\\n\\t        </div>\\r\\n\\t    </div>\\r\\n\\t    <div class=\"row pad-top\">\\r\\n\\t    \\t<div class=\"span3 grey\">Notes:</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t<div class=\"span12\">\\r\\n\\t\\t\\t\\t<textarea data-bind=\"value: notes\"></textarea>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n    <!-- /ko -->\\r\\n\\t    <div class=\"divider\"></div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/allergies.search.html',[],function () { return '<div class=\"row pad-bottom\">\\t\\r\\n\\t<div class=\"span3\">&nbsp;</div>\\r\\n\\t<div class=\"span4\">\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<input type=\"text\" data-bind=\"typeahead: { name: \\'allergies\\', taOptions: allergyBloodhound, displayKey: \\'DisplayName\\' }, value: selectedAllergy, valueUpdate: \\'afterkeydown\\', initOptions: { hint: true, highlight: true, minLength: 3 }, showResultsCount: resultsMessage\" placeholder=\"Search Allergies\" />\\r\\n\\t\\t</div>\\t\\t\\t\\r\\n\\t</div>\\r\\n\\t<div class=\"span2\">\\r\\n\\t\\t<button class=\"btn color small\" data-bind=\"click: addNewAllergy, enable: canAdd\">\\r\\n\\t\\t\\t<i class=\"icon-plus\"></i>\\r\\n\\t\\t\\t<span class=\"pad-left\">Add</span>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\t\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/allergy.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: allergy}\">\\n  <div class=\"content\" data-bind=\"with: allergy\">\\n    <div class=\"content-fill\">\\n      <div class=\"wrapper\">\\n        <div class=\"content\">\\n          <div class=\"header\">\\n            <div class=\"table-cell\">\\n              <header>\\n                <h1 class=\"ellipsis\"><span data-bind=\"text: (allergyName().length > 18 ? allergyName().substring(0, 18) + \\'...\\' : allergyName()), attr: { \\'title\\': allergyName }\"></span></h1>\\n                <div class=\"controls\">\\n                  <div class=\"toggle fullscreen\" data-bind=\"click: $parent.toggleFullScreen, clickBubble: false\">\\n                  </div>\\n                </div>\\n                <div class=\"options\">\\n                  <a class=\"edit_allergy icon-outset\" href=\"#\" data-bind=\"click: $parent.edit\"><i class=\"icon-edit\"></i></a>\\n                  <a class=\"delete_allergy\" href=\"#\" data-bind=\"click: $parent.delete\"><i class=\"icon-cancel\"></i></a>\\n                </div>\\n              </header>\\n            </div>\\n          </div>\\n          <div class=\"table-row\">\\n            <div class=\"table-cell\">\\n              <div class=\"body\">\\n                <div class=\"content\">\\n                  <div class=\"accordion open\">\\n                    <div class=\"span12 details\">\\n                      <div class=\"status\">\\n\\n                        <div class=\"row pad-bottom\">\\n                          <div class=\"span6 grey\">\\n                            Type\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: typeString\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"if: status\">\\n                          <div class=\"span6 grey\">\\n                            Status\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: status().name\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: reactionString() !== \\'-\\'\">\\n                          <div class=\"span6 grey\">\\n                            Reaction\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: reactionString\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"if: severity\">\\n                          <div class=\"span6 grey\">\\n                            Severity\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: severity().name\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"if: source\">\\n                          <div class=\"span6 grey\">\\n                            Source\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: source().name\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: startDate\">\\n                          <div class=\"span6 grey\">\\n                            Start Date\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"DateOrDash: startDate\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: endDate\">\\n                          <div class=\"span6 grey\">\\n                            End Date\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"DateOrDash: endDate\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: createdOn\">\\n                          <div class=\"span6 grey\">\\n                            Created\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"Date: createdOn\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: updatedOn\">\\n                          <div class=\"span6 grey\">\\n                            Updated\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"Date: updatedOn\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: notes\">\\n                          <div class=\"span6 grey\">\\n                            Notes\\n                          </div>\\n                            <!-- ko ifnot: $parent.isNotesExpanded -->\\n                                <div class=\"span12\" data-bind=\"visible: notes\">\\n                                    <textarea data-bind=\"text: notes, attr: { \\'title\\': notes }\" readonly=\"readonly\" class=\"display-only no-scroll\" rows=\"5\"></textarea>\\n                                    <a class=\"grey\" data-bind=\"clickToggle: $parent.isNotesExpanded\" href=\"#\">...</a>\\n                                </div>\\n                                <!-- /ko -->\\n                                <!-- ko if: $parent.isNotesExpanded -->\\n                                <textarea data-bind=\"text: notes, autoHeight: notes, attr: { \\'title\\': notes }\" readonly=\"readonly\" class=\"display-only span12\" ></textarea>\\n                            <!-- /ko -->\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: systemName\">\\n                          <div class=\"span6 grey\">\\n                            System\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: systemName\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n","\ndefine('text!views/patients/sections/background.html',[],function () { return '<section class=\"accordion hoverable open\" data-phyautomation=\"patient-background-pane\">\\r\\n    <div class=\"row line accordion-toggle\">\\r\\n        <strong class=\"ellipsis\" data-bind=\"clickToggle: isOpen\">Background</strong>\\r\\n        <a class=\"edit hover-toggle\" href=\"#\" data-bind=\"click: toggleEditing, text: !isEditing() ? \\'Edit\\' : \\'Cancel\\'\" data-phyautomation=\"patient-background-edit\"></a>\\r\\n    </div>\\r\\n    <div class=\"accordion-content columns\" data-bind=\"visible: isOpen\">\\r\\n        <div class=\"column\" data-phyautomation=\"patient-background-whole\">\\r\\n            <div class=\"row\" data-bind=\"with: selectedPatient\">           \\r\\n                <!-- ko ifnot: $parent.isExpanded -->\\r\\n                <div class=\"span12\" data-bind=\"visible: background\">\\r\\n                    <textarea data-bind=\"text: background, attr: { \\'title\\': background }\" readonly=\"readonly\" class=\"display-only no-scroll\" rows=\"5\"></textarea>\\r\\n                    <a class=\"grey\" data-bind=\"clickToggle: $parent.isExpanded\" href=\"#\">...</a>\\r\\n                </div>\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: $parent.isExpanded -->\\r\\n                <textarea data-bind=\"text: background, autoHeight: background, attr: { \\'title\\': background }\" readonly=\"readonly\" class=\"display-only span12\" ></textarea>           \\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/barrier.details.html',[],function () { return '<div class=\"task span12\" data-bind=\"with: barrier\">\\r\\n    <div class=\"rule\"></div>\\r\\n    <div class=\"barrier row rule\">\\r\\n        <div class=\"details\">\\r\\n            <div class=\"filter-toggle status line\" data-bind=\"click: $parent.toggleIsExpanded\">\\r\\n                <div class=\"pull-left\">\\r\\n                    <i data-bind=\"css: ($parent.isExpanded() ? \\'icon-single-chevron-up\\' : \\'icon-angle-double-down\\')\"></i>\\r\\n                    <i data-bind=\"css: (status() ? status().iconClass() : \\'\\')\"></i>\\r\\n                </div>\\r\\n                <div class=\"name pad-icon-left accordion-toggle\">\\r\\n                    <div class=\"line-reset\">\\r\\n                        <span data-bind=\"text: name, css: (status() ? status().textClass() : \\'\\')\">\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- ko if: $parent.isExpanded -->\\r\\n            <div class=\"accordion-content muted pad pad-icon-left\">\\r\\n                <div class=\"row pad-bottom\">\\r\\n                    <div class=\"span6 grey\">\\r\\n                        Category\\r\\n                    </div>\\r\\n                    <div class=\"span6\">\\r\\n                        <span data-bind=\"with: category\">\\r\\n                            <span data-bind=\"text: name\"></span>\\r\\n                        </span>\\r\\n                        <span data-bind=\"if: !category()\">-</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"row pad-bottom filter-toggle\" data-bind=\"click: $parent.toggleDetailsExpanded\">\\r\\n                    <div class=\"span6 grey\">\\r\\n                        Details\\r\\n                    </div>\\r\\n                    <span class=\"span6\" data-bind=\"visible: (!$parent.hasDetails()), text: \\'-\\'\"></span>\\r\\n                </div>\\r\\n                <div class=\"row pad-bottom\" data-bind=\"visible: details\">\\r\\n                    <!-- ko ifnot: $parent.isDetailsExpanded -->\\r\\n                    <textarea class=\"span12 display-only no-scroll muted\" style=\"height: 6.5em;\" rows=\"5\" data-bind=\"text: details, attr:{ \\'title\\': details }, visible: details\" readonly=\"readonly\"></textarea>\\r\\n                    <a class=\"grey\" data-bind=\"click: $parent.toggleDetailsExpanded, visible: details\" href=\"#\">...</a>\\r\\n                    <!-- /ko -->\\r\\n                    <!-- ko if: $parent.isDetailsExpanded -->\\r\\n                    <textarea class=\"span12 display-only muted\" data-bind=\"text: details, autoHeight: details, attr:{ \\'title\\': details }\" readonly=\"readonly\"></textarea>\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row pad-bottom filter-toggle\">\\r\\n                    <div class=\"span6 grey\">\\r\\n                        Related Tasks\\r\\n                    </div>\\r\\n                    <textarea class=\"span12 display-only muted\" rows=\"2\" data-bind=\"text: taskListString, attr:{ \\'title\\': taskListString }\" readonly=\"readonly\"></textarea>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row pad-bottom filter-toggle\">\\r\\n                    <div class=\"span6 grey\">\\r\\n                        Related Interventions\\r\\n                    </div>\\r\\n                    <textarea class=\"span12 display-only muted\" rows=\"2\" data-bind=\"text: interventionListString, attr:{ \\'title\\': interventionListString }\" readonly=\"readonly\"></textarea>\\r\\n                    <span>-</span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\"row\">\\r\\n                    <div class=\"pull-left\">\\r\\n                        <a class=\"edit_barrier icon-outset\" href=\"#\" data-bind=\"click: $parent.editBarrier\"><i class=\"icon-edit\"></i>Edit</a>\\r\\n                    </div>\\r\\n                    <div class=\"pull-right\">\\r\\n                        <a class=\"delete_barrier\" href=\"#\" data-bind=\"click: $parent.deleteBarrier\"><i class=\"icon-cancel\"></i>Delete</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/basic.observations.html',[],function () { return '<div class=\"columns\">\\r\\n    <div class=\"column\">\\r\\n        <form>\\r\\n            <div class=\"row pad\">\\r\\n                <div class=\"span2\">\\r\\n                    <strong>Element</strong>\\r\\n                </div>\\r\\n                <div class=\"span2\">\\r\\n                    <strong>Value</strong>\\r\\n                </div>\\r\\n\\t\\t\\t\\t<div class=\"span1\">\\r\\n                    <strong>Units</strong>\\r\\n                </div>\\r\\n                <div class=\"span2\">\\r\\n                    <strong>Date</strong>\\r\\n                </div>\\r\\n                <div class=\"span4\">\\r\\n                    <strong></strong>\\r\\n                </div>\\r\\n                <div class=\"span1\">\\r\\n                    <strong></strong>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- ko foreach: computedBasicObservations -->\\r\\n            <!-- ko if: groupId -->\\r\\n            <!-- ko compose: { model: \\'viewmodels/templates/observation.bloodpressure.add\\', activationData: { observation: $data, addNew: $parent.addNew } } -->\\r\\n            <!-- /ko -->\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if: !groupId() -->\\r\\n            <!-- ko compose: { model: \\'viewmodels/templates/observation.add\\', activationData: { observation: $data, addNew: $parent.addNew } } -->\\r\\n            <!-- /ko -->\\r\\n            <!-- /ko -->\\r\\n            <!-- /ko -->\\r\\n        </form>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/care.team.html',[],function () { return '<section class=\"accordion hoverable open\">\\r\\n    <div class=\"row line accordion-toggle\">\\r\\n        <strong class=\"ellipsis\" data-bind=\"clickToggle: isOpen\">Care Team</strong>\\t\\t\\t<!-- this needs to chage -->\\r\\n        <!-- <a class=\"edit hover-toggle\" href=\"#\" data-bind=\"click: editCareTeam\">Edit</a> -->\\r\\n    </div>\\r\\n    <div class=\"accordion-content columns\" data-bind=\"visible: isOpen\">\\r\\n        <ul class=\"dotted column\">\\r\\n            \\r\\n            <li class=\"row center pad top\">\\r\\n                <div class=\"span2\">\\r\\n                    <img alt=\"Care team image\" class=\"profile-pic\" src=\"/NightingaleUI/Content/images/patient_neutral_small.png\" data-phyautomation=\"gender\">\\r\\n                </div>\\r\\n                <div class=\"span10\">\\r\\n                    <button data-bind=\"click: addCareMember\" class=\"btn color small\">Assign</button>\\r\\n                    <br>\\r\\n                    <small class=\"grey\">Care Team Member</small>\\r\\n                    <br>\\r\\n                </div>\\r\\n            </li>\\r\\n\\t\\t\\t<li class=\"row center pad top\">\\r\\n\\t\\t\\t\\t<div data-bind=\"with: primaryCareManager\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span2\" data-bind=\"with: contact\">\\r\\n\\t\\t\\t\\t\\t\\t<img alt=\"Care team image\" class=\"profile-pic\" data-bind=\"attr: { src: genderModel().SmallImgSrc }\" data-phyautomation=\"gender\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span10\">\\r\\n\\t\\t\\t\\t\\t\\t<div data-bind=\"with: contact\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<strong data-bind=\"text: fullName, attr: { \\'title\\': fullName }\"></strong>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<small class=\"grey\" data-bind=\"attr: { \\'title\\': computedRoleName }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: computedRoleName\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</small>\\r\\n\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-bind=\"if: !primaryCareManager()\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t\\t\\t\\t<img alt=\"Care team image\" class=\"profile-pic\" src=\"/NightingaleUI/Content/images/patient_neutral_small.png\" data-phyautomation=\"gender\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span10\">\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<button data-bind=\"click: assignToMe\" class=\"btn color small\">Assign to me</button>\\r\\n\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t\\t<small class=\"grey\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span>Primary Care Manager</span>\\r\\n\\t\\t\\t\\t\\t\\t</small>\\r\\n\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\"row center pad top\">\\r\\n\\t\\t\\t\\t<div data-bind=\"with: primaryCarePhysician\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span2\" data-bind=\"with: contact\">\\r\\n\\t\\t\\t\\t\\t\\t<img alt=\"Care team image\" class=\"profile-pic\" data-bind=\"attr: { src: genderModel().SmallImgSrc }\" data-phyautomation=\"gender\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span10\">\\r\\n\\t\\t\\t\\t\\t\\t<div data-bind=\"with: contact\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<strong data-bind=\"text: fullName, attr: { \\'title\\': fullName }\"></strong>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<small class=\"grey\" data-bind=\"attr: { \\'title\\': computedRoleName }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: computedRoleName\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</small>\\r\\n\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-bind=\"if: !primaryCarePhysician()\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t\\t\\t\\t<img alt=\"Care team image\" class=\"profile-pic\" src=\"/NightingaleUI/Content/images/patient_neutral_small.png\" data-phyautomation=\"gender\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span10\">\\r\\n\\t\\t\\t\\t\\t\\t<strong>Unassigned</strong><br>\\r\\n\\t\\t\\t\\t\\t\\t<small class=\"grey\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span>Primary Care Physician</span>\\r\\n\\t\\t\\t\\t\\t\\t</small>\\r\\n\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</li>\\r\\n            \\r\\n        </ul>\\r\\n        <ul class=\"dotted column\">\\r\\n            <!-- ko if: canReassignToMe -->\\r\\n            <li class=\"row center pad top\">\\r\\n                <div class=\"span2\">\\r\\n                    <img alt=\"Care team image\" class=\"profile-pic\" src=\"/NightingaleUI/Content/images/patient_neutral_small.png\" data-phyautomation=\"gender\">\\r\\n                </div>\\r\\n                <div class=\"span10\">\\r\\n                    <button data-bind=\"click: assignToMe\" class=\"btn color small\">Assign to me</button>\\r\\n                    <br>\\r\\n                    <small class=\"grey\">Primary Care Manager</small>\\r\\n                    <br>\\r\\n                </div>\\r\\n            </li>\\r\\n            <!-- /ko -->\\r\\n\\t\\t\\t<!-- ko foreach: primaryCareTeam -->\\r\\n            <li class=\"row center pad top\">\\r\\n                <div class=\"span2\" data-bind=\"with: contact\">\\r\\n                    <img alt=\"Care team image\" class=\"profile-pic\" data-bind=\"attr: { src: genderModel().SmallImgSrc }\" data-phyautomation=\"gender\">\\r\\n                </div>\\r\\n                <div class=\"span10\">\\r\\n\\t\\t\\t\\t\\t<div data-bind=\"with: contact\">\\r\\n\\t\\t\\t\\t\\t\\t<strong data-bind=\"text: fullName, attr: { \\'title\\': fullName }\"></strong>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n                    <small class=\"grey\" data-bind=\"attr: { \\'title\\': computedRoleName }\">\\r\\n                        <span data-bind=\"text: computedRoleName\"></span>\\r\\n                    </small>\\r\\n                    <br>\\r\\n                </div>\\r\\n            </li>\\r\\n            <!-- /ko -->            \\r\\n        </ul>\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/clinicalBackground.html',[],function () { return '<section class=\"accordion hoverable open\" data-phyautomation=\"patient-background-pane\">\\r\\n    <div class=\"row line accordion-toggle\">\\r\\n        <strong class=\"ellipsis\" data-bind=\"clickToggle: isOpen\">Clinical Background</strong>\\r\\n        <a class=\"edit hover-toggle\" href=\"#\" data-bind=\"click: toggleEditing, text: !isEditing() ? \\'Edit\\' : \\'Cancel\\'\" data-phyautomation=\"patient-background-edit\"></a>\\r\\n    </div>\\r\\n    <div class=\"accordion-content columns\" data-bind=\"visible: isOpen\">\\r\\n        <div class=\"column\" data-phyautomation=\"patient-background-whole\">\\r\\n            <div class=\"row\" data-bind=\"with: selectedPatient\">           \\r\\n                <!-- ko ifnot: $parent.isExpanded -->\\r\\n                <div class=\"span12\" data-bind=\"visible: clinicalBackground\">\\r\\n                    <textarea data-bind=\"text: clinicalBackground, attr: { \\'title\\': clinicalBackground }\" readonly=\"readonly\" class=\"display-only no-scroll\" rows=\"5\"></textarea>\\r\\n                    <a class=\"grey\" data-bind=\"clickToggle: $parent.isExpanded\" href=\"#\">...</a>\\r\\n                </div>\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: $parent.isExpanded -->\\r\\n                <textarea data-bind=\"text: clinicalBackground, autoHeight: clinicalBackground, attr: { \\'title\\': clinicalBackground }\" readonly=\"readonly\" class=\"display-only span12\" ></textarea>           \\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/communications.html',[],function () { return '<section class=\"accordion hoverable open\">\\r\\n    <div class=\"row line accordion-toggle\">\\r\\n        <strong class=\"ellipsis\" data-bind=\"clickToggle: isOpen\">Communication</strong>\\r\\n        <a class=\"edit hover-toggle\" href=\"#\" data-bind=\"click: editContact\">Edit</a>\\r\\n    </div>\\r\\n    <div class=\"accordion-content columns\" data-bind=\"with: contactCard, visible: isOpen\">\\r\\n        <div class=\"column\">\\r\\n            <!-- ko foreach: $parent.primaryCommunications -->\\r\\n            <div data-bind=\"compose: template\">\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span4 grey\">Mode</div>\\r\\n                <div class=\"span8\">\\r\\n                    <em class=\"row grey\" data-bind=\"visible: !prefCommMethods()\">Unknown</em>\\r\\n                    <span class=\"row\" data-bind=\"visible: prefCommMethods, text: prefCommMethods, attr: { \\'title\\': prefCommMethods }\"></span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span4 grey\">Days</div>\\r\\n                <div class=\"span8\">\\r\\n                    <em class=\"row grey\" data-bind=\"visible: !preferredDaysOfWeek()\">Unknown</em>\\r\\n                    <span class=\"row\" data-bind=\"visible: preferredDaysOfWeek, text: preferredDaysOfWeek, attr: { \\'title\\': preferredDaysOfWeek }\"></span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span4 grey\">Time</div>\\r\\n                <div class=\"span8\">\\r\\n                    <em class=\"row grey\" data-bind=\"visible: !preferredTimesOfDay()\">Unknown</em>\\r\\n                    <span class=\"row\" data-bind=\"visible: preferredTimesOfDay, text: preferredTimesOfDay, attr: { \\'title\\': preferredTimesOfDay }\"></span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row\" data-bind=\"with: timeZone\">\\r\\n                <div class=\"span4 grey\">Time Zone</div>\\r\\n                <div class=\"span8\" data-bind=\"text: name, attr: { \\'title\\': name }\"></div>\\r\\n            </div>\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span4 grey\">Language</div>\\r\\n                <div class=\"span8\">\\r\\n                    <em class=\"row grey\" data-bind=\"visible: !preferredLanguage()\">Unknown</em>\\r\\n                    <!-- ko with: preferredLanguage -->\\r\\n                    <span class=\"row\" data-bind=\"text: name, attr: { \\'title\\': name }\"></span>\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"column\">\\r\\n            <!-- ko foreach: $parent.secondaryCommunications -->\\r\\n            <div data-bind=\"compose: template\">\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if : phoneOptedOut -->\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <i class=\"icon-phone\"></i>\\r\\n                </div>\\r\\n                <div class=\"span10 ellipsis line short\" data-bind=\"attr: { \\'title\\': \\'phone opt out\\' }\">\\r\\n                    <div class=\"row\">\\r\\n                        <em class=\"grey\">&lt;phone opt out&gt;</em>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if : emailOptedOut -->\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <i class=\"icon-email\"></i>\\r\\n                </div>\\r\\n                <div class=\"span10 ellipsis line short\" data-bind=\"attr: { \\'title\\': \\'email opt out\\' }\">\\r\\n                    <div class=\"row\">\\r\\n                        <em class=\"grey\">&lt;email opt out&gt;</em>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if : addressOptedOut -->\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <i class=\"icon-address\"></i>\\r\\n                </div>\\r\\n                <div class=\"span10 ellipsis line short\" data-bind=\"attr: { \\'title\\': \\'mail opt out\\' }\">\\r\\n                    <div class=\"row\">\\r\\n                        <em class=\"grey\">&lt;mail opt out&gt;</em>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if : textOptedOut -->\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <i class=\"icon-sms\"></i>\\r\\n                </div>\\r\\n                <div class=\"span10 ellipsis line short\" data-bind=\"attr: { \\'title\\': \\'text opt out\\' }\">\\r\\n                    <div class=\"row\">\\r\\n                        <em class=\"grey\">&lt;text opt out&gt;</em>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /ko -->\\r\\n            <div class=\"row\" data-bind=\"with: secondaryLanguagesText\">\\r\\n                <div class=\"span4 grey\">Language</div>\\r\\n                <div class=\"span8 line short\">\\r\\n                    <span class=\"row\" data-bind=\"text: $data, attr: { \\'title\\': $data }\"></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/data.list.html',[],function () { return '<div class=\"content\">\\r\\n\\t<div class=\"clinicaldatalist\">\\r\\n\\t\\t<div class=\"vitalslist\">\\r\\n\\t\\t\\t<table class=\"no-wrap\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Type</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Value</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Start Date</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>End Date</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Source</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Status</th>\\r\\n\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t<!-- ko foreach: computedObservationGroups -->\\r\\n\\t\\t\\t\\t\\t\\t<tr data-bind=\"style: { backgroundColor: $index()%2 == 0 ? \\'whitesmoke\\' : \\'\\' }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\"toggle vitalshistory filters\" href=\"#\" data-bind=\"click: $parent.toggleExpand\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"toggle\" data-bind=\"css: isOpen() ? \\'icon-single-chevron-up\\' : \\'icon-angle-double-down\\'\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- ko with: parentObservation -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"with: type\"><span data-bind=\"text: name\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"text: name\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"text: computedValueString\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"DateOrDash: startDate\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"DateOrDash: endDate\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"text: source() ? source() : \\'-\\'\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"with: state\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: name\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: !state() -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>-</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a title=\"Remove\" data-bind=\"visible: false\"> <!-- click: $parents[1].removeObservation -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-cancel\" style=\"color: lightgrey;\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t<!-- ko if: isOpen -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: computedObservations -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr data-bind=\"style: { backgroundColor: $parentContext.$index()%2 == 0 ? \\'whitesmoke\\' : \\'\\'    }\" class=\"hidden vhist\" style=\"display: table-row;\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"text: computedValueString\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"DateOrDash: startDate\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"DateOrDash: endDate\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td data-bind=\"text: source() ? source() : \\'-\\'\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"with: state\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: name\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: !state() -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>-</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a title=\"Remove\" data-bind=\"visible: false\"> <!-- click: $parents[1].removeObservation -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-cancel\" style=\"color: lightgrey;\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- ko if: computedObservations().length === 0 -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr data-bind=\"style: { backgroundColor: $index()%2 == 0 ? \\'whitesmoke\\' : \\'\\'    }\" class=\"hidden vhist\" style=\"display: table-row;\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: isLoadingObs -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"fa fa-spinner fa-spin\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td colspan=\"10\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<em>No additional data</em>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t\\t<!-- ko if: computedObservationGroups().length === 0 -->\\r\\n\\t\\t\\t\\t<em class=\"grey\">No observations available for the individual.</em>\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/demographics.html',[],function () { return '<section class=\"accordion hoverable open\" data-phyautomation=\"patients-demographics-pane\">\\r\\n\\t\\t<div class=\"row line accordion-toggle\">\\r\\n\\t\\t\\t\\t<strong class=\"ellipsis\" data-bind=\"clickToggle: isOpen\">Individual Details</strong>\\r\\n\\t\\t\\t\\t<a class=\"edit hover-toggle\" href=\"#\" data-bind=\"click: toggleEditing\" data-phyautomation=\"patient-demographics-edit\">Edit</a>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"accordion-content columns\" data-bind=\"visible: isOpen, with: selectedPatient\">\\r\\n\\t\\t\\t\\t<div class=\"column\" data-phyautomation=\"patients-demographics-left\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span4\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img alt=\"Individual image\" class=\"profile-pic\" data-bind=\"attr: { src: genderModel().LargeImgSrc }\" data-phyautomation=\"gender\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span8 pad vertical\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2 class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"span12 ellipsis\" data-bind=\"text: fullFirstName, attr: { \\'title\\': fullFirstName }\" data-phyautomation=\"full-first-name\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2 class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"span12 ellipsis\" data-bind=\"text: fullLastName, attr: { \\'title\\': fullLastName }\" data-phyautomation=\"full-last-name\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row\" data-bind=\"with: deceased()\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"span4 grey\" data-bind=\"if: (name() === \\'Yes\\')\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tDeceased\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"span4 grey\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tAge\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"span8\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: age\" data-phyautomation=\"age\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"grey\" data-bind=\"with: dOB\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: \\'(\\' + $data + \\')\\'\" data-phyautomation=\"dob\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row\" data-bind=\"if: minor\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"span4 grey\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"span8\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tMinor\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: $parent.primaryId\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span4 grey ellipsis\" data-bind=\"text: $parent.primaryIdLabel, attr:{ \\'title\\': $parent.primaryIdTitle }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span8 ellipsis\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"text: $parent.primaryIdValue, attr: { \\'title\\': $parent.primaryIdValue }\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span4 grey\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPriority\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span8\" style=\"height: 15.33px;\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko with : priorityModel -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img alt=\"Priority\" data-bind=\"attr: { src: imageSource }\" data-phyautomation=\"priority\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span4 grey\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFlagged\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span8\" style=\"height: 15.33px;\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: $parent.toggleFlagged\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i data-bind=\"attr: { class: (flagged() ? \\'red\\' : \\'grey\\') + \\' icon-flag\\' }\" data-phyautomation=\"flagged\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"column\" data-phyautomation=\"patients-demographics-right\">\\r\\n\\t\\t\\t\\t\\t<div class=\"row\" data-bind=\"with: formattedSSN\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span5 grey\">SSN</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span6 filter-toggle\" data-bind=\"text: $data, click: $parents[1].showFullSSN\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span5 grey\">Protected</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span6 filter-toggle\" data-bind=\"text: protected() ? \\'Yes\\' : \\'No\\'\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"row\" data-bind=\"with: maritalStatus\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span5 grey pad-top\">Marital Status</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span6 filter-toggle pad-top\" data-bind=\"text: name()\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span5 grey\">System</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span6 filter-toggle\" data-bind=\"text: dataSource, attr {title: dataSource}\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/dropdown.w.addnew.html',[],function () { return ' <div>  \\r\\n    <div class=\"span2 align-right grey\">\\r\\n        <span data-bind=\"text: selectionLabel\"><span>\\r\\n    </div>   \\r\\n    \\r\\n    <!-- ko ifnot: isCreateNew() -->\\r\\n    <div class=\"span3 pad-left\">\\r\\n        <div data-bind=\"chsnsingle: { options: selectOptions(), value: selectedValue, text: optionTextProp, idValue: optionIdValueProp, \\r\\n\\t\\t\\t\\t\\t\\tlabel: optionsLabel, caption: \\'Choose...\\' , disabled: !isEnabled(),\\r\\n\\t\\t\\t\\t\\t\\tisSearch: isSearch, stickeySearchItemText: AddNewOptionText, \\r\\n\\t\\t\\t\\t\\t\\tisCancel: true, title: getSelectedValueText(), isFocused: isDropDownFocused, searchQueryText: searchQueryText}\"></div>\\r\\n    </div> \\r\\n    <!-- /ko -->\\r\\n\\r\\n    <!-- ko if: isCreateNew() -->    \\r\\n    <div class=\"span3 pad-left filters\">\\r\\n        <input type=\"text\" data-bind=\"value: getCustomValue(), \\r\\n\\t\\t\\t\\t\\tattr: {placeholder: placeholderText, title: getCustomValue()}, valueUpdate: \\'afterkeydown\\', hasFocus: isFocused,\\r\\n\\t\\t\\t\\t\\tevent: { \\'keyup\\': checkEscape }\" \\r\\n\\t\\t\\t\\t\\tstyle=\"width: 84%;\" />\\r\\n\\t\\t<i class=\"pointer close pull-right icon-cancel toggle\" data-bind=\"click: cancelChanges\"></i>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/focus.areas.html',[],function () { return '<section class=\"accordion hoverable open\" data-phyautomation=\"patients-focus-areas-pane\">\\r\\n    <div class=\"row line accordion-toggle\">\\r\\n        <strong class=\"ellipsis\" data-bind=\"clickToggle: isOpen\">Focus Problems</strong>\\r\\n        <a class=\"edit hover-toggle\" href=\"#\" data-bind=\"click: toggleEditing\" data-phyautomation=\"patient-demographics-edit\">Edit</a>\\r\\n    </div>\\r\\n    <div class=\"accordion-content columns\" data-bind=\"visible: isOpen, with: problems\">\\r\\n        <!-- ko if: length !== 0 -->\\r\\n        <ul class=\"column\" data-phyautomation=\"patients-problems-left\">\\r\\n            <li><em>Primary</em></li>\\r\\n            <!-- ko foreach: $parent.primaryProblems -->\\r\\n                <li class=\"push2 ellipsis\" data-bind=\"text: name, attr: { \\'title\\': name }\"></li>\\r\\n            <!-- /ko -->\\r\\n            <li class=\"push2 grey\" data-bind=\"visible: !$parent.isExpanded() && $parent.primaryProblems().length === 5\">\\r\\n                <a class=\"grey\" data-bind=\"clickToggle: $parent.isExpanded\" href=\"#\">...\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ul class=\"column pad vertical\" data-phyautomation=\"patients-problems-right\">\\r\\n            <li><em>Secondary</em></li>\\r\\n            <!-- ko foreach: $parent.secondaryProblems -->\\r\\n                <li class=\"push2 ellipsis\" data-bind=\"text: name, attr: { \\'title\\': name }\"></li>\\r\\n            <!-- /ko -->\\r\\n            <li class=\"push2 grey\" data-bind=\"visible: !$parent.isExpanded() && $parent.secondaryProblems().length === 5\">\\r\\n                <a class=\"grey\" data-bind=\"clickToggle: $parent.isExpanded\" href=\"#\">...</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <!-- /ko -->\\r\\n        <!-- ko if: length === 0 -->\\r\\n        <em class=\"grey\">No primary or secondary focus problems</em>\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/goal.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: goal}\">\\r\\n    <div class=\"content\" data-bind=\"with: goal\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 class=\"ellipsis\"><span data-bind=\"text: (name().length > 18 ? name().substring(0, 18) + \\'...\\' : name()), attr: { \\'title\\': name }\"></span></h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle fullscreen\" data-bind=\"click: $parent.toggleFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\"options\">\\r\\n                                    <a class=\"edit_goal icon-outset\" href=\"#\" data-bind=\"click: $parent.edit\"><i class=\"icon-edit\"></i></a>\\r\\n                                    <a class=\"delete_goal\" href=\"#\" data-bind=\"click: $parent.delete\"><i class=\"icon-cancel\"></i></a>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"accordion open\">\\r\\n                                        <div class=\"span12 details\">\\r\\n                                            <div class=\"status\">\\r\\n                                                <div class=\"row pad-bottom rule\" data-bind=\"visible: startDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Start Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"Date: startDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"with: status\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Status\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: name\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: targetValue\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Target Value\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: targetValue\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: targetDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Target Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"Date: targetDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: type\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Type\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\">\\r\\n                                                        <span data-bind=\"with: type\">\\r\\n                                                            <span data-bind=\"text: name\"></span>\\r\\n                                                        </span>\\r\\n                                                        <span data-bind=\"if: !type()\">-</span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: focusAreaString() !== \\'-\\'\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Focus Area(s)\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: focusAreaString, attr: { \\'title\\': focusAreaString }\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: programString\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Program(s)\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: programString\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: source\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Source\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\">\\r\\n                                                        <span data-bind=\"with: source\">\\r\\n                                                            <span data-bind=\"text: name\"></span>\\r\\n                                                        </span>\\r\\n                                                        <span data-bind=\"if: !source()\">-</span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: endDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        End Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"DateOrDash: endDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n\\r\\n\\r\\n                                                <div class=\"row pad-bottom\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        # of related tasks\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: tasks().length\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n\\r\\n                                                <div class=\"row pad-bottom\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        # of related interventions\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: interventions().length\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n\\r\\n                                                <div data-bind=\"foreach: customAttributes().sort($parent.alphabeticalOrderSort)\">\\r\\n                                                    <div data-bind=\"compose: displayPath\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom filter-toggle\" data-bind=\"click: $parent.toggleGoalDetailsExpanded, visible: details\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Details\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: details\">\\r\\n                                                    <!-- ko ifnot: $parent.isGoalDetailsExpanded -->\\r\\n                                                    <textarea class=\"span12 display-only no-scroll muted\" style=\"height: 6.5em;\" rows=\"5\" data-bind=\"text: details, attr:{ \\'title\\': details }, visible: details\" readonly=\"readonly\"></textarea>\\r\\n                                                    <a class=\"grey\" data-bind=\"click: $parent.toggleGoalDetailsExpanded, visible: details\" href=\"#\">...</a>\\r\\n                                                    <!-- /ko -->\\r\\n                                                    <!-- ko if: $parent.isGoalDetailsExpanded -->\\r\\n                                                    <textarea class=\"span12 display-only muted\" data-bind=\"text: details, autoHeight: details, attr:{ \\'title\\': details }\" readonly=\"readonly\"></textarea>\\r\\n                                                    <!-- /ko -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"span12 transparent\">-</div>\\r\\n                                        <div class=\"\">\\r\\n                                            <div class=\"span12\">\\r\\n                                                <div class=\"large grey muted line pad-horizontal pad-icon-left\">\\r\\n                                                    Barriers\\r\\n                                                    <a class=\"accordion-toggle pull-right\" data-bind=\"click: $parent.addBarrier\">\\r\\n                                                        <i class=\"icon-plus\"></i>\\r\\n                                                    </a>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <!-- ko foreach: barriers -->\\r\\n                                            <!-- ko compose: { model: \\'viewmodels/patients/sections/barrier.details\\', activationData: { barrier: $data  } } -->\\r\\n                                            <!-- /ko -->\\r\\n                                            <!-- /ko -->\\r\\n                                            <div class=\"span12\" data-bind=\"visible: barriers().length === 0\">\\r\\n                                                <div class=\"status line\">\\r\\n                                                    <div class=\"name pad-icon-left\">\\r\\n                                                        <div class=\"line-reset\">\\r\\n                                                            <em class=\"grey\">No barriers.</em>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/patients/sections/goals.html',[],function () { return '<div class=\"content\">\\r\\n    <!-- ko foreach: computedGoals -->\\r\\n        <!-- ko if: !isNew() -->\\r\\n            <section class=\"accordion\" data-bind=\"css: { \\'open\\': isOpen }\">\\r\\n                <div class=\"row accordion-toggle filter-toggle\" data-bind=\"clickToggle: isOpen, css: { \\'open\\': isOpen }, css: { \\'active\\': $parent.activeGoal() === $data }\">\\r\\n                    <h2 class=\"span12\">\\r\\n                        <a class=\"pull-left\">\\r\\n                            <i data-bind=\"css: status().iconClass\"></i>\\r\\n                        </a>\\r\\n                        <a class=\"name\">\\r\\n                            <span data-bind=\"text: name, attr: { \\'title\\': name }, css: status().textClass\">\\r\\n                            </span>\\r\\n                        </a>\\r\\n                        <a data-bind=\"click: $parent.setActiveGoal.bind($parent), clickBubble: false, arrowMover: \\'\\'\" class=\"icon filter-toggle pull-right\" href=\"#\" title=\"Goal Details\">\\r\\n                            <i class=\"icon-info\"></i>\\r\\n                        </a>\\r\\n                    </h2>\\r\\n                </div>\\r\\n                <div class=\"accordion-content\" data-bind=\"if: isOpen()\">\\r\\n                    <div class=\"span12 accordion\" data-bind=\"css: { \\'open\\': isExpanded }\">\\r\\n                        <header class=\"rule\">\\r\\n                            <div class=\"span6\">\\r\\n                                <div class=\"large grey muted line pad-horizontal pad-icon-left\">\\r\\n                                    Tasks\\r\\n                                    <a class=\"accordion-toggle pull-right\" data-bind=\"click: $parent.addTask\">\\r\\n                                        <i class=\"icon-plus\"></i>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\"span6 last\">\\r\\n                                <div class=\"large grey muted line pad-horizontal pad-icon-left\">\\r\\n                                    Interventions\\r\\n                                    <a class=\"accordion-toggle pull-right\" data-bind=\"click: $parent.addIntervention\">\\r\\n                                        <i class=\"icon-plus\"></i>\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </header>\\r\\n                        <div class=\"task row\">\\r\\n                            <div class=\"span6\">\\r\\n                                <div class=\"row rule\"></div>\\r\\n                                <!-- ko foreach: sortedTasks -->\\r\\n                                <div class=\"row rule filter-toggle\" data-bind=\"css: { \\'active\\': $parents[1].activeTask() === $data }\">\\r\\n                                    <div class=\"span12 details\">\\r\\n                                        <div class=\"status line rule\">\\r\\n                                            <div class=\"pull-left\">\\r\\n                                                <i data-bind=\"css: status().iconClass\"></i>\\r\\n                                            </div>\\r\\n                                            <div class=\"name pad-icon-left accordion-toggle\" data-bind=\"click: $parents[1].setActiveTask.bind($parents[1])\">\\r\\n                                                <div class=\"line-reset\" data-bind=\"with: status\">\\r\\n                                                    <!-- ko if: (name() !== \\'Met\\' && name() !== \\'Abandoned\\') -->\\r\\n                                                        <span data-bind=\"text: $parent.description, css: textClass\"></span>\\r\\n                                                    <!-- /ko -->\\r\\n                                                    <!-- ko if: (name() === \\'Met\\' || name() === \\'Abandoned\\') -->\\r\\n                                                        <em>\\r\\n                                                            <span data-bind=\"text: $parent.description, css: textClass\"></span>\\r\\n                                                            - <span data-bind=\"Date: $parent.closedDate, attr: { \\'title\\': $parent.closedDate }\"></span>\\r\\n                                                        </em>\\r\\n                                                    <!-- /ko -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko if: tasks().length === 0 -->\\r\\n                                <div class=\"intervention row rule\">\\r\\n                                    <div class=\"details\">\\r\\n                                        <div class=\"status line\">\\r\\n                                            <div class=\"name pad-icon-left\">\\r\\n                                                <div class=\"line-reset\">\\r\\n                                                    <em class=\"grey\">No tasks</em>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-- /ko -->\\r\\n                            </div>\\r\\n                            <div class=\"span6 last\">\\r\\n                                <div class=\"row rule\"></div>\\r\\n                                <!-- ko foreach: sortedInterventions -->\\r\\n                                    <div class=\"row rule filter-toggle\" data-bind=\"css: { \\'active\\': $parents[1].activeIntervention() === $data }, click: $parents[1].setActiveIntervention.bind($parents[1])\">\\r\\n                                        <div class=\"span12 details\">\\r\\n                                            <div class=\"status line rule\">\\r\\n                                                <div class=\"pull-left\" data-bind=\"with: status\">\\r\\n                                                    <i data-bind=\"css: iconClass\"></i>\\r\\n                                                </div>\\r\\n                                                <div class=\"line-reset\" data-bind=\"with: status\">\\r\\n                                                    <!-- ko if: name() !== \\'Completed\\' -->\\r\\n                                                        <span data-bind=\"text: $parent.description, css: textClass\"></span>\\r\\n                                                    <!-- /ko -->\\r\\n                                                    <!-- ko if: name() === \\'Completed\\' -->\\r\\n                                                        <em>\\r\\n                                                            <span data-bind=\"text: $parent.description, css: textClass\"></span>\\r\\n                                                            - <span data-bind=\"Date: $parent.closedDate, attr: { \\'title\\': $parent.closedDate }\"></span>\\r\\n                                                        </em>\\r\\n                                                    <!-- /ko -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko if: interventions().length === 0 -->\\r\\n                                <div class=\"intervention row rule\">\\r\\n                                    <div class=\"details\">\\r\\n                                        <div class=\"status line\">\\r\\n                                            <div class=\"name pad-icon-left\">\\r\\n                                                <div class=\"line-reset\">\\r\\n                                                    <em class=\"grey\">No interventions</em>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-- /ko -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n            <div class=\"pad-top\">\\r\\n            </div>\\r\\n        <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: computedGoals().length > 0 -->\\r\\n        <section class=\"accordion\"></section>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: computedGoals().length === 0 -->\\r\\n        <em class=\"grey\">No goals match the criteria</em>\\r\\n    <!-- /ko -->\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/patients/sections/intervention.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: intervention}\">\\r\\n    <div class=\"content\" data-bind=\"with: intervention\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 class=\"ellipsis\"><span data-bind=\"text: (description().length > 18 ? description().substring(0, 18) + \\'...\\' : description()), attr: { \\'title\\': description }\"></span></h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle fullscreen\" data-bind=\"click: $parent.toggleFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\"options\">\\r\\n                                    <a class=\"edit_intervention icon-outset\" href=\"#\" data-bind=\"click: $parent.editIntervention\"><i class=\"icon-edit\"></i></a>\\r\\n                                    <a class=\"delete_intervention\" href=\"#\" data-bind=\"click: $parent.deleteIntervention\"><i class=\"icon-cancel\"></i></a>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"intervention row rule\">\\r\\n                                        <div class=\"details span12\">\\r\\n                                            <div class=\"accordion-content pad\">\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: dueDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Due Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"Date: dueDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: startDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Start Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"Date: startDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: closedDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Closed Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"Date: closedDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"with: status\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Status\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: name\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"with: category\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Category\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\">\\r\\n                                                        <span data-bind=\"text: name\"></span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"with: assignedTo\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Assigned To\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\">\\r\\n                                                        <span data-bind=\"text: preferredName\"></span>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom filter-toggle\" data-bind=\"click: $parent.toggleDetailsExpanded, visible: details\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Details\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: details\">\\r\\n                                                    <!-- ko ifnot: $parent.isDetailsExpanded -->\\r\\n                                                    <textarea class=\"span12 display-only no-scroll muted\" style=\"height: 6.5em;\" rows=\"5\" data-bind=\"text: details, attr:{ \\'title\\': details }, visible: details\" readonly=\"readonly\"></textarea>\\r\\n                                                    <a class=\"grey\" data-bind=\"click: $parent.toggleDetailsExpanded, visible: details\" href=\"#\">...</a>\\r\\n                                                    <!-- /ko -->\\r\\n                                                    <!-- ko if: $parent.isDetailsExpanded -->\\r\\n                                                    <textarea class=\"span12 display-only muted\" data-bind=\"text: details, autoHeight: details, attr:{ \\'title\\': details }\" readonly=\"readonly\"></textarea>\\r\\n                                                    <!-- /ko -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\"span12 transparent\">-</div>\\r\\n                                        <div class=\"\">\\r\\n                                            <div class=\"span12\">\\r\\n                                                <div class=\"large grey muted line pad-horizontal pad-icon-left\">\\r\\n                                                    Barriers\\r\\n                                                    <a class=\"filter-toggle pull-right\" data-bind=\"click: $parent.addBarrier\">\\r\\n                                                        <i class=\"icon-plus\"></i>\\r\\n                                                    </a>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <!-- ko foreach: relatedBarriers -->\\r\\n                                            <!-- ko compose: { model: \\'viewmodels/patients/sections/barrier.details\\', activationData: { barrier: $data  } } -->\\r\\n                                            <!-- /ko -->\\r\\n                                            <!-- /ko -->\\r\\n                                            <div class=\"span12\" data-bind=\"visible: relatedBarriers().length === 0\">\\r\\n                                                <div class=\"status line\">\\r\\n                                                    <div class=\"name pad-icon-left\">\\r\\n                                                        <div class=\"line-reset\">\\r\\n                                                            <em class=\"grey\">No barriers.</em>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/patients/sections/medication.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: medication}\">\\n  <div class=\"content\" data-bind=\"with: medication\">\\n    <div class=\"content-fill\">\\n      <div class=\"wrapper\">\\n        <div class=\"content\">\\n          <div class=\"header\">\\n            <div class=\"table-cell\">\\n              <header>\\n                <h1 class=\"ellipsis\"><span data-bind=\"text: (name().length > 18 ? name().substring(0, 18) + \\'...\\' : name()), attr: { \\'title\\': name }\"></span></h1>\\n                <div class=\"controls\">\\n                  <div class=\"toggle fullscreen\" data-bind=\"click: $parent.toggleFullScreen, clickBubble: false\">\\n                  </div>\\n                </div>\\n                <div class=\"options\">\\n                  <a class=\"edit_medication icon-outset\" href=\"#\" data-bind=\"click: $parent.edit, css: { \\'disabled\\': dataSource() !== \\'Engage\\' }\"><i class=\"icon-edit\"></i></a>\\n                  <a class=\"delete_medication\" href=\"#\" data-bind=\"click: $parent.delete, css: { \\'disabled\\': dataSource() !== \\'Engage\\' }\"><i class=\"icon-cancel\"></i></a>\\n                </div>\\n              </header>\\n            </div>\\n          </div>\\n          <div class=\"table-row\">\\n            <div class=\"table-cell\">\\n              <div class=\"body\">\\n                <div class=\"content\">\\n                  <div class=\"accordion open\">\\n                    <div class=\"span12 details\">\\n                      <div class=\"status\">\\n                        <div class=\"row pad-bottom\" data-bind=\"with: status\">\\n                          <div class=\"span6 grey\">\\n                            Status\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: name\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"with: refusalReason\">\\n                          <div class=\"span6 grey\">\\n                            Refusal Reason\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: name\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: otherRefusalReason\">\\n                          <div class=\"span6 grey\">\\n                            Refusal Other\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: otherRefusalReason\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: computedSigCode() !== \\'-\\'\">\\n                          <div class=\"span10\" data-bind=\"text: computedSigCode\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: (startDate() || endDate())\">\\n                          <div class=\"span6 grey\">\\n                            Dates\\n                          </div>\\n                          <div class=\"span6\">\\n                            <span data-bind=\"DateOrNothing: startDate\"></span> -\\n                            <!-- ko if: endDate -->\\n                              <span data-bind=\"Date: endDate\"></span>\\n                            <!-- /ko -->\\n                            <!-- ko ifnot: endDate -->\\n                              current\\n                            <!-- /ko -->\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: computedDuration\">\\n                          <div class=\"span6 grey\">\\n                            Duration\\n                          </div>\\n                          <div class=\"span3\" data-bind=\"text: computedDuration\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: otherDuration\">\\n                          <div class=\"span6 grey\">\\n                            Duration Other\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: otherDuration\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"if: review\">\\n                          <div class=\"span6 grey\">\\n                            Review\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: review().name\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: computedPrescribedBy\">\\n                          <div class=\"span6 grey\">\\n                            Prescribed By\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: computedPrescribedBy\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: computedOrderedBy\">\\n                          <div class=\"span6 grey\">\\n                            Ordered By\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: computedOrderedBy\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: computedRxInfo\">\\n                          <div class=\"span6 grey\">\\n                            Rx Info\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: computedRxInfo\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: pharmacy\">\\n                          <div class=\"span6 grey\">\\n                            Pharmacy\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: pharmacy\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: reason\">\\n                          <div class=\"span6 grey\">\\n                            Reason\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: reason\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: notes\">\\n                          <div class=\"span6 grey\">\\n                            Notes\\n                          </div>\\n                            <!-- ko ifnot: $parent.isNotesExpanded -->\\n                                <div class=\"span12\" data-bind=\"visible: notes\">\\n                                    <textarea data-bind=\"text: notes, attr: { \\'title\\': notes }\" readonly=\"readonly\" class=\"display-only no-scroll\" rows=\"5\"></textarea>\\n                                    <a class=\"grey\" data-bind=\"clickToggle: $parent.isNotesExpanded\" href=\"#\">...</a>\\n                                </div>\\n                                <!-- /ko -->\\n                                <!-- ko if: $parent.isNotesExpanded -->\\n                                <textarea data-bind=\"text: notes, autoHeight: notes, attr: { \\'title\\': notes }\" readonly=\"readonly\" class=\"display-only span12\" ></textarea>\\n                            <!-- /ko -->\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: source\">\\n                          <div class=\"span6 grey\">\\n                            Source\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: source().name\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: createdOn\">\\n                          <div class=\"span6 grey\">\\n                            Created\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"Date: createdOn\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: updatedOn\">\\n                          <div class=\"span6 grey\">\\n                            Updated\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"Date: updatedOn\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: dataSource\">\\n                          <div class=\"span6 grey\">\\n                            Data Source\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: dataSource\">\\n                          </div>\\n                        </div>\\n                        <div class=\"row pad-bottom\" data-bind=\"visible: originalDataSource\">\\n                          <div class=\"span6 grey\">\\n                            Original Data Source\\n                          </div>\\n                          <div class=\"span6\" data-bind=\"text: originalDataSource\">\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n';});\n\n","\ndefine('text!views/patients/sections/medication.edit.html',[],function () { return '<div class=\"force-down\" data-bind=\"with: newPatientMedication, css:{\\'body\\': medication !== undefined}\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"span12 line\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span2 align-right grey\">\\r\\n                    &nbsp\\r\\n                </div>\\r\\n                <div class=\"span3 pad-left\">\\r\\n                    <div data-bind=\"chsnsingle: { options: $parent.categories, value: category, text: \\'name\\', label: \\'medication-category\\', caption: \\'Choose...\\' }\"></div>\\r\\n                </div>\\r\\n                <div class=\"span2 align-right grey\">\\r\\n                    Type:\\r\\n                </div>\\r\\n                <div class=\"span3 pad-left\">\\r\\n                    <div data-bind=\"chsnsingle: { options: $parent.types, value: type, text: \\'name\\', label: \\'medication-type\\', caption: \\'Choose...\\', isRequired: true }, css: { \\'invalid\\': !type() }\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span2 align-right grey\">\\r\\n                    Name:\\r\\n                </div>\\r\\n                <div class=\"span3 pad-left\">\\r\\n\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n                    <!-- ko if: isNew -->\\r\\n                        <input class=\"span12\" type=\"text\" data-bind=\"typeahead: { name: \\'medications\\', taOptions: $parent.medicationBloodhound, displayKey: \\'DisplayName\\' }, value: name, valueUpdate: \\'afterkeydown\\', initOptions: { hint: false, highlight: true, minLength: 3, overrideSelected: $parent.overrideSelected }, showResultsCount: $parent.resultsMessage, css: { \\'invalid\\': !$parent.canAdd() }\" placeholder=\"Search Medications\" />\\r\\n                    <!-- /ko -->\\r\\n                    <!-- ko ifnot: isNew -->\\r\\n                        <span><pre data-bind=\"text: name\"></pre></span>\\r\\n                    <!-- /ko -->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n                </div>\\r\\n                <div class=\"span2 align-right grey\">\\r\\n                    Status:\\r\\n                </div>\\r\\n                <div class=\"span3 pad-left\">\\r\\n                    <div data-bind=\"chsnsingle: { options: $parent.statuses, value: status, text: \\'name\\', label: \\'medication-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Source:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n        \\t<div data-bind=\"chsnsingle: { options: $parent.sources, value: source, text: \\'name\\', label: \\'medication-source\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider filters\">\\r\\n        <!-- ko compose: { model: \\'viewmodels/patients/sections/dropdown.w.addnew\\' , activationData:\\r\\n                { selectedValue: strength,\\r\\n\\t\\t\\t\\t\\toptionIdValueProp: \\'Text\\',\\r\\n                    isCreateNew: $parent.isAddingNewStrengthValue,\\r\\n\\t\\t\\t\\t\\tisEditModeOnly: $parent.isNewMedicationName,\\r\\n                    isCreateNewEnabled: $parent.isCreateNewEnabled,\\r\\n                    isEnabled: $parent.isDropdownEnabled,\\r\\n                    selectOptions: $parent.strengths,\\r\\n                    selectionLabel: \\'Strength\\',\\r\\n                    optionsLabel: \\'medication-strength\\',\\r\\n                    placeholderText: \\'Enter new strength\\',\\r\\n                    AddNewOptionText: $parent.addNewOptionText,\\r\\n\\t\\t\\t\\t\\tisAddNewOption: true\\r\\n                }} -->\\r\\n        <!-- /ko -->\\r\\n\\r\\n        <!-- ko compose: { model: \\'viewmodels/patients/sections/dropdown.w.addnew\\' , activationData:\\r\\n                { selectedValue: route,\\r\\n                    optionIdValueProp: \\'Text\\',\\r\\n                    isCreateNew: $parent.isAddingNewRouteValue,\\r\\n                    isEditModeOnly: $parent.isNewMedicationName,\\r\\n                    isCreateNewEnabled: $parent.isCreateNewEnabled,\\r\\n                    isEnabled: $parent.isDropdownEnabled,\\r\\n                    selectOptions: $parent.routes,\\r\\n                    selectionLabel: \\'Route\\',\\r\\n                    optionsLabel: \\'medication-route\\',\\r\\n                    placeholderText: \\'Enter new route\\',\\r\\n                    AddNewOptionText: $parent.addNewOptionText,\\r\\n                    isAddNewOption: true\\r\\n                }} -->\\r\\n        <!-- /ko -->\\r\\n        <i class=\"pointer icon-cancel pull-right pad-right toggle\" data-bind=\"click: $parent.resetDropdowns\"></i>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n\\r\\n        <!-- ko compose: { model: \\'viewmodels/patients/sections/dropdown.w.addnew\\' , activationData:\\r\\n                { selectedValue: form,\\r\\n\\t\\t\\t\\t\\toptionIdValueProp: \\'Text\\',\\r\\n                    isCreateNew: $parent.isAddingNewFormValue,\\r\\n\\t\\t\\t\\t\\tisEditModeOnly: $parent.isNewMedicationName,\\r\\n                    isCreateNewEnabled: $parent.isCreateNewEnabled,\\r\\n                    isEnabled: $parent.isDropdownEnabled,\\r\\n                    selectOptions: $parent.dosageForms,\\r\\n                    selectionLabel: \\'Dose Form\\',\\r\\n                    optionsLabel: \\'dosage-form\\',\\r\\n                    placeholderText: \\'Enter new dose form\\',\\r\\n                    AddNewOptionText: $parent.addNewOptionText,\\r\\n\\t\\t\\t\\t\\tisAddNewOption: true\\r\\n                }} -->\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Quantity:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <input type=\"text\" data-bind=\"value: freqQuantity\" />\\r\\n        </div>\\r\\n        <!-- ko compose: { model: \\'viewmodels/patients/sections/dropdown.w.addnew\\' , activationData:\\r\\n                { selectedValue: frequency,\\r\\n                    isCreateNew: $parent.isAddingNewFrequencyValue,\\r\\n                    isCreateNewEnabled: $parent.isCreateNewFrequencyEnabled,\\r\\n                    isEnabled: $parent.isDropdownEnabled,\\r\\n                    selectOptions: $parent.frequency,\\r\\n                    optionTextProp: \\'name\\',\\r\\n                    selectionLabel: \\'Frequency\\',\\r\\n                    optionsLabel: \\'medication-freq-howoften\\',\\r\\n                    placeholderText: \\'Enter new frequency\\',\\r\\n                    AddNewOptionText: $parent.addNewOptionText,\\r\\n                    isAddNewOption: false,\\r\\n                    newCustomValue: customFrequency\\r\\n                }} -->\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Ordered By:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <input type=\"text\" data-bind=\"value: orderedBy\" maxlength=\"50\" />\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Ordered Date:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n                {\\r\\n                    observableDateTime: orderedDate,\\r\\n                    dateErrors: orderedDateErrors, showInvalid: $parent.setInvalidOrderedDate,\\r\\n                    datepickerOptions:{}, datepickerDynamicOptions: {}, dateName: \\'orderedDate\\'\\r\\n                }\\r\\n            } -->\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Rx Number:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <input type=\"text\" data-bind=\"value: rxNumber\" maxlength=\"50\" />\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Rx Date:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n                {\\r\\n                    observableDateTime: rxDate,\\r\\n                    dateErrors: rxDateErrors, showInvalid: $parent.setInvalidRxDate,\\r\\n                    datepickerOptions:{}, datepickerDynamicOptions: {}, dateName: \\'rxDate\\'\\r\\n                }\\r\\n            } -->\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Prescribed By:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <input type=\"text\" data-bind=\"value: prescribedBy\" maxlength=\"50\" />\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Prescribed Date:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n                {\\r\\n                    observableDateTime: prescribedDate,\\r\\n                    dateErrors: prescribedDateErrors, showInvalid: $parent.setInvalidPrescribedDate,\\r\\n                    datepickerOptions:{}, datepickerDynamicOptions: {}, dateName: \\'prescribedDate\\'\\r\\n                }\\r\\n            } -->\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Pharmacy:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <input type=\"text\" data-bind=\"value: pharmacy\" maxlength=\"500\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Start Date:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n                {\\r\\n                    observableDateTime: startDate, dateErrors: startDateErrors, showInvalid: $parent.setInvalidStartDate,\\r\\n                    datepickerOptions:{}, datepickerDynamicOptions: { maxDate: endDate }, dateName: \\'startDate\\'\\r\\n                }\\r\\n            } -->\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            End Date:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n                {\\r\\n                    observableDateTime: endDate, dateErrors: endDateErrors, showInvalid: $parent.setInvalidEndDate,\\r\\n                    datepickerOptions:{}, datepickerDynamicOptions: {minDate: startDate}, dateName: \\'endDate\\'\\r\\n                }\\r\\n            } -->\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Duration:\\r\\n        </div>\\r\\n        <div class=\"span1 pad-left\">\\r\\n            <input type=\"text\" data-bind=\"value: duration, valueUpdate: \\'afterkeydown\\', numeric: duration,\\r\\n                css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'duration\\') !== -1) }\" maxlength=\"50\"></input>\\r\\n        </div>\\r\\n        <div class=\"span2\">\\r\\n            <div data-bind=\"chsnsingle: { options: $parent.durationUnits, value: durationUnitId, text: \\'name\\', label: \\'medication-duration-unit\\', caption: \\'Choose...\\', idValue: \\'id\\' }\"></div>\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\" data-bind=\"if: otherDuration\">\\r\\n            Other Duration:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\" data-bind=\"if: otherDuration\">\\r\\n            <input type=\"text\" data-bind=\"value: otherDuration\" maxlength=\"50\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Review:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <div data-bind=\"chsnsingle: { options: $parent.medicationReviews, value: reviewId, idValue: \\'id\\', text: \\'name\\', label: \\'medication-review\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"visible: $parent.showRefusalReason\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Refusal Reason:\\r\\n        </div>\\r\\n        <div class=\"span5 pad-left\">\\r\\n            <div data-bind=\"chsnsingle: { options: $parent.refusalReasons, value: refusalReasonId, idValue: \\'id\\', text: \\'name\\', label: \\'medication-refusal-reason\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n        <div class=\"span1 align-right grey\" data-bind=\"if: $parent.showOtherReason\">\\r\\n            Other Reason:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\" data-bind=\"if: $parent.showOtherReason\">\\r\\n            <input type=\"text\" data-bind=\"value: otherRefusalReason\" maxlength=\"100\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">Reason:</div>\\r\\n        <div class=\"span8 pad-left\">\\r\\n            <input data-bind=\"value: reason\" placeholder=\"reason for medication\" maxlength=\"250\" type=\"text\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"span3 grey\">\\r\\n            Notes:\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"span12\">\\r\\n            <textarea data-bind=\"value: notes\" maxlength=\"1000\"></textarea>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Created On:\\r\\n        </div>\\r\\n        <div class=\"span2 pad-left grey\" data-bind=\"DateOrDash: createdOn\">\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Updated On:\\r\\n        </div>\\r\\n        <div class=\"span2 pad-left grey\" data-bind=\"DateOrDash: updatedOn\">\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            System:\\r\\n        </div>\\r\\n        <div class=\"span2 pad-left grey\" data-bind=\"text: systemName\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/medications.html',[],function () { return '<div class=\"content\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"span1 grey\">\\r\\n            Type\\r\\n        </div>\\r\\n        <div class=\"span2 grey\">\\r\\n            Name\\r\\n        </div>\\r\\n        <div class=\"span2 grey\">\\r\\n            Strength\\r\\n        </div>\\r\\n        <div class=\"span3 grey\">\\r\\n            SIG\\r\\n        </div>\\r\\n        <div class=\"span3 grey\">\\r\\n            Reason\\r\\n        </div>\\r\\n        <div class=\"span1\"></div>\\r\\n    </div>\\r\\n    <div class=\"row divider\">\\r\\n        <div class=\"span1 icon-otc\"\\r\\n        style=\"font-style: italic\">\\r\\n        </div>\\r\\n        <div class=\"span2\">\\r\\n            <a class=\"edit\" href=\"#\">Aspirin</a>\\r\\n        </div>\\r\\n        <div class=\"span2\">\\r\\n            80 mg\\r\\n        </div>\\r\\n        <div class=\\r\\n        \"span3 ellipsis\">\\r\\n            Take One Tablet Daily\\r\\n        </div>\\r\\n        <div class=\"span3\">\\r\\n            Heart Attack Protection\\r\\n        </div>\\r\\n        <div class=\"span1\">\\r\\n            <a class=\"edit hover-toggle grey fa fa-lg fa-pencil\" href=\"#\" style=\"font-style: italic\"></a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/patients/sections/medications.search.html',[],function () { return '<div></div>';});\n\n","\ndefine('text!views/patients/sections/notes.html',[],function () { return '<section class=\"accordion\" data-bind=\"css: { \\'open\\': isOpen() }, with: group\">\\r\\n    <a data-bind=\"clickToggle: $parent.isOpen\" href=\"#\">\\r\\n        <h3 class=\"row line grey accordion-toggle\" data-bind=\"text: Name, attr: { \\'title\\': Name }\"></h3>\\r\\n    </a>\\r\\n    <!-- ko foreach: Notes -->\\r\\n    <div class=\"row line filter-toggle\" data-bind=\"click: $parents[1].setActiveNote, css: { \\'active\\': $parents[1].activeNote() === $data }, visible: $parents[1].isOpen\">\\r\\n        <div class=\"span2 pad-left small grey pull-left\" data-bind=\"Time: createdOn\"></div>\\r\\n        <div class=\"span2 grey ellipsis\">\\r\\n            <span data-bind=\"with: type\">\\r\\n                <span data-bind=\"text: name, attr:{title: name}\"></span>\\r\\n            </span>\\r\\n            <span data-bind=\"if: !type()\">-</span>\\r\\n        </div>\\r\\n        <div class=\"span5 ellipsis\" data-bind=\"text: displayText, attr: { \\'title\\': text }\"></div>\\r\\n        <div class=\"span3 grey ellipsis\"><span data-bind=\"with: createdBy\"><span data-bind=\"text: preferredName, attr: { \\'title\\': preferredName }\"></span></span></div>        \\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/problems.list.html',[],function () { return '<div>\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t<strong>Name</strong>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t<strong>Display</strong>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t<strong>Start Date</strong>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t<strong>State</strong>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span1\">\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<!-- ko foreach: computedProblemObservations -->\\r\\n\\t\\t<!-- ko compose: \"templates/focusproblem.edit.html\" -->\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t<!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/programs.html',[],function () { return '<div data-bind=\"foreach: computedPrograms\">\\r\\n    <section class=\"accordion\" data-bind=\"css: { \\'open\\': isOpen() }\">\\r\\n        <div class=\"row accordion-toggle\" data-bind=\"click: $parent.toggleOpen\">\\t\\t\\t\\r\\n\\t\\t\\t<h2 class=\"span12 ellipsis\">\\r\\n\\t\\t\\t\\t<div data-bind=\"if: (elementState() == 5 || elementState() == 6)\" class=\"pull-left\">  \\r\\n\\t\\t\\t\\t\\t<i data-bind=\"css: { \\'icon-check\\': elementState() == 5, \\'icon-warning\\': elementState() == 6 }\" ></i>\\r\\n\\t\\t\\t\\t</div>\\r\\n                <a href=\"#\" data-bind=\"text: displayName, clickBubble: false\" >\\r\\n\\t\\t\\t\\t</a>\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                <a data-bind=\"click: $parent.setActiveProgram, clickBubble: false, css: { \\'active\\': $parent.activeProgram() === $data }, arrowMover: \\'\\'\" class=\"icon filter-toggle pull-right\" href=\"#\" title=\"Program Details\">\\r\\n                    <i class=\"icon-info\"></i>\\r\\n                </a>\\r\\n            </h2>\\r\\n        </div>\\r\\n        <div class=\"accordion-content\" data-bind=\"visible: isOpen\">\\r\\n            <table class=\"goal-action\">\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <th class=\"filters\">\\r\\n                            <i class=\"pointer toggle\" data-bind=\"css: allModulesOpen() ? \\'icon-single-chevron-up\\' : \\'icon-angle-double-down\\', click: $parent.toggleAllExpanded\"></i>\\r\\n                            Modules\\r\\n                        </th>\\r\\n                        <th>\\r\\n                          <span class=\"span9\">Action</span>\\r\\n                          <span class=\"span1\"><i class=\"icon-priority-empty large grey-darker\" stye=\"font-size: 24px;\"></i></span>\\r\\n                          <span class=\"span1\"><i class=\"fa fa-spinner lightestblue\" style=\"font-size: 17px; width: 25px;\"></i></span>\\r\\n                          <span class=\"span1\"><i class=\"icon-check green\" stye=\"font-size: 20px;\"></i></span>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                    <!-- ko foreach: modules -->\\r\\n                    <tr data-bind=\"visible: enabled() === true\">\\r\\n                        <td class=\"filter-toggle module\" data-bind=\"clickToggle: isOpen, clickBubble: false, css: { \\'active\\': $parents[1].activeModule() === $data }, arrowMover: \\'\\'\">\\r\\n                            <span class=\"image-container span1\">\\r\\n                                <!-- ko if: completed() === true -->\\r\\n                                <i class=\"icon-check green\"></i>\\r\\n                                <!-- /ko -->\\r\\n                            </span>\\r\\n                            <span data-bind=\"with: name\" class=\"span9\">\\r\\n                                <!-- ko if: $parent.completed() === true -->\\r\\n                                <em class=\"grey\" data-bind=\"text: $data, attr: { \\'title\\': $data }\"></em><em> - <span data-bind=\"Date: $parent.dateCompleted\"></span></em>\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko if: $parent.completed() === false -->\\r\\n                                <span data-bind=\"text: $data, attr: { \\'title\\': $data }\"></span>\\r\\n                                <!-- /ko -->\\r\\n                            </span>\\r\\n                            <span class=\"details pull-right\" data-bind=\"click: $parents[1].setActiveModule, clickBubble: false\">\\r\\n                                <i class=\"icon-info\"></i>\\r\\n                            </span>\\r\\n                        </td>\\r\\n                        <td class=\"flush\">\\r\\n                            <!-- ko if: isOpen -->\\r\\n                            <table class=\"nowrap\">\\r\\n                                <tbody data-bind=\"foreach: actions().sort($root.alphabeticalOrderSort)\">\\r\\n                                    <tr class=\"filter-toggle\" data-bind=\"css: { \\'active\\': $data === $parents[2].activeAction(), \\'dirty\\': hasChanges() }, visible: !archived() && enabled()\">\\r\\n                                        <td class=\"image-container\" data-bind=\"click: $parents[2].setActiveAction, arrowMover: \\'\\'\">\\r\\n                                            <!-- ko if: hasChanges() -->\\r\\n                                            <i data-bind=\"attr: { class: (isSaving() ? \\'fa-spin\\' : \\'\\') + \\' fa fa-spinner lightestblue\\' }\" />\\r\\n                                            <!-- /ko -->\\r\\n                                            <!-- ko if: (!hasChanges() && completed() === true)  -->\\r\\n                                            <i class=\"icon-check green\"></i>\\r\\n                                            <!-- /ko -->\\r\\n                                        </td>\\r\\n                                        <td class=\"ellipsis\" data-bind=\"click: $parents[2].setActiveAction, with: name, arrowMover: \\'\\'\">\\r\\n                                            <!-- ko if: $parent.enabled() === false || $parent.completed() === true && !$parent.isSaving() || $parent.completed() === true && !$parent.hasChanges() && $parent.isSaving() -->\\r\\n                                                <em class=\"grey\" data-bind=\"text: $data, attr: { \\'title\\': $data }\"></em>\\r\\n                                                <!-- ko if: $parent.completed() === true -->\\r\\n                                                <em><span data-bind=\"text: \\'(\\' + $parent.history().length + \\')\\', visible: $parent.history().length > 0\"></span> - <span data-bind=\"Date: $parent.dateCompleted, attr: { \\'title\\': $parent.dateCompleted }\"></span></em>\\r\\n                                                <!-- /ko -->\\r\\n                                            <!-- /ko -->\\r\\n                                            <!-- ko if: $parent.enabled() === true && $parent.completed() === false && !$parent.hasChanges() -->\\r\\n                                                <span data-bind=\"text: $data, attr: { \\'title\\': $data }\"></span> <span data-bind=\"text: \\'(\\' + $parent.history().length + \\')\\', visible: $parent.history().length > 0\"></span>\\r\\n                                            <!-- /ko -->\\r\\n                                            <!-- ko if: $parent.hasChanges() -->\\r\\n                                                <strong class=\"inprogress\" ><span data-bind=\"text: $data, attr: { \\'title\\': $data }\"></span> <span data-bind=\"text: \\'(\\' + $parent.history().length + \\')\\', visible: $parent.history().length > 0\"></span></strong>\\r\\n                                            <!-- /ko -->\\r\\n                                        </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                            <!-- /ko -->\\r\\n                            <!-- ko if: !isOpen() -->\\r\\n                            <div class=\"span12 filter-toggle pad-left\" data-bind=\"clickToggle: isOpen\">\\r\\n                                <div class=\"row\">\\r\\n                                  <span class=\"span9 transparent\">-</span>\\r\\n                                  <span class=\"span1\" data-bind=\"text: notStartedActionsCount, css: { \\'transparent\\': notStartedActionsCount() === \\'-\\' }\"></span>\\r\\n                                  <span class=\"span1\" data-bind=\"text: openActionsCount, css: { \\'transparent\\': openActionsCount() === \\'-\\' }\"></span>\\r\\n                                  <span class=\"span1 grey\" data-bind=\"text: completeActionsCount, css: { \\'transparent\\': completeActionsCount() === \\'-\\' }\"></span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- /ko -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <!-- /ko -->\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </section>\\r\\n</div>\\r\\n<div data-bind=\"visible: computedPrograms().length === 0\">\\r\\n    <section class=\"accordion open\">\\r\\n        <div class=\"row accordion-toggle\">\\r\\n            <h2>\\r\\n                <a></a>\\r\\n            </h2>\\r\\n        </div>\\r\\n        <div class=\"accordion-content\">\\r\\n            <table class=\"goal-action\">\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <em class=\"grey\">No programs match the criteria.</em>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </section>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/recent.individuals.html',[],function () { return '<div class=\"pad-top\" data-bind=\"foreach: currentUser().computedRecentIndividuals\">\\t\\r\\n    <div class=\"row ellipsis\" data-bind=\"click: $parent.choosePatient, css: { \\'filter-toggle active strong\\': $parent.selectedPatient() === $data  }\">\\r\\n        <div class=\"columns patient-list\">\\r\\n            <div class=\"column ellipsis\">\\r\\n                <img alt=\"Patient small\" class=\"pull-left\" data-bind=\"attr: { src: genderModel().SmallImgSrc }\" />\\r\\n                <a href=\"#\" class=\"line\" data-bind=\"text: fullLastName() + \\', \\' + fullFirstName(), attr: { \\'title\\': (fullLastName() + \\', \\' + fullFirstName()) }\"></a>\\r\\n            </div>\\r\\n            <div class=\"column ellipsis\">\\r\\n                <span class=\"line grey pad horizontal\" data-bind=\"with: dOB\"><span data-bind=\"text: \\'(\\' + $data + \\')\\', attr: { \\'title\\': $data }\" data-phyautomation=\"dob\"></span></span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/sections/status.html',[],function () { return '<section class=\"accordion hoverable open\" data-phyautomation=\"patient-status-pane\">\\r\\n    <div class=\"row line accordion-toggle\">\\r\\n        <strong class=\"ellipsis\" data-bind=\"clickToggle: isOpen\">Status</strong>\\r\\n        <a class=\"edit hover-toggle\" href=\"#\" data-bind=\"click: toggleEditing, text: !isEditing() ? \\'Edit\\' : \\'Cancel\\'\"></a>\\r\\n    </div>\\r\\n    <div class=\"accordion-content columns\" data-bind=\"visible: isOpen, with: selectedPatient\">\\r\\n        <div class=\"column\">\\r\\n            <div class=\"row\">           \\r\\n                <div class=\"span4 grey\">\\r\\n                    Status\\r\\n                </div>\\r\\n                <div class=\"span8\">\\t\\t\\t\\t\\r\\n                    <span data-bind=\"with: patientStatus\">\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"text: name\" data-phyautomation=\"status\"></span>\\r\\n\\t\\t\\t\\t\\t</span>                    \\r\\n                </div>\\r\\n            </div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: (statusId() !== \\'1\\')\">           \\r\\n                <div class=\"span4 grey\">\\r\\n                    Reason\\r\\n                </div>\\r\\n                <div class=\"span8\">\\t\\t\\t\\t\\r\\n                    <span data-bind=\"with: patientStatusReason\">\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"text: name\" data-phyautomation=\"reason\"></span>\\r\\n\\t\\t\\t\\t\\t</span>                    \\r\\n                </div>\\r\\n            </div>\\r\\n\\t\\t\\t<div class=\"row\">           \\r\\n                <div class=\"span4 grey\">\\r\\n                    System\\r\\n                </div>\\r\\n                <div class=\"span8\">\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"text: statusDataSource || \\'N/A\\'\" data-phyautomation=\"source\"></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/system.ids.html',[],function () { return '<section class=\"accordion hoverable open\" data-phyautomation=\"patients-system-ids-pane\">\\r\\n    <div class=\"row line accordion-toggle open\">\\r\\n        <strong class=\"ellipsis\" data-bind=\"clickToggle: isOpen\">IDs</strong>\\r\\n        <a class=\"edit hover-toggle\" href=\"#\" data-bind=\"click: editSystemIds\">Edit</a>\\r\\n    </div>\\r\\n    <ul class=\"accordion-content columns\" data-bind=\"visible: isOpen\">\\r\\n        <ul class=\"column\">\\r\\n\\t\\t\\t<!-- ko foreach: computedPatientSystemsDisplay -->\\r\\n\\t\\t\\t<div data-bind=\"visible: (Number(statusId()) === 1)\">\\r\\n\\t\\t\\t\\t<li class=\"pad-bottom ellipsis\">\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"with: system\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"\" data-bind=\"text: displayLabel, attr: { title: (displayLabel() + \\': \\' + $parent.value()) }\" style=\"overflow: hidden; text-overflow: ellipsis;\"></span>\\r\\n\\t\\t\\t\\t\\t</span>: <span class=\"\" data-bind=\"text: value, attr: { title: value }\" style=\"white-space: pre;\"></span>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t<li class=\"grey\" data-bind=\"visible: showEllipsis\">\\r\\n\\t\\t\\t\\t<a class=\"grey\" data-bind=\"clickToggle: isExpanded\" href=\"#\">...</a>\\r\\n\\t\\t\\t</li>\\r\\n        </ul>\\t\\t\\r\\n    </ul>\\r\\n</section>';});\n\n","\ndefine('text!views/patients/sections/task.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: task}\">\\r\\n    <div class=\"content\" data-bind=\"with: task\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 class=\"ellipsis\"><span data-bind=\"text: (description().length > 18 ? description().substring(0, 18) + \\'...\\' : description()), attr: { \\'title\\': description }\"></span></h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle fullscreen\" data-bind=\"click: $parent.toggleFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\"options\">\\r\\n                                    <a class=\"edit_task icon-outset\" href=\"#\" data-bind=\"click: $parent.editTask\"><i class=\"icon-edit\"></i></a>\\r\\n                                    <a class=\"delete_task\" href=\"#\" data-bind=\"click: $parent.deleteTask\"><i class=\"icon-cancel\"></i></a>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div class=\"row rule\">\\r\\n                                        <div class=\"span12 details\">\\r\\n                                            <div class=\"accordion-content pad\">\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: startDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Start Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"DateOrDash: startDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: closedDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Closed Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"Date: closedDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"with: status\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Status\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: name\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: targetValue\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Target Value\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"text: targetValue() ? targetValue() : \\'-\\'\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: targetDate\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Target Date\\r\\n                                                    </div>\\r\\n                                                    <div class=\"span6\" data-bind=\"DateOrDash: targetDate\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom filter-toggle\" data-bind=\"click: $parent.toggleDetailsExpanded, visible: details\">\\r\\n                                                    <div class=\"span6 grey\">\\r\\n                                                        Details\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\"row pad-bottom\" data-bind=\"visible: details\">\\r\\n                                                    <!-- ko ifnot: $parent.isDetailsExpanded -->\\r\\n                                                    <textarea class=\"span12 display-only no-scroll muted\" style=\"height: 6.5em;\" rows=\"5\" data-bind=\"text: details, attr:{ \\'title\\': details }, visible: details\" readonly=\"readonly\"></textarea>\\r\\n                                                    <a class=\"grey\" data-bind=\"click: $parent.toggleDetailsExpanded, visible: details\" href=\"#\">...</a>\\r\\n                                                    <!-- /ko -->\\r\\n                                                    <!-- ko if: $parent.isDetailsExpanded -->\\r\\n                                                    <textarea class=\"span12 display-only muted\" data-bind=\"text: details, autoHeight: details, attr:{ \\'title\\': details }\" readonly=\"readonly\"></textarea>\\r\\n                                                    <!-- /ko -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\"span12 transparent\">-</div>\\r\\n                                        <div class=\"\">\\r\\n                                            <div class=\"span12\">\\r\\n                                                <div class=\"large grey muted line pad-horizontal pad-icon-left\">\\r\\n                                                    Barriers\\r\\n                                                    <a class=\"filter-toggle pull-right\" data-bind=\"click: $parent.addBarrier\">\\r\\n                                                        <i class=\"icon-plus\"></i>\\r\\n                                                    </a>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <!-- ko foreach: relatedBarriers -->\\r\\n                                            <!-- ko compose: { model: \\'viewmodels/patients/sections/barrier.details\\', activationData: { barrier: $data  } } -->\\r\\n                                            <!-- /ko -->\\r\\n                                            <!-- /ko -->\\r\\n                                            <div class=\"span12\" data-bind=\"visible: relatedBarriers().length === 0\">\\r\\n                                                <div class=\"status line\">\\r\\n                                                    <div class=\"name pad-icon-left\">\\r\\n                                                        <div class=\"line-reset\">\\r\\n                                                            <em class=\"grey\">No barriers.</em>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/patients/tabs/action.details.html',[],function () { return '<div class=\"tab\" data-bind=\"css: { \\'active\\': tab.isActive() }, with: activeAction\">\\r\\n    <div class=\"fullscreen-span6\">\\r\\n        <h4 class=\"line short pull-left pad-right fullscreen-only\">Current</h4>\\r\\n        <div class=\"row\">\\r\\n            <section class=\"accordion\">\\r\\n                <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parent.descriptionSectionOpen\">\\r\\n                    <h3>Action Description</h3>\\r\\n                </div>\\r\\n                <div class=\"accordion-content\" data-bind=\"visible: $parent.descriptionSectionOpen\">\\r\\n                    <div class=\"column\">\\r\\n                        <!-- ko ifnot: description() -->\\r\\n                        <em class=\"grey\">No description available</em>\\r\\n                        <!-- /ko -->\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <!-- ko if: description() -->\\r\\n                            <p data-bind=\"text: description\"></p>\\r\\n                            <!-- /ko -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\"row pad-top divider\">\\r\\n            <section class=\"accordion hoverable\">\\r\\n                <div class=\"row accordion-toggle\">\\r\\n                    <div class=\"span11\"  data-bind=\"clickToggle: $parent.individualAttributesSectionOpen\">\\r\\n                        <h3>Individual Attributes</h3>\\r\\n                    </div>\\r\\n                    <div class=\"span1\">\\r\\n                        <a class=\"pull-right hover-toggle\" href=\"#\" data-bind=\"visible: $parent.canEdit, click: $parent.toggleModalShowing\">Edit</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"accordion-content\" data-bind=\"visible: $parent.individualAttributesSectionOpen\">\\r\\n                    <div>\\r\\n                        <div class=\"column\">\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Assigned Date:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\" data-bind=\"DateOrNothing: assignDate\"></div>\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Assigned By:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\" data-bind=\"with: assignBy\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Assigned To:</span>\\r\\n                                </div>\\r\\n                                <!-- ko if: assignToId() -->\\r\\n                                <div class=\"span9\" data-bind=\"with: assignTo\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko ifnot: assignToId() -->\\r\\n                                <div class=\"span9\"><em class=\"grey\">Unassigned</em></div>\\r\\n                                <!-- /ko -->\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top divider\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Action State:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\"><span data-bind=\"text: elementStateModel().name\"></span><span data-bind=\"if: stateUpdatedOn\"> as of <span data-bind=\"DateOrNothing: stateUpdatedOn\"></span></span></div>\\r\\n                                <!-- <div class=\"span9\" data-bind=\"text: elementStateModel().name\"></div> -->\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Start Date:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\" data-bind=\"DateOrNothing: attrStartDate\"></div>\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>End Date:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\" data-bind=\"DateOrNothing: attrEndDate\"></div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n        <!-- <div class=\"row pad-top divider\">\\r\\n            <section class=\"accordion\">\\r\\n                <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parent.attributesSectionOpen\">\\r\\n                    <h3>Action Attributes</h3>\\r\\n                </div>\\r\\n                <div class=\"accordion-content\" data-bind=\"visible: $parent.attributesSectionOpen\">\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <div class=\"span3 align-left\">\\r\\n                            <span>Authored By:</span>\\r\\n                        </div>\\r\\n                        <div class=\"span9\" data-bind=\"text: authoredBy\"></div>\\r\\n                    </div>\\r\\n                    <div class=\"row pad-top divider\">\\r\\n                        <div class=\"span3 align-left\">\\r\\n                            <span>Action Version:</span>\\r\\n                        </div>\\r\\n                        <div class=\"span9\"><span data-bind=\"text: actionVersion\"></span> <span data-bind=\"if: actionVersionUpdatedOn\">(<span data-bind=\"Date: actionVersionUpdatedOn\"></span>)</span></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div> -->\\r\\n        <div class=\"row pad-top divider\" data-bind=\"with: $parent.computedObjectives\">\\r\\n            <section class=\"accordion\">\\r\\n                <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parents[1].objectivesSectionOpen\">\\r\\n                    <h3>Objectives</h3>\\r\\n                </div>\\r\\n                <div class=\"accordion-content\" data-bind=\"visible: $parents[1].objectivesSectionOpen\">\\r\\n                    <table class=\"goal-action\" data-bind=\"if: showing\">\\r\\n                        <colgroup>\\r\\n                            <col span=\"1\" style=\"width: 40%\">\\r\\n                            <col span=\"1\" style=\"width: 40%\" >\\r\\n                            <col span=\"1\" style=\"width: 20%\" >\\r\\n                        </colgroup>\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>\\r\\n                                    <strong>Category</strong>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <strong>Objective</strong>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <strong>Target</strong>\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody data-bind=\"foreach: $data\">\\r\\n                            <tr>\\r\\n                                <td class=\"wrap\"><span data-bind=\"text: categoriesString\"></span></td>\\r\\n                                <td class=\"wrap\" data-bind=\"with: objective\"><span data-bind=\"text: name\"></span></td>\\r\\n                                <td class=\"wrap\"><span data-bind=\"if: value\"><span data-bind=\"text: value\"></span> <span data-bind=\"text: unit\"></span></span></td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <!-- ko if: !showing() -->\\r\\n                    <em class=\"grey\">No objectives set.</em>\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\"row pad-top divider\"></div>\\r\\n    </div>\\r\\n    <div class=\"fullscreen-only span6 muted\" data-bind=\"with: $parent.selectedHistoricalAction\">\\r\\n        <h4 class=\"line short pull-left pad-right\">History</h4>\\r\\n        <div class=\"span6\" data-bind=\"chsnsingle: { options: $parents[1].availableHistoricalActions, value: $parents[1].selectedHistoricalAction, text: \\'formattedCompletedDate\\', label: \\'action-actions\\', caption: \\'Choose...\\' }\"></div>        \\r\\n        <div class=\"row\">\\r\\n            <section class=\"accordion\">\\r\\n                <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parents[1].descriptionSectionOpen\">\\r\\n                    <h3>Action Description</h3>\\r\\n                </div>\\r\\n                <div class=\"accordion-content\" data-bind=\"visible: $parents[1].descriptionSectionOpen\">\\r\\n                    <div class=\"column\">\\r\\n                        <!-- ko ifnot: description() -->\\r\\n                        <em class=\"grey\">No description available</em>\\r\\n                        <!-- /ko -->\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <!-- ko if: description() -->\\r\\n                            <p data-bind=\"text: description\"></p>\\r\\n                            <!-- /ko -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\"row pad-top divider\">\\r\\n            <section class=\"accordion hoverable\">\\r\\n                <div class=\"row accordion-toggle\">\\r\\n                    <div class=\"span11\"  data-bind=\"clickToggle: $parents[1].individualAttributesSectionOpen\">\\r\\n                        <h3>Individual Attributes</h3>\\r\\n                    </div>\\r\\n                    <div class=\"span1\"><!-- \\r\\n                        <a class=\"pull-right hover-toggle\" href=\"#\" data-bind=\"visible: $parent.canEdit, click: $parent.toggleModalShowing\">Edit</a> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"accordion-content\" data-bind=\"visible: $parents[1].individualAttributesSectionOpen\">\\r\\n                    <div>\\r\\n                        <div class=\"column\">\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Assigned Date:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\" data-bind=\"DateOrNothing: assignDate\"></div>\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Assigned By:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\" data-bind=\"with: assignBy\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Assigned To:</span>\\r\\n                                </div>\\r\\n                                <!-- ko if: assignToId() -->\\r\\n                                <div class=\"span9\" data-bind=\"with: assignTo\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko ifnot: assignToId() -->\\r\\n                                <div class=\"span9\"><em class=\"grey\">Unassigned</em></div>\\r\\n                                <!-- /ko -->\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top divider\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Action State:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\"><span data-bind=\"text: elementStateModel().name\"></span><span data-bind=\"if: stateUpdatedOn\"> as of <span data-bind=\"DateOrNothing: stateUpdatedOn\"></span></span></div>\\r\\n                                <!-- <div class=\"span9\" data-bind=\"text: elementStateModel().name\"></div> -->\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>Start Date:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\" data-bind=\"DateOrNothing: attrStartDate\"></div>\\r\\n                            </div>\\r\\n                            <div class=\"row pad-top\">\\r\\n                                <div class=\"span3 align-left\">\\r\\n                                    <span>End Date:</span>\\r\\n                                </div>\\r\\n                                <div class=\"span9\" data-bind=\"DateOrNothing: attrEndDate\"></div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\"row pad-top divider\" data-bind=\"with: $parents[1].historicalComputedObjectives\">\\r\\n            <section class=\"accordion\">\\r\\n                <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parents[2].objectivesSectionOpen\">\\r\\n                    <h3>Objectives</h3>\\r\\n                </div>\\r\\n                <div class=\"accordion-content\" data-bind=\"visible: $parents[2].objectivesSectionOpen\">\\r\\n                    <table class=\"goal-action\" data-bind=\"if: showing\">\\r\\n                        <colgroup>\\r\\n                            <col span=\"1\" style=\"width: 40%\">\\r\\n                            <col span=\"1\" style=\"width: 40%\" >\\r\\n                            <col span=\"1\" style=\"width: 20%\" >\\r\\n                        </colgroup>\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>\\r\\n                                    <strong>Category</strong>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <strong>Objective</strong>\\r\\n                                </th>\\r\\n                                <th>\\r\\n                                    <strong>Target</strong>\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody data-bind=\"foreach: $data\">\\r\\n                            <tr>\\r\\n                                <td class=\"wrap\"><span data-bind=\"text: categoriesString\"></span></td>\\r\\n                                <td class=\"wrap\" data-bind=\"with: objective\"><span data-bind=\"text: name\"></span></td>\\r\\n                                <td class=\"wrap\"><span data-bind=\"if: value\"><span data-bind=\"text: value\"></span> <span data-bind=\"text: unit\"></span></span></td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <!-- ko if: !showing() -->\\r\\n                    <em class=\"grey\">No objectives set.</em>\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\"row pad-top divider\"></div>\\r\\n    </div>\\r\\n    <div class=\"fullscreen-only span6\" data-bind=\"visible: !$parent.selectedHistoricalAction()\">\\r\\n        <em>No historical data</em>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/tabs/action.steps.html',[],function () { return '<div class=\"tab\" data-bind=\"css: { \\'active\\': tab.isActive() }, with: activeAction\">\\r\\n\\t<div class=\"fullscreen-span6\">\\r\\n    <h4 class=\"line short pull-left pad-right fullscreen-only\">Current</h4>\\r\\n    <!-- ko foreach: computedPath -->\\r\\n        <!-- ko compose: stepType().path -->\\r\\n        <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n\\t</div>\\r\\n\\t<div class=\"fullscreen-only span6 muted\" data-bind=\"with: $parent.selectedHistoricalAction\">\\r\\n        <h4 class=\"line short pull-left pad-right\">History</h4>\\r\\n        <div class=\"span6\" data-bind=\"chsnsingle: { options: $parents[1].availableHistoricalActions, value: $parents[1].selectedHistoricalAction, text: \\'formattedCompletedDate\\', label: \\'action-actions\\', caption: \\'Choose...\\' }\"></div>        \\r\\n        <!-- ko foreach: computedPath -->\\r\\n            <!-- ko compose: stepType().path -->\\r\\n            <!-- /ko -->\\r\\n        <!-- /ko -->\\r\\n\\t</div>\\r\\n    <div class=\"fullscreen-only span6\" data-bind=\"visible: !$parent.selectedHistoricalAction()\">\\r\\n        <em>No historical data</em>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/tabs/module.details.html',[],function () { return '<div class=\"tab\" data-bind=\"css: { \\'active\\': tab.isActive() }, with: activeModule\">\\r\\n    <div class=\"row\">\\r\\n        <section class=\"accordion\">\\r\\n            <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parent.descriptionSectionOpen\">\\r\\n                <h3>Module Description</h3>\\r\\n            </div>\\r\\n            <div class=\"accordion-content\" data-bind=\"visible: $parent.descriptionSectionOpen\">\\r\\n                <div class=\"column\">\\r\\n                    <!-- ko ifnot: description() -->\\r\\n                    <em class=\"grey\">No description available</em>\\r\\n                    <!-- /ko -->\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <!-- ko if: description() -->\\r\\n                        <p data-bind=\"text: description\"></p>\\r\\n                        <!-- /ko -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider\">\\r\\n        <section class=\"accordion hoverable\">\\r\\n            <div class=\"row accordion-toggle\">\\r\\n                <div class=\"span11\"  data-bind=\"clickToggle: $parent.individualAttributesSectionOpen\">\\r\\n                    <h3>Individual Attributes</h3>\\r\\n                </div>\\r\\n                <div class=\"span1\">\\r\\n                    <a class=\"pull-right hover-toggle\" href=\"#\" data-bind=\"visible: $parent.canEdit, click: $parent.toggleModalShowing\">Edit</a>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"accordion-content\" data-bind=\"visible: $parent.individualAttributesSectionOpen\">\\r\\n                <div>\\r\\n                    <div class=\"column\">\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Assigned Date:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"DateOrNothing: assignDate\"></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Assigned By:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"with: assignBy\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Assigned To:</span>\\r\\n                            </div>\\r\\n                            <!-- ko if: assignToId() -->\\r\\n                            <div class=\"span9\" data-bind=\"with: assignTo\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n                            <!-- /ko -->\\r\\n                            <!-- ko ifnot: assignToId() -->\\r\\n                            <div class=\"span9\"><em class=\"grey\">Unassigned</em></div>\\r\\n                            <!-- /ko -->\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top divider\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Module State:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\"><span data-bind=\"text: elementStateModel().name\"></span><span data-bind=\"if: stateUpdatedOn\"> as of <span data-bind=\"DateOrNothing: stateUpdatedOn\"></span></span></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Start Date:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"DateOrNothing: attrStartDate\"></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>End Date:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"DateOrNothing: attrEndDate\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n    <!-- <div class=\"row pad-top divider\">\\r\\n        <section class=\"accordion\">\\r\\n            <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parent.attributesSectionOpen\">\\r\\n                <h3>Module Attributes</h3>\\r\\n            </div>\\r\\n            <div class=\"accordion-content\" data-bind=\"visible: $parent.attributesSectionOpen\">\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-left\">\\r\\n                        <span>Authored By:</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\" data-bind=\"text: authoredBy\"></div>\\r\\n                </div>\\r\\n                <div class=\"row pad-top divider\">\\r\\n                    <div class=\"span3 align-left\">\\r\\n                        <span>Module Version:</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\"><span data-bind=\"text: moduleVersion\"></span> <span data-bind=\"if: moduleVersionUpdatedOn\">(<span data-bind=\"Date: moduleVersionUpdatedOn\"></span>)</span></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>     -->\\r\\n    <div class=\"row pad-top divider\" data-bind=\"with: $parent.computedObjectives\">\\r\\n        <section class=\"accordion\">\\r\\n            <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parents[1].objectivesSectionOpen\">\\r\\n                <h3>Objectives</h3>\\r\\n            </div>\\r\\n            <div class=\"accordion-content\" data-bind=\"visible: $parents[1].objectivesSectionOpen\">\\r\\n                <table class=\"goal-action\" data-bind=\"if: showing\">\\r\\n                    <colgroup>\\r\\n                        <col span=\"1\" style=\"width: 40%\">\\r\\n                        <col span=\"1\" style=\"width: 40%\" >\\r\\n                        <col span=\"1\" style=\"width: 20%\" >\\r\\n                    </colgroup>\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>\\r\\n                                <strong>Category</strong>\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                <strong>Objective</strong>\\r\\n                            </th>\\r\\n                            <th>\\r\\n                                <strong>Target</strong>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody data-bind=\"foreach: $data\">\\r\\n                        <tr>\\r\\n                            <td class=\"wrap\"><span data-bind=\"text: categoriesString\"></span></td>\\r\\n                            <td class=\"wrap\" data-bind=\"with: objective\"><span data-bind=\"text: name\"></span></td>\\r\\n                            <td class=\"wrap\"><span data-bind=\"if: value\"><span data-bind=\"text: value\"></span> <span data-bind=\"text: unit\"></span></span></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <!-- ko if: !showing() -->\\r\\n                <em class=\"grey\">No objectives set.</em>\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider\"></div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/tabs/module.objectives.html',[],function () { return '<div class=\"tab\" data-bind=\"css: { \\'active\\': tab.isActive() }\">\\r\\n</div>';});\n\n","\ndefine('text!views/patients/tabs/program.details.html',[],function () { return '<div class=\"tab\" data-bind=\"css: { \\'active\\': tab.isActive() }, with: activeProgram\">\\r\\n    <div class=\"row\">\\r\\n        <section class=\"accordion\">\\r\\n            <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parent.descriptionSectionOpen\">\\r\\n                <h3>Program Description</h3>\\r\\n            </div>\\r\\n            <div class=\"accordion-content\" data-bind=\"visible: $parent.descriptionSectionOpen\">\\r\\n                <div class=\"column\">\\r\\n                    <!-- ko ifnot: description() -->\\r\\n                    <em class=\"grey\">No description available</em>\\r\\n                    <!-- /ko -->\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <!-- ko if: description() -->\\r\\n                        <p data-bind=\"text: description\"></p>\\r\\n                        <!-- /ko -->\\r\\n                    </div>\\r\\n                    <!-- ko if: eligibilityRequirements() || eligibilityDatesStatement() -->\\r\\n                    <div class=\"row\">\\r\\n                        <h3>Eligibility Requirements</h3>\\r\\n                    </div>\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <p data-bind=\"text: eligibilityRequirements\"></p>\\r\\n                        <p data-bind=\"text: eligibilityDatesStatement\"></p>\\r\\n                    </div>\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider\">\\r\\n        <section class=\"accordion hoverable\">\\r\\n            <div class=\"row accordion-toggle\">\\r\\n                <div class=\"span11\"  data-bind=\"clickToggle: $parent.individualAttributesSectionOpen\">\\r\\n                    <h3>Individual Attributes</h3>\\r\\n                </div>\\r\\n                <div class=\"span1\">\\r\\n                    <a class=\"pull-right hover-toggle\" href=\"#\" data-bind=\"visible: $parent.canEdit, click: $parent.toggleModalShowing\">Edit</a>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"accordion-content\" data-bind=\"visible: $parent.individualAttributesSectionOpen\">\\r\\n                <div>\\r\\n                    <div class=\"column\">\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Assigned Date:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"DateOrNothing: assignDate\"></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Assigned By:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"with: assignBy\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Assigned To:</span>\\r\\n                            </div>\\r\\n                            <!-- ko if: assignToId() -->\\r\\n                            <div class=\"span9\" data-bind=\"with: assignTo\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n                            <!-- /ko -->\\r\\n                            <!-- ko ifnot: assignToId() -->\\r\\n                            <div class=\"span9\"><em class=\"grey\">Unassigned</em></div>\\r\\n                            <!-- /ko -->\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top divider\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Program State:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\"><span data-bind=\"text: elementStateModel().name\"></span><span data-bind=\"if: stateUpdatedOn\"> as of <span data-bind=\"DateOrNothing: stateUpdatedOn\"></span></span></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Start Date:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"DateOrNothing: attrStartDate\"></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>End Date:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"DateOrNothing: attrEndDate\"></div>\\r\\n                        </div>\\r\\n                        <!-- ko with: attributes -->\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Graduated:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"text: graduatedFlagModel() ? graduatedFlagModel().name() : \\'\\'\"></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top divider\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Eligibility Status:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"text: eligibilityModel() ? eligibilityModel().name() : \\'\\'\"></div>\\r\\n                        </div>\\r\\n                        <div class=\"row pad-top\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Enrollment Status:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"text:  enrollmentModel() ? enrollmentModel().name() : \\'\\'\"></div>\\r\\n                        </div>\\r\\n                        <!-- /ko -->\\r\\n                        <!-- <div class=\"row pad-top divider\">\\r\\n                            <div class=\"span3 align-left\">\\r\\n                                <span>Market:</span>\\r\\n                            </div>\\r\\n                            <div class=\"span9\" data-bind=\"text: market\"></div>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider\">\\r\\n        <section class=\"accordion\">\\r\\n            <div class=\"row accordion-toggle\" data-bind=\"clickToggle: $parent.attributesSectionOpen\">\\r\\n                <h3>Program Attributes</h3>\\r\\n            </div>\\r\\n            <div class=\"accordion-content\" data-bind=\"visible: $parent.attributesSectionOpen\">\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-left\">\\r\\n                        <span>Authored By:</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\" data-bind=\"text: authoredBy\"></div>\\r\\n                </div>\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-left\">\\r\\n                        <span>Start Date:</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\" data-bind=\"DateOrNothing: startDate\"></div>\\r\\n                </div>\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-left\">\\r\\n                        <span>End Date:</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\" data-bind=\"DateOrNothing: endDate\"></div>\\r\\n                </div>\\r\\n                <div class=\"row pad-top divider\">\\r\\n                    <div class=\"span3 align-left\">\\r\\n                        <span>Program Version:</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\"><span data-bind=\"text: programVersion\"></span> <span data-bind=\"if: programVersionUpdatedOn\">(<span data-bind=\"Date: programVersionUpdatedOn\"></span>)</span></div>\\r\\n                </div>\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-left\">\\r\\n                        <span>Program Template:</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\" data-bind=\"text: templateName\"></div>\\r\\n                </div>\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-left\">\\r\\n                        <span>Template Version:</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\" data-bind=\"text: templateVersion\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider\"></div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/tabs/program.goals.html',[],function () { return '<div class=\"tab\" data-bind=\"css: { \\'active\\': tab.isActive() }\">\\r\\n    <div class=\"row pad-top\">\\r\\n        <table class=\"goal-action\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>\\r\\n                        <strong>Focus Area(s)</strong>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <strong>Goal</strong>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <strong>Source</strong>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <strong>Type</strong>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <td>Healthy Eating</td>\\r\\n                    <td class=\"wrap\">Verbalize benefits of healthy eating</td>\\r\\n                    <td>Program</td>\\r\\n                    <td>Short-Term</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>Healthy Eating</td>\\r\\n                    <td class=\"wrap\">Increase daily servings of fruits/veggies </td>\\r\\n                    <td>Program</td>\\r\\n                    <td>Short-Term\\t\\t\\t\\t</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>Healthy Eating</td>\\r\\n                    <td>Improve diet</td>\\r\\n                    <td>Program</td>\\r\\n                    <td>Short-Term</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/tabs/program.objectives.html',[],function () { return '<div class=\"tab\" data-bind=\"css: { \\'active\\': tab.isActive() }\">\\r\\n    <div class=\"row pad-top\" data-bind=\"with: computedObjectives\">\\r\\n        <table class=\"goal-action\" data-bind=\"if: showing\">\\r\\n            <colgroup>\\r\\n                <col span=\"1\" style=\"width: 40%\">\\r\\n                <col span=\"1\" style=\"width: 40%\" >\\r\\n                <col span=\"1\" style=\"width: 20%\" >\\r\\n            </colgroup>\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>\\r\\n                        <strong>Category</strong>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <strong>Objective</strong>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <strong>Target</strong>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody data-bind=\"foreach: $data\">\\r\\n                <tr>\\r\\n                    <td class=\"wrap\"><span data-bind=\"text: categoriesString\"></span></td>\\r\\n                    <td class=\"wrap\" data-bind=\"with: objective\"><span data-bind=\"text: name\"></span></td>\\r\\n                    <td class=\"wrap\"><span data-bind=\"if: value\"><span data-bind=\"text: value\"></span> <span data-bind=\"text: unit\"></span></span></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <!-- ko if: !showing() -->\\r\\n        <em class=\"grey\">No objectives set.</em>\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/team/careMember.details.html',[],function () { return '<div>\\r\\n\\t<em class=\"grey\" data-bind=\"visible: !careMember()\">No care member selected</em>\\r\\n\\t<nav class=\"tabs\" data-bind=\"visible: careMember\">\\r\\n\\t\\t<!-- ko foreach: detailsTabs -->\\r\\n\\t\\t\\t<span data-bind=\"css: {\\'active\\': $parent.activeDetailsTab() == name}, \\r\\n\\t\\t\\t\\t\\t\\t\\tclick: function(){ $parent.setActiveDetailsTab( name ) }, clickBubble: false\">\\r\\n\\t\\t\\t\\t<!-- ko if: imgAlt -->\\r\\n\\t\\t\\t\\t\\t<img data-bind=\"attr:{ alt: imgAlt, src: imgSource }\" style=\"vertical-align: middle;\"/>\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t<!-- ko if: cssClass -->\\r\\n\\t\\t\\t\\t\\t<i data-bind=\"attr:{ class: cssClass }\"></i>\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t<a role=\"menuitem\" data-bind=\"text: name\"></a>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t</nav>\\r\\n\\r\\n\\t<div class=\"content\" data-bind=\"with: careMember\">\\r\\n\\t\\t<div class=\"row\" data-bind=\"visible: $parent.activeDetailsTab() === \\'Relationship\\'\">\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<strong class=\"span3 pad-right\">Role:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: computedRoleName\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\" data-bind=\"with: status\">\\r\\n\\t\\t\\t\\t<strong class=\"span3 pad-right\">Status:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: name()\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: startDate\">\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t<strong class=\"span3 pad-right\">Start Date:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"Date: startDate\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: endDate\">\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t<strong class=\"span3 pad-right\">End Date:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"Date: endDate\"></div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t\\t<div data-bind=\"with: frequency\">\\r\\n\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 pad-right\">Frequency:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: name\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: distance\">\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t<strong class=\"span3 pad-right\">Distance:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"text: distance\"></span>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: distanceUnit\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div data-bind=\"visible: notes\">\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3\">Notes:</strong>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<pre class=\"pad-left span12\" data-bind=\"text: notes, attr: { \\'title\\': notes }\"></pre>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: createdOn\">\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t<strong class=\"span3 pad-right\">Created:</strong>\\r\\n\\t\\t\\t\\t<span data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: (createdBy()? createdBy().firstLastOrPreferredName : \\'\\')\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: updatedOn\">\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t<strong class=\"span3 pad-right\">Updated:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: (updatedBy()? updatedBy().firstLastOrPreferredName : \\'\\')\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: dataSource\">\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t<strong class=\"span3 pad-right\">System:</strong>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: dataSource\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row\" data-bind=\"visible: $parent.activeDetailsTab() === \\'Profile\\'\">\\r\\n\\t\\t\\t<div data-bind=\"with: contact\">\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: fullName\">\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"text: fullName\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: preferredName\">\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 pad-right\">Preferred Name:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: preferredName\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-bind=\"with: deceased\">\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: (name() == \\'Yes\\')\">\\r\\n\\t\\t\\t\\t\\t\\t<strong class=\"span3 pad-right\">Deceased:</strong>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span9\">Yes</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"pad-left\">\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<ul class=\"row grey pad-left\" style=\"list-style-type: disc;\" data-bind=\"visible: (detailedSubTypes().length > 0)\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- ko foreach: detailedSubTypes -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<li class=\"pad-top\" data-bind=\"text: $data\"></li>\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: (gender() && gender() !== \\'N\\')\">\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 pad-right\">Gender:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: gender\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"with: contactStatus\">\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 pad-right\">Status:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: name\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: createdOn\">\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 pad-right\">Created:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: (createdBy()? createdBy().firstLastOrPreferredName : \\'\\')\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: updatedOn\">\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 pad-right\">Updated:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: (updatedBy()? updatedBy().firstLastOrPreferredName : \\'\\')\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: dataSource\">\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 pad-right\">System:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: dataSource\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row\" data-bind=\"visible: $parent.activeDetailsTab() === \\'Comm\\'\">\\r\\n\\t\\t\\t<div data-bind=\"with: contact\">\\r\\n\\t\\t\\t\\t<!-- ko foreach: $parents[1].primaryCommunications -->\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"compose: template\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 grey\">Mode:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t\\t<em class=\"row grey\" data-bind=\"visible: !prefCommMethods()\">Unknown</em>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"visible: prefCommMethods, text: prefCommMethods, attr: { \\'title\\': prefCommMethods }\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 grey\">Days:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t\\t<em class=\"row grey\" data-bind=\"visible: !preferredDaysOfWeek()\">Unknown</em>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"visible: preferredDaysOfWeek, text: preferredDaysOfWeek, attr: { \\'title\\': preferredDaysOfWeek }\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 grey\">Time:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t\\t<em class=\"row grey\" data-bind=\"visible: !preferredTimesOfDay()\">Unknown</em>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"visible: preferredTimesOfDay, text: preferredTimesOfDay, attr: { \\'title\\': preferredTimesOfDay }\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"with: timeZone\">\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 grey\">Time Zone:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: name, attr: { \\'title\\': name }\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<strong class=\"span3 grey\">Language:</strong>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t\\t<em class=\"row grey\" data-bind=\"visible: !preferredLanguage()\">Unknown</em>\\r\\n\\t\\t\\t\\t\\t\\t<!-- ko with: preferredLanguage -->\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"row\" data-bind=\"text: name, attr: { \\'title\\': name }\"></span>\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/team/index.html',[],function () { return '<section data-type=\"flex\">\\r\\n\\t<div>\\t\\r\\n\\t\\t<div class=\"column\" data-bind=\"css: { \\'open\\': leftColumnOpen() }\">\\r\\n\\t\\t\\t<!-- ko with: careTeamColumn -->\\r\\n\\t\\t\\t<!-- ko if: $parent.isComposed -->\\r\\n\\t\\t\\t<div class=\"widget-wrapper\" data-bind=\"foreach: widgets\">\\r\\n\\t\\t\\t\\t<!-- ko compose: { model: path, activationData: activationData } -->\\r\\n                <!-- /ko -->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"column\" data-bind=\"css: { \\'open\\': !leftColumnOpen() }\">\\r\\n\\t\\t\\t<div class=\"widget-wrapper\">\\r\\n\\t\\t\\t\\t<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': fullScreenWidget() === \\'careMemberDetails\\' }, columnSizer: true\">\\r\\n\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"content-fill\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"wrapper\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"header\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1>Details<span data-bind=\"text: selectedCareMemberName\"></h1>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"controls\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko with: selectedCareMember -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle\" data-bind=\"click: $parent.editCareMemberContact, clickBubble: false, visible: (contact() && contact().isEditable())\" style=\"margin-right: 4px;\" title=\"Edit contact information\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"#\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-edit\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"left\" data-bind=\"click: $parent.toggleOpenColumn, enable: !$parent.leftColumnOpen(), clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"right\" data-bind=\"click: $parent.toggleOpenColumn, enable: $parent.leftColumnOpen(), clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: showDeleteButton -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\"toggle\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: deleteContact, clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"icon-cancel red\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'careMemberDetails\\') }, clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</header>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"body\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/patients/team/careMember.details\\', activationData:{ member: selectedCareMember } } -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<!--\\r\\n\\t\\t<div class=\"table-row\">\\r\\n\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t<div class=\"body\">\\r\\n\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"body\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<em class=\"grey\">No individual selected.</em>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t -->\\r\\n</section>\\r\\n';});\n\n","\ndefine('text!views/patients/widgets/action.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, with: activeAction, columnSizer: {triggers: activeAction}\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 class=\"ellipsis\"><span data-bind=\"text: (name().length > 18 ? name().substring(0, 18) + \\'...\\' : name()), attr: { \\'title\\': name }\"></span></h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle fullscreen\" data-bind=\"click: $parent.toggleFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\"options\">\\r\\n                                    <div data-bind=\"chsnsingledark: { options: $parent.actionActions, value: $parent.selectedAction, text: \\'text\\', label: \\'action-actions\\', caption: \\'Action\\', disabled: $parent.disableActionActions}\"></div>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <section class=\"tabbed fill\">\\r\\n                                        <nav class=\"tabs\" data-bind=\"foreach: $parent.tabs\">\\r\\n                                            <span data-bind=\"text: name, click: $parents[1].setActiveTab, css: { \\'active\\': $parents[1].activeTab() === $data }\"></span>\\r\\n                                        </nav>\\r\\n                                        <!-- ko foreach: $parent.tabs -->\\r\\n                                        <div data-bind=\"compose: { model: path, activationData: { tab: $data, activeAction: $parent, selectedHistoricalAction: $parents[1].selectedHistoricalAction, availableHistoricalActions: $parents[1].availableHistoricalActions } }\"></div>\\r\\n                                        <!-- /ko -->\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/allergies.html',[],function () { return '<div class=\"widget\" data-bind=\"css: { \\'open\\': isOpen, \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: {a: isOpen(), b: filtersHeaderOpen(), c: filtersOpen()}}\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"filters\" data-bind=\"visible: filtersHeaderOpen\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <section class=\"pinned\">\\r\\n                                    <div class=\"row\">\\r\\n                                        <div class=\"span5\">\\r\\n                                            <label class=\"row\">\\r\\n                                                <span class=\"span3\">Type:</span>\\r\\n                                                <div class=\"span8\" data-bind=\"multiselect: { options: allergyTypes, values: selectedAllergyTypes, text: \\'name\\', label: \\'allergytypes\\', idValue: \\'id\\' }\"></div>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\"span5\">&nbsp</div>\\r\\n                                        <div class=\"span2\" data-bind=\"click: resetFilters\">\\r\\n                                            <div class=\"pull-right filters grey\">\\r\\n                                                <i class=\"icon-filter_clear pointer blue toggle\" data-bind=\"visible: canReset\" style=\"position: inherit;\" title=\"Clear Filter\"></i>\\r\\n                                                <span>&nbsp</span>\\r\\n                                            </div>\\r\\n                                        </div>                                        \\r\\n                                    </div>\\r\\n                                </section>\\r\\n                                <div class=\"filter-content\" data-bind=\"visible: filtersOpen\">\\r\\n                                    <section>\\r\\n                                        <div class=\"row\">\\r\\n                                            <div class=\"span4 grey\">Status:</div>\\r\\n                                        </div>\\r\\n                                        <div class=\"row\">\\r\\n                                            <div class=\"span4\" data-bind=\"multiselect: { options: allergyStatuses, values: selectedAllergyStatuses, text: \\'name\\', label: \\'allergystatuses\\', idValue: \\'id\\' }\"></div>\\r\\n                                        </div>\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                                <div class=\"toggle\" data-bind=\"clickToggle: filtersOpen, css: filtersOpen() ? \\'up-down\\' : \\'down-up\\'\"></div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"header pointer\" data-bind=\"click: toggleWidgetOpen\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header class=\"ellipsis\">\\r\\n                                <h1>\\r\\n                                    <span data-bind=\"text: widget.name\"></span>\\r\\n                                </h1>\\r\\n                                <div class=\"controls\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle\" data-bind=\"\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-plus\" data-bind=\"click: addAllergy, clickBubble: false\" title=\"Add\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                    <i class=\"fa fa-filter pad-right\" data-bind=\"click: function () { toggleHeaderOpen(filtersHeaderOpen, isOpen); }, clickBubble: false, css: ((selectedAllergyTypes().length > 0 || selectedAllergyStatuses().length > 0) ? \\'red\\' : (filtersHeaderOpen() ? \\'lighterblue\\': \\'lightestblue\\'))\"></i>                                    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle gray\" data-bind=\"click: refreshData, clickBubble: false\" title=\"Refresh Data\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': allergySaving }\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                    <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: toggleFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div data-bind=\"compose: { model: \\'viewmodels/templates/allergies.panel\\', activationData: { allergies: myAllergies, selectedPatient: selectedPatient, columns: activeAllergyColumns, toggleSort: toggleAllergySort, selectedSortColumn: selectedSortColumn, canSort: true } }\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/careMembers.html',[],function () { return '<div class=\"widget\" data-bind=\"css: { \\'open\\': isOpen, \\'fullscreen\\': isFullScreen() }, columnSizer: { triggers: {a: careMembers(), b: isOpen()} }\">\\r\\n\\t<div class=\"content\">\\r\\n\\t\\t<div class=\"content-fill\">\\r\\n\\t\\t\\t<div class=\"wrapper\">\\r\\n\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t<div class=\"header pointer\" data-bind=\"click: toggleWidgetOpen\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<header class=\"ellipsis\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h1 data-bind=\"text: widget.name\"></h1>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"controls\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle\" data-bind=\"visible: (widget.allowAdd && selectedPatient())\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-plus\" data-bind=\"click: addCareMember, clickBubble: false\" title=\"Add\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: toggleOpenColumn, enable: leftColumnOpen(), clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: toggleOpenColumn, enable: !leftColumnOpen(), clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: function () { toggleFullScreen(\\'careMembersPanel\\') }, clickBubble: false\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</header>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"table-row\" data-bind=\"visible: selectedPatient()\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"body\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: careMembers().length === 0\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<em class=\"grey\">No care team members</em>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"compose: { model: \\'viewmodels/templates/careMembers.panel\\', activationData: { careMembers: myCareMembers } }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\"table-row\" data-bind=\"visible: !selectedPatient()\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"table-cell\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"body\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"content\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"body\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<em class=\"grey\">No individual selected.</em>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\t\\t\\t\\t\\t\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/careplan.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen(), \\'open\\': isOpen }, columnSizer: {triggers: isOpen}\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header pointer\" data-bind=\"click: $parents[1].toggleWidgetOpen\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 data-bind=\"text: name\"></h1>\\r\\n                                <!-- ko compose: \\'widgets/controls.html\\' -->\\r\\n                                <!-- /ko -->\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\" data-bind=\"with: $parents[1].selectedPatient, visible: $parents[1].selectedPatient() && $parents[1].selectedPatient().programs().length > 0\">\\r\\n                                    <!-- ko compose: { model: \\'viewmodels/patients/sections/programs\\', activationData: { selectedPatient: $data, activeAction: $parents[2].activeAction, activeProgram: $parents[2].activeProgram, activeModule: $parents[2].activeModule, elementStateIds: $parent.elementStateIds, sortOverride: $parent.sortOverride } } -->\\r\\n                                    <!-- /ko -->\\r\\n                                </div>\\r\\n                                <div class=\"content\" data-bind=\"visible: $parents[1].selectedPatient() && $parents[1].selectedPatient().programs().length === 0\">\\r\\n                                    <em class=\"grey\">No programs assigned to this individual.</em>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/data.summary.html',[],function () { return '<div class=\"widget open fullscreen\" data-bind=\"columnSizer: {triggers: {a: $parents[1].isOpen, b: $parents[1].selectedPatient()}}\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n<!--                     <div class=\"filters\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <section class=\"pinned\">\\r\\n                                    <label>\\r\\n                                        <span>Data Type</span>\\r\\n                                        <select data-placeholder=\"Data Type\">\\r\\n                                            <option>Labs</option>\\r\\n                                            <option>Problem List</option>\\r\\n                                            <option>Vitals</option>\\r\\n                                        </select>\\r\\n                                    </label>\\r\\n                                    <label>\\r\\n                                        <span>Name</span>\\r\\n                                        <select>\\r\\n                                            <option>Blood Pressure</option>\\r\\n                                            <option>BMI</option>\\r\\n                                            <option>HbA1c</option>\\r\\n                                            <option>Height</option>\\r\\n                                            <option>LDL</option>\\r\\n                                            <option>Waist Circumference</option>\\r\\n                                            <option>Weight</option>\\r\\n                                        </select>\\r\\n                                    </label>\\r\\n                                    <label>\\r\\n                                        <span>Reported By</span>\\r\\n                                        <select>\\r\\n                                            <option>All</option>\\r\\n                                            <option>Care Manager</option>\\r\\n                                            <option>Individual</option>\\r\\n                                        </select>\\r\\n                                    </label>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1>Data Summary</h1>\\r\\n                                <div class=\"options\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"toggle\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-plus\" data-bind=\"click: $parents[1].addData, disable: $parents[1].isEditing\" title=\"Add\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                                    \\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\" data-bind=\"with: $parents[1].selectedPatient\">\\r\\n                            <div class=\"body\" data-bind=\"compose: { model: \\'viewmodels/patients/sections/data.list\\', activationData: { selectedPatient: $data } }\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/goals.html',[],function () { return '<div class=\"widget\" data-bind=\"css: { \\'open\\': isOpen, \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: {a: isOpen(), b: $parents[1].selectedPatient(), c:$parents[1].selectedPatient().goals()}}\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header class=\"pointer\" data-bind=\"click: $parents[1].toggleWidgetOpen\">\\r\\n                                <h1 data-bind=\"text: name\"></h1>\\r\\n                                <div class=\"options goals-options\" data-bind=\"if: canAdd\">\\r\\n                                    <div class=\"toggle\" >\\r\\n                                        <i class=\"pointer icon-plus\" data-bind=\"click: $parents[1].addGoal, disable: $parent.isEditing, clickBubble: false\" title=\"Add\"></i>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-- ko compose: \\'widgets/controls.html\\' -->\\r\\n                                <!-- /ko -->\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\" data-bind=\"with: $parents[1].selectedPatient\">\\r\\n                        <!-- ko if: goals().length > 0 -->\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\" data-bind=\"compose: { model: \\'viewmodels/patients/sections/goals\\', activationData: { selectedPatient: $data, activeGoal: $parents[2].activeGoal, activeTask: $parents[2].activeTask, activeIntervention: $parents[2].activeIntervention, statusIds: $parent.statusIds, emptyMesssage: $parent.emptyMesssage, sortOverride: $parent.sortOverride } }\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-- /ko -->\\r\\n                        <!-- ko if: goals().length === 0 -->\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <em class=\"grey\">No goals created for this individual.</em>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-- /ko -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/patients/widgets/history.detail.html',[],function () { return '<div class=\"widget\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, columnSizer: true\">\\r\\n    <div class=\"content\">\\r\\n        <!-- <div class=\"arrow-runner\"><i class=\"arrow\" style=\"top: 125px;\"></i></div> -->\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1>Details</h1>\\r\\n                                <!-- ko compose: \\'widgets/controls.html\\' -->\\r\\n                                <!-- /ko -->\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\" data-bind=\"with: $parents[1].activeNote\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"if: type().name().toLowerCase() === \\'touchpoint\\'\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: \\'templates/note.touchpoint.details.html\\' -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko --> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t                                    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"if: type().name().toLowerCase() === \\'utilization\\'\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: \\'templates/note.utilization.details.html\\' -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko --> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"if: (type().name().toLowerCase() !== \\'utilization\\' && type().name().toLowerCase() !== \\'touchpoint\\')\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: \\'templates/note.general.details.html\\' -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko --> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                                    <div class=\"row pad-top\" data-bind=\"with: programString\">\\r\\n                                        <strong class=\"span3\">Program(s):</strong>\\r\\n                                        <span class=\"span9\" data-bind=\"text: $data, attr: { \\'title\\': $data }\"></span>\\r\\n                                    </div>\\r\\n                                    <div class=\"row pad-top\" data-bind=\"visible: createdOn\">\\r\\n                                        <strong class=\"span3\">Created:</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: createdBy().preferredName\"></span>\\r\\n                                    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: updatedOn\">\\r\\n                                        <strong class=\"span3\">Updated:</strong>\\r\\n                                        <span data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: (updatedBy()? updatedBy().preferredName : \\'\\')\"></span>\\r\\n                                    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: dataSource\">\\r\\n                                        <strong class=\"span3\">System:</strong>\\r\\n                                        <span class=\"span9\"><span data-bind=\"text: dataSource\"></span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/history.list.html',[],function () { return '<div class=\"widget\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, columnSizer: true\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1>History</h1>\\r\\n                                <!-- ko compose: \\'widgets/controls.html\\' -->\\r\\n                                <!-- /ko -->\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <ul class=\"dividers\">\\r\\n                                        <li class=\"row line grey\">\\r\\n                                            <div class=\"span2\">Create Date</div>\\r\\n                                            <div class=\"span2\">Type</div>\\r\\n                                            <div class=\"span5\">Content</div>\\r\\n                                            <div class=\"span2\">By</div>\\r\\n                                            <div class=\"span1\"> </div>\\r\\n                                        </li>\\r\\n                                        <!-- ko foreach: $parents[1].groups -->\\r\\n                                        <li>\\r\\n                                            <!-- ko compose: { model: \\'viewmodels/patients/sections/notes\\', activationData: { activeNote: $parents[2].activeNote, group: $data } } -->\\r\\n                                            <!-- /ko -->\\r\\n                                        </li>\\r\\n                                        <!-- /ko -->\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/medication.groups.html',[],function () { return '<div class=\"widget\" data-bind=\"css: { \\'open\\': isOpen, \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: {a: isOpen(), b: filtersHeaderOpen()}}\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <!-- <div class=\"filters\" data-bind=\"visible: (filtersHeaderOpen())\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <section class=\"pinned\">\\r\\n                                    <div class=\"row\">\\r\\n                                        <div class=\"span6\">\\r\\n                                            <label class=\"row\">\\r\\n                                                <span class=\"span2\">Types:</span>\\r\\n                                                <div class=\"span4\" data-bind=\"multiselect: { options: medSuppTypes, values: selectedMedicationTypes, text: \\'name\\', label: \\'types\\', idValue: \\'id\\' }\"></div>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\"span3 grey\">\\r\\n                                            <label data-bind=\"visible: (selectedMedicationTypes().length > 0)\">\\r\\n                                                <i class=\"fa fa-filter red\"></i>\\r\\n                                                Filters applied\\r\\n                                            </label>\\r\\n                                            <span style=\"color: whitesmoke;\">-</span>\\r\\n                                        </div>\\r\\n                                        <div class=\"span2 grey\" data-bind=\"visible: (selectedMedicationTypes().length > 0)\">\\r\\n                                            <div class=\"pull-right filters\">\\r\\n                                                <i class=\"icon-filter_clear pointer blue toggle\" data-bind=\"click: resetFilters\" title=\"Clear Filter\"></i>\\r\\n                                                <span>&nbsp</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                    <div class=\"header pointer\" data-bind=\"click: toggleWidgetOpen\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 data-bind=\"text: widget.name\"></h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle\" data-bind=\"visible: allowAdd\">\\r\\n                                        <i class=\"pointer icon-plus\" data-bind=\"click: addMedication, clickBubble: false\" title=\"Add\"></i>\\r\\n                                    </div>\\r\\n                                    <!-- <i class=\"pointer fa fa-filter pad-horizontal\" data-bind=\"click: function () { filtersHeaderOpen(!filtersHeaderOpen()); }, clickBubble: false, css: ((selectedMedicationTypes().length > 0) ? \\'red\\' : (filtersHeaderOpen() ? \\'lighterblue\\': \\'lightestblue\\'))\">\\r\\n                                    </i> -->\\r\\n                                    <!-- <div class=\"toggle gray\" data-bind=\"click: refreshView, clickBubble: false\" title=\"Refresh Data\">\\r\\n                                        <i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': medicationSaving }\"></i>\\r\\n                                    </div> -->\\r\\n                                    <div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: toggleOpenColumn, enable: widget.column.isOpen(), clickBubble: false\">\\r\\n                                    </div>\\r\\n                                    <div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: toggleOpenColumn, enable: !widget.column.isOpen(), clickBubble: false\">\\r\\n                                    </div>\\r\\n                                    <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"clickToggle: isFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div data-bind=\"compose: { model: \\'viewmodels/templates/medication.groups.panel\\', activationData: { medicationGroups: medicationGroups, columns: activeColumns, toggleSort: toggleSort, selectedSortColumn: selectedSortColumn, canSort: true } }\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/patients/widgets/medications.html',[],function () { return '<div class=\"widget\" data-bind=\"css: { \\'open\\': isOpen, \\'fullscreen\\': isFullScreen() }, columnSizer: {triggers: {a: isOpen(), b: filtersHeaderOpen()}}\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"filters\" data-bind=\"visible: (filtersHeaderOpen())\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"wrapper\">\\r\\n                                <section class=\"pinned\">\\r\\n                                    <div class=\"row\">\\r\\n                                        <div class=\"span6\">\\r\\n                                            <label class=\"row\">\\r\\n                                                <span class=\"span2\">Types:</span>\\r\\n                                                <div class=\"span4\" data-bind=\"multiselect: { options: medSuppTypes, values: selectedMedicationTypes, text: \\'name\\', label: \\'types\\', idValue: \\'id\\' }\"></div>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\"span3 grey\">\\r\\n                                            <label data-bind=\"visible: (selectedMedicationTypes().length > 0)\">\\r\\n                                                <i class=\"fa fa-filter red\"></i>\\r\\n                                                Filters applied\\r\\n                                            </label>\\r\\n                                            <span style=\"color: whitesmoke;\">-</span>\\r\\n                                        </div>\\r\\n                                        <div class=\"span2 grey\" data-bind=\"visible: (selectedMedicationTypes().length > 0)\">\\r\\n                                            <div class=\"pull-right filters\">\\r\\n                                                <i class=\"icon-filter_clear pointer blue toggle\" data-bind=\"click: resetFilters\" title=\"Clear Filter\"></i>\\r\\n                                                <span>&nbsp</span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </section>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"header pointer\" data-bind=\"click: toggleWidgetOpen\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 data-bind=\"text: widget.name\"></h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle\" data-bind=\"visible: allowAdd\">\\r\\n                                        <i class=\"pointer icon-plus\" data-bind=\"click: addMedication, clickBubble: false\" title=\"Add\"></i>\\r\\n                                    </div>\\r\\n                                    <i class=\"pointer fa fa-filter pad-horizontal\" data-bind=\"click: function () { filtersHeaderOpen(!filtersHeaderOpen()); }, clickBubble: false, css: ((selectedMedicationTypes().length > 0) ? \\'red\\' : (filtersHeaderOpen() ? \\'lighterblue\\': \\'lightestblue\\'))\">\\r\\n                                    </i>\\r\\n                                    <div class=\"toggle gray\" data-bind=\"click: refreshView, clickBubble: false\" title=\"Refresh Data\">\\r\\n                                        <i class=\"fa fa-lg fa-refresh filter-toggle\" data-bind=\"css: { \\'fa-spin\\': medicationSaving }\"></i>\\r\\n                                    </div>\\r\\n                                    <div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: toggleOpenColumn, enable: widget.column.isOpen(), clickBubble: false\">\\r\\n                                    </div>\\r\\n                                    <div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: toggleOpenColumn, enable: !widget.column.isOpen(), clickBubble: false\">\\r\\n                                    </div>\\r\\n                                    <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"clickToggle: isFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <div data-bind=\"compose: { model: \\'viewmodels/templates/medications.panel\\', activationData: { medications: myMedications, columns: activeColumns, toggleSort: toggleSort, selectedSortColumn: selectedSortColumn, canSort: true } }\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/patients/widgets/module.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, with: activeModule, columnSizer: true\">\\r\\n    <div class=\"content\">\\r\\n        <!-- <div class=\"arrow-runner\">\\r\\n            <i class=\"arrow\"></i>\\r\\n        </div> -->\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 class=\"ellipsis span10\" data-bind=\"text: name, attr: { \\'title\\': name }\"></h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle fullscreen\" data-bind=\"click: $parent.toggleFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <section class=\"tabbed fill\">\\r\\n                                        <nav class=\"tabs\" data-bind=\"foreach: $parent.tabs\">\\r\\n                                            <span data-bind=\"text: name, click: $parents[1].setActiveTab, css: { \\'active\\': $parents[1].activeTab() === $data }\"></span>\\r\\n                                        </nav>\\r\\n                                        <!-- ko foreach: $parent.tabs -->\\r\\n                                            <!-- ko compose: { model: path, activationData: { tab: $data, activeModule: $parent } } -->\\r\\n                                            <!-- /ko -->\\r\\n                                        <!-- /ko -->\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/patients.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle single-arrow-left\" data-method=\"open\" data-type=\"remove\" data-phyautomation=\"patients-details-left-arrow\" data-bind=\"click: minimizePatientsDataColumn\"></div>\\r\\n                                    <div class=\"toggle double-arrow-right\" data-method=\"open\" data-type=\"add\" data-phyautomation=\"patients-details-right-arrows\" data-bind=\"click: maximizePatientsDataColumn\"></div>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\" data-bind=\"with: selectedPatient\">\\r\\n                                <div class=\"content\">\\r\\n                                <!-- ko if: $data -->\\r\\n                                <!-- ko compose: { model: \\'viewmodels/patients/sections/demographics\\',  activationData: { selectedPatient: $data }  } -->\\r\\n                                <!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/patients/sections/status\\',  activationData: { selectedPatient: $data }  } -->\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko compose: { model: \\'viewmodels/patients/sections/system.ids\\',  activationData: { selectedPatient: $data }  } -->\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko compose: { model: \\'viewmodels/patients/sections/focus.areas\\',  activationData: { problems: problems, selectedPatient: $data }  } -->\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko compose: { model: \\'viewmodels/patients/sections/background\\',  activationData: { selectedPatient: $data }  } -->\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko compose: { model: \\'viewmodels/patients/sections/clinicalBackground\\',  activationData: { selectedPatient: $data }  } -->\\r\\n                                <!-- /ko -->\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                                <!-- ko compose: { model: \\'viewmodels/patients/sections/communications\\',  activationData: { contactCard: contactCard }  } -->\\r\\n                                <!-- /ko -->\\r\\n                                <!-- ko compose: { model: \\'viewmodels/patients/sections/care.team\\',  activationData: { selectedPatient: $data }  } -->\\r\\n                                <!-- /ko -->\\r\\n                                <!-- /ko -->\\r\\n                                </div>\\r\\n                            </div>                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/patients.list.flyout.html',[],function () { return '<div class=\"widget open\" data-bind=\"columnSizer: \\'nobody\\'\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1>Recent</h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle single-arrow-left\" data-bind=\"click: minimizePatientsListFlyoutColumn\" data-method=\"open\" data-type=\"remove\" data-phyautomation=\"cohort-left-arrow\"></div>\\r\\n                                    <div class=\"toggle double-arrow-right\" data-bind=\"click: maximizePatientsListFlyoutColumn\" data-method=\"open\" data-type=\"add\" data-phyautomation=\"cohort-right-arrows\"></div>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"fixed\">\\r\\n                                <div class=\"content\">\\r\\n                                    <!-- ko compose: { model: \\'viewmodels/patients/sections/recent.individuals\\', activationData: { selectedPatient: selectedPatient, choosePatient: choosePatient } } -->\\r\\n                                    <!-- /ko -->\\r\\n                                    <div class=\"pad-vertical divider\">\\r\\n                                        <h1>Cohorts</h1>\\r\\n                                        <div class=\"row\">\\r\\n                                            <div class=\"span10\" data-bind=\"chsnsingle: { options: cohortsList, value: selectedCohort, text: \\'sName\\', label: \\'cohort\\' }\"></div>\\r\\n                                        </div>\\r\\n                                        <div class=\"row pad-top\">\\r\\n                                            <input data-bind=\"value: cohortFilter, valueUpdate: \\'afterkeydown\\', disable: !selectedCohort()\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Search\" type=\"search\" data-phyautomation=\"cohort-patient-search\" style=\"width: 87%;\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-cancel\" data-bind=\"visible: cohortFilter, click: clearCohortFilter\"></i>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\"body\" data-bind=\"setHeightFromPrev: patientsList\">\\r\\n                                <div class=\"content\" data-phyautomation=\"cohort-patient-list\">\\r\\n                                    <!-- ko foreach: patientsList -->\\r\\n                                    <div class=\"row ellipsis\" data-bind=\"click: $parent.choosePatient\">\\r\\n                                        <div class=\"columns patient-list\">\\r\\n                                            <div class=\"column ellipsis\">\\r\\n                                                <img alt=\"Patient small\" class=\"pull-left\" data-bind=\"attr: { src: genderModel().SmallImgSrc }\" />\\r\\n                                                <a href=\"#\" class=\"line\" data-bind=\"text: fullLastName() + \\', \\' + fullFirstName(), attr: { \\'title\\': (fullLastName() + \\', \\' + fullFirstName()) }\"></a>\\r\\n                                            </div>\\r\\n                                            <div class=\"column ellipsis\">\\r\\n                                                <span class=\"line grey pad horizontal\" data-bind=\"with: dOB\"><span data-bind=\"text: \\'(\\' + $data + \\')\\', attr: { \\'title\\': $data }\" data-phyautomation=\"dob\"></span></span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <!-- /ko -->\\r\\n                                    <div class=\"row\" data-bind=\"visible: canLoadMoreCohortPatients\">\\r\\n                                        <div class=\"push2 span8\">\\r\\n                                            <button class=\"small\" data-bind=\"click: loadMoreCohortPatients\">\\r\\n                                                Load more...\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: showNoResultsMessage\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: noResultsMessage\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/program.details.html',[],function () { return '<div class=\"widget open\" data-bind=\"css: { \\'fullscreen\\': isFullScreen() }, with: activeProgram, columnSizer: true\">\\r\\n    <div class=\"content\">\\r\\n<!--         <div class=\"arrow-runner\">\\r\\n            <i class=\"arrow\"></i>\\r\\n         </div>-->\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1 class=\"ellipsis span8\" data-bind=\"text: name, attr: { \\'title\\': name }\"></h1>\\r\\n                                <div class=\"controls\">\\r\\n                                    <div class=\"toggle fullscreen\" data-bind=\"click: $parent.toggleFullScreen, clickBubble: false\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\"options\">                                    \\r\\n                                    <div data-bind=\"chsnsingledark: { options: $parent.programActions, value: $parent.selectedAction, text: \\'text\\', label: \\'programs\\', caption: \\'Action\\' }\"></div>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <div class=\"body\">\\r\\n                                <div class=\"content\">\\r\\n                                    <section class=\"tabbed fill\">\\r\\n                                        <nav class=\"tabs\" data-bind=\"foreach: $parent.tabs\">\\r\\n                                            <span data-bind=\"text: name, click: $parents[1].setActiveTab, css: { \\'active\\': $parents[1].activeTab() === $data }\"></span>\\r\\n                                        </nav>\\r\\n                                        <!-- ko foreach: $parent.tabs -->\\r\\n                                            <!-- ko compose: { model: path, activationData: { tab: $data, activeProgram: $parent } } -->\\r\\n                                            <!-- /ko -->\\r\\n                                        <!-- /ko -->\\r\\n                                    </section>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/patients/widgets/todos.html',[],function () { return '<div class=\"widget open\" data-bind=\"columnSizer: true\">\\r\\n    <div class=\"content\">\\r\\n        <div class=\"content-fill\">\\r\\n            <div class=\"wrapper\">\\r\\n                <div class=\"content\">\\r\\n                    <div class=\"header\">\\r\\n                        <div class=\"table-cell\">\\r\\n                            <header>\\r\\n                                <h1>Goals</h1>\\r\\n                                <div class=\"options goals-options\">\\r\\n                                    <button class=\"btn color small\" data-bind=\"click: $parents[1].addGoal, disable: $parents[1].isEditing\">\\r\\n                                        <i class=\"icon-plus\"></i>\\r\\n                                        <span class=\"pad-left\">New Goal</span>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </header>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"table-row\">\\r\\n                        <div class=\"table-cell\" data-bind=\"with: $parents[1].selectedPatient\">\\r\\n                            <div class=\"body\" data-bind=\"compose: { model: \\'viewmodels/patients/sections/goals\\', activationData: { activeGoal: $parents[2].activeGoal, selectedPatient: $data } }\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/populations/index.html',[],function () { return '';});\n\n","\ndefine('text!views/programdesigner/customattributes/datepicker.edit.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3 align-right\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span9\">\\r\\n        <input data-bind=\"datepicker: computedValue().value, datepickerOptions: { }\" type=\"text\" class=\"datepicker\">\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/datepicker.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span9\">\\r\\n        <p data-bind=\"Date: computedValue().value\"></p>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/datetimepicker.edit.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3 align-right\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span5\">\\r\\n        <input data-bind=\"datepicker: value, datepickerOptions: {  }\" type=\"text\" class=\"datepicker\">\\r\\n    </div>\\r\\n    <div class=\"span4\">\\r\\n\\t\\t<!-- ko if: Modernizr.inputtypes.time -->\\r\\n\\t\\t\\t<input data-bind=\"timepicker: value, valueUpdate: blur\" type=\"time\">\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t\\t<!-- ko ifnot: Modernizr.inputtypes.time -->\\r\\n\\t\\t\\t<input data-bind=\"jqtimepicker: value\" type=\"text\">\\r\\n\\t\\t<!-- /ko -->\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/datetimepicker.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3 align-right\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span5\">\\r\\n        <input data-bind=\"datepicker: value, datepickerOptions: {  }\" type=\"text\" class=\"datepicker\">\\r\\n    </div>\\r\\n    <div class=\"span4\">        \\r\\n\\t\\t<!-- ko if: Modernizr.inputtypes.time -->\\r\\n\\t\\t\\t<input data-bind=\"timepicker: value, attr: { \\'disabled\\': !value() }\" type=\"time\">\\t\\t\\t\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t\\t<!-- ko ifnot: Modernizr.inputtypes.time -->\\r\\n\\t\\t\\t<input data-bind=\"jqtimepicker: value, attr: { \\'disabled\\': !value() }\" type=\"text\">\\r\\n\\t\\t<!-- /ko -->\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/input.edit.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3 align-right\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span9\">\\r\\n        <input data-bind=\"value: computedValue().value\" />\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/input.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span9\">\\r\\n        <p data-bind=\"value: computedValue().value\"></p>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/multiselect.edit.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3 align-right\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span9\">\\r\\n        <div class=\"span9\" data-bind=\"multiselect: { options: options, values: values, idValue: \\'value\\', text: \\'display\\', label: \\'multi\\' }\"></div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/multiselect.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3 align-right\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span9\">\\r\\n        <p data-bind=\"foreach: values\">\\r\\n            <span data-bind=\"text: value\"></span>\\r\\n        </p>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/singleselect.edit.html',[],function () { return '<div class=\"row pad-top\">\\r\\n    <div class=\"span3 align-right\">\\r\\n        <span class=\"grey\" data-bind=\"text: name\"></span>\\r\\n    </div>\\r\\n    <div class=\"span4\">\\r\\n        <div data-bind=\"chsnsingle: { options: options, value: computedValue().value, text: \\'display\\', label: \\'customattribute\\', idValue: \\'value\\' }\"></div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/customattributes/singleselect.html',[],function () { return '<div class=\"row pad-bottom\">\\r\\n    <div class=\"span6 grey\"data-bind=\"text: name\">\\r\\n        Start Date\\r\\n    </div>\\r\\n    <div class=\"span6\">\\r\\n    \\t<span data-bind=\"text: displayValue() ? displayValue() : \\'-\\'\"></span>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/designer/index.html',[],function () { return '<section data-type=\"full\">\\r\\n    <div data-bind=\"foreach: columns\">\\r\\n        <!-- ko compose: columntemplate -->\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n</section>';});\n\n","\ndefine('text!views/programdesigner/index.html',[],function () { return '<div class=\"route\">\\r\\n    <!-- ko compose: navigation.currentSubRoute().subroute -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/button.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko if: activeStep() -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: header\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <p data-bind=\"text: header\"></p>\\r\\n    <div class=\"span12\">\\r\\n        <div class=\"row\">\\r\\n            <button class=\"btn color\" type=\"button\" data-bind=\"text: text, click: completeAction, disable: !computedResponse() && !activeStep() || $parent.completed() === true || $parents[1].programsSaving() === true\" />\\r\\n            <button class=\"pull-right\" data-bind=\"click: $parent.saveAction, enable: !completed() && $parent.hasChanges() && !$parents[1].programsSaving()\">Save</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/checkbox.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <h3 data-bind=\"html: question, css: { \\'grey\\': !computedResponse() && !activeStep() }\"></h3>\\r\\n    <em class=\"gray\" data-bind=\"html: notes\"></em>\\r\\n    <!-- ko ifnot: $parent.completed() -->        \\r\\n    <!-- ko foreach: responses().sort($root.alphabeticalOrderSort) -->\\r\\n    <label class=\"control-group\">\\r\\n        <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n            <span data-bind=\"css: { \\'checked\\': value() === \\'true\\' }\">\\r\\n                <input type=\"checkbox\" data-bind=\"checked: value, disable: (!$parent.computedResponse() && !$parent.activeStep() || $parents[1].completed()), clickRadio: $parent.computedResponse\" />\\r\\n            </span>\\r\\n        </div>\\r\\n        <strong data-bind=\"text: text, css: { \\'grey\\': !$parent.computedResponse() && !$parent.activeStep() }\"></strong>\\r\\n    </label>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: $parent.completed() -->\\r\\n    <br>\\r\\n    <!-- ko if: computedResponse() -->\\r\\n    <!-- ko foreach: responses().sort($root.alphabeticalOrderSort) -->\\r\\n    <!-- ko if: value() === \\'true\\' -->\\r\\n    <div class=\"row\">\\r\\n        <i class=\"icon-check span1\"></i><strong class=\"span11\" data-bind=\"text: text\"></strong><br>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: !computedResponse() || hasNoTrueAnswers() === true -->\\r\\n    <strong><em class=\"push1\">&ltNot Answered&gt</em></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/datepicker.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <h3 data-bind=\"html: question, css: { \\'grey\\': !computedResponse() && !activeStep() }\"></h3>\\r\\n    <em class=\"gray\" data-bind=\"html: notes\"></em>\\r\\n    <!-- ko ifnot: $parent.completed() -->\\r\\n    <!-- ko with: computedResponse -->\\r\\n    <div class=\"span6\">\\r\\n        <input data-bind=\"datepicker: value, datepickerOptions: { }, disable: (!$parent.computedResponse().value() && !$parent.activeStep()|| $parents[1].completed())\" type=\"text\" class=\"datepicker\">\\r\\n    </div>\\r\\n    <div class=\"span6\"></div>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: $parent.completed() -->\\r\\n    <br>\\r\\n    <!-- ko if: computedResponse().value -->\\r\\n    <strong class=\"push1\" data-bind=\"Date: computedResponse().value\"></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: computedResponse().value -->\\r\\n    <strong><em class=\"push1\">&ltNot Answered&gt</em></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/datetimepicker.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <h3 data-bind=\"html: question, css: { \\'grey\\': !computedResponse() && !activeStep() }\"></h3>\\r\\n    <em class=\"gray\" data-bind=\"html: notes\"></em>\\r\\n    <!-- ko ifnot: $parent.completed() -->\\r\\n    <!-- ko with: computedResponse -->\\r\\n    <div class=\"span6\">\\r\\n        <input data-bind=\"datepicker: value, datepickerOptions: {  }, disable: (!$parent.computedResponse() && !$parent.activeStep()|| $parents[1].completed())\" type=\"text\" class=\"datepicker\">\\r\\n    </div>\\r\\n    <div class=\"span6\">\\r\\n\\t\\t<!-- ko if: Modernizr.inputtypes.time -->\\r\\n\\t\\t\\t<input data-bind=\"timepicker: value, valueUpdate: blur, disable: (!$parent.computedResponse() && !$parent.activeStep() || $parents[1].completed() || !value())\" type=\"time\">\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t\\t<!-- ko ifnot: Modernizr.inputtypes.time -->\\r\\n\\t\\t\\t<input id=\"value\" data-bind=\"jqtimepicker:{observableDateTime:value}, disable: (!$parent.computedResponse() && !$parent.activeStep() || $parents[1].completed() || !value())\" type=\"text\">\\r\\n\\t\\t<!-- /ko -->\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: $parent.completed() -->\\r\\n    <br>\\r\\n    <!-- ko if: computedResponse().value -->\\r\\n    <strong class=\"push1\"><span data-bind=\"Date: computedResponse().value\"></span> <span data-bind=\"LongTime: computedResponse().value\"></span></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: computedResponse().value -->\\r\\n    <strong><em class=\"push1\">&ltNot Answered&gt</em></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/label.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko with: text -->\\r\\n    <p data-bind=\"html: $data\"></p>\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/modal.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko if: activeStep() -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: header\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <p data-bind=\"html: question\"></p>\\r\\n    <div class=\"span12\">\\r\\n        <div class=\"row\">\\r\\n            <button class=\"btn color\" type=\"button\" data-bind=\"text: text, click: $parents[1].toggleModalShowing, disable: !computedResponse() && !activeStep() || $parent.completed() === true\" />\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/questioneditor.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <div class=\"row\">\\r\\n        <!--Where the question id goes-->\\r\\n        <h2 class=\"span4\">Question Id</h2>\\r\\n        <small class=\"push2 span6\">12345</small>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <!--Where the question type selector goes-->\\r\\n        <h3 class=\"span4\">Question Type</h3>\\r\\n        <div data-bind=\"chsnsingle: { options: questionTypes, value: questionType, text: \\'name\\', label: \\'question-type\\' }\"></div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <!--Where the actual question goes-->\\r\\n        <h3 class=\"span4\">Question</h3>\\r\\n        <input class=\"push2 span6\" type=\"text\" data-bind=\"value: question\" />\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/radio.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <h3 data-bind=\"html: question, css: { \\'grey\\': !computedResponse() && !activeStep() }\"></h3>\\r\\n    <em class=\"gray\" data-bind=\"html: notes\"></em>\\r\\n    <!-- ko ifnot: $parent.completed() -->\\r\\n    <!-- ko foreach: responses().sort($root.alphabeticalOrderSort) -->\\r\\n    <label class=\"control-group\">\\r\\n        <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n            <span data-bind=\"css: { \\'checked\\': $parent.computedResponse() === $data }\">\\r\\n                <input type=\"radio\" data-bind=\"clickRadio: $parent.computedResponse, disable: (!$parent.computedResponse() && !$parent.activeStep()|| $parents[1].completed())\" />\\r\\n            </span>\\r\\n        </div>\\r\\n        <strong data-bind=\"text: text, css: { \\'grey\\': !$parent.computedResponse() && !$parent.activeStep() }\"></strong>\\r\\n    </label>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: $parent.completed() -->\\r\\n    <br>\\r\\n    <!-- ko if: computedResponse() -->\\r\\n    <strong class=\"push1\" data-bind=\"text: computedResponse().text\"></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: computedResponse() -->\\r\\n    <strong><em class=\"push1\">&ltNot Answered&gt</em></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/singleselect.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <h3 data-bind=\"html: question, css: { \\'grey\\': !computedResponse() && !activeStep() }\"></h3>\\r\\n    <em class=\"gray\" data-bind=\"html: notes\"></em>\\r\\n    <!-- ko ifnot: $parent.completed() --> \\r\\n\\t<div class=\"span6\">\\r\\n\\t\\t<label class=\"control-group\">\\r\\n\\t\\t\\t<div data-bind=\"chsnsingle: { options: responses().sort($root.alphabeticalOrderSort), value: computedResponse, text: \\'text\\', label: \\'programs\\', disabled: (!computedResponse() && !activeStep() || $parent.completed()), \\r\\n\\t\\t\\t\\t\\t\\t\\ttitle: computedResponse()? computedResponse().text() : null }\"></div>\\r\\n\\t\\t</label>\\r\\n\\t</div>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: $parent.completed() -->\\r\\n    <br>\\r\\n    <!-- ko if: computedResponse() -->\\r\\n    <strong class=\"push1\" data-bind=\"text: computedResponse().text\"></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: computedResponse() -->\\r\\n    <strong><em class=\"push1\">&ltNot Answered&gt</em></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/textarea.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n        <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <h3 data-bind=\"html: question, css: { \\'grey\\': !computedResponse() && !activeStep() }\"></h3>\\r\\n    <em class=\"gray\" data-bind=\"html: notes\"></em>\\r\\n    <!-- ko ifnot: $parent.completed() -->\\r\\n    <!-- ko with: computedResponse -->\\r\\n    <textarea data-bind=\"value: value, updateActionElementState: value, disable: (!$parent.computedResponse().value() && !$parent.activeStep() || $parents[1].completed())\" maxlength=\"1000\"></textarea>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: $parent.completed() -->\\r\\n    <br>\\r\\n    <!-- ko if: computedResponse().value -->\\r\\n    <textarea data-bind=\"text: computedResponse().value, attr: { \\'title\\': computedResponse().value }\" class=\"push1 span11 strong\" readonly=\"readonly\" rows=\"5\"></textarea>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: computedResponse().value -->\\r\\n    <strong><em class=\"push1\">&ltNot Answered&gt</em></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/textbox.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n        <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <h3 data-bind=\"html: question, css: { \\'grey\\': !computedResponse() && !activeStep() }\"></h3>\\r\\n    <em class=\"gray\" data-bind=\"html: notes\"></em>\\r\\n\\r\\n    <!-- ko ifnot: $parent.completed() -->\\r\\n    <!-- ko with: computedResponse -->\\r\\n    <input data-bind=\"value: value, updateActionElementState: value, disable: (!$parent.computedResponse().value() && !$parent.activeStep()|| $parents[1].completed())\" type=\"text\">\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <!-- ko if: $parent.completed() -->\\r\\n    <br>\\r\\n    <!-- ko if: computedResponse().value -->\\r\\n    <strong class=\"push1\" data-bind=\"text: computedResponse().value\"></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: computedResponse().value -->\\r\\n    <strong><em class=\"push1\">&ltNot Answered&gt</em></strong>\\r\\n    <!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/questiontypes/timepicker.html',[],function () { return '<div class=\"row pad pad-top\">\\r\\n    <!-- ko with: header -->\\r\\n    <h2 class=\"pad vertical\" data-bind=\"text: $data\"></h2>\\r\\n    <!-- /ko -->\\r\\n    <h3 data-bind=\"html: question, css: { \\'grey\\': !computedResponse() && !activeStep() }\"></h3>\\r\\n    <em class=\"gray\" data-bind=\"html: notes\"></em>\\r\\n    <!-- ko with: computedResponse -->\\r\\n    <div class=\"span6\">\\r\\n        <input data-bind=\"value: value, valueUpdate: blur, disable: (!$parent.computedResponse().value() && !$parent.activeStep()|| $parents[1].completed())\" type=\"time\">\\r\\n    </div>\\r\\n    <div class=\"span6\"></div>\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/widgets/modulewidget.html',[],function () { return '<div class=\"widget\" data-bind=\" css: { open: settings.isOpen(), fullscreen: settings.isFullScreen() }, columnSizer: {triggers: settings.isOpen}\">\\r\\n    <div class=\"content\">\\r\\n        <header data-bind=\"click: toggleWidgetOpen\">\\r\\n            <h1 data-bind=\"text: settings.data.content\"></h1>\\r\\n        </header>\\r\\n        <div class=\"body\">\\r\\n            <div class=\"graph\">\\r\\n                <svg class=\"span6\"></svg>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/programdesigner/widgets/programwidget.html',[],function () { return '<div class=\"widget\" data-bind=\" css: { open: settings.isOpen(), fullscreen: settings.isFullScreen() }, columnSizer: {triggers: settings.isOpen}\">\\r\\n    <div class=\"content\">\\r\\n        <header data-bind=\"click: toggleWidgetOpen\">\\r\\n            <h1 data-bind=\"text: settings.data.content\"></h1>\\r\\n        </header>\\r\\n        <div class=\"body\">\\r\\n            <div class=\"graph\">\\r\\n                <svg class=\"span6\"></svg>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/shell/alerttypes/error.html',[],function () { return '<div class=\"alert error\" data-bind=\"visible: showing\">\\r\\n    <div class=\"message\">\\r\\n        <img src=\"/NightingaleUI/Content/images/alert_red.png\">\\r\\n        <span data-bind=\"text: reason\"></span>\\r\\n    </div>\\r\\n    <i class=\"close icon-cancel blue\" data-bind=\"clickToggle: showing\"></i>\\r\\n</div>';});\n\n","\ndefine('text!views/shell/alerttypes/info.html',[],function () { return '<div class=\"alert info\" data-bind=\"visible: showing\">\\r\\n    <div class=\"message\">\\r\\n        <span data-bind=\"text: reason\"></span>\\r\\n    </div>\\r\\n    <i class=\"close icon-cancel blue\" data-bind=\"clickToggle: showing\"></i>\\r\\n</div>';});\n\n","\ndefine('text!views/shell/alerttypes/warning.html',[],function () { return '<div class=\"alert warning\" data-bind=\"visible: showing, timeOut: showing, timeOutOptions: { delay: 2000 }\">\\r\\n    <div class=\"message\">\\r\\n        <i class=\"icon-check green\"></i>\\r\\n        <span data-bind=\"text: reason\"></span>\\r\\n    </div>\\r\\n    <i class=\"icon-cancel blue\" data-bind=\"clickToggle: showing\"></i>\\r\\n</div>';});\n\n","\ndefine('text!views/shell/banner.html',[],function () { return '<header role=\"banner\">\\r\\n    <img class=\"brand\" data-bind=\"attr: { src: currentBrand().imageSource }\" />\\r\\n    <div class=\"options\">\\r\\n        <div class=\"user-menu dropdown\" data-bind=\"with: $parent.session.currentUser, clickToggle: $parent.userMenuOpen, css: { \\'open\\': $parent.userMenuOpen }\">\\r\\n            <div class=\"dropdown-toggle\">\\r\\n                <a class=\"disabled\" data-bind=\"text: \\'User - \\' + userName()\"></a>\\r\\n            </div>\\r\\n            <div class=\"dropdown-content\">\\r\\n                <li data-bind=\"click: $parents[1].session.logOff\">\\r\\n                    <a href=\"#\" data-bind=\"click: $parents[1].session.logOff\">Sign Out</a>\\r\\n                </li>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"loading-messages\">\\r\\n        <div class=\"messages-dropdown open\" data-bind=\"visible: $parent.compLoadingMessages().length !== 0 && $parent.loadingMessagesShowing() === true \">\\r\\n            <div class=\"dropdown-toggle\">\\r\\n                <span class=\"disabled\"><strong>Loading...</strong><i class=\"icon-spinner icon-spin grey icon-2x\"></i></span>\\r\\n            </div>\\r\\n            <ul class=\"messages-content\" data-bind=\"foreach: $parent.compLoadingMessages\">\\r\\n                <li class=\"ellipsis\" data-bind=\"visible: Showing\"><span data-bind=\"text: Message\"></span></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</header>';});\n\n","\ndefine('text!views/shell/footer.html',[],function () { return '<footer class=\"copyright\">\\r\\n\\t<div class=\"container\">\\r\\n\\t\\t<span>&#169; IBM Corporation 2013, <span data-bind=\"text: new Date().getFullYear()\"></span></span>\\r\\n\\t\\t<span class=\"row\">The information you are viewing is NOT the individual\\'s full medical record.</span>\\r\\n\\t</div>\\r\\n</footer>';});\n\n","\ndefine('text!views/shell/quickadd/assign.html',[],function () { return '<form>\\r\\n    <div class=\"row pad top\">\\r\\n        <div class=\"span3\">\\r\\n            <span class=\"grey\">\\r\\n                Category\\r\\n            </span>\\r\\n        </div>\\r\\n        <div class=\"span9\">\\r\\n            <span class=\"grey\">\\r\\n                Assign\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad top\">\\r\\n        <div class=\"span3\">\\r\\n            <div data-bind=\"chsnsingle: { options: categories, value: selectedCategory, text: \\'Name\\', label: \\'category\\' }\"></div>\\r\\n        </div>\\r\\n        <div class=\"span6\">\\r\\n            <div data-bind=\"chsnsingle: { options: contractPrograms, value: selectedProgram, text: \\'name\\', label: \\'programs\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"position bottom right\">\\r\\n        <div class=\"pad vertical\">\\r\\n            <button data-bind=\"click: cancelAssign\" class=\"cancel\">Cancel</button>\\r\\n            <input data-bind=\"click: saveAssign, disable: !canSave()\" type=\"submit\" value=\"Save\">\\r\\n        </div>\\r\\n    </div>\\r\\n</form>';});\n\n","\ndefine('text!views/shell/quickadd/communication.html',[],function () { return '<form>\\r\\n    <div class=\"span6 pad bottom\">\\r\\n        <label>\\r\\n            <span>Action</span>\\r\\n        </label>\\r\\n        <select>\\r\\n            <option>Left Message</option>\\r\\n            <option>Spoke with patient</option>\\r\\n            <option>Busy</option>\\r\\n        </select>\\r\\n        <div class=\"chosen-container chosen-container-single chosen-container-single-nosearch\" style=\"width: 140px;\" title=\"\">\\r\\n            <a class=\"chosen-single\" tabindex=\"-1\">\\r\\n                <span>Left Message</span>\\r\\n                <div><b></b></div>\\r\\n            </a>\\r\\n            <div class=\"chosen-drop\">\\r\\n                <div class=\"chosen-search\">\\r\\n                    <input type=\"text\" autocomplete=\"off\" readonly=\"\" />\\r\\n                </div>\\r\\n                <ul class=\"chosen-results\"></ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"span6 pad bottom\">\\r\\n        <label>\\r\\n            <span>Call Notes</span>\\r\\n            <input type=\"text\" />\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"span6 pad bottom\">\\r\\n        <label>\\r\\n            <span>Date/Time</span>\\r\\n            <input class=\"datepicker hasDatepicker\" type=\"text\" id=\"dp1386105161754\" />\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"position bottom right\">\\r\\n        <div class=\"pad vertical\">\\r\\n            <button class=\"cancel\">Cancel</button>\\r\\n            <input type=\"submit\" value=\"Save\" />\\r\\n        </div>\\r\\n    </div>\\r\\n</form>';});\n\n","\ndefine('text!views/shell/quickadd/dataentry.html',[],function () { return '<form>\\r\\n    <div class=\"row pad top\">\\r\\n        <div class=\"span3\">\\r\\n            <span class=\"grey\">Element</span>\\r\\n        </div>\\r\\n        <div class=\"span3\">\\r\\n            <span class=\"grey\">Value</span>\\r\\n        </div>\\r\\n        <div class=\"span2\">\\r\\n            <span class=\"grey\">Date</span>\\r\\n        </div>\\r\\n        <div class=\"span4\">\\r\\n            <span class=\"grey\">Source</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad top\">\\r\\n        <div class=\"span3\">\\r\\n            <input type=\"text\" />\\r\\n        </div>\\r\\n        <div class=\"span3\">\\r\\n            <input type=\"text\" />\\r\\n        </div>\\r\\n        <div class=\"span2\">\\r\\n            <input class=\"datepicker hasDatepicker\" type=\"text\" id=\"dp1386105161755\" />\\r\\n        </div>\\r\\n        <div class=\"span3\">\\r\\n            <select>\\r\\n                <option>Opt 1</option>\\r\\n                <option>Opt 2</option>\\r\\n                <option>Opt 3</option>\\r\\n            </select>\\r\\n            <div class=\"chosen-container chosen-container-single chosen-container-single-nosearch\" style=\"width: 0px;\" title=\"\">\\r\\n                <a class=\"chosen-single\" tabindex=\"-1\">\\r\\n                    <span>Opt 1</span>\\r\\n                    <div><b></b></div>\\r\\n                </a>\\r\\n                <div class=\"chosen-drop\">\\r\\n                    <div class=\"chosen-search\">\\r\\n                        <input type=\"text\" autocomplete=\"off\" readonly=\"\" />\\r\\n                    </div>\\r\\n                    <ul class=\"chosen-results\"></ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"span1\">\\r\\n            <a href=\"#\">\\r\\n                <i class=\"icon-plus\"></i>\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"position bottom right\">\\r\\n        <div class=\"pad vertical\">\\r\\n            <button class=\"cancel\">Cancel</button>\\r\\n            <input type=\"submit\" value=\"Save\" />\\r\\n        </div>\\r\\n    </div>\\r\\n</form>';});\n\n","\ndefine('text!views/shell/quickadd/general.note.html',[],function () { return '<form>    \\r\\n    <div class=\"row pad accordion divider\" data-bind=\"with: $parent.newNote\">\\r\\n\\t\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t\\t<!-- /ko --> \\r\\n        <div class=\"accordion-toggle\" data-bind=\"clickToggle: $parents[1].gnContentOpen\">\\r\\n            <div class=\"bold line\">Content:\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"accordion-content\" data-bind=\"visible: $parents[1].gnContentOpen\">\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"span2\">\\r\\n                    <h5 class=\"grey pad-bottom\">Duration</h5>\\r\\n                </div>\\r\\n                <div class=\"span2\">\\r\\n                    <input type=\"text\" data-bind=\"value: duration, valueUpdate: \\'afterkeydown\\', numeric: duration, \\r\\n\\t\\t\\t\\t\\t\\tattr:{maxlength: 4, max: 1440, min: 1, title:\\'Duration: enter a number of minutes from 1 to 1440\\'},\\r\\n\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'duration\\') !== -1) }\"></input>\\r\\n                </div>\\r\\n\\t\\t\\t\\t<span class=\"span2 grey align-left\">(minutes)</span>\\r\\n\\t\\t\\t</div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span12\">\\r\\n                    <label>\\r\\n                        <div class=\"input inline text optional note_content\">\\r\\n                            <textarea data-bind=\"value: text, valueUpdate: \\'afterkeydown\\'\" class=\"text optional\" maxlength=\"5000\"></textarea>\\r\\n                        </div>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span12 pad-bottom\">\\r\\n                    <label>\\r\\n                        <span>Program(s)</span>\\r\\n                    </label>\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"span9\" data-bind=\"multiselect: { options: $parents[1].availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString }\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad accordion divider\" data-bind=\"with: $parent.newNote\">\\r\\n        <div class=\"accordion-toggle\" data-bind=\"clickToggle: $parents[1].gnLastNotesOpen\">\\r\\n            <div class=\"bold line\">Past Notes:\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"accordion-content\" data-bind=\"visible: $parents[1].gnLastNotesOpen, foreach: $parents[1].lastThreeNotes\">\\r\\n            <div class=\"row pad-top divider\" data-bind=\"if: createdOn\">\\r\\n                <a class=\"span12\" href=\"#\" data-bind=\"click: $parents[2].viewDetails\">\\r\\n                    <div class=\"row\">\\r\\n                        <strong data-bind=\"Date: createdOn\"></strong> : <span data-bind=\"with: createdBy\"><span data-bind=\"text: preferredName\"></span> - </span>\\r\\n                    </div>\\r\\n                    <div class=\"row\">\\r\\n                        <span class=\"span12 ellipsis\" data-bind=\"text: text\"></span>\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"accordion-content\" data-bind=\"visible: $parents[1].lastThreeNotes().length === 0\">\\r\\n            <em>No notes have been entered</em>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top divider\" data-bind=\"visible: !$parent.gnLastNotesOpen()\">\\r\\n    </div>\\r\\n    <div class=\"position bottom left\">\\r\\n        <div class=\"pad vertical\">\\r\\n            <a class=\"btn color\" href=\"#\" data-bind=\"click: $parent.gotoHistory\">View More</a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"position bottom right\">\\r\\n        <div class=\"pad vertical\">\\r\\n            <button data-bind=\"click: $parent.cancel\" class=\"cancel\">Cancel</button>\\r\\n            <input data-bind=\"click: $parent.saveNote, enable: $parent.canSave\" type=\"submit\" value=\"Save\">\\r\\n        </div>\\r\\n    </div>\\r\\n</form>';});\n\n","\ndefine('text!views/shell/quickadd/notes.html',[],function () { return '<div class=\"content\" data-bind=\"with: selectedPatient\">\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"bold pull-left pad-right\">Type:</div>\\r\\n\\t\\t<div class=\"span5\">\\r\\n\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.noteTypes, value: $parent.selectedNoteType, text: \\'name\\', label: \\'notetypes\\' }\"></div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n    <div class=\"pad-top\"></div>\\r\\n    <div class=\"simplenote\" data-bind=\"compose: $parent.activeNoteType\">\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/shell/quickadd/quickaddpopover.html',[],function () { return '<div data-bind=\"with: patientIsSelected\">\\r\\n    <div class=\"quickadd\" data-bind=\"css: { \\'open\\': $parent.isShowing }\">\\r\\n        <div class=\"quickadd-toggle\" data-bind=\"clickToggle: $parent.isShowing\">\\r\\n            <div class=\"toggle down-up\"></div>\\r\\n            <strong>Quick Add</strong>\\r\\n        </div>\\r\\n        <div class=\"quickadd-content\">\\r\\n            <header data-bind=\"foreach: $parent.quickAddSections\">\\r\\n                <div class=\"tab\">\\r\\n                    <a data-bind=\"click: $parents[1].setActiveTab, css: { \\'active\\': $parents[1].activeQuickAddTab() === $data }, attr: { \\'data-tab\\': Type }\" href=\"#\">\\r\\n                        <i data-bind=\"attr: { class: IconPath }\"></i>\\r\\n                        <span class=\"pad-left\" data-bind=\"text: Title\"></span>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </header>\\r\\n            <div class=\"body pad\" data-bind=\"foreach: $parent.quickAddSections\">\\r\\n                <section data-bind=\"css: { \\'active\\': $parents[1].activeQuickAddTab() === $data }, attr: { \\'data-tab\\': Type }\">\\r\\n                    <!-- ko compose: { model: Path, activationData: { data: $parents[1] } } -->\\r\\n                    <!-- /ko -->\\r\\n                </section>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/shell/quickadd/todo.html',[],function () { return '<form class=\"simple_form new_todo content\" data-bind=\"with: selectedPatient\">\\r\\n\\t<div data-bind=\"with: $parent.newTodo\">\\r\\n\\t\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t\\t<!-- /ko --> \\r\\n\\t</div>\\r\\n    <div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Category:\\r\\n        </div>\\r\\n        <div class=\"span4 pad-left\">\\r\\n            <div data-bind=\"chsnsingle: { options: $parents[1].categories, value: category, text: \\'name\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Status:     \\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <div data-bind=\"chsnsingle: { options: $parents[1].statuses, value: status, text: \\'name\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Due Date:     \\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">            \\r\\n            <!-- <input placeholder=\"due date\" size=\"30\" type=\"text\" data-bind=\"datepicker: dueDate\"> -->\\r\\n\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tobservableDateTime: dueDate, dateErrors: dueDateErrors, showInvalid: showInvalidDueDate, dateName: \\'dueDateDate\\', timeName: \\'dueDateTime\\',\\r\\n\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {}, showTime: false, dateCss: \\'span12\\'\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Start Time:     \\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">            \\r\\n\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tobservableDateTime: startTime, dateErrors: startTimeErrors, timeName: \\'startTime\\', showDate: false,\\r\\n\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {}, showInvalidTime: showInvalidStartTime, showTime: true, timeCss: \\'span12\\'\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Duration:     \\r\\n        </div>\\r\\n        <div class=\"span2 pad-left\">            \\r\\n\\t\\t\\t<input type=\"text\" data-bind=\"value: duration, valueUpdate: \\'afterkeydown\\', numeric: duration, \\r\\n\\t\\t\\t\\t\\t\\tattr:{maxlength: 4, max: 1440, min: 1, title:\\'Duration: enter a number of minutes from 1 to 1440\\'},\\r\\n\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'duration\\') !== -1) }\"></input>\\r\\n        </div>\\r\\n\\t\\t<span class=\"span2 grey pad-left\">(minutes)</span>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Assigned to:     \\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <input class=\"span12\" type=\"text\" data-bind=\"typeahead: { name: \\'assignedToIdTypeAhead\\', taOptions: $parents[1].careManagersBloodhound, displayKey: \\'preferredName\\'}, value: $parents[1].assignedToDisplay, initOptions: { minLength: 3 }\" placeholder=\"Enter name\" />\\r\\n        </div>\\r\\n\\t\\t<div class=\"span5 align-right\">\\r\\n\\t\\t\\t<button class=\"close small\" data-bind=\"enable: assignedToId(), click: $parents[1].removeUserAssociation\">Remove Association</button>\\r\\n\\t\\t</div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Priority:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <div data-bind=\"chsnsingle: { options: $parents[1].priorities, value: priority, text: \\'levelName\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Individual:     \\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <span data-bind=\"text: (patientDetails() && patientDetails().fullName()) ?  patientDetails().fullName() : \\'-\\'\"></span>\\r\\n        </div>\\r\\n        <div class=\"span5 align-right\">\\r\\n            <button class=\"close small\" data-bind=\"enable: patientId(), click: $parents[1].removeAssociation\">Remove Association</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Program(s):\\r\\n        </div>\\r\\n        <div class=\"span5 pad-left\" data-bind=\"visible: patientId()\">\\r\\n            <div class=\"span12\" data-bind=\"multiselect: { options: $parents[1].availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString }\"></div>\\r\\n        </div>\\r\\n        <div class=\"span5 pad-left\" data-bind=\"visible: !patientId()\">\\r\\n            <span>-</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span2 align-right grey\">Title:\\r\\n        </div>\\r\\n        <div class=\"span9 pad-left\">\\r\\n            <input placeholder=\"title\" size=\"80\" maxlength=\"500\" type=\"text\" data-bind=\"value: title, valueUpdate: \\'afterkeydown\\', css: { invalid: (validationErrorsArray().indexOf(\\'title\\') !== -1) }\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span3 grey\">Description:\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"with: $parent.newTodo\">\\r\\n        <div class=\"span12\">\\r\\n            <textarea data-bind=\"value: description, valueUpdate: \\'afterkeydown\\'\" maxlength=\"500\">\\r\\n            </textarea>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad\">\\r\\n    </div>\\r\\n    <div class=\"position bottom right\">\\r\\n        <div class=\"pad vertical\">\\r\\n            <button data-bind=\"click: $parent.cancel\" class=\"cancel\">Cancel</button>\\r\\n            <button data-bind=\"click: $parent.save, enable: $parent.canSave\" class=\"btn color\">Save</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>';});\n\n","\ndefine('text!views/shell/quickadd/touchpoint.note.html',[],function () { return '<form class=\"simple_form new_note\">\\r\\n\\t<div data-bind=\"with: $parent.newTouchPoint\"> \\r\\n\\t\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t\\t<!-- /ko -->\\t\\t\\r\\n\\t</div>\\r\\n    <div class=\"row pad top accordion divider\">\\r\\n        <div class=\"accordion-toggle\" data-bind=\"clickToggle: $parent.tpDetailsOpen\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"bold line pull-left\">\\r\\n                    Details:\\r\\n                </div>\\r\\n                <div class=\"small line grey pad-left pull-left\" data-bind=\"visible: !$parent.tpDetailsOpen(), with: $parent.newTouchPoint\">\\r\\n                    <!-- ko if: outcome() && method() -->\\r\\n                    <span data-bind=\"text: outcome().name\"></span> <span data-bind=\"text: method().name\"></span> <span data-bind=\"text: source().name() === \\'Outbound\\' ? \\'to\\' : \\'from\\' \"></span> <span data-bind=\"text: who().name() === \\'Individual\\' ? $parent.fullName() : who().name()\"></span> on <span data-bind=\"Date: contactedOn\"></span>\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"accordion-content\" data-bind=\"with: $parent.newTouchPoint, visible: $parent.tpDetailsOpen\">\\r\\n            <div class=\"row pad\">\\r\\n                <div class=\"span3\">\\r\\n                    <h5 class=\"grey pad-bottom\">Method</h5>\\r\\n                    <div class=\"icon-list\">\\r\\n            \\t\\t\\t<div data-bind=\"chsnsingle: { options: $parents[1].methods, value: method, text: \\'name\\', label: \\'methods\\' }\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span3\">\\r\\n                    <h5 class=\"grey pad-bottom\">Who</h5>\\r\\n                    <div class=\"icon-list\">\\r\\n            \\t\\t\\t<div data-bind=\"chsnsingle: { options: $parents[1].whos, value: who, text: \\'name\\', label: \\'whose\\' }\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span3\">\\r\\n                    <h5 class=\"grey pad-bottom\">Source</h5>\\r\\n                    <div class=\"icon-list\">\\r\\n            \\t\\t\\t<div data-bind=\"chsnsingle: { options: $parents[1].sources, value: source, text: \\'name\\', label: \\'sources\\' }\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span3\">\\r\\n                    <h5 class=\"grey pad-bottom\">Outcome</h5>\\r\\n                    <div class=\"icon-list\">\\r\\n            \\t\\t\\t<div data-bind=\"chsnsingle: { options: $parents[1].outcomes, value: outcome, text: \\'name\\', label: \\'outcomes\\' }\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad\">\\r\\n                <div class=\"span6\">\\r\\n\\t\\t\\t        <h5 class=\"grey pad-bottom\">Date/Time of Contact</h5>\\r\\n                \\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t    <div>\\t\\t\\t\\t\\t        \\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tobservableDateTime: contactedOn, dateErrors: contactedOnErrors, dateName: \\'contactedOnDate\\', timeName: \\'contactedOnTime\\',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {}, showTime: true, dateCss: \\'span6\\', timeCss: \\'span6\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t    </div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n                </div>\\r\\n                <div class=\"span6\">\\r\\n                    <h5 class=\"grey pad-bottom\">Program(s)</h5>\\r\\n                    <div class=\"icon-list span10\" data-bind=\"multiselect: { options: $parents[1].availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString }\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad accordion open divider\" data-bind=\"with: $parent.newTouchPoint\">\\r\\n        <div class=\"accordion-toggle\" data-bind=\"clickToggle: $parents[1].tpContentOpen\">\\r\\n            <div class=\"bold line\">Content:\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"accordion-content pad\" data-bind=\"visible: $parents[1].tpContentOpen\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <h5 class=\"grey pad-bottom\">Duration</h5>\\r\\n                </div>\\r\\n                <div class=\"span2\">\\r\\n                    <input type=\"text\" data-bind=\"value: duration, valueUpdate: \\'afterkeydown\\', numeric: duration, \\r\\n\\t\\t\\t\\t\\t\\tattr:{maxlength: 4, max: 1440, min: 1, title:\\'Duration: enter a number of minutes from 1 to 1440\\'},\\r\\n\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'duration\\') !== -1) }\"></input>\\r\\n                </div>\\r\\n\\t\\t\\t\\t<span class=\"span2 grey align-left\">(minutes)</span>\\r\\n                <div class=\"span6\">\\r\\n                    <label class=\"control-group\">\\r\\n\\t\\t\\t\\t\\t    <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t        <span data-bind=\"css: { \\'checked\\': validatedIdentity() === true }\">\\r\\n\\t\\t\\t\\t\\t            <input type=\"checkbox\" data-bind=\"checked: validatedIdentity\" />\\r\\n\\t\\t\\t\\t\\t        </span>\\r\\n\\t\\t\\t\\t\\t    </div>\\r\\n                        <span class=\"grey\">Validated identity\\r\\n                        </span>\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span12\">\\r\\n                    <label>\\r\\n                        <div class=\"input inline text optional note_content\">\\r\\n                            <textarea data-bind=\"value: text, valueUpdate: \\'afterkeydown\\'\" class=\"text optional\" maxlength=\"5000\"></textarea>\\r\\n                        </div>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad accordion divider\">\\r\\n        <div class=\"accordion-toggle\" data-bind=\"clickToggle: $parent.tpLastNotesOpen\">\\r\\n            <div class=\"bold line\">Past Notes:\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"accordion-content\" data-bind=\"visible: $parent.tpLastNotesOpen, foreach: $parent.lastThreeNotes\">\\r\\n            <div class=\"row pad-top divider\" data-bind=\"if: createdOn\">\\r\\n                <a class=\"span12\" href=\"#\" data-bind=\"click: $parents[1].viewDetails\">\\r\\n                    <div class=\"row\">\\r\\n                        <strong data-bind=\"Date: createdOn\"></strong> : <span data-bind=\"with: createdBy\"><span data-bind=\"text: preferredName\"></span> - </span>\\r\\n                    </div>\\r\\n                    <div class=\"row\">\\r\\n                        <span class=\"span12 ellipsis\" data-bind=\"text: text\"></span>\\r\\n                    </div>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\"accordion-content\" data-bind=\"visible: $parent.lastThreeNotes().length === 0\">\\r\\n            <em>No notes have been entered</em>\\r\\n        </div>\\r\\n\\t</div>\\r\\n    <div class=\"row pad-top divider\" data-bind=\"visible: !$parent.tpLastNotesOpen()\">\\r\\n    </div>\\r\\n    <div class=\"position bottom left\">\\r\\n        <div class=\"pad vertical\">\\r\\n            <a class=\"btn color\" href=\"#\" data-bind=\"click: $parent.gotoHistory\">View More</a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"position bottom right\">\\r\\n        <div class=\"pad vertical\">\\r\\n            <button data-bind=\"click: $parent.cancel\" class=\"cancel\">Cancel</button>\\r\\n            <input data-bind=\"click: $parent.saveTouchPoint, enable: $parent.canSaveTouchPoint\" type=\"submit\" value=\"Save\">\\r\\n        </div>\\r\\n    </div>\\r\\n</form>';});\n\n","\ndefine('text!views/shell/quickadd/utilization.note.html',[],function () { return '<form class=\"simple_form new_note\">\\r\\n\\t<div data-bind=\"with: $parent.newUtilization\">\\r\\n\\t\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t\\t<!-- /ko -->\\t \\t\\r\\n\\t</div>\\r\\n\\t\\t<div class=\"row pad accordion divider\">\\r\\n\\t\\t\\t<div class=\"accordion-toggle\" data-bind=\"clickToggle: $parent.utDetailsOpen\" >\\r\\n\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t<div class=\"bold line pull-left\">\\r\\n\\t\\t\\t\\t\\t\\tVisit:\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"accordion-content pad\" data-bind=\"with: $parent.newUtilization, visible: $parent.utDetailsOpen\">\\r\\n\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Type</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parents[1].visitTypes, value: visitType, text: \\'name\\', label: \\'visitTypes\\' }, \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'visitType\\') !== -1) }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"visible: showOtherVisitType\" >\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Other Type</h5>\\r\\n\\t\\t\\t\\t\\t\\t<input data-bind=\"value: otherType, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'otherType\\') !== -1) }\"\\r\\n\\t\\t\\t\\t\\t\\t\\tmaxlength=\"100\" type=\"text\"/>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Visit/Admit Date</h5>\\r\\n\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tobservableDateTime: admitDate, dateErrors: admitDateErrors, dateName: \\'admitDate\\', showInvalid: setInvalidAdmitDate,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {}, dateCss: \\'span12\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Admitted ?</h5>\\r\\n\\t\\t\\t\\t<div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"css: { \\'checked\\': admitted() === true }\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\"checkbox\" data-bind=\"checked: admitted\" />\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Discharge Date</h5>\\r\\n\\t\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\tobservableDateTime: dischargeDate, dateErrors: dischargeDateErrors, dateName: \\'dischargeDate\\', showInvalid: setInvalidDischargeDate,\\r\\n\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {minDate: admitDate}, dateCss: \\'span12\\', showTime: false\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-bind=\"visible: utilizationLengthStr\">\\r\\n\\t\\t\\t\\t\\t<span class=\"grey\" data-bind=\"text: utilizationLengthDesc\"></span>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: utilizationLengthStr\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\t\\t\\t\\r\\n\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Location</h5>\\r\\n\\t\\t\\t\\t<div class=\"icon-list span6\">\\r\\n\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parents[1].utilizationLocations, value: utilizationLocation, text: \\'name\\', label: \\'utilizationLocations\\', isCancel: true}\"></div>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: showOtherLocation\" >\\r\\n\\t\\t\\t\\t<div class=\"pad-top\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Other Location</h5>\\r\\n\\t\\t\\t\\t\\t<input data-bind=\"value: otherLocation, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'otherLocation\\') !== -1) }\"\\r\\n\\t\\t\\t\\t\\t\\tmaxlength=\"100\" type=\"text\"/>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Disposition</h5>\\r\\n\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parents[1].dispositions, value: disposition, text: \\'name\\', label: \\'dispositions\\', isCancel: true }\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"visible: showOtherDisposition\" >\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Other Disposition</h5>\\r\\n\\t\\t\\t\\t\\t<input data-bind=\"value: otherDisposition, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'otherDisposition\\') !== -1) }\"\\r\\n\\t\\t\\t\\t\\t\\tmaxlength=\"100\" type=\"text\"/>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad accordion open divider\" data-bind=\"with: $parent.newUtilization\">\\r\\n\\t\\t\\t\\t<div class=\"accordion-toggle\" data-bind=\"clickToggle: $parents[1].utContentOpen\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"bold line\">Content:\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"accordion-content pad\" data-bind=\"visible: $parents[1].utContentOpen\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Source</h5>\\r\\n\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parents[1].utilizationSources, value: utilizationSource, text: \\'name\\', label: \\'utilizationSources\\', isCancel: true }\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Program(s)</h5>\\r\\n\\t\\t\\t\\t\\t<div class=\"icon-list span10\" data-bind=\"multiselect: { options: $parents[1].availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString }\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span12\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Reason</h5>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea data-bind=\"value: text, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'text\\') !== -1) }\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstyle=\"resize: both;\" maxlength=\"5000\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top accordion divider\">\\r\\n\\t\\t\\t\\t<div class=\"accordion-toggle\" data-bind=\"clickToggle: $parent.utLastNotesOpen\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"bold line\">Past Notes:\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"accordion-content\" data-bind=\"visible: $parent.utLastNotesOpen, foreach: $parent.lastThreeNotes\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row pad-top divider\" data-bind=\"if: createdOn\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\"span12\" href=\"#\" data-bind=\"click: $parents[1].viewDetails\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong data-bind=\"Date: createdOn\"></strong> : <span data-bind=\"with: createdBy\"><span data-bind=\"text: preferredName\"></span> - </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"span12 ellipsis\" data-bind=\"text: text\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"accordion-content\" data-bind=\"visible: $parent.lastThreeNotes().length === 0\">\\r\\n\\t\\t\\t\\t\\t\\t<em>No notes have been entered</em>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t\\t<div class=\"row pad-top divider\" data-bind=\"visible: !$parent.utLastNotesOpen()\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"position bottom left\">\\r\\n\\t\\t\\t\\t<div class=\"pad vertical\">\\r\\n\\t\\t\\t\\t\\t\\t<a class=\"btn color\" href=\"#\" data-bind=\"click: $parent.gotoHistory\">View More</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"position bottom right\">\\r\\n\\t\\t\\t\\t<div class=\"pad vertical\">\\r\\n\\t\\t\\t\\t\\t\\t<button data-bind=\"click: $parent.cancel\" class=\"cancel\">Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t<input data-bind=\"click: $parent.saveUtilization, enable: $parent.canSaveUtilization\" type=\"submit\" value=\"Save\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n</form>';});\n\n","\ndefine('text!views/shell/shell.html',[],function () { return '<div>\\r\\n    <!-- ko with: navigation -->\\r\\n    <!-- ko compose: \\'shell/banner.html\\' --><!-- /ko -->\\r\\n    <!-- ko compose: \\'shell/subnav.html\\' --><!-- /ko -->\\r\\n    <!-- /ko -->\\r\\n    <main role=\"application\" data-bind=\"router: { cacheViews: true }\">\\r\\n    </main>\\r\\n\\t<!-- ko compose: \\'shell/footer.html\\' --><!-- /ko -->\\r\\n    <!-- ko with: currentModal -->\\r\\n    <div id=\"modal\" data-bind=\"visible: Showing, css: classOverride\">\\t\\r\\n        <div class=\"content\" data-bind=\"with: Entity\">\\r\\n            <header>\\r\\n                <h2 class=\"title\">\\r\\n                    <span data-bind=\"text: $parent.Title\"></span>\\r\\n                    <i class=\"close pull-right icon-cancel blue\" data-bind=\"click: $parent.cancelChanges\"></i>\\r\\n                </h2>\\r\\n            </header>\\r\\n            <!-- ko if: ($parent.TemplatePath().indexOf(\\'html\\') === -1) -->\\r\\n                <!-- ko compose: { model: $parent.TemplatePath, activationData: activationData } -->\\r\\n                <!-- /ko -->\\r\\n            <!-- /ko -->\\r\\n            <!-- ko ifnot: ($parent.TemplatePath().indexOf(\\'html\\') === -1) -->\\r\\n                <!-- ko compose: $parent.TemplatePath -->\\r\\n                <!-- /ko -->\\r\\n            <!-- /ko -->\\r\\n            <footer>\\r\\n                <div class=\"pull-right\">\\r\\n                    <a class=\"btn cancel\" data-bind=\"click: $parent.cancelChanges\">Cancel</a>\\r\\n                    <button class=\"btn color\" data-bind=\"visible: !$parent.canDelete(), enable: canSave, click: $parent.saveChanges\">Save</button>\\r\\n\\t\\t\\t\\t\\t<!-- ko foreach: $parent.customButtons -->\\r\\n\\t\\t\\t\\t\\t\\t<button class=\"btn color\" data-bind=\"visible: !$parents[1].canDelete(), enable: btnEnabled, click: btnFunction, text: btnText\"></button>\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n                    <button class=\"btn color\" data-bind=\"visible: $parent.canDelete, enable: canSave, click: $parent.delete, text: $parent.deleteText\"></button>\\r\\n                </div>\\r\\n            </footer>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /ko -->\\r\\n    <div id=\"alerts\" data-bind=\"foreach: alerts\">\\r\\n        <!-- ko compose: alertPath -->\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/shell/sidebar.html',[],function () { return '<nav role=\"main\" data-bind=\"foreach: navRoutes, css: { open: $parent.showSideBar() }\">\\r\\n    <a role=\"menuitem\" data-bind=\"click: $parents[1].setRoute, attr: { href: route }, css: { active: $parent.currentRoute() === $data }\">\\r\\n        <img data-bind=\"attr: { src: settings.imageSource }\" /><span data-bind=\"text: settings.content\"></span>\\r\\n    </a>\\r\\n</nav>';});\n\n","\ndefine('text!views/shell/subnav.html',[],function () { return '<header role=\"navigation\">\\r\\n    <div class=\"menu_toggle\" data-bind=\"click: $parent.toggleNavVisibility\">\\r\\n        <img src=\"/NightingaleUI/Content/images/main_menu_toggle.png\" data-phyautomation=\"navigation-context-button\" />\\r\\n        <img data-bind=\"attr: { src: (!!currentRoute() && currentRoute().config  && !!currentRoute().config.settings) ? currentRoute().config.settings.imageSource : \\'\\' }\" data-phyautomation=\"route-image\" />\\r\\n        <span data-bind=\"text: ((currentRoute() && currentRoute().config && !!currentRoute().config.settings) ? currentRoute().config.settings.content : \\'\\') \" data-phyautomation=\"route-header\"></span>\\r\\n    </div>\\r\\n    <div>\\r\\n    <!-- ko compose: \\'shell/sidebar.html\\' --><!-- /ko -->\\r\\n    </div>\\r\\n    <nav class=\"tabs\" data-bind=\"if: currentRoute() && currentRoute().config\">\\r\\n        <!-- ko foreach: currentRoute().config.settings.pages -->\\r\\n            <a role=\"menuitem\" data-bind=\"click: $parent.setSubRoute, text: content, css: { \\'active\\': $parent.currentSubRoute() === $data }\"></a>\\r\\n        <!-- /ko -->\\r\\n    </nav>\\r\\n    <div id=\"quick-add\" data-bind=\"visible: $parent.showQuickAdd\">\\r\\n        <!-- ko compose: \\'viewmodels/shell/quickadd/quickaddpopover\\' -->\\r\\n        <!-- /ko -->\\r\\n    </div>\\r\\n</header>';});\n\n","\ndefine('text!views/templates/action.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: action\">\\r\\n\\t<div class=\"column\">\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n      <div class=\"span9\" data-bind=\"DateOrNothing: assignDate\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned By:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n      <div class=\"span9\" data-bind=\"with: assignBy\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned To:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span5\">\\r\\n\\t\\t\\t\\t<input class=\"span12\" type=\"text\" data-bind=\"typeahead: { name: \\'assignedToIdTypeAhead\\', taOptions: $parent.careManagersBloodhound, displayKey: \\'preferredName\\'}, value: $parent.assignToDisplay, initOptions: { minLength: 3 }\" placeholder=\"Enter name\" />\\r\\n        <!-- <select data-bind=\"options: $parent.careManagers, value: assignToId, optionsText: \\'preferredName\\', optionsValue: \\'id\\'\"></div> -->\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span4\">\\r\\n\\t\\t\\t\\t<button class=\"button small warning\" data-bind=\"enable: assignToId(), click: $parent.removeAssignment\">Remove Assignment</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- <div class=\"row pad-top divider\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Action Status:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t<select style=\"display: none;\">\\r\\n\\t\\t\\t\\t\\t<option>In Progress\\t</option>\\r\\n\\t\\t\\t\\t\\t<option>Not Started</option>\\r\\n\\t\\t\\t\\t\\t<option>Closed</option>\\r\\n\\t\\t\\t\\t\\t<option>Removed </option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t\\t<span>Reason:\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<textarea>\\r\\n\\t\\t\\t\\t\\t</textarea>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Start Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<input class=\"datepicker\" type=\"text\" value=\"03/15/2014\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>End Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<input class=\"datepicker\" type=\"text\" id=\"dp1401893998028\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div> -->\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/address.edit.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"span2\">\\r\\n        <i class=\"icon-address blue\"></i>\\r\\n    </div>\\r\\n    <div class=\"span10 ellipsis short\">\\r\\n        <div class=\"row\">\\r\\n            <div class=\"span12\">\\r\\n                <div class=\"row\">\\r\\n                    <input data-bind=\"value: line1, disable: $parent.addressOptedOut\" placeholder=\"line one\" />\\r\\n                </div>\\r\\n                <div class=\"row\">\\r\\n                    <input data-bind=\"value: line2, disable: $parent.addressOptedOut\" placeholder=\"line two\" />\\r\\n                </div>\\r\\n                <div class=\"row\">\\r\\n                    <input data-bind=\"value: line3, disable: $parent.addressOptedOut\" placeholder=\"line three\" />\\r\\n                </div>\\r\\n                <div class=\"row\">\\r\\n                    <input class=\"span5\" style=\"padding-right: 0;\" data-bind=\"value: city, disable: $parent.addressOptedOut\" placeholder=\"city\" />\\r\\n                    <select class=\"span4\" style=\"padding-right: 0;\" data-bind=\"options: $root.stateList, value: stateId, optionsValue: \\'id\\', optionsText: \\'name\\', disable: $parent.addressOptedOut\"></select>\\r\\n                    <input class=\"span3\" style=\"padding-right: 0;\" data-bind=\"value: postalCode, disable: $parent.addressOptedOut\" placeholder=\"zip\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/address.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"span2\">\\r\\n        <i class=\"icon-address lighterblue\"></i>\\r\\n    </div>\\r\\n    <div class=\"span10 ellipsis line short\">\\r\\n        <span data-bind=\"text: cityStateZip, attr: { title: fullFormatted }\"></span>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/allergies.panel.html',[],function () { return '<div class=\"panel-wrapper\">\\r\\n    <div class=\"row\">\\r\\n        <!-- ko foreach: columns -->\\r\\n        <div class=\"grey hover-parent\" data-bind=\"css: cssClass\">\\r\\n            <span data-bind=\"text: displayName\"></span>\\r\\n            <!-- ko if: $parent.canSort && canSort -->\\r\\n                <i class=\"pull-right filter-toggle pad-right \" data-bind=\"click: $parent.toggleSort, css: ($parent.selectedSortColumn() === sortProperty ? \\'fa fa-caret-up\\' : ($parent.selectedSortColumn() === sortProperty + \\' desc\\' ? \\'fa fa-caret-down\\' : \\'\\'))\"></i>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if: ($parent.canSort  && canSort && ($parent.selectedSortColumn() !== sortProperty && $parent.selectedSortColumn() !== sortProperty + \\' desc\\'))  -->\\r\\n                <i class=\"pull-right hover-show fa fa-caret-up filter-toggle pad-right\" data-bind=\"click: $parent.toggleSort\"></i>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n        <!-- /ko  -->\\r\\n    </div>\\r\\n    <div data-bind=\"foreach: computedAllergies\">\\r\\n        <div class=\"row divider filter-toggle\" data-bind=\"foreach: $parent.columns, css: { \\'active\\': $parent.activeAllergy() === $data }\">\\r\\n            <div data-bind=\"compose: { model: $parent, view: path }, css: cssClass\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: computedAllergies().length === 0\">\\r\\n        <em>No data meets your filter criteria</em>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/allergy.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: allergy\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Name:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\" data-bind=\"text: allergyName\">\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Status:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n        \\t<div data-bind=\"chsnsingle: { options: $parent.allergyStatuses, value: status, text: \\'name\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Reaction:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n            <div class=\"span9\" data-bind=\"multiselect: { options: $parent.reactions, values: reactionIds, idValue: \\'id\\', text: \\'name\\', label: \\'reactions\\', stringValue: reactionString }\"></div>\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Severity:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n        \\t<div data-bind=\"chsnsingle: { options: $parent.severities, value: severity, text: \\'name\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\" data-bind=\"if: source\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Source:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n        \\t<div data-bind=\"chsnsingle: { options: $parent.allergySources, value: source, text: \\'name\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Start Date:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tobservableDateTime: startDate, dateErrors: startDateErrors, showInvalid: setInvalidStartDate,\\r\\n\\t\\t\\t\\t\\tmaxDate: \\'today\\', datepickerOptions:{ maxDate: \\'+0\\' }, datepickerDynamicOptions: {}, dateName: \\'startDate\\'\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            End Date:\\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">\\r\\n\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\tobservableDateTime: endDate, dateErrors: endDateErrors, showInvalid: setInvalidEndDate,\\r\\n\\t\\t\\t\\t\\t\\tmaxDate: \\'today\\', datepickerOptions:{maxDate: \\'+0\\'}, datepickerDynamicOptions: {minDate: startDate}, dateName: \\'endDate\\'\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\"></div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"span3 grey\">\\r\\n            Notes:\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <div class=\"span12\">\\r\\n            <textarea data-bind=\"value: notes\"></textarea>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Created On:\\r\\n        </div>\\r\\n        <div class=\"span2 pad-left grey\" data-bind=\"DateOrDash: createdOn\">\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            Updated On:\\r\\n        </div>\\r\\n        <div class=\"span2 pad-left grey\" data-bind=\"DateOrDash: updatedOn\">\\r\\n        </div>\\r\\n        <div class=\"span2 align-right grey\">\\r\\n            System:\\r\\n        </div>\\r\\n        <div class=\"span2 pad-left grey\" data-bind=\"text: systemName\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/allergy.expand.html',[],function () { return '<a class=\"toggle\" href=\"#\" data-bind=\"clickToggle: isExpanded\"><i data-bind=\"css: isExpanded() ? \\'icon-single-chevron-up\\' : \\'icon-angle-double-down\\'\"></i></a>';});\n\n","\ndefine('text!views/templates/allergy.name.html',[],function () { return '<a class=\"edit\" href=\"#\" data-bind=\"text: (allergyName() ? allergyName() : \\'-\\'), click: setActiveAllergy, attr: { title: allergyName }\">\\r\\n</a>';});\n\n","\ndefine('text!views/templates/allergy.severity.html',[],function () { return '<div class=\"ellipsis\">\\r\\n    <span data-bind=\"with: severity\">\\r\\n        <span data-bind=\"text: name, attr: { title: name }\"></span>\\r\\n    </span>\\r\\n    <div data-bind=\"ifnot: severity\">\\r\\n    \\t<span>-</span>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/allergy.startdate.html',[],function () { return '<span data-bind=\"DateOrDash: startDate\"></span>';});\n\n","\ndefine('text!views/templates/allergy.status.html',[],function () { return '<div class=\"ellipsis\" data-bind=\"with: status\">\\r\\n    <span class=\"pull-left filters\" data-bind=\"if: id() === \\'1\\'\">\\r\\n    \\t<a href=\"#\" data-bind=\"click: $parent.inactivate\"><i class=\"icon-checkbox-on blue toggle\" title=\"Deactivate\"></i></a>\\r\\n    </span>\\r\\n    <div class=\"pull-left filters\" data-bind=\"if: id() === \\'2\\'\">\\r\\n\\t\\t<a href=\"#\" data-bind=\"click: $parent.activatePatientAllergy\"><i class=\"icon-checkbox-off blue toggle\" title=\"Activate\"></i></a>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/templates/allergy.type.html',[],function () { return '<div>\\r\\n    <span data-bind=\"text: typeString\">\\r\\n    </span>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/background.html',[],function () { return '<div class=\"body\">\\r\\n    <div class=\"row\">\\r\\n        <h4>Background :</h4>\\r\\n        <textarea class=\"span12\" data-bind=\"value: background\" maxlength=\"5000\" style=\"height: 30em; resize: both;\" />\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/barrier.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: barrier\">\\r\\n    <div class=\"column\">\\r\\n        <section class=\"data-set clearfix\">\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Description</span>\\r\\n                </div>\\r\\n                <div class=\"span9\">\\r\\n                    <input data-bind=\"value: name, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"255\" type=\"text\" />\\r\\n                    <span><em class=\"grey\" data-bind=\"visible: !name()\">Description is required</em></span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Status</span>\\r\\n                </div>\\r\\n                <div class=\"span3\">\\r\\n                    <div data-bind=\"chsnsingle: { options: $parent.barrierStatuses, value: status, text: \\'name\\', label: \\'barrierstatuses\\', disabled: $parent.isNew() }\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Category</span>\\r\\n                </div>\\r\\n                <div class=\"span3\">\\r\\n                    <div data-bind=\"chsnsingle: { options: $parent.barrierCategories, value: category, text: \\'name\\', label: \\'barriercategories\\' }\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"row pad-top filter-toggle\" data-bind=\"click: $parent.toggleOpen, visible: details\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Existing Details</h5>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"visible: (!($parent.existingDetailsOpen())), text: \\'...\\'\"></span>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<pre data-bind=\"text: details, visible: $parent.existingDetailsOpen\" ></pre>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">New Details</h5>\\r\\n\\t\\t\\t\\t\\t<textarea data-bind=\"value: newDetails, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"5000\" type=\"text\" style=\"height: 10em; resize: both;\"></textarea>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/care.team.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: selectedPatient\">\\r\\n    <div class=\"column\">\\r\\n        <section class=\"data-set clearfix\" data-bind=\"foreach: careMembers\">\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Preferred Name</span>\\r\\n                </div>\\r\\n                <div class=\"span9\">\\r\\n                    <strong data-bind=\"text: preferredName\" class=\"string optional\" maxlength=\"255\" type=\"text\"></strong>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n        <section class=\"data-set clearfix\">\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Assign to</span>\\r\\n                </div>\\r\\n                <div class=\"span9\">\\r\\n                    <input type=\"text\" data-bind=\"typeahead: { name: \\'newAssignedToTypeAhead\\', taOptions: $parent.careManagersBloodhound, displayKey: \\'preferredName\\'}, value: $parent.assignToDisplay, initOptions: { minLength: 3 }\" placeholder=\"Enter name\" />\\r\\n                    <!-- <input data-bind=\"value: $parent.newAssignedTo, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"255\" type=\"text\" /> -->\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/careMember.edit.html',[],function () { return '<div class=\"body\" data-bind=\"visible: showing\">\\t\\t\\r\\n\\t<section class=\"accordion hoverable open\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t<!--search-->\\r\\n\\t\\t<div data-bind=\"with: contactSearch, visible: !editMode()\">\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\"span1 align-right grey\" maxlength=\"50\">First Name</div>\\r\\n\\t\\t\\t\\t<div class=\"span2 pad-left\">\\r\\n\\t\\t\\t\\t\\t<input type=\"text\" data-bind=\"value: criteriaFirstName, valueUpdate: \\'afterkeydown\\'\" placeholder=\"first name\" />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span1 align-right grey\" maxlength=\"50\">Last Name</div>\\r\\n\\t\\t\\t\\t<div class=\"span2 pad-left\">\\t\\t\\r\\n\\t\\t\\t\\t\\t<input type=\"text\" data-bind=\"value: criteriaLastName, valueUpdate: \\'afterkeydown\\'\" placeholder=\"last name\" />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span1 align-right grey\">Type</div>\\r\\n\\t\\t\\t\\t<div class=\"span3 pad-right\">\\r\\n\\t\\t\\t\\t\\t<div data-bind=\"multiselect: { options: contactSubTypes, values: criteriaContactSubTypes, text: \\'name\\', idValue: \\'id\\', label: \\'criteriaContactSubTypes\\' }\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t\\t\\t<span class=\"filters\" data-bind=\"visible: showResetFilters\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\"pointer icon-cancel pad-right toggle\" title=\"Clear Filter\" data-bind=\"click: resetFilters\"></i>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t<button class=\"btn color pull-right\" data-bind=\"click: searchContacts, enable: canSearchContacts\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\"icon-search\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"pad-left\">Search</span>\\r\\n\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!--search results-->\\r\\n\\t\\t\\t<div class=\"row pad-top divider\"></div>\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<em class=\"row grey pad-left\" data-bind=\"visible: noResultsFound()\">No records meet your search criteria</em>\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: showResultsHeader\">\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-bottom\">\\r\\n\\t\\t\\t\\t\\t\\t<span>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1>Results<span data-bind=\"text: contactsShowingText\"></span></h1>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"header grey\">\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t<header>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"line\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span8\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span2\">Last Name</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span2\">First Name</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span8\">Summary</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"span4 pad-left\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tSelected Contact\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</header>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span8\">\\r\\n\\t\\t\\t\\t\\t<h1 data-bind=\"visible: searching()\">Searching...</h1>\\r\\n\\t\\t\\t\\t\\t<div class=\"body\" style=\"max-height: 310px; min-height: 30px;\" data-bind=\"visible: !searching()\">\\r\\n\\t\\t\\t\\t\\t\\t<!--ko compose: \"templates/contactSearchResults.panel.html\" --><!-- /ko -->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span4\">\\r\\n\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t<div data-bind=\"with: selectedContact\" class=\"header grey\">\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 data-bind=\"text: fullName\" style=\"overflow-wrap: break-word;\"></h1>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\"grey\" data-bind=\"text: contactSummary\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"with: deceased\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: (name() == \\'Yes\\')\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Deceased:</strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: $parent.contactAlreadyAssigned\">\\r\\n\\t\\t\\t\\t\\t\\t<strong  data-bind=\"text: $parent.contactAlreadyAssigned\"></strong>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t<div class=\"row pad-top\" data-bind=\"visible: canAddContact\">\\r\\n\\t\\t\\t<span class=\"grey pad-right\">can\\'t find the right contact?</span>  \\r\\n\\t\\t\\t<button class=\"btn small\" data-bind=\"click: createNewContact\">\\r\\n\\t\\t\\t\\t<i class=\"icon-plus\"></i>\\r\\n\\t\\t\\t\\t<span class=\"pad-left\">Add</span>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\" data-bind=\"visible: selectedContact\">\\r\\n\\t\\t\\t<div class=\"row\" data-bind=\"visible: editMode\">\\r\\n\\t\\t\\t\\t<div class=\"line\" data-bind=\"with: selectedContact\">\\r\\n\\t\\t\\t\\t\\t<span class=\"span1\">&nbsp;</span>\\r\\n\\t\\t\\t\\t\\t<h1 data-bind=\"text: fullName()\"></h1>\\r\\n\\t\\t\\t\\t\\t<span class=\"grey\" data-bind=\"text: contactSummary()\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div data-bind=\"with: careMember\">\\r\\n\\t\\t\\t\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t\\t\\t\\t<!-- /ko -->\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">Role</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\" data-bind=\"chsnsingle: { options: $parent.computedRoles, value: roleId, text: \\'role\\', idValue: \\'id\\'}, \\r\\n\\t\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'role\\') !== -1) } \"></div>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div data-bind=\"visible: $parent.showCustomRole\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">Other Role</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\"text\" data-bind=\"value: customRoleName, attr:{maxlength: 100}, valueUpdate: \\'afterkeydown\\', \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'customRoleName\\') !== -1) } \" </input>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">Core?</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"css: { \\'checked\\': core }\" class=\"checked\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\"checkbox\" data-bind=\"clickToggle: core\"></input>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\t\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">\\r\\n\\t\\t\\t\\t\\t\\tStart Date\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span2\"> \\r\\n\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tobservableDateTime: startDate, dateErrors: startDateErrors, showInvalid: setInvalidStartDate, \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{}, datepickerDynamicOptions: {}, dateName: \\'startDate\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko -->\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">\\r\\n\\t\\t\\t\\t\\t\\tEnd Date\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span2\">        \\t\\r\\n\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tobservableDateTime: endDate, dateErrors: endDateErrors, showInvalid: setInvalidEndDate, \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{}, datepickerDynamicOptions: {minDate: startDate}, dateName: \\'endDate\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">Status</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span1\" data-bind=\"chsnsingle: { options: $parent.careMemberStatuses, value: statusId, text: \\'name\\', idValue: \\'id\\' }\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span1 align-right grey\">Distance</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span1\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\"text\" data-bind=\"value: distance, numericDecimal: distance, valueUpdate: \\'afterkeydown\\', \\r\\n\\t\\t\\t\\t\\t\\t\\tattr:{maxlength: 10, min: 0}\" />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\"span1 radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"css: { \\'checked\\': distanceUnit()===\\'mi\\' }\" class=\"\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\"radio\" data-bind=\"clickRadio: distanceUnit, setValue: \\'mi\\'\">\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<span class=\"span1 grey\">Miles</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\"span1 radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"css: { \\'checked\\': distanceUnit()===\\'km\\' }\" class=\"\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\"radio\" data-bind=\"clickRadio: distanceUnit, setValue: \\'km\\'\">\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<span class=\"span1 grey\">Kilometers</span>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\"span2 align-right grey\">Frequency</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span2\" data-bind=\"chsnsingle: { options: $parent.frequencies, value: frequencyId, text: \\'name\\', idValue: \\'id\\', isCancel: true, caption: \\'None\\' }\"></div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"pad-top\"></div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top filter-toggle\" data-bind=\"click: $parent.toggleOpen, visible: notes\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Existing Notes</h5>\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"visible: (!($parent.existingNotesOpen())), text: \\'...\\'\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<pre data-bind=\"text: notes, visible: $parent.existingNotesOpen\" ></pre>\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Notes</h5>\\r\\n\\t\\t\\t\\t\\t\\t<textarea data-bind=\"value: newNotes, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"5000\" type=\"text\" style=\"height: 10em; resize: both;\"></textarea>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div data-bind=\"visible: !isNew()\">\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"grey\">Created On: \\t</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: createdBy()? createdBy().preferredName : \\'\\'\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: updatedOn\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"grey\">Updated On:  </span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: updatedBy()? updatedBy().preferredName : \\'\\'\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: dataSource\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"grey\" >System:  </span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: dataSource\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\t\\t\\r\\n\\t</section>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/careMembers.panel.html',[],function () { return '<div class=\"panel-wrapper\">\\r\\n    <div class=\"row\" data-bind=\"visible: (careMembers().length > 0)\">\\r\\n        <div class=\"grey line\" >\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t<div class=\"span4 ellipsis\">\\r\\n\\t\\t\\t\\t<span>Name</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span4 ellipsis\">\\r\\n\\t\\t\\t\\t<span>Role</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span1 ellipsis\">\\r\\n\\t\\t\\t\\t<span>Core</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span1 ellipsis\">\\r\\n\\t\\t\\t\\t<span>Status</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"divider\"></div>\\r\\n    </div>\\r\\n    <div data-bind=\"foreach: careMembers\">\\r\\n        <div class=\"line filter-toggle ellipsis\" data-bind=\"click: $parent.selectCareMember, css:{ \\'active\\': $parent.selectedCareMember() === $data }\">\\t\\t\\t\\r\\n\\t\\t\\t \\r\\n\\t\\t\\t\\t<div class=\"span4 grey ellipsis\" data-bind=\"with: contact\">\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"text: fullName, attr: { \\'title\\': fullName }\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span4 grey ellipsis\" >\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"text: computedRoleName, attr: { \\'title\\': computedRoleName }\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t \\t\\t\\t\\r\\n\\t\\t\\t<div class=\"span1 grey\">\\r\\n\\t\\t\\t\\t<div class=\"ellipsis\">\\r\\n\\t\\t\\t\\t\\t<span class=\"pull-left filters\" data-bind=\"if: core()\">\\r\\n\\t\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: $parent.clearCore\"><i class=\"icon-checkbox-on blue toggle\" title=\"Clear core\"></i></a>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t<div class=\"pull-left filters\" data-bind=\"if: !core()\">        \\r\\n\\t\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: $parent.setCore\"><i class=\"icon-checkbox-off blue toggle\" title=\"Set as core member\"></i></a>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span1 grey\">\\r\\n\\t\\t\\t\\t<div class=\"ellipsis\">\\r\\n\\t\\t\\t\\t\\t<span class=\"pull-left filters\" data-bind=\"if: statusId() === 1\">\\r\\n\\t\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: $parent.deactivate\"><i class=\"icon-checkbox-on blue toggle\" title=\"Deactivate\"></i></a>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t<div class=\"pull-left filters\" data-bind=\"if: statusId() !== 1\">        \\r\\n\\t\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: $parent.activate\"><i class=\"icon-checkbox-off blue toggle\" title=\"Activate\"></i></a>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span1 grey\">\\r\\n\\t\\t\\t\\t<div class=\"pull-right filters\">\\r\\n\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: $parent.editCareMember\"><i class=\"icon-edit toggle\" title=\"Edit\"></i></a>\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span1 grey\">\\r\\n\\t\\t\\t\\t<div class=\"pull-left filters\">\\r\\n\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: $parent.deleteCareMember, clickBubble: false\"><i class=\"icon-cancel red toggle\" title=\"Delete\"></i></a>\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<!-- this column is just for debug: -->\\t\\t\\r\\n\\t\\t\\t<!-- <div class=\"span5 grey ellipsis\" >\\r\\n\\t\\t\\t\\t<span data-bind=\"text: moment(updatedOn()? updatedOn() : createdOn()).format(\\'MM/DD/YYYY\\')\"></span>\\r\\n\\t\\t\\t</div> -->\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"divider\" style=\"margin-top: 0px; padding-top: 0px;\"></div>\\r\\n    </div>\\r\\n    <!-- <div class=\"row\" data-bind=\"visible: careMembers().length === 0\">\\r\\n        <em>There are no care team members</em>\\r\\n    </div> -->\\r\\n</div>';});\n\n","\ndefine('text!views/templates/clinical.dataentry.html',[],function () { return '<div class=\"body\" data-bind=\"visible: showing\">\\r\\n    <div class=\"row\">\\r\\n    \\t<section class=\"accordion\">\\r\\n    \\t\\t<div class=\"row\">\\r\\n                <span class=\"span2\"><strong>Select Data Type:</strong></span>\\r\\n                <div class=\"span2\" data-bind=\"chsnsingle: { options: dataTypes, value: computedActiveDataType, text: \\'name\\' }\"></div>\\r\\n    \\t\\t</div>\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span12\">\\r\\n                    <hr>\\r\\n                </div>\\r\\n            </div>\\r\\n    \\t</section>\\r\\n        <section class=\"accordion\" data-bind=\"with: selectedTemplate\">\\r\\n            <div class=\"row\" data-bind=\"with: $parent.activeDataType\">\\r\\n                <h3 data-bind=\"text: name, attr: { title: name }\"></h3>\\r\\n            </div>\\r\\n            <!-- ko with: firstSection -->\\r\\n                <!-- ko compose: { model: path, activationData: { activeDataType: $parents[1].activeDataType, selectedPatient: $parents[1].selectedPatient } } -->\\r\\n                <!-- /ko -->\\r\\n            <!-- /ko -->\\r\\n        </section>\\r\\n        <section class=\"accordion\" data-bind=\"with: selectedTemplate\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span12\">\\r\\n                    <hr>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- ko with: secondSection -->\\r\\n                <!-- ko compose: { model: path, activationData: { activeDataType: $parents[1].activeDataType, selectedPatient: $parents[1].selectedPatient } } -->\\r\\n                <!-- /ko -->\\r\\n            <!-- /ko -->\\r\\n        </section>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/clinicalBackground.html',[],function () { return '<div class=\"body\">\\r\\n    <div class=\"row\">\\r\\n        <h4>Clinical Background :</h4>\\r\\n        <textarea class=\"span12\" data-bind=\"value: clinicalBackground\" maxlength=\"5000\" style=\"height: 30em; resize: both;\" />\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/contact.edit.html',[],function () { return '<div data-bind=\"visible: showing\">\\t\\r\\n\\t<section class=\"accordion hoverable open\" data-bind=\"with: contactCard\">\\r\\n\\t\\t<!-- ko compose: \\'templates/contactcard.html\\' -->\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t</section>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/contact.tabs.html',[],function () { return '<div class=\"row\">\\r\\n\\t<nav class=\"tabs span12\">\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<!-- ko foreach: $parent.tabs -->\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<li data-bind=\"css: { \\'active\\': $parent.activeTab() === name }, click: function(){ $parents[1].setActiveTab($parent, name) }, clickBubble: false, visible: isShowing\">\\r\\n\\t\\t\\t\\t\\t<!-- ko if: imgAlt -->\\r\\n\\t\\t\\t\\t\\t\\t<img data-bind=\"attr:{ alt: imgAlt, src: imgSource }\" />\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t<!-- ko if: cssClass -->\\r\\n\\t\\t\\t\\t\\t\\t<i data-bind=\"attr:{ class: cssClass }\"></i>\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->\\t\\r\\n\\t\\t\\t\\t\\t<a role=\"menuitem\" data-bind=\"text: name, style: {color: hasErrors() ? \\'red\\' : \\'black\\'}\"></a>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t<!-- /ko -->\\t\\t\\t\\t\\r\\n\\t\\t</ul>\\r\\n\\t</nav>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/contactSearchResults.panel.html',[],function () { return '<div class=\"panel-wrapper\">\\r\\n\\t<!-- <em class=\"grey\" data-bind=\"visible: noResultsFound()\">No records meet your search criteria</em>\\r\\n\\t<div class=\"grey row divider\" data-bind=\"visible: (myContactSearchResults().length > 0)\">\\r\\n\\t\\t<div class=\"span2\">Last Name</div>\\r\\n\\t\\t<div class=\"span2\">First Name</div>\\r\\n\\t\\t<div class=\"span8\">Summary</div>\\r\\n\\t</div> -->\\r\\n\\t<div data-bind=\"foreach: myContactSearchResults\">\\t\\t\\r\\n\\t\\t<div class=\"line filter-toggle ellipsis\" data-bind=\"click: $parent.selectContact, css:{ \\'active\\': $parent.selectedContact() === $data }\">\\t\\t\\t\\r\\n\\t\\t\\t<div class=\"span2 grey ellipsis\">\\r\\n\\t\\t\\t\\t<span data-bind=\"text: lastName, attr:{ title: lastName }\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span2 grey ellipsis\">\\r\\n\\t\\t\\t\\t<span data-bind=\"text: firstName, attr:{ title: firstName }\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span8 grey ellipsis\">\\r\\n\\t\\t\\t\\t<span data-bind=\"text: contactSummary, attr: { title: contactSummary }\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"divider\" style=\"margin-top: 0px; padding-top: 0px;\"></div>\\r\\n\\t</div>\\r\\n\\t<!-- load more -->\\r\\n\\t<div data-bind=\"visible: !searching()\">\\r\\n\\t\\t<div data-bind=\"visible: canLoadMoreContacts\">\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<button class=\"small\" data-bind=\"click: loadMoreContacts\">Load more...</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div data-bind=\"visible: maxContactsLoaded\">\\r\\n\\t\\t\\t<div class=\"line\">\\r\\n\\t\\t\\t\\t<em>... cannot load more (try a different search criteria)</em>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\t\\t\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/contactcard.html',[],function () { return '  <div class=\"body\">\\r\\n\\t<div class=\"row pad-bottom pad-left\" data-bind=\"visible: $parent.contactTypesShowing\">\\r\\n\\t\\t<!--todo: put the dropdown with options. options feeds from contact types request where GroupType=1 and should show \"person\" as an option -->\\r\\n\\t\\t<h5 class=\"span2 grey\">Contact Type</h5>\\r\\n\\t\\t<div class=\"span4\" data-bind=\"chsnsingle:{ options: $parent.contactTypes, value: contactTypeId, idValue: \\'id\\', text: \\'name\\', label: \\'contactTypes\\'}\"></div>\\r\\n\\t</div>\\r\\n\\t<!-- ko compose: \\'templates/contact.tabs.html\\' -->\\r\\n\\t<!-- /ko -->    \\r\\n    <div class=\"row pad top\">\\r\\n        <h2 class=\"span12\" data-bind=\"text: $parent.fullName, attr: { title: $parent.fullName }\"></h2>\\r\\n    </div>\\r\\n\\t\\r\\n\\t<div class=\"row\" data-bind=\"visible: activeTab() === \\'Profile\\'\">        \\r\\n\\t\\t<div class=\"row validation-summary\" data-bind=\"if: profileValidationErrors().length > 0\">            \\r\\n\\t\\t\\t<ul data-bind=\"foreach: profileValidationErrors\">\\r\\n\\t\\t\\t\\t<li class=\"validation-errors\">\\r\\n\\t\\t\\t\\t\\t<h5 data-bind=\"text: Message\"></h5>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row\" data-bind=\"visible: isDuplicate\">\\r\\n\\t\\t\\t<span class=\"errorheader\" style=\"margin-top: 10px; border: 1px solid; background: #fbcbc7; color: #871409; display: block; font-size: 11px; padding: 5px;\">\\r\\n\\t\\t\\t<a href=\"#\">\\r\\n\\t\\t\\t\\t<i class=\"icon-warning red\"></i>\\r\\n\\t\\t\\t</a>A contact already exists with the same name. Do you want to continue and create? <button class=\"btn small color\" data-bind=\"click: $parent.forceSave\">Proceed and Create</button></span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t<label class=\"span2\">\\r\\n\\t\\t\\t\\t<span>Prefix</span>\\r\\n\\t\\t\\t\\t<input class=\"span1\" type=\"text\" maxlength=\"20\" data-bind=\"value: prefix, valueUpdate: \\'afterkeydown\\'\" placeholder=\"prefix\" />\\r\\n\\t\\t\\t</label>\\r\\n\\t\\t\\t<label class=\"span5\">\\r\\n\\t\\t\\t\\t<span>First Name</span>\\r\\n\\t\\t\\t\\t<input type=\"text\" maxlength=\"100\" data-bind=\"value: firstName, valueUpdate: \\'afterkeydown\\', css: { invalid: (profileValidationErrorsArray().indexOf(\\'firstName\\') !== -1) }\" placeholder=\"first name\" />\\r\\n\\t\\t\\t</label>\\r\\n\\t\\t\\t<label class=\"span5\">\\r\\n\\t\\t\\t\\t<span>Preferred Name</span>\\r\\n\\t\\t\\t\\t<input type=\"text\" maxlength=\"100\" data-bind=\"value: preferredName, valueUpdate: \\'afterkeydown\\'\" placeholder=\"preferred name\" />\\r\\n\\t\\t\\t</label>\\t\\t\\t\\t\\r\\n\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t<label class=\"span3\">\\r\\n\\t\\t\\t\\t<span>Middle Name</span>\\r\\n\\t\\t\\t\\t<input type=\"text\" maxlength=\"100\" data-bind=\"value: middleName, valueUpdate: \\'afterkeydown\\'\" placeholder=\"middle name\" />\\r\\n\\t\\t\\t</label>\\r\\n\\t\\t\\t<label class=\"span7\">\\r\\n\\t\\t\\t\\t<span>Last Name</span>\\r\\n\\t\\t\\t\\t<input type=\"text\" maxlength=\"100\" data-bind=\"value: lastName, valueUpdate: \\'afterkeydown\\', css: { invalid: (profileValidationErrorsArray().indexOf(\\'lastName\\') !== -1) }\" placeholder=\"last name\" />\\r\\n\\t\\t\\t</label>\\r\\n\\t\\t\\t<label class=\"span2\">\\r\\n\\t\\t\\t\\t<span>Suffix</span>\\r\\n\\t\\t\\t\\t<input type=\"text\" maxlength=\"20\" data-bind=\"value: suffix, valueUpdate: \\'afterkeydown\\'\" placeholder=\"suffix\" />\\r\\n\\t\\t\\t</label>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row\">\\t\\t\\t\\t\\r\\n\\t\\t\\t<label class=\"span4\">\\r\\n\\t\\t\\t\\t<span>Gender</span>\\r\\n\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options:  $parent.genders, value: gender, text: \\'Description\\', idValue: \\'Gender\\' }\"></div>\\r\\n\\t\\t\\t</label>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t<label class=\"span4\">\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<span>Deceased</span>\\r\\n\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options:  $parent.deceasedStatuses, value:  deceasedId, text: \\'name\\', idValue: \\'id\\' }\"></div>\\r\\n\\t\\t\\t</label>\\r\\n\\t\\t\\t<label class=\"span4\">\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<span>Status</span>\\r\\n\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.contactStatuses, value: statusId, text: \\'name\\', idValue: \\'id\\' }\"></div>\\r\\n\\t\\t\\t</label>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\"row divider pad-top pad-bottom bold\">Type Details</div>\\r\\n\\t\\t<div class=\"row validation-summary\" data-bind=\"if: $parent.isDuplicateSubType()\">            \\r\\n\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t<li class=\"validation-errors\">\\r\\n\\t\\t\\t\\t\\t<h5>Type already exist</h5>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<label class=\"span4\">\\r\\n\\t\\t\\t<span >Type</span>\\r\\n\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.contactSubTypes, value: $parent.selectedSubType, text: \\'name\\', idValue: \\'id\\', isCancel: true, caption: \\'None\\' }, \\r\\n\\t\\t\\t\\t\\t\\tcss: { invalid: $parent.isDuplicateSubType() }\"></div>\\t\\t\\t\\t\\t\\r\\n\\t\\t</label>\\r\\n\\t\\t<label class=\"span4\">\\r\\n\\t\\t\\t<span>Specialty</span>\\r\\n\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.contactSpecialties, value: $parent.selectedSpecialty, text: \\'name\\', idValue: \\'id\\', isCancel: true, caption: \\'None\\' }, \\r\\n\\t\\t\\t\\t\\t\\tcss: { invalid:  $parent.showInvalidSpecialty() }\"></div>\\r\\n\\t\\t</label>\\r\\n\\t\\t<label class=\"span4\">\\r\\n\\t\\t\\t<span>Sub-Specialties</span>\\t\\t\\t\\t\\r\\n\\t\\t\\t<div data-bind=\"multiselect: { options: $parent.contactSubSpecialties, values: $parent.selectedSubSpecialties, text: \\'name\\', idValue: \\'id\\', label: \\'contactsubspecialties\\' },\\r\\n\\t\\t\\t\\t\\t\\tcss: { invalid: $parent.showInvalidSubSpecialties() }\"></div>\\r\\n\\t\\t</label>\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<button class=\"span2 btn small color pull-right\" data-bind=\"click: $parent.addContactSubType, enable: $parent.canAddContactSubType\">\\r\\n\\t\\t\\t\\t<i class=\"icon-plus\"></i>\\r\\n\\t\\t\\t\\t<span class=\"pad-left\">Add</span>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- list the lines of ( type /specialty /subspecialty ) here -->\\r\\n\\t\\t<!-- ko foreach: contactSubTypes -->\\r\\n\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t<span class=\"span4\" data-bind=\"text: subTypeName()\"/>\\r\\n\\t\\t\\t\\t<span class=\"span4\" data-bind=\"text: specialtyName()\"/>\\r\\n\\t\\t\\t\\t<span class=\"span3\" data-bind=\"text: subSpecialtyString()\"/>\\r\\n\\t\\t\\t\\t<div class=\"pull-right filters\">\\r\\n\\t\\t\\t\\t\\t<a href=\"#\" data-bind=\"click: $parents[1].removeContactSubType\"><i class=\"icon-cancel red toggle\" title=\"Delete\"></i></a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t\\t<div data-bind=\"visible: !isNew()\">\\r\\n\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t<span class=\"grey\">Created On: \\t</span>\\r\\n\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: createdBy()? createdBy().preferredName : \\'\\'\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: updatedOn\">\\r\\n\\t\\t\\t\\t<span class=\"grey\">Updated On:  </span>\\r\\n\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: updatedBy()? updatedBy().preferredName : \\'\\'\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: dataSource\">\\r\\n\\t\\t\\t\\t<span class=\"grey\" >System:  </span>\\r\\n\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: dataSource\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"line\"></div>\\r\\n\\t\\t<div class=\"line\"></div>\\r\\n\\t</div>\\r\\n\\t\\r\\n    <div class=\"row\" data-bind=\"visible: activeTab() === \\'General\\'\">\\r\\n        <div class=\"span12\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span12\">\\r\\n                    <h4>Communication Modes</h4>\\r\\n                    <ul>\\r\\n                        <li class=\"row pad-top\">\\r\\n                            <strong class=\"span4\">Mode</strong>\\r\\n                            <strong class=\"span4\">Opt-Out?</strong>\\r\\n                            <strong class=\"span4\">Preferred?</strong>\\r\\n                        </li>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: modes -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<strong class=\"span4\" data-bind=\"text: name, attr: { title: name }\"></strong>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"control-group span4\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"css: { \\'checked\\': optOut }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"checkbox\" data-bind=\"clickToggle: optOut\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"control-group span4\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"css: { \\'checked\\': preferred }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"checkbox\" data-bind=\"disable: optOut, clickToggle: preferred\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t</div>                        \\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span6\">\\r\\n                    <h4>Preferred Days of Week</h4>\\r\\n                    <ul class=\"pad-top\">\\r\\n                        <!-- ko foreach: $root.daysOfWeek -->\\r\\n                        <li>\\r\\n                            <label class=\"control-group\">\\r\\n                                <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                    <span data-bind=\"css: { \\'checked\\': ($parent.preferredDaysOfWeek().indexOf(Code) !== -1 || $parent.preferredDaysOfWeek() === \\'Any\\') }\">\\r\\n                                        <input type=\"checkbox\" data-bind=\"clickToggleInArray: $parent.preferredDaysOfWeekIds, setValue: Id\" />\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                                <strong data-bind=\"text: Name, attr: { title: Name }\"></strong>\\r\\n                            </label>\\r\\n                        </li>\\r\\n                        <!-- /ko -->\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <div class=\"span6\">\\r\\n                    <h4>Preferred Times of Day</h4>\\r\\n                    <ul class=\"pad-top\">\\r\\n                        <!-- ko foreach: $root.timesOfDay -->\\r\\n                        <li>\\r\\n                            <label class=\"control-group\">\\r\\n                                <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                    <span data-bind=\"css: { \\'checked\\': ($parent.preferredTimesOfDay().indexOf(name()) !== -1) }\">\\r\\n                                        <input type=\"checkbox\" data-bind=\"clickToggleInArray: $parent.preferredTimesOfDayIds, setValue: id()\" />\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                                <strong data-bind=\"text: name, attr: { title: name }\"></strong>\\r\\n                            </label>\\r\\n                        </li>\\r\\n                        <!-- /ko -->\\r\\n                    </ul>\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t<h4>Time Zone</h4>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span6 pad-top\">\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"row\" data-bind=\"chsnsingle:{ options: $root.timeZones, value: timeZoneId, idValue: \\'id\\', text: \\'name\\', isCancel: true }\"></div>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: activeTab() === \\'Text\\'\">\\r\\n        <ul class=\"list-items\">\\r\\n            <li class=\"row\">\\r\\n                <strong class=\"span2\">Preferred?</strong>\\r\\n                <strong class=\"span10\">Number</strong>\\r\\n            </li>\\r\\n            <li class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                        <span data-bind=\"css: { \\'checked\\': !preferredText() }\">\\r\\n                            <input type=\"radio\" data-bind=\"clickRadio: preferredText, setValue: \\'null\\', disable: textOptedOut\" />\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <strong class=\"span10\"> None</strong>\\r\\n            </li>\\r\\n            <!-- ko foreach: phones -->\\r\\n            <!-- ko if: (isText() && !optOut()) -->\\r\\n            <li class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                        <span data-bind=\"css: { \\'checked\\': textPreferred }\">\\r\\n                            <input type=\"radio\" data-bind=\"clickRadio: $parent.preferredText, setValue: $data, disable: $parent.textOptedOut\" />\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span10\">\\r\\n                    <!-- ko compose: \\'templates/phone.html\\' -->\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n            </li>\\r\\n            <!-- /ko -->\\r\\n            <!-- /ko -->\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: activeTab() === \\'Phone\\'\">\\r\\n\\t\\t<div class=\"row validation-summary\" data-bind=\"if: phoneValidationErrors().length > 0\">            \\r\\n\\t\\t\\t<ul data-bind=\"foreach: phoneValidationErrors\">\\r\\n\\t\\t\\t\\t<li class=\"validation-errors\">\\r\\n\\t\\t\\t\\t\\t<h5 data-bind=\"text: Message\"></h5>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n        <ul class=\"list-items\">\\r\\n            <li class=\"row\">\\r\\n                <strong class=\"span2\">Preferred?</strong>\\r\\n                <strong class=\"span2\">Type</strong>\\r\\n                <strong class=\"span3\">Number</strong>\\r\\n                <strong class=\"span3\">Opt-out?</strong>\\r\\n                <button class=\"span2 btn small color pull-right\" data-bind=\"click: addPhone, disable: phoneOptedOut, attr: { \\'title\\': phoneOptedOut() ? \\'Phone opted out\\' : \\'Add Phone\\' }\">\\r\\n                    <i class=\"icon-plus\"></i>\\r\\n                    <span class=\"pad-left\">Phone</span>\\r\\n                </button>\\r\\n            </li>\\r\\n            <li class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                        <span data-bind=\"css: { \\'checked\\': !preferredPhone() }\">\\r\\n                            <input type=\"radio\" data-bind=\"clickRadio: preferredPhone, disable: phoneOptedOut, setValue: \\'null\\'\" />\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <strong class=\"span10\"> None</strong>\\r\\n            </li>\\r\\n            <!-- ko foreach: phones().sort(function (l, r) { return (l.id() == r.id()) ? (l.id() > r.id() ? 1 : -1) : (l.id() > r.id() ? 1 : -1) }) -->\\r\\n            <li class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                        <span data-bind=\"css: { \\'checked\\': phonePreferred }\">\\r\\n                            <input type=\"radio\" data-bind=\"clickRadio: $parent.preferredPhone, disable: ($parent.phoneOptedOut() || optOut), setValue: $data\" />\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"row\" data-bind=\"visible: $parent.phoneOptedOut, with: type\"><span data-bind=\"text: name, attr: { title: name }\"></span></div>\\r\\n                    <select class=\"row\" data-bind=\"options: $root.phoneTypes, value: typeId, optionsValue: \\'id\\', optionsText: \\'name\\', visible: !$parent.phoneOptedOut()\"></select>\\r\\n                    <!-- <div class=\"row\" data-bind=\"visible: !$parent.phoneOptedOut(), chsnsingle: { options: $root.phoneTypes, value: typeId, idValue: \\'id\\', text: \\'name\\', label: \\'phones\\' }\"></div> -->\\r\\n                </div>\\r\\n                <div class=\"span4\">\\r\\n                    <!-- ko compose: \\'templates/phone.edit.html\\' -->\\r\\n                    <!-- /ko -->\\r\\n                    <label class=\"row\">\\r\\n                        <span>SMS</span>\\r\\n                        <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                            <span data-bind=\"css: { \\'checked\\': isText }\">\\r\\n                                <input type=\"checkbox\" data-bind=\"clickToggle: isText, disable: $parent.phoneOptedOut\" />\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                            <span data-bind=\"css: { \\'checked\\': optOut }\">\\r\\n                                <input type=\"checkbox\" data-bind=\"clickToggle: optOut, disable: $parent.phoneOptedOut\" />\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span1\">\\r\\n                    <div class=\"row\">\\r\\n                        <a href=\"#\" data-bind=\"click: $parent.removePhone\"><i class=\"icon-cancel red\"></i></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n            <!-- /ko -->\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: activeTab() === \\'Email\\'\">\\r\\n        <ul class=\"list-items\">\\r\\n            <li class=\"row\">\\r\\n                <strong class=\"span2\">Preferred?</strong>\\r\\n                <strong class=\"span2\">Type</strong>\\r\\n                <strong class=\"span3\">Email Address</strong>\\r\\n                <strong class=\"span3\">Opt-out?</strong>\\r\\n                <button class=\"span2 btn small color pull-right\" data-bind=\"click: addEmail, disable: emailOptedOut, attr: { \\'title\\': emailOptedOut() ? \\'Email opted out\\' : \\'Add Email\\' }\">\\r\\n                    <i class=\"icon-plus\"></i>\\r\\n                    <span class=\"pad-left\">Email</span>\\r\\n                </button>\\r\\n            </li>\\r\\n            <li class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                        <span data-bind=\"css: { \\'checked\\': !preferredEmail() }\">\\r\\n                            <input type=\"radio\" data-bind=\"clickRadio: preferredEmail, setValue: \\'null\\'\" />\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <strong class=\"span10\"> None</strong>\\r\\n            </li>\\r\\n            <!-- ko foreach: emails().sort(function (l, r) { return (l.id() == r.id()) ? (l.id() > r.id() ? 1 : -1) : (l.id() > r.id() ? 1 : -1) }) -->\\r\\n            <li class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                        <span data-bind=\"css: { \\'checked\\': preferred }\">\\r\\n                            <input type=\"radio\" data-bind=\"clickRadio: $parent.preferredEmail, disable: ($parent.emailOptedOut() || optOut), setValue: $data\" />\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span2\" data-bind=\"visible: $parent.emailOptedOut, with: type\"><span data-bind=\"text: name, attr: { title: name }\"></span></div>\\r\\n                    <select class=\"span2\" data-bind=\"options: $root.emailTypes, value: typeId, optionsValue: \\'id\\', optionsText: \\'name\\', visible: !$parent.emailOptedOut()\"></select>\\r\\n                <div class=\"span4\">\\r\\n                    <!-- ko compose: \\'templates/email.edit.html\\' -->\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                            <span data-bind=\"css: { \\'checked\\': optOut }\">\\r\\n                                <input type=\"checkbox\" data-bind=\"clickToggle: optOut, disable: $parent.emailOptedOut\" />\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span1\">\\r\\n                    <div class=\"row\">\\r\\n                        <a href=\"#\" data-bind=\"click: $parent.removeEmail\"><i class=\"icon-cancel red\"></i></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n            <!-- /ko -->\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: activeTab() === \\'Address\\'\">\\r\\n        <ul class=\"list-items\">\\r\\n            <li class=\"row\">\\r\\n                <strong class=\"span2\">Preferred?</strong>\\r\\n                <strong class=\"span3\">Type</strong>\\r\\n                <strong class=\"span3\">Address</strong>\\r\\n                <strong class=\"span2\">Opt-out?</strong>\\r\\n                <button class=\"span2 btn small color pull-right\" data-bind=\"click: addAddress, disable: addressOptedOut, attr: { \\'title\\': addressOptedOut() ? \\'Address opted out\\' : \\'Add Address\\' }\">\\r\\n                    <i class=\"icon-plus\"></i>\\r\\n                    <span class=\"pad-left\">Address</span>\\r\\n                </button>\\r\\n            </li>\\r\\n            <li class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                        <span data-bind=\"css: { \\'checked\\': !preferredAddress() }\">\\r\\n                            <input type=\"radio\" data-bind=\"clickRadio: preferredAddress, disable: addressOptedOut, setValue: \\'null\\'\" />\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <strong class=\"span10\"> None</strong>\\r\\n            </li>\\r\\n            <!-- ko foreach: addresses -->\\r\\n            <li class=\"row\">\\r\\n                <div class=\"span2\">\\r\\n                    <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                        <span data-bind=\"css: { \\'checked\\': preferred }\">\\r\\n                            <input type=\"radio\" data-bind=\"clickRadio: $parent.preferredAddress, disable: ( $parent.addressOptedOut() || optOut), setValue: $data\" />\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span2\" data-bind=\"visible: $parent.addressOptedOut, with: type\"><span data-bind=\"text: name, attr: { title: name }\"></span></div>\\r\\n                <select class=\"span2\" data-bind=\"options: $root.addressTypes, value: typeId, optionsValue: \\'id\\', optionsText: \\'name\\', visible: !$parent.addressOptedOut()\"></select>\\r\\n                <div class=\"span5\">\\r\\n                    <!-- ko compose: \\'templates/address.edit.html\\' -->\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n                <div class=\"span1\">\\r\\n                    <div class=\"row\">\\r\\n                        <div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                            <span data-bind=\"css: { \\'checked\\': optOut }\">\\r\\n                                <input type=\"checkbox\" data-bind=\"clickToggle: optOut, disable: $parent.addressOptedOut\" />\\r\\n                            </span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"span1\">\\r\\n                    <div class=\"row\">\\r\\n                        <a href=\"#\" data-bind=\"click: $parent.removeAddress\"><i class=\"icon-cancel red\"></i></a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n            <!-- /ko -->\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: activeTab() === \\'Language\\'\">\\r\\n\\t\\t<div class=\"row validation-summary\" data-bind=\"if: languageValidationErrors().length > 0\">            \\r\\n\\t\\t\\t<ul data-bind=\"foreach: languageValidationErrors\">\\r\\n\\t\\t\\t\\t<li class=\"validation-errors\">\\r\\n\\t\\t\\t\\t\\t<h5 data-bind=\"text: Message\"></h5>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n        <div class=\"span12\">\\r\\n            <div class=\"row\">\\r\\n                <div class=\"span12\">\\r\\n                    <h4>Add new spoken language</h4>\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <div class=\"span3\" data-bind=\"chsnsingle: { options: $root.languages, value: newLanguage, text: \\'name\\', label: \\'languages\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<label class=\"span2\"></label>\\r\\n                        <button class=\"span3 btn small color pull-right\" data-bind=\"click: addLanguage, enable: canAddLanguage\">\\r\\n                            <i class=\"icon-plus\"></i>\\r\\n                            <span class=\"pad-left\">Language</span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row\">\\r\\n                <ul class=\"list-items\">\\r\\n                    <li class=\"row\">\\r\\n                        <strong class=\"span2\">Preferred?</strong>\\r\\n                        <strong class=\"span10\">Language</strong>\\r\\n                    </li>\\r\\n                    <li class=\"row\">\\r\\n                        <div class=\"span2\">\\r\\n                            <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                <span data-bind=\"css: { \\'checked\\': !preferredLanguage() }\">\\r\\n                                    <input type=\"radio\" data-bind=\"clickRadio: preferredLanguage, setValue: \\'null\\'\" />\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <strong class=\"span10\"> None</strong>\\r\\n                    </li>\\r\\n                    <!-- ko foreach: languages -->\\r\\n                    <li class=\"row\">\\r\\n                        <div class=\"span2\">\\r\\n                            <div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n                                <span data-bind=\"css: { \\'checked\\': preferred }\">\\r\\n                                    <input type=\"radio\" data-bind=\"clickRadio: $parent.preferredLanguage, setValue: $data\" />\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\"span10\">\\r\\n                            <strong data-bind=\"text: name, attr: { title: name }\"></strong>\\r\\n                        </div>\\r\\n                    </li>\\r\\n                    <!-- /ko -->\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/datetimepicker.html',[],function () { return '<div>\\r\\n\\t<div data-bind=\"if: showDate, attr: {class: dateCss}\">\\t\\r\\n\\t\\t<input \\r\\n\\t\\t\\tdata-bind=\"value: dateStr, valueUpdate: \\'afterkeydown\\', \\r\\n\\t\\t\\t\\t\\tcss: { \\'invalid\\': (dateErrors().length > 0) || showInvalid, \\'datepicker\\': isDatepicker }, \\r\\n\\t\\t\\t\\t\\tdatepickerOptions: datepickerOptions,\\r\\n\\t\\t\\t\\t\\tattr:{ name: dateName }\" type=\"text\">\\t\\t\\r\\n\\t</div>\\r\\n\\t<div data-bind=\"if: showTime, attr: {class: timeCss}\">\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t<!-- ko if: Modernizr.inputtypes.time -->\\t\\t\\t\\r\\n\\t\\t\\t<input data-bind=\"value: timeStr, valueUpdate: [\\'afterkeydown\\', \\'input\\'], attr: { \\'disabled\\': disableTime }, attr:{ name: timeName }, \\r\\n\\t\\t\\t\\t\\t\\tcss: {\\'invalid\\': showInvalidTime}\" type=\"time\" style=\"height: 20px; width: 100%\">\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t\\t<!-- ko ifnot: Modernizr.inputtypes.time -->\\r\\n\\t\\t\\t<input data-bind=\"jqtimepicker: {observableDateTime: observableDateTime, showDate: showDate }, \\r\\n\\t\\t\\t\\t\\tattr: { \\'disabled\\': isDisableTime, name: timeName }, css: {\\'invalid\\': showInvalidTime}\" \\r\\n\\t\\t\\t\\t\\ttype=\"text\" style=\"height: 20px; width: 100%\">\\t\\t\\t\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/email.edit.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"span2\">\\r\\n        <i class=\"icon-email blue\"></i>\\r\\n    </div>\\r\\n    <div class=\"span10 ellipsis short\">\\r\\n        <div class=\"row\">\\r\\n            <input data-bind=\"value: text, disable: $parent.emailOptedOut\" placeholder=\"email\" />\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/email.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"span2\">\\r\\n        <i class=\"icon-email lighterblue\"></i>\\r\\n    </div>\\r\\n    <div class=\"span10 ellipsis line short\">\\r\\n        <div class=\"row\">\\r\\n            <span class=\"span12 ellipsis\" data-bind=\"text: text, attr: { title: text }\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/event.details.html',[],function () { return '<div class=\"body\" data-bind=\"with: event\">\\r\\n\\t<div class=\"column\">\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\r\\n\\t\\t\\t<!-- ko if ($parent.hasTimes) -->\\r\\n\\t\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t\\t<span>Date and Time: </span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"text: timeString()\"></div>\\r\\n\\t\\t\\t<!-- /ko -->\\t\\t\\t\\r\\n\\t\\t\\t<!-- ko ifnot ($parent.hasTimes) -->\\r\\n\\t\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t\\t<span>Date: </span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span9\" data-bind=\"DateOrNothing: start\"></div>\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t<span>Individual:\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n      \\t<div class=\"span9\" data-bind=\"text: patientName\"></div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t<span>Assigned to:\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n      \\t<div class=\"span9\" data-bind=\"text: assignedToName\"></div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t<span>Title:\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n  \\t\\t<span class=\"span9\" data-bind=\"text: title\"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t<span>All day?:\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n  \\t\\t<span class=\"span9\" data-bind=\"text: allDay() ? \\'Yes\\' : \\'No\\'\"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t<button class=\"btn color\" data-bind=\"text: $parent.btnMsg, click: $parent.gotoSource, enable: $parent.hasPatient\"></button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/focusproblem.edit.html',[],function () { return '<div class=\"row pad-top divider\">\\r\\n\\t<div class=\"span3\" data-bind=\"text: name\"></div>\\r\\n\\t<div class=\"span2\">\\r\\n\\t\\t<select data-bind=\"options: $parent.observationDisplays, value: displayId, optionsText: \\'name\\', optionsValue: \\'id\\'\"></select>\\r\\n\\t</div>\\r\\n\\t<div class=\"span3\">\\r\\n\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tobservableDateTime: startDate, dateErrors: startDateErrors, showInvalid: setInvalidStartDate, \\r\\n\\t\\t\\t\\tmaxDate: \\'today\\', datepickerOptions:{ maxDate: \\'+0\\' }, datepickerDynamicOptions: {}, dateName: \\'startDate\\'\\r\\n\\t\\t\\t}\\r\\n\\t\\t} -->\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t</div>\\r\\n\\t<div class=\"span3\">\\r\\n\\t\\t<select data-bind=\"options: $parent.observationStates, value: stateId, optionsText: \\'name\\', optionsValue: \\'id\\', attr: { \\'disabled\\': isNew }\"></select>\\r\\n\\t</div>\\r\\n\\t<div class=\"span1\">\\r\\n    <a href=\"#\" data-bind=\"click: $parent.deleteFocusProblem, clickBubble: false\"><i class=\"icon-cancel red\"></i></a>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/focusproblems.html',[],function () { return '<div class=\"body\" data-bind=\"visible: showing\">\\r\\n\\t<div class=\"pad-vertical\">\\r\\n        <!-- ko compose: { model: \\'viewmodels/patients/sections/additional.problem.observations\\', activationData: { selectedPatient: selectedPatient } } -->\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t</div>\\r\\n\\t<div class=\"pad-vertical\">\\r\\n\\t\\t<!-- ko compose: { model: \\'viewmodels/patients/sections/problems.list\\', activationData: { selectedPatient: selectedPatient} } -->\\r\\n\\t\\t<!-- /ko -->\\r\\n\\t</div>\\r\\n\\t<section class=\"accordion\" data-bind=\"visible: showActions\">\\r\\n\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t<div class=\"accordion-content columns\">\\r\\n\\t\\t\\t\\t<div class=\"column\">\\r\\n\\t\\t\\t\\t\\t<form>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"pad vertical\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"position bottom right\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button data-bind=\"click: cancelFocusProblems\" class=\"cancel small\">Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button data-bind=\"click: saveFocusProblems\" class=\"small color\">Save</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</section>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/forcephone.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"span2\">\\r\\n        <i class=\"icon-phone blue\"></i>\\r\\n    </div>\\r\\n    <div class=\"span10 ellipsis line short\">\\r\\n        <div class=\"row\">\\r\\n            <span data-bind=\"text: optOut() ? \\'<Number opted out>\\' : formattedNumber, attr: { title: formattedNumber }\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/goal.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: goal\">\\r\\n    <div class=\"column\">\\r\\n        <section class=\"accordion\">\\r\\n            <div class=\"row accordion-toggle\">\\r\\n            </div>\\r\\n            <div class=\"accordion-content\">\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-right\">\\r\\n                        <span class=\"grey\">Description</span>\\r\\n                    </div>\\r\\n                    <div class=\"span9\">\\r\\n                        <input data-bind=\"value: name, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"255\" type=\"text\" />\\r\\n                        <span><em class=\"grey\" data-bind=\"visible: !name()\">Description is required</em></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-right\">\\r\\n                        <span class=\"grey\">Focus Area(s)</span>\\r\\n                    </div>\\r\\n                    <div class=\"span6\" data-bind=\"multiselect: { options: $parent.focusAreas, values: focusAreaIds, idValue: \\'id\\', text: \\'name\\', label: \\'focusAreas\\', stringValue: focusAreaString }\"></div>\\r\\n                </div>\\r\\n                <div class=\"row pad-top\">\\r\\n                    <div class=\"span3 align-right\">\\r\\n                        <span class=\"grey\">Program(s)</span>\\r\\n                    </div>\\r\\n                    <div class=\"span6\" data-bind=\"multiselect: { options: $parent.availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString }\"></div>\\r\\n                </div>\\r\\n                <div class=\"row pad-vertical\">\\r\\n                    <div class=\"span3 align-right\">\\r\\n                        <span class=\"grey\">Source</span>\\r\\n                    </div>\\r\\n                    <div class=\"span3\" data-bind=\"if: $parent.sources\">\\r\\n                        <div data-bind=\"chsnsingle: { options: $parent.sources, value: source, text: \\'name\\', label: \\'sources\\' }\"></div>\\r\\n                        <span>\\r\\n                            <em class=\"grey\" data-bind=\"visible: !source()\">Goal source is required</em>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </section>\\r\\n        <section class=\"accordion\">\\r\\n            <div class=\"row accordion-toggle\">\\r\\n                <h4>Attributes</h4>\\r\\n            </div>\\r\\n            <div class=\"accordion-content\">\\r\\n                <div class=\"column\">\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <div class=\"span3 align-right\">\\r\\n                            <span class=\"grey\">Type</span>\\r\\n                        </div>\\r\\n                        <div class=\"span3\">\\r\\n                            <div data-bind=\"chsnsingle: { options: $parent.goalTypes, value: type, text: \\'name\\', label: \\'goaltypes\\' }\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <div class=\"span3 align-right\">\\r\\n                            <span class=\"grey\">Status</span>\\r\\n                        </div>\\r\\n                        <div class=\"span3\">\\r\\n                            <div data-bind=\"chsnsingle: { options: $parent.goalTaskStatuses, value: status, text: \\'name\\', label: \\'goaltypes\\', disabled: isNew() }\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <div class=\"span3 align-right\">\\r\\n                            <span class=\"grey\">Start Date</span>\\r\\n                        </div>\\r\\n                        <div class=\"span6\">\\r\\n                            <input data-bind=\"datepicker: startDate, datepickerOptions: { }\" type=\"text\" class=\"datepicker\">\\r\\n                        </div>\\r\\n                        <div class=\"span3\"></div>\\r\\n                    </div>\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <div class=\"span3 align-right\">\\r\\n                            <span class=\"grey\">Target Value</span>\\r\\n                        </div>\\r\\n                        <div class=\"span9\">\\r\\n                            <input data-bind=\"value: targetValue\" maxlength=\"255\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <div class=\"span3 align-right\">\\r\\n                            <span class=\"grey\">Target Date</span>\\r\\n                        </div>\\r\\n                        <div class=\"span6\">\\r\\n                            <input data-bind=\"datepicker: targetDate, datepickerOptions: { }\" type=\"text\" class=\"datepicker\">\\r\\n                        </div>\\r\\n                        <div class=\"span3\"></div>\\r\\n                    </div>\\r\\n                    <div class=\"row pad-top\">\\r\\n                        <div class=\"span3 align-right\">\\r\\n                            <span class=\"grey\">End Date</span>\\r\\n                        </div>\\r\\n                        <div class=\"span6\">\\r\\n                            <input data-bind=\"datepicker: endDate, datepickerOptions: { }\" type=\"text\" class=\"datepicker\">\\r\\n                        </div>\\r\\n                        <div class=\"span3\"></div>\\r\\n                    </div>\\r\\n                    <!-- ko foreach: customAttributes().sort($parent.alphabeticalOrderSort) -->\\r\\n                    <!-- ko compose: path -->\\r\\n                    <!-- /ko -->\\r\\n                    <!-- /ko -->\\r\\n                </div>\\r\\n            </div>\\t\\t\\t\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"row pad-top filter-toggle\" data-bind=\"click: $parent.toggleOpen, visible: details\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Existing Details</h5>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"visible: (!($parent.existingDetailsOpen())), text: \\'...\\'\"></span>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<pre data-bind=\"text: details, visible: $parent.existingDetailsOpen\" ></pre>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">New Details</h5>\\r\\n\\t\\t\\t\\t\\t<textarea data-bind=\"value: newDetails, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"5000\" type=\"text\" style=\"height: 10em; resize: both;\"></textarea>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/intervention.assignedto.html',[],function () { return '<div>\\r\\n\\t<div class=\"ellipsis\" data-bind=\"if: assignedToId()\">\\r\\n\\t    <span data-bind=\"text: assignedTo().preferredName, attr: { title: assignedTo().preferredName }\"></span>\\r\\n\\t</div>\\r\\n\\t<div data-bind=\"ifnot: assignedToId\">\\r\\n\\t\\t<span>-</span>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/intervention.category.html',[],function () { return '<div class=\"ellipsis\">\\r\\n    <span data-bind=\"with: category\">\\r\\n        <span data-bind=\"text: name, attr: { title: name }\"></span>\\r\\n    </span>\\r\\n    <div data-bind=\"ifnot: category\">\\r\\n    \\t<span>-</span>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/intervention.closeddate.html',[],function () { return '<span data-bind=\"DateOrDash: closedDate\"></span>';});\n\n","\ndefine('text!views/templates/intervention.description.html',[],function () { return '<a class=\"edit\" href=\"#\" data-bind=\"text: (description() ? description() : \\'-\\'), click: edit, attr: { title: description }\">\\r\\n</a>';});\n\n","\ndefine('text!views/templates/intervention.duedate.html',[],function () { return '<span data-bind=\"DateOrDash: dueDate\"></span>';});\n\n","\ndefine('text!views/templates/intervention.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: intervention\" style=\"min-height: 400px;\">\\r\\n    <div class=\"column\">\\r\\n        <section class=\"data-set clearfix\">\\r\\n\\t\\t\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Description</span>\\r\\n                </div>\\r\\n                <div class=\"span7\">\\r\\n                    <input data-bind=\"value: description, valueUpdate: \\'afterkeydown\\', css: {\\'invalid\\': (validationErrorsArray().indexOf(\\'description\\') !== -1) }\" class=\"string optional\" maxlength=\"500\" type=\"text\" />                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Status</span>\\r\\n                </div>\\r\\n                <div class=\"span3\">\\r\\n                    <div data-bind=\"chsnsingle: { options: $parent.interventionStatuses, value: status, text: \\'name\\', label: \\'interventionstatuses\\', disabled: $parent.isNew() }\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Due Date</span>\\r\\n                </div>\\r\\n                <div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\tobservableDateTime: dueDate, dateErrors: dueDateErrors, showInvalid: $parent.setInvalidDueDate, \\r\\n\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{}, datepickerDynamicOptions: {}, dateName: \\'dueDate\\'\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->                    \\r\\n                </div>\\r\\n                <div class=\"span3\"></div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Start Date</span>\\r\\n                </div>\\r\\n                <div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\tobservableDateTime: startDate, dateErrors: startDateErrors, showInvalid: $parent.setInvalidStartDate, \\r\\n\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{}, datepickerDynamicOptions: {}, dateName: \\'startDate\\'\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t<!-- /ko -->                    \\r\\n                </div>\\r\\n                <div class=\"span3\"></div>\\r\\n            </div>\\r\\n\\t\\t\\t\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Category</span>\\r\\n                </div>\\r\\n                <div class=\"span3\">\\r\\n                    <div data-bind=\"chsnsingle: { options: $parent.interventionCategories, value: category, text: \\'name\\', label: \\'interventioncategories\\' }\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Assigned To</span>\\r\\n                </div>\\r\\n                <div class=\"span9\">\\r\\n                    <input class=\"span12\" type=\"text\" data-bind=\"typeahead: { name: \\'assignedToIdTypeAhead\\', taOptions: $parent.careManagersBloodhound, displayKey: \\'preferredName\\'}, value: $parent.assignedToDisplay, initOptions: { minLength: 3 }\" placeholder=\"Enter name\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Associated Barrier(s)</span>\\r\\n                </div>\\r\\n                <!-- ko if: goal -->\\r\\n                <div class=\"span6\" data-bind=\"multiselect: { options: $parent.computedBarriers, values: barrierIds, idValue: \\'id\\', text: \\'name\\', label: \\'barriers\\', stringValue: barrierString }\"></div>\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: !goal() -->\\r\\n                <span class=\"span9\">No barriers</span>\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"row pad-top filter-toggle\" data-bind=\"click: $parent.toggleOpen, visible: details\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Existing Details</h5>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"visible: (!($parent.existingDetailsOpen())), text: \\'...\\'\"></span>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<pre data-bind=\"text: details, visible: $parent.existingDetailsOpen\" ></pre>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">New Details</h5>\\r\\n\\t\\t\\t\\t\\t<textarea data-bind=\"value: newDetails, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"5000\" type=\"text\" style=\"height: 10em; resize: both;\"></textarea>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/intervention.goal.html',[],function () { return '<div class=\"ellipsis\">\\r\\n\\t<span data-bind=\"if: computedGoalName()\">\\r\\n\\t    <a href=\"#\" data-bind=\"text: computedGoalName, click: gotoGoal, attr: { title: computedGoalName }\"></a>\\r\\n\\t</span>\\r\\n\\t<!-- ko ifnot: computedGoalName() -->\\r\\n\\t\\t<span>-</span>\\r\\n\\t<!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/templates/intervention.panel.html',[],function () { return '<div class=\"panel-wrapper\">\\r\\n    <div class=\"row\">\\r\\n        <!-- ko foreach: columns -->\\r\\n        <div class=\"grey hover-parent\" data-bind=\"css: cssClass\">\\r\\n            <span data-bind=\"text: displayName\"></span>\\r\\n            <!-- ko if: $parent.canSort -->\\r\\n                <i class=\"pull-right filter-toggle pad-right \" data-bind=\"click: $parent.toggleSort, css: ($parent.selectedSortColumn() === sortProperty ? \\'fa fa-caret-up\\' : ($parent.selectedSortColumn() === sortProperty + \\' desc\\' ? \\'fa fa-caret-down\\' : \\'\\'))\"></i>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if: ($parent.canSort && ($parent.selectedSortColumn() !== sortProperty && $parent.selectedSortColumn() !== sortProperty + \\' desc\\'))  -->\\r\\n                <i class=\"pull-right hover-show fa fa-caret-up filter-toggle pad-right\" data-bind=\"click: $parent.toggleSort\"></i>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n        <!-- /ko  -->\\r\\n    </div>\\r\\n    <div data-bind=\"foreach: computedInterventions\">\\r\\n        <div class=\"row divider\" data-bind=\"foreach: $parent.columns\">\\r\\n            <div class=\"ellipsis\" data-bind=\"compose: { model: $parent, view: path }, css: cssClass\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: computedInterventions().length === 0\">\\r\\n        <em>No data meets your filter criteria</em>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/intervention.patient.html',[],function () { return '<div class=\"ellipsis\">\\r\\n\\t<span data-bind=\"if: computedPatient()\">\\r\\n\\t    <a data-bind=\"text: computedPatient().fullLastName() +\\', \\' + computedPatient().fullFirstName(), attr: { href: \\'#patients/\\' + computedPatient().id(), title: computedPatient().fullLastName() +\\', \\' + computedPatient().fullFirstName() }\"></a>\\r\\n\\t</span>\\r\\n\\t<!-- ko ifnot: computedPatient() -->\\r\\n\\t\\t<span>-</span>\\r\\n\\t<!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/templates/intervention.startdate.html',[],function () { return '<span data-bind=\"DateOrDash: startDate\"></span>';});\n\n","\ndefine('text!views/templates/intervention.status.html',[],function () { return '<i data-bind=\"css: status().iconClass\"></i>';});\n\n","\ndefine('text!views/templates/language.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"span2 grey\">Language</div>\\r\\n    <div class=\"span8\" data-bind=\"text: name, attr: { title: name }\"></div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/medication.expand.html',[],function () { return '<a class=\"toggle\" href=\"#\" data-bind=\"clickToggle: isExpanded\"><i data-bind=\"css: isExpanded() ? \\'icon-single-chevron-up\\' : \\'icon-angle-double-down\\'\"></i></a>';});\n\n","\ndefine('text!views/templates/medication.groups.panel.html',[],function () { return '<div class=\"panel-wrapper\">\\r\\n    <div class=\"row\">\\r\\n        <div class=\"grey hover-parent span1\">\\r\\n            <span></span>\\r\\n        </div>\\r\\n        <div class=\"grey hover-parent span6\">\\r\\n            <span>Medication</span>\\r\\n        </div>\\r\\n        <div class=\"grey hover-parent span2\">\\r\\n            <span>Date</span>\\r\\n        </div>\\r\\n        <div class=\"grey hover-parent span2\">\\r\\n            <span>Status</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div data-bind=\"foreach: computedMedicationGroups\">\\r\\n        <div class=\"row divider filter-toggle\" data-bind=\"css: { \\'active\\': $parent.activeMedication() === firstMedication() }\">\\r\\n            <div class=\"span1 ellipsis filters\" data-bind=\"with: firstMedication\">\\r\\n                <a class=\"toggle\" href=\"#\" data-bind=\"clickToggle: $parent.isExpanded\"><i data-bind=\"css: $parent.isExpanded() ? \\'icon-single-chevron-up\\' : \\'icon-angle-double-down\\'\"></i></a>\\r\\n            </div>\\r\\n            <div class=\"span6 ellipsis\" data-bind=\"with: firstMedication\">\\r\\n                <a class=\"edit\" href=\"#\" data-bind=\"click: setActiveMedication, attr: { title: computedDisplayName }\">\\r\\n                    <pre data-bind=\"text: (computedDisplayName() ? computedDisplayName() : \\'-\\')\"></pre>\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\"span2 ellipsis\" data-bind=\"with: firstMedication\">\\r\\n                <span data-bind=\"DateOrDash: medSortDate\"></span>\\r\\n            </div>\\r\\n            <div class=\"span2 ellipsis\" data-bind=\"with: firstMedication\">\\r\\n                <!-- ko with: status -->\\r\\n                    <span class=\"pull-left filters\" data-bind=\"if: id() === \\'1\\'\">\\r\\n                        <a href=\"#\" data-bind=\"click: $parent.inactivate\"><i class=\"icon-checkbox-on blue toggle\" title=\"Deactivate\"></i></a>\\r\\n                    </span>\\r\\n                    <div class=\"pull-left filters\" data-bind=\"if: id() === \\'2\\'\">\\r\\n                        <a href=\"#\" data-bind=\"click: $parent.activatePatientMedication\"><i class=\"icon-checkbox-off blue toggle\" title=\"Activate\"></i></a>\\r\\n                    </div>\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <div data-bind=\"foreach: sortedMedications, visible: isExpanded\">\\r\\n            <!-- ko if: $data !== $parent.firstMedication() -->\\r\\n                <div class=\"row divider filter-toggle\" data-bind=\"css: { \\'active\\': $parents[1].activeMedication() === $data }\">\\r\\n                    <div class=\"span1 ellipsis filters\">\\r\\n                        &nbsp;\\r\\n                    </div>\\r\\n                    <div class=\"span6 ellipsis\">\\r\\n                        <a class=\"edit\" href=\"#\" data-bind=\"click: setActiveMedication, attr: { title: computedDisplayName }\">\\r\\n                            <pre data-bind=\"text: (computedDisplayName() ? computedDisplayName() : \\'-\\')\"></pre>\\r\\n                        </a>\\r\\n                    </div>\\r\\n                    <div class=\"span2 ellipsis\">\\r\\n                        <span data-bind=\"DateOrDash: medSortDate\"></span>\\r\\n                    </div>\\r\\n                    <div class=\"span2 ellipsis\">\\r\\n                        <!-- ko with: status -->\\r\\n                            <span class=\"pull-left filters\" data-bind=\"if: id() === \\'1\\'\">\\r\\n                                <a href=\"#\" data-bind=\"click: $parent.inactivate\"><i class=\"icon-checkbox-on blue toggle\" title=\"Deactivate\"></i></a>\\r\\n                            </span>\\r\\n                            <div class=\"pull-left filters\" data-bind=\"if: id() === \\'2\\'\">\\r\\n                                <a href=\"#\" data-bind=\"click: $parent.activatePatientMedication\"><i class=\"icon-checkbox-off blue toggle\" title=\"Activate\"></i></a>\\r\\n                            </div>\\r\\n                        <!-- /ko -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if: $parent.sortedMedications().length === 1 -->\\r\\n                <em>No additional medications</em>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: computedMedicationGroups().length === 0\">\\r\\n        <em>No data meets your filter criteria</em>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/templates/medication.name.html',[],function () { return '<a class=\"edit\" href=\"#\" data-bind=\"click: setActiveMedication, attr: { title: computedDisplayName }\">\\r\\n    <pre data-bind=\"text: (computedDisplayName() ? computedDisplayName() : \\'-\\')\"></pre>\\r\\n</a>\\r\\n';});\n\n","\ndefine('text!views/templates/medication.reason.html',[],function () { return '<div class=\"ellipsis\">\\r\\n    <span data-bind=\"with: reason\">\\r\\n        <span data-bind=\"text: $data, attr: { title: $data }\"></span>\\r\\n    </span>\\r\\n    <div data-bind=\"ifnot: reason\">\\r\\n    \\t<span>-</span>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/medication.sortdate.html',[],function () { return '<span data-bind=\"DateOrDash: medSortDate\"></span>';});\n\n","\ndefine('text!views/templates/medication.startdate.html',[],function () { return '<span data-bind=\"DateOrDash: startDate\"></span>';});\n\n","\ndefine('text!views/templates/medication.status.html',[],function () { return '<div class=\"ellipsis\" data-bind=\"with: status\">\\r\\n    <span class=\"pull-left filters\" data-bind=\"if: id() === \\'1\\'\">\\r\\n    \\t<a href=\"#\" data-bind=\"click: $parent.inactivate\"><i class=\"icon-checkbox-on blue toggle\" title=\"Deactivate\"></i></a>\\r\\n    </span>\\r\\n    <div class=\"pull-left filters\" data-bind=\"if: id() === \\'2\\'\">\\r\\n\\t\\t<a href=\"#\" data-bind=\"click: $parent.activatePatientMedication\"><i class=\"icon-checkbox-off blue toggle\" title=\"Activate\"></i></a>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/medication.strength.html',[],function () { return '<div>\\r\\n\\t <span data-bind=\"StringOrDash: strength, attr:{title: strength, class: \\'ellipsis\\', style: \\'display: block;\\'}\">\\r\\n    </span>\\r\\n\\t\\r\\n</div>';});\n\n","\ndefine('text!views/templates/medication.type.html',[],function () { return '<div>\\r\\n\\t<!-- ko with: type -->\\r\\n    <i data-bind=\"css: name().toLowerCase() === \\'otc\\' ? \\'icon-otc\\' : \\'icon-rx\\'\">\\r\\n    </i>\\r\\n    <!-- /ko -->\\r\\n\\t<!-- ko if: !type() -->\\r\\n    <span>\\r\\n    \\t&nbsp\\r\\n    </span>\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/templates/medications.panel.html',[],function () { return '<div class=\"panel-wrapper\">\\r\\n    <div class=\"row\">\\r\\n        <!-- ko foreach: columns -->\\r\\n        <div class=\"grey hover-parent\" data-bind=\"css: cssClass\">\\r\\n            <span data-bind=\"text: displayName\"></span>\\r\\n            <!-- ko if: $parent.canSort && canSort -->\\r\\n            <i class=\"pull-right filter-toggle pad-right \" data-bind=\"click: $parent.toggleSort, css: ($parent.selectedSortColumn() === sortProperty ? \\'fa fa-caret-up\\' : ($parent.selectedSortColumn() === sortProperty + \\' desc\\' ? \\'fa fa-caret-down\\' : \\'\\'))\"></i>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if: ($parent.canSort  && canSort && ($parent.selectedSortColumn() !== sortProperty && $parent.selectedSortColumn() !== sortProperty + \\' desc\\'))  -->\\r\\n            <i class=\"pull-right hover-show fa fa-caret-up filter-toggle pad-right\" data-bind=\"click: $parent.toggleSort\"></i>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n        <!-- /ko  -->\\r\\n    </div>\\r\\n    <div data-bind=\"foreach: computedMedications\">\\r\\n        <div class=\"row divider filter-toggle\" data-bind=\"foreach: $parent.columns, css: { \\'active\\': $parent.activeMedication() === $data }\">\\r\\n            <div data-bind=\"compose: { model: $parent, view: path }, css: cssClass\"></div>\\r\\n        </div>\\r\\n        <div class=\"row pad allergydtl muted toggle\" data-bind=\"visible: isExpanded\">\\r\\n            <div class=\"row pad-top\">\\r\\n                <strong>Groupings go here</strong>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: computedMedications().length === 0\">\\r\\n        <em>No data meets your filter criteria</em>\\r\\n    </div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/templates/module.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: module\">\\r\\n\\t<div class=\"column\">\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n      <div class=\"span9\" data-bind=\"DateOrNothing: assignDate\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned By:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n      <div class=\"span9\" data-bind=\"with: assignBy\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned To:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span5\">\\r\\n\\t\\t\\t\\t<input class=\"span12\" type=\"text\" data-bind=\"typeahead: { name: \\'assignedToIdTypeAhead\\', taOptions: $parent.careManagersBloodhound, displayKey: \\'preferredName\\'}, value: $parent.assignToDisplay, initOptions: { minLength: 3 }\" placeholder=\"Enter name\" />\\r\\n        <!-- <select data-bind=\"options: $parent.careManagers, value: assignToId, optionsText: \\'preferredName\\', optionsValue: \\'id\\'\"></div> -->\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span4\">\\r\\n\\t\\t\\t\\t<button class=\"button small warning\" data-bind=\"enable: assignToId(), click: $parent.removeAssignment\">Remove Assignment</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- <div class=\"row pad-top divider\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Action Status:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t<select style=\"display: none;\">\\r\\n\\t\\t\\t\\t\\t<option>In Progress\\t</option>\\r\\n\\t\\t\\t\\t\\t<option>Not Started</option>\\r\\n\\t\\t\\t\\t\\t<option>Closed</option>\\r\\n\\t\\t\\t\\t\\t<option>Removed </option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t\\t<span>Reason:\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<textarea>\\r\\n\\t\\t\\t\\t\\t</textarea>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Start Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<input class=\"datepicker\" type=\"text\" value=\"03/15/2014\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>End Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<input class=\"datepicker\" type=\"text\" id=\"dp1401893998028\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div> -->\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/note.general.details.html',[],function () { return '<div data-bind=\"visible: (type().name().toLowerCase() !== \\'utilization\\' && type().name().toLowerCase() !== \\'touchpoint\\')\">\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<strong>Content:</strong>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<textarea readonly=\"readonly\" class=\"display-only span12\" data-bind=\"text: text, autoHeight: text, attr: { \\'title\\': text }\"></textarea>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top divider\"></div>\\r\\n\\t<div data-bind=\"if: duration\">\\r\\n\\t\\t<div class=\"row pad-top\" >\\r\\n\\t\\t\\t<strong class=\"span3\">Duration:</strong>\\r\\n\\t\\t\\t<span class=\"pad-top\" data-bind=\"text: duration\"></span> minutes\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> ';});\n\n","\ndefine('text!views/templates/note.general.edit.html',[],function () { return '<div data-bind=\"with: note\">\\r\\n  <div class=\"column\">\\r\\n    <section class=\"accordion\">\\r\\n      <div class=\"row accordion-toggle\">\\r\\n      </div>\\r\\n      <div class=\"accordion-content\">\\r\\n\\t\\t\\t<div>  \\r\\n                <h5 class=\"grey pad-bottom\">Duration</h5>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span1\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\"text\" data-bind=\"value: duration, valueUpdate: \\'afterkeydown\\', numeric: duration, \\r\\n\\t\\t\\t\\t\\t\\t\\tattr:{maxlength: 4, max: 1440, min: 1, title:\\'Duration: enter a number of minutes from 1 to 1440\\'},\\r\\n\\t\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'duration\\') !== -1) }\"></input>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<span class=\"span2 grey align-left\"> minutes</span>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top filter-toggle\" data-bind=\"click: $parent.toggleOpen\">\\r\\n\\t\\t\\t\\t<h5 class=\"grey\">Existing Content</h5>\\r\\n\\t\\t\\t\\t<span data-bind=\"visible: (!($parent.existingContentOpen())), text: \\'...\\'\"></span>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<pre data-bind=\"text: text, visible: $parent.existingContentOpen\" class=\"pad-top\"></pre>\\r\\n\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">New Content</h5>\\r\\n\\t\\t\\t\\t<textarea data-bind=\"value: newContent, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'text\\') !== -1) }\" class=\"string optional\" maxlength=\"5000\" type=\"text\" style=\"height: 150px; resize: both;\"></textarea>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t  <div class=\"span6\">\\r\\n\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Program(s)</h5>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"span10\" data-bind=\"multiselect: { options: $parent.availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString }\"></div>\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<span class=\"grey\">Created On: \\t</span>\\r\\n\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: createdBy().preferredName\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: updatedOn\">\\r\\n\\t\\t\\t\\t<span class=\"grey\" >Updated On:  </span>\\r\\n\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: updatedBy().preferredName\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: dataSource\">\\r\\n\\t\\t\\t\\t<span class=\"grey\" >System:</span>\\r\\n\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: dataSource\"></span>\\r\\n\\t\\t\\t</div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/note.touchpoint.details.html',[],function () { return '<div data-bind=\"visible: type().name().toLowerCase() === \\'touchpoint\\'\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<strong>Content:</strong>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<textarea readonly=\"readonly\" class=\"display-only span12\" data-bind=\"text: text, autoHeight: text, attr: { \\'title\\': text }\"></textarea>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top divider\"></div>\\r\\n\\t<div data-bind=\"if: duration\">\\r\\n\\t\\t<div class=\"row pad-top\" >\\r\\n\\t\\t\\t<strong class=\"span3\">Duration:</strong>\\r\\n\\t\\t\\t<span class=\"pad-top\" data-bind=\"text: duration\"></span> minutes\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"with: method\">\\r\\n\\t\\t<strong class=\"span3\">Method:</strong>\\r\\n\\t\\t<span class=\"span9\" data-bind=\"text: name\"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"with: outcome\">\\r\\n\\t\\t<strong class=\"span3\">Outcome:</strong>\\r\\n\\t\\t<span class=\"span9\" data-bind=\"text: name\"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"with: who\">\\r\\n\\t\\t<strong class=\"span3\">Who:</strong>\\r\\n\\t\\t<span class=\"span9\" data-bind=\"text: name\"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"with: source\">\\r\\n\\t\\t<strong class=\"span3\">Source:</strong>\\r\\n\\t\\t<span class=\"span9\" data-bind=\"text: name\"></span>\\r\\n\\t</div>\\r\\n\\t<div data-bind=\"if: type().name().toLowerCase() === \\'touchpoint\\'\">\\r\\n\\t\\t<div class=\"row pad-top\"></div>\\r\\n\\t\\t\\t<strong class=\"span3\">Validated:</strong>\\r\\n\\t\\t\\t<span class=\"span9\" data-bind=\"text: validatedIdentity() ? \\'Yes\\' : \\'No\\' \"></span>\\r\\n\\t\\t</div>\\r\\n\\t<div data-bind=\"if: contactedOn\">\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<strong class=\"span3\">Date / Time:</strong>\\r\\n\\t\\t\\t<span class=\"span9\" data-bind=\"DateTime: contactedOn\"></span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> ';});\n\n","\ndefine('text!views/templates/note.touchpoint.edit.html',[],function () { return '<div data-bind=\"with: note\">\\r\\n\\t<div class=\"column\">\\r\\n\\t\\t<section class=\"accordion\">\\r\\n\\t\\t\\t<div class=\"row accordion-toggle\"></div>\\r\\n\\t\\t\\t\\t<div class=\"accordion-content\">\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top filter-toggle\" data-bind=\"click: $parent.toggleOpen\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey\">Existing Content</h5>\\r\\n\\t\\t\\t\\t\\t\\t<span data-bind=\"visible: (!($parent.existingContentOpen())), text: \\'...\\'\"></span>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<pre data-bind=\"text: text, visible: $parent.existingContentOpen\" class=\"pad-top\"></pre>\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">New Content</h5>\\r\\n\\t\\t\\t\\t\\t\\t<textarea data-bind=\"value: newContent, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"5000\" type=\"text\" style=\"height: 150px; resize: both;\"></textarea>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Method</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.methods, value: method, text: \\'name\\', label: \\'methods\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Who</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.whos, value: who, text: \\'name\\', label: \\'whose\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Source</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.sources, value: source, text: \\'name\\', label: \\'sources\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Outcome</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.outcomes, value: outcome, text: \\'name\\', label: \\'outcomes\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Date/Time of Contact</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tobservableDateTime: contactedOn, dateErrors: contactedOnErrors, dateName: \\'startDate\\', timeName: \\'startTime\\',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {}, showTime: true, dateCss: \\'span6\\', timeCss: \\'span6\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Duration</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span6\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\"text\" data-bind=\"value: duration, valueUpdate: \\'afterkeydown\\', numeric: duration, \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tattr:{maxlength: 4, max: 1440, min: 1, title:\\'Duration: enter a number of minutes from 1 to 1440\\'},\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'duration\\') !== -1)}\"></input>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"grey align-left\"> minutes</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Validated identity</h5>\\r\\n\\t\\t\\t\\t\\t\\t<!-- <label class=\"control-group\"> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"css: { \\'checked\\': validatedIdentity() === true }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"checkbox\" data-bind=\"checked: validatedIdentity\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<!-- </label> -->\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Program(s)</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list span10\" data-bind=\"multiselect: { options: $parent.availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString }\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<span class=\"grey\">Created On: \\t</span>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: createdBy().preferredName\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: updatedOn\">\\r\\n\\t\\t\\t\\t\\t<span class=\"grey\">Updated On:  </span>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: updatedBy().preferredName\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: dataSource\">\\r\\n\\t\\t\\t\\t\\t<span class=\"grey\" >System:</span>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: dataSource\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"line\"></div>\\r\\n\\t\\t\\t\\t<div class=\"line\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/note.utilization.details.html',[],function () { return '<div data-bind=\"visible: type().name().toLowerCase() === \\'utilization\\'\">\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<strong>Reason:</strong>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<textarea readonly=\"readonly\" class=\"display-only span12\" data-bind=\"text: text, autoHeight: text, attr: { \\'title\\': text }\"></textarea>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top divider\"></div>\\r\\n\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: visitType, with: visitType\">\\r\\n\\t\\t<strong class=\"span3\">Visit Type:</strong>\\r\\n\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t<span data-bind=\"text: name\" ></span>\\r\\n\\t\\t\\t<span class=\"pad-left\" data-bind=\"visible: $parent.showOtherVisitType && $parent.otherType, text: (\\'- \\' + $parent.otherType())\" ></span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: admitDate\">\\r\\n\\t\\t<strong class=\"span3\">Visit/Admit Date:</strong>\\r\\n\\t\\t<span class=\"span9\" data-bind=\"DateOrNothing: admitDate\"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: (admitted() === true || admitted() === false)\">\\r\\n\\t\\t<strong class=\"span3\">Admitted:</strong>\\r\\n\\t\\t<span class=\"span9\" data-bind=\"text: admitted() ? \\'Yes\\' : \\'No\\' \"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: dischargeDate\">\\r\\n\\t\\t<strong class=\"span3\">Discharge Date:</strong>\\r\\n\\t\\t<span class=\"span9\" data-bind=\"DateOrNothing: dischargeDate\"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: utilizationLengthStr\">\\r\\n\\t\\t<strong class=\"span3\">\\r\\n\\t\\t\\t<span  data-bind=\"text: utilizationLengthDesc\"></span> :\\r\\n\\t\\t</strong>\\r\\n\\t\\t<span data-bind=\"text: utilizationLengthStr\"></span>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: utilizationLocation, with: utilizationLocation\">\\r\\n\\t\\t<strong class=\"span3\">Location:</strong>\\r\\n\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t<span data-bind=\"text: name\" ></span>\\r\\n\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: (\\'- \\' + $parent.otherLocation()), visible: $parent.showOtherLocation && $parent.otherLocation\" ></span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: disposition, with: disposition\">\\r\\n\\t\\t<strong class=\"span3\">Disposition:</strong>\\r\\n\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t<span data-bind=\"text: name\" ></span>\\r\\n\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: (\\'- \\' + $parent.otherDisposition()), visible: $parent.showOtherDisposition && $parent.otherDisposition\" ></span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: utilizationSource, with: utilizationSource\">\\r\\n\\t\\t<strong class=\"span3\">Source:</strong>\\r\\n\\t\\t<span class=\"span9\" data-bind=\"text: name\"></span>\\r\\n\\t</div>\\r\\n</div> ';});\n\n","\ndefine('text!views/templates/note.utilization.edit.html',[],function () { return '<div data-bind=\"with: note\">\\r\\n\\t<div class=\"column\">\\r\\n\\t\\t<section class=\"accordion\">\\r\\n\\t\\t\\t<div class=\"row accordion-toggle\"></div>\\r\\n\\t\\t\\t<div class=\"accordion-content\">\\r\\n\\t\\t\\t\\t<div class=\"row pad-top bold\">Visit:</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Type</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.visitTypes, value: visitType, text: \\'name\\', label: \\'visitTypes\\' }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"visible: showOtherVisitType\" >\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Other Type</h5>\\r\\n\\t\\t\\t\\t\\t\\t<input data-bind=\"value: otherType, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'otherType\\') !== -1) }\"\\r\\n\\t\\t\\t\\t\\t\\tmaxlength=\"100\" type=\"text\" />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Visit/Admit Date</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tobservableDateTime: admitDate, dateErrors: admitDateErrors, dateName: \\'admitDate\\', showInvalid: setInvalidAdmitDate,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {}, dateCss: \\'span12\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Admitted ?</h5>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"checker\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"css: { \\'checked\\': admitted() === true }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"checkbox\" data-bind=\"checked: admitted\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Discharge Date</h5>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tobservableDateTime: dischargeDate, dateErrors: dischargeDateErrors, dateName: \\'dischargeDate\\', showInvalid: setInvalidDischargeDate,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {minDate: admitDate}, dateCss: \\'span12\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t} -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div data-bind=\"visible: utilizationLengthStr\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\"grey\" data-bind=\"text: utilizationLengthDesc\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: utilizationLengthStr\"></span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Location</h5>\\r\\n\\t\\t\\t\\t\\t<div class=\"icon-list span6\">\\r\\n\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.utilizationLocations, value: utilizationLocation, text: \\'name\\', label: \\'utilizationLocations\\', isCancel: true }\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\"row\" data-bind=\"visible: showOtherLocation\" >\\r\\n\\t\\t\\t\\t\\t<div class=\"pad-top\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Other Location</h5>\\r\\n\\t\\t\\t\\t\\t\\t<input data-bind=\"value: otherLocation, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'otherLocation\\') !== -1) }\"\\r\\n\\t\\t\\t\\t\\t\\t\\tmaxlength=\"100\" type=\"text\" />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Disposition</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.dispositions, value: disposition, text: \\'name\\', label: \\'dispositions\\', isCancel: true }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span9\" data-bind=\"visible: showOtherDisposition\" >\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Other Disposition</h5>\\r\\n\\t\\t\\t\\t\\t\\t<input data-bind=\"value: otherDisposition, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'otherDisposition\\') !== -1) }\"\\r\\n\\t\\t\\t\\t\\t\\tmaxlength=\"100\" type=\"text\" />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row divider pad-top bold\">Content:</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Source</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: $parent.utilizationSources, value: utilizationSource, text: \\'name\\', label: \\'utilizationSources\\', isCancel: true }\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span6\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Program(s)</h5>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\"icon-list span10\" data-bind=\"multiselect: { options: $parent.availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString }\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\"row pad-top filter-toggle\" data-bind=\"click: $parent.toggleOpen\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey\">Current Reason</h5>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"visible: (!($parent.existingContentOpen())), text: \\'...\\'\"></span>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<pre data-bind=\"text: text, visible: $parent.existingContentOpen\" class=\"pad-top\"></pre>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Reason Update</h5>\\r\\n\\t\\t\\t\\t\\t<textarea data-bind=\"value: newContent, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'text\\') !== -1) }\" class=\"string optional\" maxlength=\"5000\" type=\"text\" style=\"height: 150px; resize: both;\"></textarea>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<span class=\"grey\">Created On: \\t</span>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: createdOn\"></span> by <span data-bind=\"text: createdBy().preferredName\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: updatedOn\">\\r\\n\\t\\t\\t\\t\\t<span class=\"grey\">Updated On:  </span>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"DateTime: updatedOn\"></span> by <span data-bind=\"text: updatedBy().preferredName\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"if: dataSource\">\\r\\n\\t\\t\\t\\t\\t<span class=\"grey\" >System:  </span>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\" data-bind=\"text: dataSource\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"line\"></div>\\r\\n\\t\\t\\t\\t<div class=\"line\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/observation.add.html',[],function () { return '<div class=\"row pad\" data-bind=\"with: observation\">\\r\\n    <div class=\"span2\">\\r\\n        <span data-bind=\"text: name, attr: { title: name }\"></span>\\r\\n    </div>\\r\\n    <div class=\"span2\">\\r\\n        <input type=\"text\" data-bind=\"value: computedValue().value, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': (validationErrorsArray().indexOf(\\'value\\') !== -1) }\">\\r\\n    </div>\\r\\n\\t<div class=\"span1\">\\r\\n\\t\\t<span data-bind=\"with: units\">(<span data-bind=\"text: $data, attr: { title: $data }\"></span>)</span>\\r\\n\\t\\t&nbsp;\\r\\n\\t</div>\\r\\n    <div class=\"span2\">\\r\\n\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\tobservableDateTime: startDate, dateErrors: startDateErrors, showInvalid: setInvalidStartDate, \\r\\n\\t\\t\\t\\tmaxDate: \\'today\\', datepickerOptions:{ maxDate: \\'+0\\' }, datepickerDynamicOptions: {}, dateName: \\'startDate\\'\\r\\n\\t\\t\\t}\\r\\n\\t\\t} -->\\r\\n\\t\\t<!-- /ko -->\\r\\n    </div>\\r\\n    <div class=\"span4\">\\r\\n        <label>\\r\\n            <span data-bind=\"text: computedValue().previousValueString, attr: { title: computedValue().previousValueString }\"></span>\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"span1 pull-left\">\\r\\n        <a href=\"#\" data-bind=\"click: $parent.addNew, disable: !$parent.canAdd(), css: { \\'disabled\\': !$parent.canAdd() }\">\\r\\n            <i class=\"icon-plus\"></i>\\r\\n        </a>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/observation.bloodpressure.add.html',[],function () { return '<div class=\"pad-bottom\" data-bind=\"with: observation\">\\r\\n\\t<div class=\"row pad\">\\r\\n\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t<span data-bind=\"text: name, attr: { title: name }\"></span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span2\" data-bind=\"with: $parent.systolicObservationValue\">\\r\\n\\t\\t\\t<input type=\"text\" placeholder=\"Systolic\" title=\"Systolic\" data-bind=\"value: value, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': ($parent.validationErrorsArray().indexOf(\\'systolic\\') !== -1) }\">       \\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span1\">\\r\\n\\t\\t\\t<span data-bind=\"with: units\">(<span data-bind=\"text: $data, attr: { title: $data }\"></span>)</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span2\">        \\r\\n\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tobservableDateTime: startDate, dateErrors: startDateErrors, showInvalid: setInvalidStartDate, \\r\\n\\t\\t\\t\\t\\tmaxDate: \\'today\\', datepickerOptions:{ maxDate: \\'+0\\' }, datepickerDynamicOptions: {}, dateName: \\'startDate\\'\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span4\">\\r\\n\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t<span data-bind=\"text: $parent.customBPString, attr: { title: $parent.customBPString }\"></span>\\r\\n\\t\\t\\t</label>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span1 pull-left\">\\r\\n\\t\\t\\t<a href=\"#\" data-bind=\"click: $parent.addNew, enable: $parent.canAdd, css: { \\'disabled\\': !$parent.canAdd() }\">\\r\\n\\t\\t\\t\\t<i class=\"icon-plus\"></i>\\r\\n\\t\\t\\t</a>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad\">\\r\\n\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t&nbsp;\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span2\" data-bind=\"with: $parent.diastolicObservationValue\">\\r\\n\\t\\t\\t<input type=\"text\" placeholder=\"Diastolic\" title=\"Diastolic\" data-bind=\"value: value, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': ($parent.validationErrorsArray().indexOf(\\'diastolic\\') !== -1) }\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span1\">\\r\\n\\t\\t\\t<span data-bind=\"with: units\">(<span data-bind=\"text: $data, attr: { title: $data }\"></span>)</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\t';});\n\n","\ndefine('text!views/templates/patient.delete.html',[],function () { return '<div class=\"body\">\\r\\n    <div class=\"row\">\\r\\n        <h2 class=\"span12\" data-bind=\"text: fullName\"></h2>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <span>First Name</span>\\r\\n            <h4 data-bind=\"text: firstName\"></h4>\\r\\n        </label>\\r\\n        <label class=\"span6\">\\r\\n            <span>Middle Name</span>\\r\\n            <h4 data-bind=\"text: middleName\"></h4>\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <span>Last Name</span>\\r\\n            <h4 data-bind=\"text: lastName\"></h4>\\r\\n        </label>\\r\\n        <label class=\"span6\">\\r\\n            <span>Suffix</span>\\r\\n            <h4 data-bind=\"text: suffix\"></h4>\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <span>Preferred Name</span>\\r\\n            <h4 data-bind=\"text: preferredName\"></h4>\\r\\n        </label>\\r\\n        <label class=\"span6\">\\r\\n            <span>DOB</span>\\r\\n            <h4 data-bind=\"text: dOB\"></h4>\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <span>SSN</span>\\r\\n            <h4 data-bind=\"text: formattedSSN\"></h4>\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\" data-bind=\"with: genderModel\">\\r\\n            <div class=\"row\">\\r\\n                <span class=\"span3 line\">Gender</span>\\r\\n                <div class=\"span2 line align-right\">\\r\\n                    <img alt=\"Patient small\" class=\"\" data-bind=\"attr: { src: SmallImgSrc }\" />\\r\\n                </div>\\r\\n                <h4 data-bind=\"text: Description\"></h4>\\r\\n            </div>\\r\\n        </label>\\r\\n        <label class=\"span6\" data-bind=\"with: priorityModel\">\\r\\n            <div class=\"row\">\\r\\n                <span class=\"span3 line\">Priority</span>\\r\\n                <div class=\"span2 line align-right\">\\r\\n                    <img data-bind=\"attr: { src: imageSource }\">\\r\\n                </div>\\r\\n                <h4 data-bind=\"text: levelName\"></h4>\\r\\n            </div>\\r\\n        </label>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/patient.html',[],function () { return '<div class=\"body\">\\r\\n    <div class=\"row\" data-bind=\"visible: isDuplicate\">\\r\\n        <span class=\"errorheader\" style=\"margin-top: 10px; border: 1px solid; background: #fbcbc7; color: #871409; display: block; font-size: 11px; padding: 5px;\">\\r\\n            <a href=\"#\">\\r\\n                <i class=\"icon-warning red\"></i>\\r\\n            </a>An individual with the same first name, last name and date of birth already exists. Do you want to continue and create this individual? <button class=\"btn small color\" data-bind=\"click: forceSave\">Proceed and Create</button></span>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <h2 class=\"span12\" data-bind=\"text: fullName\"></h2>\\r\\n    </div>\\r\\n\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t<!-- /ko -->    \\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <span>First Name</span>\\r\\n            <input type=\"text\" data-bind=\"value: firstName, valueUpdate: \\'afterkeydown\\', css: { invalid: (validationErrorsArray().indexOf(\\'firstName\\') !== -1) }\" placeholder=\"first name\" />\\r\\n        </label>\\r\\n        <label class=\"span6\">\\r\\n            <span>Middle Name</span>\\r\\n            <input type=\"text\" data-bind=\"value: middleName, valueUpdate: \\'afterkeydown\\'\" placeholder=\"middle name\" />\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <span>Last Name</span>\\r\\n            <input type=\"text\" data-bind=\"value: lastName, valueUpdate: \\'afterkeydown\\', css: { invalid: (validationErrorsArray().indexOf(\\'lastName\\') !== -1) }\" placeholder=\"last name\" />\\r\\n        </label>\\r\\n        <label class=\"span6\">\\r\\n            <span>Suffix</span>\\r\\n            <input type=\"text\" data-bind=\"value: suffix, valueUpdate: \\'afterkeydown\\'\" placeholder=\"suffix\" />\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <span>Preferred Name</span>\\r\\n            <input type=\"text\" data-bind=\"value: preferredName, valueUpdate: \\'afterkeydown\\'\" placeholder=\"preferred name\" />\\r\\n        </label>\\r\\n        <label class=\"span6\">\\r\\n            <span>DOB</span>\\r\\n            <input type=\"text\" data-bind=\"value: dOB, date: dOB, valueUpdate: \\'afterkeydown\\', css: { invalid: (validationErrorsArray().indexOf(\\'dOB\\') !== -1) }\" />\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <span>Override SSN - <span data-bind=\"with: formattedSSN\">(<span data-bind=\"text: $data\"></span>)</span>:</span>\\r\\n            <input type=\"text\" data-bind=\"ssn: fullSSN, value: fullSSN, valueUpdate: \\'afterkeydown\\', css: { invalid: (validationErrorsArray().indexOf(\\'fullSSN\\') !== -1) }\" />\\r\\n        </label>\\r\\n        <label class=\"span6\">\\r\\n        \\t<div class=\"row\">\\r\\n            <span class=\"span5 line\">Protected</span>\\r\\n            <div style=\"padding-top: 2%;\" class=\"span4\" data-bind=\"chsnsingle: { options:  $root.protectedStatuses, value: protected, text: \\'Name\\', idValue: \\'Id\\' }\"></div>\\r\\n          </div>\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\" data-bind=\"with: genderModel\">\\r\\n            <div class=\"row\">\\r\\n                <span class=\"span3 line\">Gender</span>\\r\\n                <div class=\"span2 line align-right\">\\r\\n                    <img alt=\"Patient small\" class=\"\" data-bind=\"attr: { src: SmallImgSrc }\" />\\r\\n                </div>\\r\\n                <div style=\"padding-top: 2%;\" class=\"span4\" data-bind=\"chsnsingle: { options:  $root.genders, value: $parent.gender, text: \\'Description\\', idValue: \\'Gender\\' }\"></div>\\r\\n            </div>\\r\\n        </label>\\r\\n        <label class=\"span6\" data-bind=\"with: priorityModel\">\\r\\n            <div class=\"row\">\\r\\n                <span class=\"span3 line\">Priority</span>\\r\\n                <div class=\"span2 line align-right\">\\r\\n                    <img style=\"vertical-align: middle;\" data-bind=\"attr: { src: imageSource }\">\\r\\n                </div>\\r\\n                <div style=\"padding-top: 2%;\" class=\"span4\" data-bind=\"chsnsingle: { options:  $root.priorities, value:  $parent.priority, text: \\'levelName\\', idValue: \\'id\\' }\"></div>\\r\\n            </div>\\r\\n        </label>\\r\\n    </div>\\r\\n    <div class=\"row\">\\r\\n        <label class=\"span6\">\\r\\n            <div class=\"row\">\\r\\n                <span class=\"span5 line\">Marital Status</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"padding-top: 2%;\" class=\"span7\" data-bind=\"chsnsingle: { options: $root.maritalStatuses, value: maritalStatusId, text: \\'name\\', idValue: \\'id\\', isCancel: true, caption: \\'None Selected\\' }\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n            </div>\\r\\n        </label>\\r\\n        <label class=\"span6\">\\r\\n            <div class=\"row\">\\r\\n                <span class=\"span5 line\">Deceased</span>\\r\\n                <div style=\"padding-top: 2%;\" class=\"span4\" data-bind=\"chsnsingle: { options:  $root.deceasedStatuses, value:  deceasedId, text: \\'name\\', idValue: \\'id\\', isCancel: true, caption: \\'None Selected\\' }\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </label>\\r\\n    </div>\\r\\n\\t<div class=\"line\"></div><div class=\"line\"></div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/patient.status.html',[],function () { return '<div class=\"body\">\\r\\n\\t<div class=\"column\"> \\r\\n        <section class=\"accordion\">\\r\\n\\t\\t\\t<div class=\"accordion-content\">\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3 align-right\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"grey\">Status</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\" data-bind=\"chsnsingle: { options:  $root.patientStatuses, value: patientStatus, text: \\'name\\'}\"></div>        \\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\" data-bind=\"visible: (statusId() !== \\'1\\')\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3 align-right\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"grey\">Reason</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\"span3\" data-bind=\"chsnsingle: { options:  $root.patientStatusReasons, value: patientStatusReason, text: \\'name\\'}\"></div>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t\\t<div class=\"span3 align-right\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"grey\">System</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<span class=\"span3\" data-bind=\"text: (statusDataSource || \\'N/A\\')\"></span>\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t    </section> \\t\\t\\t\\r\\n    </div>\\r\\n\\t\\r\\n    \\r\\n</div>';});\n\n","\ndefine('text!views/templates/patient.systems.html',[],function () { return '<div class=\"body\" data-bind=\"visible: showing\">\\r\\n\\t<div class=\"pad-vertical\">\\r\\n\\t</div>\\r\\n\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t<!-- /ko -->\\t\\r\\n\\t<div class=\"pad-vertical\" data-bind=\"visible: canAddId\">\\r\\n\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t<div class=\"span1\">&nbsp;</div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<div data-bind=\"chsnsingle: { options: systems, value: newSelectedSystem, text: \\'displayLabel\\', label: \\'systems\\' },\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcss:{\\'invalid\\': (newIdValidationErrorsArray().indexOf(\\'newSystem\\') !== -1 )}\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span5\">\\r\\n\\t\\t\\t\\t<input type=\"text\" size=\"30\" placeholder=\"ID Value\" data-bind=\"value: newPatientSystemIdValue, valueUpdate: \\'afterkeydown\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t, css:{\\'invalid\\': (newIdValidationErrorsArray().indexOf(\\'newValue\\') !== -1 )}\" maxlength=\"100\" />\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t\\t<button class=\"btn color small\" href=\"#\" data-bind=\"click: createNewId, enable: canAddNewPatientSystem\">\\r\\n\\t\\t\\t\\t\\t<i class=\"icon-plus\"></i>\\r\\n\\t\\t\\t\\t\\t<span class=\"pad-left\">Add</span>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"pad-vertical\">\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"span1\">\\r\\n\\t\\t\\t\\t\\t<strong>Primary</strong>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t\\t<strong>System</strong>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span5\">\\r\\n\\t\\t\\t\\t\\t<strong>Value</strong>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span2\">\\r\\n\\t\\t\\t\\t\\t<strong>Status</strong>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span1\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<!-- ko foreach: computedEditSystemIds -->\\r\\n\\t\\t\\t\\t<!-- ko compose: \"templates/system.id.edit.html\" -->\\r\\n\\t\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t\\t<div class=\"line\"></div>\\r\\n\\t\\t\\t<div class=\"line\"></div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!views/templates/phone.edit.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"span2\">\\r\\n        <i data-bind=\"attr: { class: (!isText() ? \\'icon-phone\\' : \\'icon-sms\\') + \\' blue\\' }\"></i>\\r\\n    </div>\\r\\n    <div class=\"span10 ellipsis short\">\\r\\n        <div class=\"row\">\\r\\n\\t\\t\\t<input data-bind=\"phone: $data, value: number, valueUpdate: \\'afterkeydown\\', hasFocus: isFocused ,disable: $parent.phoneOptedOut, css: { invalid: !isValid() }\" placeholder=\"XXX-XXX-XXXX\" title=\"XXX-XXX-XXXX\"/>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/phone.html',[],function () { return '<div class=\"row\">\\r\\n    <div class=\"span2\">\\r\\n        <i class=\"lighterblue\" data-bind=\"attr: { class: (!isText() ? \\'icon-phone\\' : \\'icon-sms\\') + \\' lighterblue\\', title: type().name() }\"></i>\\r\\n    </div>\\r\\n    <div class=\"span10 ellipsis line short\">\\r\\n        <div class=\"row\">\\r\\n            <span data-bind=\"text: optOut() ? \\'<Number opted out>\\' : formattedNumber, attr: { \\'title\\': formattedNumber }\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/program.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: program\">\\r\\n\\t<div class=\"column\">\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n      <div class=\"span9\" data-bind=\"DateOrNothing: assignDate\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned By:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n      <div class=\"span9\" data-bind=\"with: assignBy\"><span data-bind=\"text: preferredName\"></span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Assigned To:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span5\">\\r\\n\\t\\t\\t\\t<input class=\"span12\" type=\"text\" data-bind=\"typeahead: { name: \\'assignedToIdTypeAhead\\', taOptions: $parent.careManagersBloodhound, displayKey: \\'preferredName\\'}, value: $parent.assignToDisplay, initOptions: { minLength: 3 }\" placeholder=\"Enter name\" />\\r\\n        <!-- <select data-bind=\"options: $parent.careManagers, value: assignToId, optionsText: \\'preferredName\\', optionsValue: \\'id\\'\"></div> -->\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span4\">\\r\\n\\t\\t\\t\\t<button class=\"button small warning\" data-bind=\"enable: assignToId(), click: $parent.removeAssignment\">Remove Assignment</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- <div class=\"row pad-top divider\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Action Status:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t<select style=\"display: none;\">\\r\\n\\t\\t\\t\\t\\t<option>In Progress\\t</option>\\r\\n\\t\\t\\t\\t\\t<option>Not Started</option>\\r\\n\\t\\t\\t\\t\\t<option>Closed</option>\\r\\n\\t\\t\\t\\t\\t<option>Removed </option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t\\t<span>Reason:\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\"span9\">\\r\\n\\t\\t\\t\\t\\t<textarea>\\r\\n\\t\\t\\t\\t\\t</textarea>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>Start Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<input class=\"datepicker\" type=\"text\" value=\"03/15/2014\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span3 align-left\">\\r\\n\\t\\t\\t\\t<span>End Date:\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<input class=\"datepicker\" type=\"text\" id=\"dp1401893998028\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div> -->\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/program.remove.html',[],function () { return '<div class=\"body\" data-bind=\"with: program\">\\r\\n\\t<div class=\"pad-vertical\">\\r\\n\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t<h3 class=\"span12\">Confirm that you want to remove the program <span data-bind=\"text: name\"></span></h3>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"pad-vertical\">\\r\\n\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t<div class=\"span3\">\\r\\n\\t\\t\\t\\t<strong>Reason for removing:</strong>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<div class=\"span12\">\\r\\n\\t\\t\\t<textarea data-bind=\"value: $parent.reason\"></textarea>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top divider\"><em>All modules and actions associated with this program, including the program itself, will be removed from the individual\\'s plan.  You need to manually remove any data or other programs, modules, or actions that were set as a result of any actions and modules already completed that are no longer applicable.  </em>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t<em>This action cannot be undone\\t</em>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/system.id.edit.html',[],function () { return '<div class=\"row pad-top divider\">\\r\\n\\t<div class=\"span1\">\\r\\n\\t\\t<div class=\"radio\" data-bind=\"hoverToggle: \\'hover\\'\">\\r\\n\\t\\t\\t<span data-bind=\"css: { \\'checked\\': primary }\" class=\"checked\">\\r\\n\\t\\t\\t\\t<input type=\"radio\" data-bind=\"click: $parent.setPrimary, clickBubble: false\">\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"span3\" data-bind=\"with: system\">\\r\\n\\t\\t<input type=\"text\" disabled=\"disabled\" data-bind=\"value: displayLabel\">\\r\\n\\t</div>\\r\\n\\t<div class=\"span5\">\\r\\n\\t\\t<input type=\"text\" data-bind=\"value: value, valueUpdate: \\'afterkeydown\\', css: { \\'invalid\\': $parent.isInvalidProp($data.id(), \\'value\\') }, enable: isEditable\" maxlength=\"100\"/>\\r\\n\\t</div>\\r\\n\\t<div class=\"span2\">\\r\\n\\t\\t<div data-bind=\"chsnsingle: { options: $parent.patientSystemStatuses, value: patientSystemStatus, text: \\'name\\', label: \\'patientSystemStatuses\\' }\"></div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\"span1\">\\r\\n\\t\\t<a href=\"#\" data-bind=\"click: $parent.deletePatientSystemId, clickBubble: false, visible: isEditable\"><i class=\"icon-cancel red\"></i></a>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/system.ids.list.html',[],function () { return '';});\n\n","\ndefine('text!views/templates/task.closeddate.html',[],function () { return '<span data-bind=\"DateOrDash: closedDate\"></span>';});\n\n","\ndefine('text!views/templates/task.description.html',[],function () { return '<a class=\"edit\" href=\"#\" data-bind=\"text: (description() ? description() : \\'-\\'), click: edit, attr: { title: description }\">\\r\\n</a>';});\n\n","\ndefine('text!views/templates/task.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: task\">\\r\\n    <div class=\"column\">\\r\\n        <section class=\"data-set clearfix\">\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Description</span>\\r\\n                </div>\\r\\n                <div class=\"span7\">\\r\\n                    <input data-bind=\"value: description, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"500\" type=\"text\" />\\r\\n                    <span><em class=\"grey\" data-bind=\"visible: !description()\">Description is required</em></span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Status</span>\\r\\n                </div>\\r\\n                <div class=\"span3\">\\r\\n                    <div data-bind=\"chsnsingle: { options: $parent.goalTaskStatuses, value: status, text: \\'name\\', label: \\'goaltaskstatuses\\', disabled: $parent.isNew() }\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Start Date</span>\\r\\n                </div>\\r\\n                <div class=\"span6\">\\r\\n                    <input data-bind=\"datepicker: startDate, datepickerOptions: { }\" type=\"text\" class=\"datepicker\">\\r\\n                </div>\\r\\n                <div class=\"span3\"></div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Target Value</span>\\r\\n                </div>\\r\\n                <div class=\"span9\">\\r\\n                    <input data-bind=\"value: targetValue\" maxlength=\"255\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Target Date</span>\\r\\n                </div>\\r\\n                <div class=\"span6\">\\r\\n                    <input data-bind=\"datepicker: targetDate, datepickerOptions: { }\" type=\"text\" class=\"datepicker\">\\r\\n                </div>\\r\\n                <div class=\"span3\"></div>\\r\\n            </div>\\r\\n            <div class=\"row pad-top\">\\r\\n                <div class=\"span3 align-right\">\\r\\n                    <span class=\"grey\">Associated Barrier(s)</span>\\r\\n                </div>\\r\\n                <!-- ko if: goal -->\\r\\n                <div class=\"span6\" data-bind=\"multiselect: { options: $parent.computedBarriers, values: barrierIds, idValue: \\'id\\', text: \\'name\\', label: \\'barriers\\', stringValue: barrierString }\"></div>\\r\\n                <!-- /ko -->\\r\\n                <!-- ko if: !goal() -->\\r\\n                <span class=\"span9\">No barriers</span>\\r\\n                <!-- /ko -->\\r\\n            </div>\\r\\n\\t\\t\\t<div class=\"row pad-top\">\\r\\n\\t\\t\\t\\t<div class=\"row pad-top filter-toggle\" data-bind=\"click: $parent.toggleOpen, visible: details\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">Existing Details</h5>\\r\\n\\t\\t\\t\\t\\t<span data-bind=\"visible: (!($parent.existingDetailsOpen())), text: \\'...\\'\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<pre data-bind=\"text: details, visible: $parent.existingDetailsOpen\" ></pre>\\r\\n\\t\\t\\t\\t<div class=\"row pad-top divider\">\\r\\n\\t\\t\\t\\t\\t<h5 class=\"grey pad-bottom\">New Details</h5>\\r\\n\\t\\t\\t\\t\\t<textarea data-bind=\"value: newDetails, valueUpdate: \\'afterkeydown\\'\" class=\"string optional\" maxlength=\"5000\" type=\"text\" style=\"height: 10em; resize: both;\"></textarea>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/task.goal.html',[],function () { return '<div class=\"ellipsis\">\\r\\n\\t<span data-bind=\"if: computedGoalName()\">\\r\\n\\t    <a href=\"#\" data-bind=\"text: computedGoalName, click: gotoGoal, attr: { title: computedGoalName }\"></a>\\r\\n\\t</span>\\r\\n\\t<!-- ko ifnot: computedGoalName() -->\\r\\n\\t\\t<span>-</span>\\r\\n\\t<!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/templates/task.panel.html',[],function () { return '<div class=\"panel-wrapper\">\\r\\n    <div class=\"row\">\\r\\n        <!-- ko foreach: columns -->\\r\\n        <div class=\"grey hover-parent\" data-bind=\"css: cssClass\">\\r\\n            <span data-bind=\"text: displayName\"></span>\\r\\n            <!-- ko if: $parent.canSort -->\\r\\n                <i class=\"pull-right filter-toggle pad-right \" data-bind=\"click: $parent.toggleSort, css: ($parent.selectedSortColumn() === sortProperty ? \\'fa fa-caret-up\\' : ($parent.selectedSortColumn() === sortProperty + \\' desc\\' ? \\'fa fa-caret-down\\' : \\'\\'))\"></i>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if: ($parent.canSort && ($parent.selectedSortColumn() !== sortProperty && $parent.selectedSortColumn() !== sortProperty + \\' desc\\'))  -->\\r\\n                <i class=\"pull-right hover-show fa fa-caret-up filter-toggle pad-right\" data-bind=\"click: $parent.toggleSort\"></i>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n        <!-- /ko  -->\\r\\n    </div>\\r\\n    <div data-bind=\"foreach: computedTasks\">\\r\\n        <div class=\"row divider\" data-bind=\"foreach: $parent.columns\">\\r\\n            <div class=\"ellipsis\" data-bind=\"compose: { model: $parent, view: path }, css: cssClass\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\"row\" data-bind=\"visible: computedTasks().length === 0\">\\r\\n        <em>No data meets your filter criteria</em>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/task.startdate.html',[],function () { return '<span data-bind=\"DateOrDash: startDate\"></span>';});\n\n","\ndefine('text!views/templates/task.status.html',[],function () { return '<i data-bind=\"css: status().iconClass\"></i>';});\n\n","\ndefine('text!views/templates/task.statusdate.html',[],function () { return '<span data-bind=\"DateOrDash: statusDate\"></span>';});\n\n","\ndefine('text!views/templates/task.targetdate.html',[],function () { return '<span data-bind=\"DateOrDash: targetDate\"></span>';});\n\n","\ndefine('text!views/templates/task.targetvalue.html',[],function () { return '<div class=\"ellipsis\">\\r\\n    <span data-bind=\"with: targetValue\">\\r\\n        <span data-bind=\"text: $data, attr: { title: $data }\"></span>\\r\\n    </span>\\r\\n    <div data-bind=\"ifnot: targetValue\">\\r\\n    \\t<span>-</span>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/todo.assignedto.html',[],function () { return '<div>\\r\\n\\t<div class=\"ellipsis\" data-bind=\"if: assignedToId()\">\\r\\n\\t    <span data-bind=\"text: assignedTo() ? (assignedTo().preferredName? assignedTo().preferredName: \\'-\\') : \\'-\\', attr: { title: assignedTo() ? (assignedTo().preferredName? assignedTo().preferredName: \\'-\\') : \\'-\\' }\"></span>\\r\\n\\t</div>\\r\\n\\t<div data-bind=\"ifnot: assignedToId\">\\r\\n\\t\\t<span>-</span>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/todo.category.html',[],function () { return '<div>\\r\\n    <span data-bind=\"with: category\">\\r\\n        <span data-bind=\"text: name\"></span>\\r\\n    </span>\\r\\n    <div data-bind=\"ifnot: category\">\\r\\n    \\t<span>-</span>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/todo.closedon.html',[],function () { return '<span data-bind=\"DateOrDash: closedDate\"></span>';});\n\n","\ndefine('text!views/templates/todo.duedate.html',[],function () { return '<span data-bind=\"DateOrDash: dueDate\"></span>';});\n\n","\ndefine('text!views/templates/todo.edit.html',[],function () { return '<div class=\"body\" data-bind=\"with: todo\">\\t\\r\\n\\t<!-- ko compose: \"templates/validation.errors.html\" -->\\r\\n\\t<!-- /ko --> \\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Category:\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\">\\r\\n        \\t<div data-bind=\"chsnsingle: { options: $parent.toDoCategories, value: category, text: \\'name\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Status: \\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\">\\r\\n        \\t<div data-bind=\"chsnsingle: { options: $parent.statuses, value: status, text: \\'name\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Assigned to:\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\">\\r\\n\\t\\t\\t<input class=\"span12\" type=\"text\" data-bind=\"typeahead: { name: \\'assignedToIdTypeAhead\\', taOptions: $parent.careManagersBloodhound, displayKey: \\'preferredName\\'}, value: $parent.assignedToDisplay, initOptions: { minLength: 3 }\" placeholder=\"Enter name\" />\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span5 align-right\">\\r\\n\\t\\t\\t<button class=\"close small\" data-bind=\"enable: assignedToId(), click: $parent.removeUserAssociation\">Remove Association</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Due Date: \\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\">\\r\\n\\t\\t\\t<!-- <input placeholder=\"due date\" size=\"30\" type=\"text\" data-bind=\"datepicker: dueDate\"> -->\\r\\n\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tobservableDateTime: dueDate, dateErrors: dueDateErrors, showInvalid: showInvalidDueDate, dateName: \\'dueDateDate\\', timeName: \\'dueDateTime\\',\\r\\n\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {}, showTime: false, dateCss: \\'span12\\'\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">Start Time:     \\r\\n        </div>\\r\\n        <div class=\"span3 pad-left\">            \\r\\n\\t\\t\\t<!-- ko compose: { model: \\'viewmodels/templates/datetimepicker\\', activationData:\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tobservableDateTime: startTime, dateErrors: startTimeErrors, timeName: \\'startTime\\', showDate: false,\\r\\n\\t\\t\\t\\t\\tdatepickerOptions:{ }, datepickerDynamicOptions: {}, showInvalidTime: showInvalidStartTime, showTime: true, timeCss: \\'span12\\'\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} -->\\r\\n\\t\\t\\t<!-- /ko -->\\r\\n        </div>\\r\\n    </div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n        <div class=\"span2 align-right grey\">Duration:     \\r\\n        </div>\\r\\n        <div class=\"span2 pad-left\">            \\r\\n\\t\\t\\t<input type=\"text\" data-bind=\"value: duration, valueUpdate: \\'afterkeydown\\', numeric: duration, \\r\\n\\t\\t\\t\\t\\t\\tattr:{maxlength: 4, max: 1440, min: 1, title:\\'Duration: enter a number of minutes from 1 to 1440\\'},\\r\\n\\t\\t\\t\\t\\t\\tcss: { \\'invalid\\': (validationErrorsArray().indexOf(\\'duration\\') !== -1) }\"></input>\\r\\n        </div>\\r\\n\\t\\t<span class=\"span2 grey pad-left\">(minutes)</span>\\r\\n    </div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Priority:\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\">\\r\\n        \\t<div data-bind=\"chsnsingle: { options: $parent.priorities, value: priority, text: \\'levelName\\', label: \\'action-status\\', caption: \\'Choose...\\' }\"></div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Individual:\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\">\\r\\n\\t\\t\\t<span data-bind=\"text: (patientDetails() && patientDetails().fullName()) ?  patientDetails().fullName() : \\'-\\'\"></span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span5 align-right\">\\r\\n\\t\\t\\t<button class=\"close small\" data-bind=\"enable: patientId(), click: $parent.removePatientAssociation\">Remove Association</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Program(s):\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span4 pad-left\" data-bind=\"visible: patientId()\">\\r\\n            <div data-bind=\"multiselect: { options: $parent.availablePrograms, values: programIds, idValue: \\'id\\', text: \\'name\\', label: \\'programs\\', stringValue: programString, disable: $parent.noPatient }\">\\r\\n            </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\" data-bind=\"visible: !patientId()\">\\r\\n            <span>-</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Title:\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span9 pad-left\">\\r\\n\\t\\t\\t<input placeholder=\"title\" size=\"80\" maxlength=\"500\" type=\"text\" data-bind=\"value: title, valueUpdate: \\'afterkeydown\\', css: { invalid: ($parent.errors().length !== 0) }\">\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"span3 grey\">Description:\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"span12\">\\r\\n\\t\\t\\t<textarea data-bind=\"value: description\" maxlength=\"500\">\\r\\n\\t\\t\\t</textarea>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Created On: \\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\">\\r\\n\\t\\t\\t<span data-bind=\"DateOrDash: createdOn\"></span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\">\\r\\n\\t\\t<div class=\"span2 align-right grey\">Updated On: \\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"span3 pad-left\" data-bind=\"DateOrDash: updatedOn\">\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row pad-top\" data-bind=\"visible: !isNew()\">\\r\\n\\t\\t<button data-bind=\"click: $parent.deleteToDo\">\\r\\n\\t\\t\\t<i class=\"icon-cancel\"></i> Delete\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/todo.panel.html',[],function () { return '<div class=\"panel-wrapper\">\\r\\n    <div class=\"row\">\\r\\n        <!-- ko foreach: columns -->\\r\\n        <div class=\"grey hover-parent\" data-bind=\"css: cssClass\">\\r\\n            <span data-bind=\"text: displayName\"></span>\\r\\n            <!-- ko if: $parent.canSort -->\\r\\n                <i class=\"pull-right filter-toggle pad-right \" data-bind=\"click: $parent.toggleSort, css: ($parent.selectedSortColumn() === sortProperty ? \\'fa fa-caret-up\\' : ($parent.selectedSortColumn() === sortProperty + \\' desc\\' ? \\'fa fa-caret-down\\' : \\'\\'))\"></i>\\r\\n            <!-- /ko -->\\r\\n            <!-- ko if: ($parent.canSort && ($parent.selectedSortColumn() !== sortProperty && $parent.selectedSortColumn() !== sortProperty + \\' desc\\') && backendSort )  -->\\r\\n                <i class=\"pull-right hover-show fa fa-caret-up filter-toggle pad-right\" data-bind=\"click: $parent.toggleSort\"></i>\\r\\n            <!-- /ko -->\\r\\n        </div>\\r\\n        <!-- /ko  -->\\r\\n    </div>\\r\\n\\t<!-- <div data-bind=\"visible: canLoadPrevTodos\">\\r\\n\\t\\t<div class=\"row divider\">\\r\\n\\t\\t\\t<button class=\"small\" data-bind=\"click: loadPrevTodos\">Load prev...</button>\\r\\n\\t\\t</div>\\r\\n\\t</div> -->\\r\\n    <div data-bind=\"foreach: computedTodos\">\\r\\n        <div class=\"row divider\" data-bind=\"foreach: $parent.columns\">\\r\\n            <div class=\"ellipsis\" data-bind=\"compose: { model: $parent, view: path }, css: cssClass\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\t<div data-bind=\"visible: !todosReloading()\">\\r\\n\\t\\t<div data-bind=\"visible: canLoadMoreTodos\">\\r\\n\\t\\t\\t<div class=\"row divider\">\\r\\n\\t\\t\\t\\t<button class=\"small\" data-bind=\"click: loadMoreTodos\">Load more...</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div data-bind=\"visible: maxToToDosLoaded\">\\r\\n\\t\\t\\t<div class=\"row divider\">\\r\\n\\t\\t\\t\\t<em>... cannot load more (try selecting a different sort)</em>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"row\" data-bind=\"visible: noDataFound()\">\\r\\n\\t\\t\\t<em>No data meets your filter criteria</em>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/templates/todo.patient.html',[],function () { return '<div class=\"ellipsis\">\\r\\n\\t<span data-bind=\"if: patientId() && patientDetails()\">\\r\\n\\t    <a data-bind=\"text: patientDetails().fullLastName() +\\', \\' + patientDetails().fullFirstName(), attr: { href: \\'#patients/\\' + patientId(), title: patientDetails().fullLastName() +\\', \\' + patientDetails().fullFirstName() }\"></a>\\r\\n\\t</span>\\r\\n\\t<!-- ko ifnot: patientId -->\\r\\n\\t\\t<span>-</span>\\r\\n\\t<!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!views/templates/todo.priority.html',[],function () { return '<div data-bind=\"with:priority\">\\r\\n\\t<img data-bind=\"attr: { src: imageSource }\" />\\r\\n</div>';});\n\n","\ndefine('text!views/templates/todo.status.html',[],function () { return '<!-- ko if: status() -->\\r\\n\\t<i data-bind=\"css: (status()? status().iconClass : null)\"></i>\\r\\n<!-- /ko -->';});\n\n","\ndefine('text!views/templates/todo.title.html',[],function () { return '<a class=\"edit\" href=\"#\" data-bind=\"text: (title() ? title() : \\'-\\'), click: edit, attr: { title: title }\">\\r\\n</a>';});\n\n","\ndefine('text!views/templates/todo.updatedon.html',[],function () { return '<span data-bind=\"DateOrDash: updatedOn\"></span>';});\n\n","\ndefine('text!views/templates/validation.errors.html',[],function () { return '<div data-bind=\"if: validationErrors().length > 0\"</div>\\r\\n\\t<div class=\"row validation-summary\">\\t\\t\\r\\n\\t\\t<ul data-bind=\"foreach: validationErrors\">\\r\\n\\t\\t\\t<li class=\"validation-errors\">\\r\\n\\t\\t\\t\\t<h5 data-bind=\"text: Message\"></h5>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!views/widgets/controls.html',[],function () { return '<div class=\"controls\">\\r\\n\\t<!-- ko if: $data.showEditButton -->\\r\\n    <div class=\"toggle\" data-bind=\"click: $parents[1].editClickFunc, clickBubble: false\" style=\"margin-right: 4px;\">\\r\\n\\t\\t<a href=\"#\">\\r\\n\\t\\t\\t<i class=\"icon-edit\"></i>\\r\\n\\t\\t</a>\\r\\n    </div>\\t\\r\\n\\t<!-- /ko -->\\r\\n\\t<!-- ko if: $data.showDeleteButton -->\\r\\n\\t<div class=\"toggle\">\\r\\n\\t\\t<a href=\"#\" data-bind=\"click: $parents[1].deleteClickFunc, clickBubble: false\">\\r\\n\\t\\t\\t<i class=\"icon-cancel red\"></i>\\r\\n\\t\\t</a>\\r\\n\\t</div>\\r\\n\\t<!-- /ko -->\\r\\n    <div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: $parents[1].minimizeThisColumn, enable: $parent.isOpen(), clickBubble: false\">\\r\\n    </div>\\r\\n    <div class=\"toggle double-arrow-right\" style=\"margin-right: 2px;\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: $parents[1].maximizeThisColumn, enable: !$parent.isOpen(), clickBubble: false\">\\r\\n    </div>\\r\\n    <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: $parents[1].toggleFullScreen, clickBubble: false\">\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!views/widgets/controls.two.html',[],function () { return '<div class=\"controls\">\\r\\n    <div class=\"toggle single-arrow-left\" data-method=\"open\" data-target=\"column\" data-type=\"remove\" data-bind=\"click: minimizeThisColumn, enable: isOpen(), clickBubble: false\">\\r\\n    </div>\\r\\n    <div class=\"toggle double-arrow-right\" data-method=\"open\" data-target=\"column\" data-type=\"add\" data-bind=\"click: maximizeThisColumn, enable: isOpen(), clickBubble: false\">\\r\\n    </div>\\r\\n    <div class=\"toggle fullscreen\" data-method=\"fullscreen\" data-target=\"widget\" data-type=\"both\" data-bind=\"click: toggleFullScreen, clickBubble: false\">\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!widgets/chsnmultiple/view.html',[],function () { return '<div class=\"wrapper\">\\r\\n    <!-- ko if: idValue -->\\r\\n    <select data-bind=\"options: computedOptions, optionsCaption: \\'\\', optionsText: text, optionsValue: idValue, value: selectedValue, chosen: { }\"></select>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: idValue -->\\r\\n    <select data-bind=\"options: computedOptions, optionsCaption: \\'\\', optionsText: text, value: selectedValue, chosen: { }\"></select>\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!widgets/chsnsingle/view.html',[],function () { return '<div class=\"wrapper\">\\r\\n    <!-- ko if: idValue -->\\r\\n    <select data-bind=\"chosen: computedOptions, optionsCaption: \\'\\', optionsText: text, optionsValue: idValue, value: selectedValue, \\r\\n\\t\\t\\t\\t\\t\\tchosenUpdater: selectedValue, disable: disabled, \\r\\n\\t\\t\\t\\t\\t\\tchosenOptions: { caption: caption, isSearch: isSearch, isCancel: isCancel, title: title }\">\\r\\n\\t\\t<option></option>\\r\\n\\t</select>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: idValue -->\\r\\n    <select data-bind=\"chosen: computedOptions, optionsCaption: \\'\\', optionsText: text, value: selectedValue, \\r\\n\\t\\t\\t\\t\\t\\tchosenUpdater: selectedValue, disable: disabled, \\r\\n\\t\\t\\t\\t\\t\\tchosenOptions: { caption: caption, isSearch: isSearch, isCancel: isCancel, title: title }\">\\r\\n\\t\\t<option></option>\\r\\n\\t</select>\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!widgets/chsnsingledark/view.html',[],function () { return '<div class=\"wrapper\">\\r\\n    <!-- ko if: idValue -->\\r\\n    <select class=\"dark\" data-bind=\"chosen: computedOptions, optionsCaption: \\'\\', optionsText: text, optionsValue: idValue, value: selectedValue, chosenUpdater: selectedValue, disable: disabled, chosenOptions: { caption: caption }\"></select>\\r\\n    <!-- /ko -->\\r\\n    <!-- ko ifnot: idValue -->\\r\\n    <select class=\"dark\"  data-bind=\"chosen: computedOptions, optionsCaption: \\'\\', optionsText: text, value: selectedValue, chosenUpdater: selectedValue, disable: disabled, chosenOptions: { caption: caption }\"></select>\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\ndefine('text!widgets/multiselect/view.html',[],function () { return '<div class=\"chosen-container chosen-container-multi chosen-container-active\" data-bind=\"css: { \\'chosen-with-drop\\': showing, \\'chosen-disabled\\': computedOptions().length === 0 }\">\\r\\n    <ul class=\"chosen-choices\" data-bind=\"css: { \\'invalid\\': isInvalid() }\">\\r\\n        <li class=\"search-field\">\\r\\n            <input type=\"text\" class=\"default\" data-bind=\"hasFocus: isInFocus, value: computedLabel, click: toggleDropdown , disable: isDisabled\" readonly=\"readonly\">\\r\\n        </li>\\r\\n    </ul>\\r\\n    <div class=\"chosen-drop\" data-bind=\"visible: showing, click: stopClosing\">\\r\\n        <ul class=\"chosen-results\" data-bind=\"foreach: computedOptions\">\\r\\n            <li class=\"active-result\" data-bind=\"click: $parent.selectOption, css: { \\'result-selected\\': $parent.checkForIdValue($data[$parent.idValue]()) }\">\\r\\n                <span data-bind=\"text: thisText\" class=\"ellipsis\"></span>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>';});\n\n","\ndefine('text!widgets/singleselect/view.html',[],function () { return '<div class=\"chosen-container chosen-container-single chosen-container-single-nosearch\" style=\"width: 150px;\" title=\"\" id=\"filter_chosen\" data-bind=\"css: { \\'chosen-with-drop\\': showing, \\'chosen-disabled\\': computedOptions().length === 0 }\">\\r\\n    <a class=\"chosen-single\" data-bind=\"click: toggleDropdown, attr: { \\'data-phyautomation\\': label + \\'-dropdown-button\\' }, event: { mouseover: stopClosing, mouseleave: startClosing }, disable: isDisabled\">\\r\\n        <span data-bind=\"text: computedLabel\"></span>\\r\\n        <div>\\r\\n            <b></b>\\r\\n        </div>\\r\\n    </a>\\r\\n    <div class=\"chosen-drop\" data-bind=\"visible: showing, event: { mouseover: stopClosing, mouseleave: startClosing }\">\\r\\n        <div class=\"chosen-search\">\\r\\n            <input type=\"text\" autocomplete=\"off\" readonly=\"\" />\\r\\n        </div>\\r\\n        <ul class=\"chosen-results\" data-bind=\"foreach: computedOptions, attr: { \\'data-phyautomation\\': label + \\'-dropdown-results\\' } \">\\r\\n            <li class=\"active-result\" data-bind=\"click: $parent.selectOption, css: { \\'result-selected\\': $parent.selectedValue() === $data }\">\\r\\n                <span data-bind=\"text: thisText\" class=\"ellipsis\"></span>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <!-- ko if : computedOptions().length === 0 -->\\r\\n    <p><em class=\"grey\" data-bind=\"text: \\'No \\' + label + \\' available\\'\"></em></p>\\r\\n    <!-- /ko -->\\r\\n</div>';});\n\n","\nrequire([\"main\"]);\n","}());\n"]}